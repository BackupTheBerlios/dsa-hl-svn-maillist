From fusion2 at mail.berlios.de  Fri May  1 13:08:04 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Fri, 1 May 2009 13:08:04 +0200
Subject: [Dsa-hl-svn] r4912 - rl/trunk/editors/Lockenwickler/src
Message-ID: <200905011108.n41B84Hf026330@sheep.berlios.de>

Author: fusion2
Date: 2009-05-01 13:08:01 +0200 (Fri, 01 May 2009)
New Revision: 4912

Modified:
   rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py
   rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py
   rl/trunk/editors/Lockenwickler/src/ZoneManager.py
Log:
- its possible now to delete zone/triggers and lights from the module explorer

Modified: rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py	2009-04-26 11:48:49 UTC (rev 4911)
+++ rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py	2009-05-01 11:08:01 UTC (rev 4912)
@@ -22,6 +22,7 @@
 from PyQt4.QtGui import *
 import ogre.renderer.OGRE as og
 
+from ZoneManager import *
 
 # get the light out of a light node
 def extractLight(node):
@@ -127,7 +128,7 @@
         drag.start(Qt.CopyAction)
 
     def dragEnterEvent(self, event):
-        print "enter"
+#        print "enter"
         if event.mimeData().hasFormat("application/light"):
             event.accept()
             
@@ -160,7 +161,7 @@
         
             relMousePos = self.mapFromGlobal(QPoint(QCursor.pos().x(), QCursor.pos().y() - self.header().height()))
             item = self.itemAt(relMousePos)
-            str(item.data(0, Qt.UserRole).toString())
+            #str(item.data(0, Qt.UserRole).toString())
             
             items = self.findItems("Lights", Qt.MatchFixedString | Qt.MatchRecursive)
             for iitem in items:
@@ -178,8 +179,6 @@
                     child.setText(0, text)
                     child.setData(0, Qt.UserRole, QVariant(ModuleExplorer.LIGHT_IN_ZONE))
 
-
-
 class ModuleExplorer(QWidget):
     LIGHT_IN_ZONE = 99
     TRIGGER_IN_ZONE = 100
@@ -438,13 +437,34 @@
             self.updateView()
     
     def onDelete(self):
-        print "delete"
+        item = self.sceneTreeView.itemAt(self.onMenuPoint)
+        
+        if item.data(0, Qt.UserRole).toString() == str(ModuleExplorer.LIGHT_IN_ZONE):
+            zoneName = str(item.parent().parent().text(0)).replace("Zone: ",  "")
+            lightName = str(item.text(0))
+            if self.sceneTreeView.zoneManager.removeLightFromZone(zoneName, lightName):
+                item.parent().removeChild(item)     
+        elif item.data(0, Qt.UserRole).toString() == str(ModuleExplorer.TRIGGER_IN_ZONE):
+            zoneName = str(item.parent().parent().text(0)).replace("Zone: ",  "")
+            triggerNameName = str(item.text(0))
+            if self.sceneTreeView.zoneManager.removeTriggerFromZone(zoneName, triggerNameName):
+                item.parent().removeChild(item)
+        elif str(item.text(0)).startswith("Zone: "):
+            zoneName = str(item.text(0)).replace("Zone: ",  "")
+            reply = QMessageBox.warning(QApplication.focusWidget(), "Undoable Action!", "Delete zone " +  zoneName + "?", QMessageBox.Yes|QMessageBox.Cancel)
+            if reply == QMessageBox.Cancel:
+                return
+            elif reply == QMessageBox.Yes:
+                if self.sceneTreeView.zoneManager.deleteZone(zoneName):
+                    item.parent().removeChild(item)
+                    
+#        print "delete " + str(item.data(0, Qt.UserRole).toString())
 
     def keyPressEvent(self, event):
         print "key!!!!!!!!!!!!!!"
     
     def paintLastSelectedMapBlue(self):
-        print self.lastSelectedMap
+#        print self.lastSelectedMap
         for item in self.mapItems:
             if str(item.text(0)) == self.lastSelectedMap:
                 brush = item.foreground(0)

Modified: rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py	2009-04-26 11:48:49 UTC (rev 4911)
+++ rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py	2009-05-01 11:08:01 UTC (rev 4912)
@@ -281,7 +281,11 @@
                     so.setSelected(True)
                     items.append(so)
             elif key.startswith("Zone: "):
-                parentNode = self.zoneManager.getZone(key.replace("Zone: ", "")).zoneNode
+                zone = self.zoneManager.getZone(key.replace("Zone: ", ""))
+                if zone is None:
+                    continue
+                    
+                parentNode = zone.zoneNode
                 for nodeName in itemNodes[key]:
                     obj = parentNode.getChild(nodeName).getAttachedObject(0)
                     so = SelectionObject(obj)

Modified: rl/trunk/editors/Lockenwickler/src/ZoneManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/ZoneManager.py	2009-04-26 11:48:49 UTC (rev 4911)
+++ rl/trunk/editors/Lockenwickler/src/ZoneManager.py	2009-05-01 11:08:01 UTC (rev 4912)
@@ -101,7 +101,8 @@
         self.areaNode.detachAllObjects()
         self.areaNode.getParent().removeAndDestroyChild(self.areaNode.getName())
         self.sceneManager.destroyEntity(self.areaEntity.getName())
-    
+        print "area" + str(self.id) + " deleted"
+        
     def getsubtract(self):
         return self.__subtract
         
@@ -128,22 +129,32 @@
         self.isHidden = False
         
         self.zoneNode =  self.sceneManager.getRootSceneNode().createChildSceneNode("zone_" + name + "_node")
+    
+    def __del__(self):
+        print "Zone " + self.name + " is garbage collected"
         
     def addArea(self, type, position, orientation, scale, meshFile = None):
         area = Area(self.sceneManager, type, self, self.areaCounter, position, orientation, scale, meshFile)
         if area is not None:
             self.areaList.append(area)
             self.areaCounter = self.areaCounter + 1
-    
+            
+    def addTrigger(self, trigger):
+        if trigger is not None:
+            self.triggerList.append(trigger)
+        
+    def deleteSelf(self):    
+        del self.areaList[:]
+        
+        self.zoneNode.detachAllObjects()
+        parent = self.zoneNode.getParent()
+        parent.removeAndDestroyChild(self.zoneNode.getName())
+        
     def deleteArea(self, area):
         for a in self.areaList:
             if a.id == area.id:
                 self.areaList.remove(a)
                 del a
-    
-    def addTrigger(self, trigger):
-        if trigger is not None:
-            self.triggerList.append(trigger)
             
     def manualAddTrigger(self):
         trigger = TriggerManager.instance.manualCreateTrigger()
@@ -185,6 +196,15 @@
         self.currentMap.zoneList.append(z)
         return z
         
+    def deleteZone(self, zoneName):
+        for zone in self.zoneList:
+            if zone.name == zoneName:
+                self.zoneList.remove(zone)
+                zone.deleteSelf()
+                del zone
+                return True
+        return False
+        
     def parseZonesFromXml(self, zoneXmlNode, map):
         if zoneXmlNode is None:
             return
@@ -258,7 +278,24 @@
             for sound in soundNodes:
                 name = sound.attrib["name"]
                 z.soundList.append(name)
-            
+    
+    def removeLightFromZone(self, zoneName, lightName):
+        for zone in self.zoneList:
+            if zone.name == zoneName:
+                for light in zone.lightList:
+                    if light == lightName:
+                        zone.lightList.remove(light)
+                        return True
+        return False
+        
+    def removeTriggerFromZone(self, zoneName, triggerName):
+        for zone in self.zoneList:
+            if zone.name == zoneName:
+                for trigger in zone.triggerList:
+                    if trigger.name == triggerName:
+                        zone.triggerList.remove(trigger)
+                        return True
+        return False
 
     def saveZonesToXml(self, root, map):
         if len(map.zoneList) == 0:
@@ -321,7 +358,7 @@
             for a in z.areaList:
                 if a.id == area.id:
                     z.deleteArea(area)
-    
+
     def getZoneMenu(self):
         self.menuList = []
         menu = QMenu("Add Area")



From fusion2 at mail.berlios.de  Fri May  1 13:34:19 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Fri, 1 May 2009 13:34:19 +0200
Subject: [Dsa-hl-svn] r4913 - rl/trunk/editors/Lockenwickler/src
Message-ID: <200905011134.n41BYJp1023787@sheep.berlios.de>

Author: fusion2
Date: 2009-05-01 13:34:18 +0200 (Fri, 01 May 2009)
New Revision: 4913

Modified:
   rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py
Log:
- bugfix when selecting a scene in the module explorer

Modified: rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py	2009-05-01 11:08:01 UTC (rev 4912)
+++ rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py	2009-05-01 11:34:18 UTC (rev 4913)
@@ -64,7 +64,7 @@
         layout.addWidget(self.zoneslightsCheckBox)
         
         self.zonesTriggersCheckBox = QCheckBox("Show Zonetriggers")
-        self.zonesTriggersCheckBox.setChecked(zoneTriggers)        
+        self.zonesTriggersCheckBox.setChecked(zonetriggers)        
         layout.addWidget(self.zonesTriggersCheckBox)
         
         layout.addWidget(buttonBox)
@@ -260,10 +260,12 @@
         if self.selectionChangedCallback is None:
             return
 
+        
+
         #get all selected items
         selItems = self.sceneTreeView.selectedItems()
         if len(selItems) == 1:
-            if str(selItems[0].parent().text(0)) == "Lights" and str(selItems[0].parent().parent().text(0)).startswith("Zone: "):
+            if str(selItems[0]).startswith("Scene: ") and str(selItems[0].parent().text(0)) == "Lights" and str(selItems[0].parent().parent().text(0)).startswith("Zone: "):
                 return
         
         
@@ -286,9 +288,12 @@
         #end remove all the things from the list we actually don't want to be selected
         for item in selItems:
             itemText = str(item.text(0))
+            if item.parent() is None:
+                continue
+            
             parentText = str(item.parent().text(0))
             
-            if itemText.startswith("Scene: ") or itemText.startswith("Map: ") or itemText.startswith("Zone: "):
+            if itemText.startswith("Map: ") or itemText.startswith("Zone: "):
                 selItems.remove(item)
             elif item.data(0, Qt.UserRole).toInt()[0] == ModuleExplorer.LIGHT_IN_ZONE or item.data(0, Qt.UserRole).toInt()[0] == ModuleExplorer.TRIGGER_IN_ZONE:
                 selItems.remove(item)
@@ -297,13 +302,17 @@
                     selItems.remove(item)
         
         for item in selItems:
+            if item.parent() is None:
+                continue
+            
             parentName =  str(item.text(0))
                         
             name = str(item.data(0, Qt.UserRole).toString())
             if len > 0:
                 nodeNames[str(item.parent().text(0))].append(name)
                 
-        self.selectionChangedCallback(nodeNames)
+        if len(nodeNames) > 0:
+            self.selectionChangedCallback(nodeNames)
 
     def deselectAll(self):
         self.disconnect(self.sceneTreeView, SIGNAL("itemSelectionChanged ()"), self.onSelectionChanged)



From fusion2 at mail.berlios.de  Sun May  3 13:48:45 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Sun, 3 May 2009 13:48:45 +0200
Subject: [Dsa-hl-svn] r4914 - in rl/trunk/editors/Lockenwickler/src: . media
	media/icons media/terrain
Message-ID: <200905031148.n43BmjGG027504@sheep.berlios.de>

Author: fusion2
Date: 2009-05-03 13:47:29 +0200 (Sun, 03 May 2009)
New Revision: 4914

Added:
   rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
   rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
   rl/trunk/editors/Lockenwickler/src/media/icons/terrain.png
   rl/trunk/editors/Lockenwickler/src/media/icons/terrain_small.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/
   rl/trunk/editors/Lockenwickler/src/media/terrain/ETShader.program
   rl/trunk/editors/Lockenwickler/src/media/terrain/ETTerrain.material
   rl/trunk/editors/Lockenwickler/src/media/terrain/ETcoverage.0.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/ETcoverage.1.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/ETlightmap.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/ETterrain.cfg
   rl/trunk/editors/Lockenwickler/src/media/terrain/ETterrain.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/PSLighting.cg
   rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat.cg
   rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat2.cg
   rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph.cg
   rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph2.cg
   rl/trunk/editors/Lockenwickler/src/media/terrain/brush.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/splatting0.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/splatting1.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/splatting2.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/splatting3.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/splatting4.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/splatting5.png
Modified:
   rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
   rl/trunk/editors/Lockenwickler/src/ModuleManager.py
Log:
- added basic terrain support


Modified: rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-05-03 11:47:29 UTC (rev 4914)
@@ -41,8 +41,8 @@
 from PivotRenderQueueListener import *
 from ModuleDirectoryView import *
 from TriggerManager import *
+from MyTerrainManager import MyTerrainManager
 
-
 import OgreMainWindow
 import ogre.renderer.OGRE as og
 
@@ -234,6 +234,9 @@
         self.actionConsole_Window = self.createAction("&Console Window",  self.toggleConsoleWindow,  "Alt+C",  "console.png",  "Console Window")
         self.actionConsole_Window.setObjectName("actionConsole_Window")
         
+        self.actionTerrainTools_Window = self.createAction("&Terrain Tools",  self.toggleTerrainToolsWindow,  "Alt+T",  "terrain_small.png",  "Console Window")
+        self.actionTerrainTools_Window.setObjectName("actionTerrainTools_Window")
+        
         self.actionToggleViewportGrid = self.createAction("&Toggle Grid",  self.toggleViewportGrid,  "Alt+G",  "console.png",  "Toggle Viewport Grid")
         self.actionToggleViewportGrid.setObjectName("actionToggleViewportGrid")
 
@@ -268,6 +271,7 @@
         self.menuView.addAction(self.actionMaterial_Selection)
         self.menuView.addAction(self.actionGameObjectClass_Selection)
         self.menuView.addAction(self.actionConsole_Window)
+        self.menuView.addAction(self.actionTerrainTools_Window)
         self.menuView.addAction(self.actionToggleViewportGrid)
         
         self.menubar.addAction(self.menuFile.menuAction())
@@ -312,7 +316,9 @@
         self.OgreMainWinSceneMgr.addRenderQueueListener(self.pivotRenderQueueListener)
         
         self.moduleName = ""
+        self.myTerrainManager = MyTerrainManager(self.OgreMainWinSceneMgr)
         self.moduleManager = ModuleManager(self.ogreRoot,  self.OgreMainWinSceneMgr)
+        self.moduleManager.myTerrainManager = self.myTerrainManager
         self.gocManager = self.moduleManager.gocManager
         
         self.ogreMainWindow = OgreMainWindow.OgreMainWindow(self.moduleManager,  root,  self.OgreMainWinSceneMgr,  self)
@@ -326,6 +332,7 @@
     def finishEditorSetup(self):
         if not self.editorSetupFinished:
             og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
+            og.ResourceGroupManager.getSingleton().addResourceLocation("./media/terrain", "FileSystem", "General", False)
             og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
 
             self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)
@@ -438,6 +445,12 @@
             self.consoleDock.show()
         else:
             self.consoleDock.hide()
+            
+    def toggleTerrainToolsWindow(self):
+        if self.myTerrainManagerDock.isHidden():
+            self.myTerrainManagerDock.show()
+        else:
+            self.myTerrainManagerDock.hide()
 
     def toggleViewportGrid(self):
         self.ogreMainWindow.toggleViewportGrid()
@@ -482,6 +495,8 @@
         self.moduleDirectoryViewDock.setWidget(self.moduleDirectoryViewWin)
         self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleDirectoryViewDock)
         
+        self.myTerrainManagerDock = self.myTerrainManager.getDockWidget(self)
+        
         self.consoleDock = QtGui.QDockWidget(self.tr("Console"), self)
         self.consoleDock.setObjectName("ConsoleDockWindow")
         self.consoleDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea | QtCore.Qt.TopDockWidgetArea)

Modified: rl/trunk/editors/Lockenwickler/src/ModuleManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-05-03 11:47:29 UTC (rev 4914)
@@ -39,6 +39,7 @@
 from ZoneManager import ZoneManager
 from TriggerManager import TriggerManager 
 
+
 # get the light out of a light node
 def extractLight(node):
         i = 0
@@ -785,6 +786,7 @@
         self.moduleConfigIsParsed = False
 
         self.selectionBuffer = None
+        self.myTerrainManager = None
         self.depthBuffer = None
         self.propertyWindow = None
     
@@ -801,6 +803,7 @@
         self.raySceneQueryListener = MyRaySceneQueryListener()
         
         self.zoneManager = ZoneManager(self.sceneManager)
+
         
     def resetParsedModuleConfig(self):
         self.moduleConfigIsParsed = False
@@ -895,6 +898,7 @@
         if self.selectionBuffer is None:
             self.selectionBuffer = SelectionBuffer(self.sceneManager, self.ogreRoot.getRenderTarget("OgreMainWin"), self, self.zoneManager)
 
+            
 #        if self.depthBuffer is None:
 #            self.depthBuffer = DepthBuffer(self.sceneManager, self.ogreRoot.getRenderTarget("OgreMainWin"))
 

Added: rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-03 11:47:29 UTC (rev 4914)
@@ -0,0 +1,110 @@
+#################################################
+# This source file is part of Rastullahs Lockenwickler.
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+#  but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
+#################################################
+
+from PyQt4.QtCore import *
+from PyQt4.QtGui import *
+
+import ogre.renderer.OGRE as og
+import ogre.addons.et as ET
+
+import Ui_MyTerrainManagerDock
+
+class MyTerrainManagerDock(Ui_MyTerrainManagerDock.Ui_TerrainManagerUi, QWidget):
+    def __init__(self, parent):
+        super(MyTerrainManagerDock, self).__init__(parent)
+        self.setupUi(self)
+        
+class Terrain():
+    def __init__(self, sceneManager):
+        self.sceneManager = sceneManager
+        self.camera = self.sceneManager.getCamera("MainCam")
+        
+        self.terrainSize = 129
+        
+        ## create terrain manager
+        self.terrainManager =  ET.TerrainManager(self.sceneManager)
+        self.terrainManager.setLODErrorMargin(2, self.camera.getViewport().getActualHeight())
+        self.terrainManager.setUseLODMorphing(True, 0.2, "morphFactor")
+        
+        ## create a fresh, mid-high terrain for editing
+        # Note 
+        heightMapValues = og.LodDistanceList() ## ET.stdVectorFloat()
+        for i in xrange(self.terrainSize):
+            for j in xrange(self.terrainSize):
+                heightMapValues.append(float(0.50))
+        # width, height, heightmapvalues as a float array
+        self.terrainInfo = ET.TerrainInfo (self.terrainSize, self.terrainSize, heightMapValues )
+        
+        ## save typing self
+        terrainInfo  = self.terrainInfo 
+        sceneManager = self.sceneManager
+        terrainMgr   = self.terrainManager
+        
+        ## set position and size of the terrain
+        terrainInfo.setExtents(og.AxisAlignedBox(-1500, -150, -1500, 1500, 150, 1500))
+
+        ## now render it
+        terrainMgr.createTerrain(terrainInfo)
+
+        ## create the splatting manager
+#        * @param baseName   base name for the map textures (will be appended by their number)
+#        * @param group      the resource group the textures will be placed in
+#        * @param width      width of the textures in pixels
+#        * @param height     height of the textures in pixels
+#        * @param channels   Number of channels per texture (must be in {1, 2, 3, 4})
+        self.textureBaseName = "ETSplatting"
+        self.resGroup = "ET"
+        self.textureSize = 128
+        self.splatMgr = ET.SplattingManager(self.textureBaseName, self.resGroup, self.textureSize, self.textureSize, 3)
+        ## specify number of splatting textures we need to handle
+        self.splatMgr.setNumTextures(6)
+
+        ## create a manual lightmap texture
+        lightmapTex = og.TextureManager.getSingleton().createManual(
+        self.textureBaseName, self.resGroup, og.TEX_TYPE_2D, self.textureSize, self.textureSize, 1, og.PF_BYTE_RGB)
+
+        lightmap = og.Image()
+        ET.createTerrainLightmap(terrainInfo, lightmap, 128, 128,\
+                                 og.Vector3(1, -1, 1),\
+                                 og.ColourValue().White,\
+                                 og.ColourValue(0.3, 0.3, 0.3,1.0))
+        lightmapTex.getBuffer(0, 0).blitFromMemory(lightmap.getPixelBox(0, 0))
+
+        ##  load the terrain material and assign it
+        material = og.MaterialManager.getSingleton().getByName("ETTerrainMaterial")
+#        material = og.MaterialManager.getSingleton().getByName("Lockenwickler_Area")
+        self.terrainManager.setMaterial(material)
+        
+class MyTerrainManager():
+    def __init__(self, sceneManager):
+        self.sceneManager = sceneManager
+        self.dockWidget = None
+        #self.terrain = Terrain(sceneManager)
+
+    def getDockWidget(self, parent):
+        if self.dockWidget is None:
+            self.dockWidgetContents = MyTerrainManagerDock(parent)
+            self.myTerrainManagerDock = QDockWidget("Terrain Tools", parent)
+            self.myTerrainManagerDock.setObjectName("TerrainToolsDockWindow")
+            self.myTerrainManagerDock.setAllowedAreas(Qt.LeftDockWidgetArea | Qt.RightDockWidgetArea)
+            self.myTerrainManagerDock.setWidget(self.dockWidgetContents)
+            self.myTerrainManagerDock.setWindowIcon(QIcon("media/icons/terrain_small.png"))
+            parent.addDockWidget(Qt.LeftDockWidgetArea, self.myTerrainManagerDock)
+            
+        return self.myTerrainManagerDock

Added: rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-03 11:47:29 UTC (rev 4914)
@@ -0,0 +1,222 @@
+# -*- coding: utf-8 -*-
+
+# Form implementation generated from reading ui file '/home/fusion/dev/ui files/MyTerrainManagerDock.ui'
+#
+# Created: Sun May  3 13:23:32 2009
+#      by: PyQt4 UI code generator 4.4.4
+#
+# WARNING! All changes made in this file will be lost!
+
+from PyQt4 import QtCore, QtGui
+
+class Ui_TerrainManagerUi(object):
+    def setupUi(self, TerrainManagerUi):
+        TerrainManagerUi.setObjectName("TerrainManagerUi")
+        TerrainManagerUi.resize(443, 626)
+        self.gridLayout_2 = QtGui.QGridLayout(TerrainManagerUi)
+        self.gridLayout_2.setMargin(1)
+        self.gridLayout_2.setSpacing(1)
+        self.gridLayout_2.setObjectName("gridLayout_2")
+        self.comboBox = QtGui.QComboBox(TerrainManagerUi)
+        self.comboBox.setObjectName("comboBox")
+        self.gridLayout_2.addWidget(self.comboBox, 0, 0, 1, 1)
+        self.toolBox = QtGui.QToolBox(TerrainManagerUi)
+        self.toolBox.setFrameShape(QtGui.QFrame.NoFrame)
+        self.toolBox.setFrameShadow(QtGui.QFrame.Plain)
+        #self.toolBox.setTabSpacing(1)
+        self.toolBox.setObjectName("toolBox")
+        self.page = QtGui.QWidget()
+        self.page.setGeometry(QtCore.QRect(0, 0, 441, 515))
+        self.page.setObjectName("page")
+        self.gridLayout_3 = QtGui.QGridLayout(self.page)
+        self.gridLayout_3.setObjectName("gridLayout_3")
+        self.groupBox = QtGui.QGroupBox(self.page)
+        self.groupBox.setObjectName("groupBox")
+        self.gridLayout = QtGui.QGridLayout(self.groupBox)
+        self.gridLayout.setMargin(1)
+        self.gridLayout.setSpacing(1)
+        self.gridLayout.setObjectName("gridLayout")
+        self.label_6 = QtGui.QLabel(self.groupBox)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
+        self.label_6.setSizePolicy(sizePolicy)
+        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
+        self.label_6.setObjectName("label_6")
+        self.gridLayout.addWidget(self.label_6, 0, 0, 1, 2)
+        self.label = QtGui.QLabel(self.groupBox)
+        self.label.setObjectName("label")
+        self.gridLayout.addWidget(self.label, 1, 0, 1, 1)
+        self.nameLineEdit = QtGui.QLineEdit(self.groupBox)
+        self.nameLineEdit.setObjectName("nameLineEdit")
+        self.gridLayout.addWidget(self.nameLineEdit, 1, 1, 1, 1)
+        self.label_2 = QtGui.QLabel(self.groupBox)
+        self.label_2.setObjectName("label_2")
+        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
+        self.sizeComboBox = QtGui.QComboBox(self.groupBox)
+        self.sizeComboBox.setObjectName("sizeComboBox")
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.gridLayout.addWidget(self.sizeComboBox, 2, 1, 1, 1)
+        self.extendsSpinBoxX = QtGui.QSpinBox(self.groupBox)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.extendsSpinBoxX.sizePolicy().hasHeightForWidth())
+        self.extendsSpinBoxX.setSizePolicy(sizePolicy)
+        self.extendsSpinBoxX.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
+        self.extendsSpinBoxX.setMinimum(128)
+        self.extendsSpinBoxX.setMaximum(10000)
+        self.extendsSpinBoxX.setObjectName("extendsSpinBoxX")
+        self.gridLayout.addWidget(self.extendsSpinBoxX, 3, 1, 1, 1)
+        self.label_3 = QtGui.QLabel(self.groupBox)
+        self.label_3.setObjectName("label_3")
+        self.gridLayout.addWidget(self.label_3, 4, 0, 1, 1)
+        self.extendsSpinBoxX_2 = QtGui.QSpinBox(self.groupBox)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.extendsSpinBoxX_2.sizePolicy().hasHeightForWidth())
+        self.extendsSpinBoxX_2.setSizePolicy(sizePolicy)
+        self.extendsSpinBoxX_2.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
+        self.extendsSpinBoxX_2.setMinimum(128)
+        self.extendsSpinBoxX_2.setMaximum(10000)
+        self.extendsSpinBoxX_2.setObjectName("extendsSpinBoxX_2")
+        self.gridLayout.addWidget(self.extendsSpinBoxX_2, 4, 1, 1, 1)
+        self.extendsSpinBoxX_3 = QtGui.QSpinBox(self.groupBox)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.extendsSpinBoxX_3.sizePolicy().hasHeightForWidth())
+        self.extendsSpinBoxX_3.setSizePolicy(sizePolicy)
+        self.extendsSpinBoxX_3.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
+        self.extendsSpinBoxX_3.setMinimum(128)
+        self.extendsSpinBoxX_3.setMaximum(10000)
+        self.extendsSpinBoxX_3.setObjectName("extendsSpinBoxX_3")
+        self.gridLayout.addWidget(self.extendsSpinBoxX_3, 5, 1, 1, 1)
+        self.label_7 = QtGui.QLabel(self.groupBox)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
+        self.label_7.setSizePolicy(sizePolicy)
+        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
+        self.label_7.setObjectName("label_7")
+        self.gridLayout.addWidget(self.label_7, 6, 0, 1, 2)
+        self.label_4 = QtGui.QLabel(self.groupBox)
+        self.label_4.setObjectName("label_4")
+        self.gridLayout.addWidget(self.label_4, 7, 0, 1, 1)
+        self.baseNameLineEdit = QtGui.QLineEdit(self.groupBox)
+        self.baseNameLineEdit.setObjectName("baseNameLineEdit")
+        self.gridLayout.addWidget(self.baseNameLineEdit, 7, 1, 1, 1)
+        self.label_5 = QtGui.QLabel(self.groupBox)
+        self.label_5.setObjectName("label_5")
+        self.gridLayout.addWidget(self.label_5, 8, 0, 1, 1)
+        self.baseNameLineEdit_2 = QtGui.QLineEdit(self.groupBox)
+        self.baseNameLineEdit_2.setObjectName("baseNameLineEdit_2")
+        self.gridLayout.addWidget(self.baseNameLineEdit_2, 8, 1, 1, 1)
+        self.label_8 = QtGui.QLabel(self.groupBox)
+        self.label_8.setObjectName("label_8")
+        self.gridLayout.addWidget(self.label_8, 9, 0, 1, 1)
+        self.sizeComboBox_2 = QtGui.QComboBox(self.groupBox)
+        self.sizeComboBox_2.setObjectName("sizeComboBox_2")
+        self.sizeComboBox_2.addItem(QtCore.QString())
+        self.sizeComboBox_2.addItem(QtCore.QString())
+        self.sizeComboBox_2.addItem(QtCore.QString())
+        self.sizeComboBox_2.addItem(QtCore.QString())
+        self.sizeComboBox_2.addItem(QtCore.QString())
+        self.gridLayout.addWidget(self.sizeComboBox_2, 9, 1, 1, 1)
+        self.label_9 = QtGui.QLabel(self.groupBox)
+        self.label_9.setObjectName("label_9")
+        self.gridLayout.addWidget(self.label_9, 10, 0, 1, 1)
+        self.sizeComboBox_3 = QtGui.QComboBox(self.groupBox)
+        self.sizeComboBox_3.setObjectName("sizeComboBox_3")
+        self.sizeComboBox_3.addItem(QtCore.QString())
+        self.sizeComboBox_3.addItem(QtCore.QString())
+        self.sizeComboBox_3.addItem(QtCore.QString())
+        self.sizeComboBox_3.addItem(QtCore.QString())
+        self.sizeComboBox_3.addItem(QtCore.QString())
+        self.sizeComboBox_3.addItem(QtCore.QString())
+        self.gridLayout.addWidget(self.sizeComboBox_3, 10, 1, 1, 1)
+        self.gridLayout_3.addWidget(self.groupBox, 2, 0, 1, 1)
+        self.pushButton = QtGui.QPushButton(self.page)
+        self.pushButton.setObjectName("pushButton")
+        self.gridLayout_3.addWidget(self.pushButton, 3, 0, 1, 1)
+        self.toolBox.addItem(self.page, "")
+        self.page_2 = QtGui.QWidget()
+        self.page_2.setGeometry(QtCore.QRect(0, 0, 441, 515))
+        self.page_2.setObjectName("page_2")
+        self.toolBox.addItem(self.page_2, "")
+        self.Seite = QtGui.QWidget()
+        self.Seite.setObjectName("Seite")
+        self.toolBox.addItem(self.Seite, "")
+        self.gridLayout_2.addWidget(self.toolBox, 1, 0, 1, 1)
+
+        self.retranslateUi(TerrainManagerUi)
+        self.toolBox.setCurrentIndex(0)
+        QtCore.QMetaObject.connectSlotsByName(TerrainManagerUi)
+
+    def retranslateUi(self, TerrainManagerUi):
+        TerrainManagerUi.setWindowTitle(QtGui.QApplication.translate("TerrainManagerUi", "Form", None, QtGui.QApplication.UnicodeUTF8))
+        self.groupBox.setTitle(QtGui.QApplication.translate("TerrainManagerUi", "Terrain Settings", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_6.setText(QtGui.QApplication.translate("TerrainManagerUi", "Geometry", None, QtGui.QApplication.UnicodeUTF8))
+        self.label.setText(QtGui.QApplication.translate("TerrainManagerUi", "Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_2.setText(QtGui.QApplication.translate("TerrainManagerUi", "Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "8", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "16", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "32", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(6, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(7, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxX.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "X:", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_3.setText(QtGui.QApplication.translate("TerrainManagerUi", "Extends", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxX_2.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxX_3.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_7.setText(QtGui.QApplication.translate("TerrainManagerUi", "Splatting Settings", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_4.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_4.setText(QtGui.QApplication.translate("TerrainManagerUi", "Base Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.baseNameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_5.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_5.setText(QtGui.QApplication.translate("TerrainManagerUi", "Res Group", None, QtGui.QApplication.UnicodeUTF8))
+        self.baseNameLineEdit_2.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_8.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_8.setText(QtGui.QApplication.translate("TerrainManagerUi", "Tex Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_2.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_2.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_2.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_2.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_2.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_2.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_9.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_9.setText(QtGui.QApplication.translate("TerrainManagerUi", "NumTextures", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_3.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_3.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "1", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_3.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_3.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "3", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_3.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "4", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_3.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "5", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox_3.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "6", None, QtGui.QApplication.UnicodeUTF8))
+        self.pushButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.toolBox.setItemText(self.toolBox.indexOf(self.page), QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), QtGui.QApplication.translate("TerrainManagerUi", "ModifyTerrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.toolBox.setItemText(self.toolBox.indexOf(self.Seite), QtGui.QApplication.translate("TerrainManagerUi", "PaintTerrain", None, QtGui.QApplication.UnicodeUTF8))
+
+
+if __name__ == "__main__":
+    import sys
+    app = QtGui.QApplication(sys.argv)
+    TerrainManagerUi = QtGui.QWidget()
+    ui = Ui_TerrainManagerUi()
+    ui.setupUi(TerrainManagerUi)
+    TerrainManagerUi.show()
+    sys.exit(app.exec_())
+

Added: rl/trunk/editors/Lockenwickler/src/media/icons/terrain.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/icons/terrain.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/icons/terrain_small.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/icons/terrain_small.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/ETShader.program
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/ETShader.program	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/media/terrain/ETShader.program	2009-05-03 11:47:29 UTC (rev 4914)
@@ -0,0 +1,46 @@
+fragment_program ET/Programs/PSSplat cg
+{
+  source PSSplat.cg
+  entry_point main
+  profiles ps_1_1 arbfp1
+}
+
+fragment_program ET/Programs/PSSplat2 cg
+{
+  source PSSplat2.cg
+  entry_point main
+  profiles ps_2_0 arbfp1
+}
+
+fragment_program ET/Programs/PSLighting cg
+{
+  source PSLighting.cg
+  entry_point main
+  profiles ps_1_1 arbfp1
+}
+
+vertex_program ET/Programs/VSLodMorph cg
+{
+  source VSLodMorph.cg
+  entry_point terrain_vp
+  profiles vs_1_1 arbvp1
+  
+  default_params
+  {
+    param_named_auto morphFactor custom 77
+    param_named_auto worldViewProj worldviewproj_matrix
+  }
+}
+
+vertex_program ET/Programs/VSLodMorph2 cg
+{
+  source VSLodMorph.cg
+  entry_point terrain_vp
+  profiles vs_1_1 arbvp1
+  
+  default_params
+  {
+    param_named_auto morphFactor custom 77
+    param_named_auto worldViewProj worldviewproj_matrix
+  }
+}

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/ETTerrain.material
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/ETTerrain.material	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/media/terrain/ETTerrain.material	2009-05-03 11:47:29 UTC (rev 4914)
@@ -0,0 +1,199 @@
+material ETTerrainMaterial
+{
+  technique
+  {
+    // primary splatting technique, requires PS 2.0
+    // has issues with OpenGL rendering, though...
+    pass
+    {
+      // splatting pass
+      
+      lighting off
+      
+      vertex_program_ref ET/Programs/VSLodMorph2
+      {
+      }
+      
+      fragment_program_ref ET/Programs/PSSplat2
+      {
+        param_named splatScaleX float 20
+	param_named splatScaleZ float 20
+      }
+      
+      texture_unit
+      {
+        // first coverage map, dynamically managed
+	texture ETSplatting0
+      }
+      texture_unit
+      {
+        // second coverage map, dynamically managed
+	texture ETSplatting1
+      }
+
+      // splatting textures
+      texture_unit
+      {
+        texture splatting0.png
+      }
+      texture_unit
+      {
+        texture splatting1.png
+      }
+      texture_unit
+      {
+        texture splatting2.png
+      }
+      texture_unit
+      {
+        texture splatting3.png
+      }
+      texture_unit
+      {
+        texture splatting4.png
+      }
+      texture_unit
+      {
+        texture splatting5.png
+      }
+    }
+    
+    pass
+    {
+      // lightmap texture pass
+      
+      scene_blend modulate
+
+      vertex_program_ref ET/Programs/VSLodMorph2
+      {
+      }
+      
+      fragment_program_ref ET/Programs/PSLighting
+      {
+      }
+
+      texture_unit
+      {
+        // dynamically created
+        texture ETLightmap
+      }
+      
+    }
+  }
+  
+
+
+  technique
+  {
+    // fallback technique for ps 1.1
+
+    pass
+    {
+      // first splatting pass
+      
+      lighting off
+	
+      vertex_program_ref ET/Programs/VSLodMorph
+      {
+        param_named splatScaleX float 20
+	param_named splatScaleZ float 20
+      }
+      
+      fragment_program_ref ET/Programs/PSSplat
+      {
+      }
+      
+      texture_unit
+      {
+        // will be dynamically generated by the splatting manager
+        texture ETSplatting0
+      }
+
+      texture_unit
+      {
+        texture splatting0.png
+      }
+     
+
+      texture_unit
+      {
+        texture splatting1.png
+      }
+     
+      texture_unit
+      {
+        texture splatting2.png
+      }
+
+    }
+    
+    pass
+    {
+      // second splatting pass
+      
+      lighting off
+      
+      scene_blend add
+	
+      vertex_program_ref ET/Programs/VSLodMorph
+      {
+        param_named splatScaleX float 20
+	param_named splatScaleZ float 20
+      }
+      
+      fragment_program_ref ET/Programs/PSSplat
+      {
+      }
+      
+      texture_unit
+      {
+        // will be dynamically generated by the splatting manager
+        texture ETSplatting1
+      }
+
+      texture_unit
+      {
+        texture splatting3.png
+      }
+
+      texture_unit
+      {
+        texture splatting4.png
+      }
+     
+
+      texture_unit
+      {
+        texture splatting5.png
+      }
+     
+    }
+    
+    pass 
+    {
+      // lightmap texture pass
+      
+      scene_blend modulate
+
+      vertex_program_ref ET/Programs/VSLodMorph
+      {
+        param_named splatScaleX float 20
+	param_named splatScaleZ float 20
+        param_named_auto morphFactor custom 77
+      }
+      
+      fragment_program_ref ET/Programs/PSLighting
+      {
+      }
+
+      texture_unit
+      {
+        // dynamically created
+        texture ETLightmap
+      }
+    }
+
+
+ 
+  }
+}
\ No newline at end of file

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/ETcoverage.0.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/ETcoverage.0.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/ETcoverage.1.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/ETcoverage.1.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/ETlightmap.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/ETlightmap.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/ETterrain.cfg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/ETterrain.cfg	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/media/terrain/ETterrain.cfg	2009-05-03 11:47:29 UTC (rev 4914)
@@ -0,0 +1,41 @@
+# Specify the heightmap data type and source
+DataType=Image
+DataSource=terrain.png
+
+# Specify the size of the terrain
+Width=513
+Height=513
+TileSize=513
+
+# Scale factor for terrain rendering
+ScaleX=1500
+ScaleY=100
+ScaleZ=1500
+
+# Adjust LOD settings
+MaxMipMapLevel=4
+MaxPixelError=2
+LODMorphing=no
+
+# Specify the splatting textures to use
+# You can use as many as you want (and your hardware supports)
+Texture0=splatting0.png
+Texture1=splatting1.png
+Texture2=splatting2.png
+Texture3=splatting3.png
+
+# If you intend to load a terrain texturing done before,
+# then specify the coverage maps' extension and their base name
+# (excluding extension and the .## at the end)
+#CoverageExtension=png
+#CoverageBasename=ETterrain.Tex
+
+# Calculate a lightmap for the terrain upon loading?
+UseLightmap=yes
+# From where does the light for the lightmap come?
+LightDirection=1 -1 1
+LightmapDetail=1
+
+# How often should the splatting textures be tiled over the terrain?
+TextureRepeatX=20
+TextureRepeatZ=20

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/ETterrain.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/ETterrain.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/PSLighting.cg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/PSLighting.cg	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/media/terrain/PSLighting.cg	2009-05-03 11:47:29 UTC (rev 4914)
@@ -0,0 +1,10 @@
+void main
+(
+  float2 iTexCoord0 : TEXCOORD0, 
+  out float4 oColor : COLOR, 
+  uniform sampler2D lightMap
+) 
+{
+  oColor = tex2D(lightMap, iTexCoord0);
+}
+

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat.cg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat.cg	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat.cg	2009-05-03 11:47:29 UTC (rev 4914)
@@ -0,0 +1,22 @@
+void main
+(
+  float2 iTexCoord0 : TEXCOORD0,
+  float2 iTexCoord1 : TEXCOORD1,
+  float2 iTexCoord2 : TEXCOORD2,
+  float2 iTexCoord3 : TEXCOORD3,
+ 
+  out float4 oColor : COLOR,
+ 
+  uniform sampler2D covMap,
+  uniform sampler2D splat1,
+  uniform sampler2D splat2,
+  uniform sampler2D splat3  
+) 
+{
+  float3 cov = tex2D(covMap, iTexCoord0).rgb;
+  
+  oColor = tex2D(splat1, iTexCoord1) * cov.x
+          + tex2D(splat2, iTexCoord2) * cov.y
+          + tex2D(splat3, iTexCoord3) * cov.z;
+}
+

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat2.cg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat2.cg	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat2.cg	2009-05-03 11:47:29 UTC (rev 4914)
@@ -0,0 +1,34 @@
+void main
+(
+  float2 iTexCoord0 : TEXCOORD0,
+ 
+  out float4 oColor : COLOR,
+ 
+  uniform sampler2D covMap1,
+  uniform sampler2D covMap2,
+  uniform sampler2D splat1,
+  uniform sampler2D splat2,
+  uniform sampler2D splat3,
+  uniform sampler2D splat4,
+  uniform sampler2D splat5,
+  uniform sampler2D splat6,
+
+  uniform float splatScaleX,
+  uniform float splatScaleZ
+) 
+{
+  float3 cov1 = tex2D(covMap1, iTexCoord0).rgb;
+  float3 cov2 = tex2D(covMap2, iTexCoord0).rgb;
+  
+  iTexCoord0.x *= splatScaleX;
+  iTexCoord0.y *= splatScaleZ;
+  
+  oColor = tex2D(splat1, iTexCoord0) * cov1.x
+           + tex2D(splat2, iTexCoord0) * cov1.y
+           + tex2D(splat3, iTexCoord0) * cov1.z
+           + tex2D(splat4, iTexCoord0) * cov2.x
+           + tex2D(splat5, iTexCoord0) * cov2.y
+           + tex2D(splat6, iTexCoord0) * cov2.z;
+
+}
+

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph.cg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph.cg	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph.cg	2009-05-03 11:47:29 UTC (rev 4914)
@@ -0,0 +1,32 @@
+    void terrain_vp(
+	    float4 position : POSITION,
+	    float2 uv1   	: TEXCOORD0,
+	    /*float2 uv2   	: TEXCOORD1,
+	    float2 uv3   	: TEXCOORD2,
+	    float2 uv4   	: TEXCOORD3,*/
+	    float delta     : BLENDWEIGHT,
+
+	    out float4 oPosition : POSITION,
+	    out float2 oUv1		 : TEXCOORD0,
+	    out float2 oUv2		 : TEXCOORD1,
+	    out float2 oUv3		 : TEXCOORD2,
+	    out float2 oUv4		 : TEXCOORD3,
+	    uniform float splatScaleX,
+	    uniform float splatScaleZ,
+	    uniform float4x4 worldViewProj,
+	    uniform float morphFactor
+	    )
+    {
+	    position.y = position.y + (delta.x * morphFactor);
+	    oPosition = mul(worldViewProj, position);
+	    oUv1 = uv1;
+	    oUv2 = uv1;
+	    oUv3 = uv1;
+	    oUv4 = uv1;
+	    oUv2.x *= splatScaleX;
+	    oUv2.y *= splatScaleZ;
+	    oUv3.x *= splatScaleX;
+	    oUv3.y *= splatScaleZ;
+	    oUv4.x *= splatScaleX;
+	    oUv4.y *= splatScaleZ;
+    }

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph2.cg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph2.cg	2009-05-01 11:34:18 UTC (rev 4913)
+++ rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph2.cg	2009-05-03 11:47:29 UTC (rev 4914)
@@ -0,0 +1,15 @@
+    void terrain_vp(
+	    float4 position : POSITION,
+	    float2 uv1   	: TEXCOORD0,
+	    float delta     : BLENDWEIGHT,
+
+	    out float4 oPosition : POSITION,
+	    out float2 oUv1		 : TEXCOORD0,
+	    uniform float4x4 worldViewProj,
+	    uniform float morphFactor
+	    )
+    {
+	    position.y = position.y + (delta.x * morphFactor);
+	    oPosition = mul(worldViewProj, position);
+	    oUv1 = uv1;
+    }

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/brush.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/brush.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting0.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting0.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting1.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting1.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting2.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting2.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting3.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting3.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting4.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting4.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting5.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/splatting5.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From fusion2 at mail.berlios.de  Sun May  3 17:20:26 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Sun, 3 May 2009 17:20:26 +0200
Subject: [Dsa-hl-svn] r4915 - in rl/trunk/editors/Lockenwickler: . src
	src/media src/media/help ui files
Message-ID: <200905031520.n43FKQE7015048@sheep.berlios.de>

Author: fusion2
Date: 2009-05-03 17:20:21 +0200 (Sun, 03 May 2009)
New Revision: 4915

Added:
   rl/trunk/editors/Lockenwickler/src/help_rc.py
   rl/trunk/editors/Lockenwickler/src/media/help/
   rl/trunk/editors/Lockenwickler/src/media/help/TerrainExtends1.png
   rl/trunk/editors/Lockenwickler/src/media/help/help.qrc
   rl/trunk/editors/Lockenwickler/src/media/help/help_rc.py
   rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
Modified:
   rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
   rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
   rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
Log:
- Improved the create terrain tools



Modified: rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
===================================================================
--- rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-05-03 11:47:29 UTC (rev 4914)
+++ rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-05-03 15:20:21 UTC (rev 4915)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE Project SYSTEM "Project-4.6.dtd">
 <!-- eric4 project file for project Lockenwickler -->
-<!-- Saved: 2009-04-19, 16:59:45 -->
+<!-- Saved: 2009-05-03, 17:17:07 -->
 <!-- Copyright (C) 2009 Stefan Stammberger, sstammberger at web.de -->
 <Project version="4.6">
   <Language>en</Language>
@@ -49,16 +49,22 @@
     <Source>ui files/Ui_NewModuleWizard.py</Source>
     <Source>src/AddTriggerDialog.py</Source>
     <Source>src/Ui_AddTriggerDialog.py</Source>
+    <Source>src/MyTerrainManager.py</Source>
+    <Source>ui files/Ui_MyTerrainManagerDock.py</Source>
+    <Source>src/Ui_MyTerrainManagerDock.py</Source>
+    <Source>src/media/help/help_rc.py</Source>
   </Sources>
   <Forms>
     <Form>ui files/GOPropertyEditorDialogINT.ui</Form>
     <Form>ui files/GOPropertyEditorDialogSTRING.ui</Form>
     <Form>ui files/NewModuleWizard.ui</Form>
     <Form>ui files/AddTriggerDialog.ui</Form>
+    <Form>ui files/MyTerrainManagerDock.ui</Form>
   </Forms>
   <Translations>
   </Translations>
   <Resources>
+    <Resource>src/media/help/help.qrc</Resource>
   </Resources>
   <Interfaces>
   </Interfaces>

Modified: rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-03 11:47:29 UTC (rev 4914)
+++ rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-03 15:20:21 UTC (rev 4915)
@@ -29,55 +29,94 @@
     def __init__(self, parent):
         super(MyTerrainManagerDock, self).__init__(parent)
         self.setupUi(self)
+        QWidget.connect(self.createTerrainButton, SIGNAL("clicked()"), self.onCreateTerrainButtonClicked)
         
+    def onCreateTerrainButtonClicked(self):
+        terrainData = {}
+        terrainData["name"]  = str(self.nameLineEdit.text())
+        terrainData["size"]  = int(self.sizeComboBox.currentText())
+        terrainData["positionX"]  = self.positionSpinBoxX.value()
+        terrainData["positionY"]  = self.positionSpinBoxY.value()
+        terrainData["positionZ"]  = self.positionSpinBoxZ.value()
+        terrainData["extendsX"]  = self.extendsSpinBoxX.value()
+        terrainData["extendsY"]  = self.extendsSpinBoxY.value()
+        terrainData["extendsZ"]  = self.extendsSpinBoxZ.value()
+        terrainData["terrainSize"] = int(self.sizeComboBox.currentText())
+        terrainData["terrainHeight"]  = self.terrainHeightSpinBox.value()
+        terrainData["splattingBaseName"]  = str(self.baseNameLineEdit.text())
+        terrainData["splattingResGroup"]  = str(self.resGroupLineEdit.text())
+        terrainData["splattingTexturSize"]  = int(self.texSizeComboBox.currentText())
+        terrainData["splattingNumTextures"]  = int(self.numTexturesComboBox.currentText())
+        
+        self.emit(SIGNAL("createTerrain"), terrainData)
+        
 class Terrain():
     def __init__(self, sceneManager):
         self.sceneManager = sceneManager
         self.camera = self.sceneManager.getCamera("MainCam")
-        
+        self.position = og.Vector3()
+        self.extends = og.Vector3(128, 50, 128)
+        self.terrainHeight = 0.5
+        self.name = ""
         self.terrainSize = 129
+        self.splattingBaseName = "ETSplatting"
+        self.splattingResGroup = "ET"
+        self.splattingTexturSize = 128
+        self.splattingNumTextures = 6
         
         ## create terrain manager
         self.terrainManager =  ET.TerrainManager(self.sceneManager)
         self.terrainManager.setLODErrorMargin(2, self.camera.getViewport().getActualHeight())
         self.terrainManager.setUseLODMorphing(True, 0.2, "morphFactor")
+    
+    def create(self, arg):
+        self.name = arg["name"]
+        self.position = og.Vector3(arg["positionX"], arg["positionY"], arg["positionZ"])
+        self.extends = og.Vector3(arg["extendsX"], arg["extendsY"], arg["extendsZ"]) + 1
+        self.terrainHeight = arg["terrainHeight"]
+        self.terrainSize = arg["terrainSize"]
+        self.splattingBaseName = arg["splattingBaseName"]
+        self.splattingResGroup = arg["splattingResGroup"]
+        self.splattingTexturSize = arg["splattingTexturSize"]
+        self.splattingNumTextures = arg["splattingNumTextures"]
         
+        
         ## create a fresh, mid-high terrain for editing
         # Note 
         heightMapValues = og.LodDistanceList() ## ET.stdVectorFloat()
         for i in xrange(self.terrainSize):
             for j in xrange(self.terrainSize):
-                heightMapValues.append(float(0.50))
+                heightMapValues.append(float(self.terrainHeight))
         # width, height, heightmapvalues as a float array
         self.terrainInfo = ET.TerrainInfo (self.terrainSize, self.terrainSize, heightMapValues )
         
-        ## save typing self
-        terrainInfo  = self.terrainInfo 
-        sceneManager = self.sceneManager
+        ## save typing self
+        terrainInfo  = self.terrainInfo 
+        sceneManager = self.sceneManager
         terrainMgr   = self.terrainManager
         
         ## set position and size of the terrain
-        terrainInfo.setExtents(og.AxisAlignedBox(-1500, -150, -1500, 1500, 150, 1500))
+        half = self.extends / 2
+        minPos = self.position - half
+        maxPos = self.position + half
+        terrainInfo.setExtents(og.AxisAlignedBox(minPos.x, minPos.y, minPos.z, minPos.x, minPos.y, minPos.z))
 
         ## now render it
         terrainMgr.createTerrain(terrainInfo)
 
         ## create the splatting manager
-#        * @param baseName   base name for the map textures (will be appended by their number)
-#        * @param group      the resource group the textures will be placed in
-#        * @param width      width of the textures in pixels
-#        * @param height     height of the textures in pixels
+#        * @param baseName   base name for the map textures (will be appended by their number)
+#        * @param group      the resource group the textures will be placed in
+#        * @param width      width of the textures in pixels
+#        * @param height     height of the textures in pixels
 #        * @param channels   Number of channels per texture (must be in {1, 2, 3, 4})
-        self.textureBaseName = "ETSplatting"
-        self.resGroup = "ET"
-        self.textureSize = 128
-        self.splatMgr = ET.SplattingManager(self.textureBaseName, self.resGroup, self.textureSize, self.textureSize, 3)
+        self.splatMgr = ET.SplattingManager(self.splattingBaseName, self.splattingResGroup, self.splattingTexturSize, self.splattingTexturSize, 3)
         ## specify number of splatting textures we need to handle
-        self.splatMgr.setNumTextures(6)
+        self.splatMgr.setNumTextures(self.numTextures)
 
         ## create a manual lightmap texture
         lightmapTex = og.TextureManager.getSingleton().createManual(
-        self.textureBaseName, self.resGroup, og.TEX_TYPE_2D, self.textureSize, self.textureSize, 1, og.PF_BYTE_RGB)
+        self.splattingBaseName, self.splattingResGroup, og.TEX_TYPE_2D, self.splattingTexturSize, self.splattingTexturSize, 1, og.PF_BYTE_RGB)
 
         lightmap = og.Image()
         ET.createTerrainLightmap(terrainInfo, lightmap, 128, 128,\
@@ -87,18 +126,17 @@
         lightmapTex.getBuffer(0, 0).blitFromMemory(lightmap.getPixelBox(0, 0))
 
         ##  load the terrain material and assign it
-        material = og.MaterialManager.getSingleton().getByName("ETTerrainMaterial")
-#        material = og.MaterialManager.getSingleton().getByName("Lockenwickler_Area")
+#        material = og.MaterialManager.getSingleton().getByName("ETTerrainMaterial")
+        material = og.MaterialManager.getSingleton().getByName("Lockenwickler_Area")
         self.terrainManager.setMaterial(material)
         
 class MyTerrainManager():
     def __init__(self, sceneManager):
         self.sceneManager = sceneManager
-        self.dockWidget = None
-        #self.terrain = Terrain(sceneManager)
+        self.dockWidgetContents = None
 
     def getDockWidget(self, parent):
-        if self.dockWidget is None:
+        if self.dockWidgetContents is None:
             self.dockWidgetContents = MyTerrainManagerDock(parent)
             self.myTerrainManagerDock = QDockWidget("Terrain Tools", parent)
             self.myTerrainManagerDock.setObjectName("TerrainToolsDockWindow")
@@ -107,4 +145,11 @@
             self.myTerrainManagerDock.setWindowIcon(QIcon("media/icons/terrain_small.png"))
             parent.addDockWidget(Qt.LeftDockWidgetArea, self.myTerrainManagerDock)
             
+            QWidget.connect(self.dockWidgetContents, SIGNAL("createTerrain"), self.onCreateTerrain)
+            
+            
         return self.myTerrainManagerDock
+
+    def onCreateTerrain(self, arg):
+        self.terrain = Terrain(self.sceneManager)
+        self.terrain.create(arg)

Modified: rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-03 11:47:29 UTC (rev 4914)
+++ rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-03 15:20:21 UTC (rev 4915)
@@ -2,7 +2,7 @@
 
 # Form implementation generated from reading ui file '/home/fusion/dev/ui files/MyTerrainManagerDock.ui'
 #
-# Created: Sun May  3 13:23:32 2009
+# Created: Sun May  3 16:55:48 2009
 #      by: PyQt4 UI code generator 4.4.4
 #
 # WARNING! All changes made in this file will be lost!
@@ -12,31 +12,28 @@
 class Ui_TerrainManagerUi(object):
     def setupUi(self, TerrainManagerUi):
         TerrainManagerUi.setObjectName("TerrainManagerUi")
-        TerrainManagerUi.resize(443, 626)
+        TerrainManagerUi.resize(263, 748)
         self.gridLayout_2 = QtGui.QGridLayout(TerrainManagerUi)
         self.gridLayout_2.setMargin(1)
         self.gridLayout_2.setSpacing(1)
         self.gridLayout_2.setObjectName("gridLayout_2")
         self.comboBox = QtGui.QComboBox(TerrainManagerUi)
         self.comboBox.setObjectName("comboBox")
+        self.comboBox.addItem(QtCore.QString())
         self.gridLayout_2.addWidget(self.comboBox, 0, 0, 1, 1)
         self.toolBox = QtGui.QToolBox(TerrainManagerUi)
         self.toolBox.setFrameShape(QtGui.QFrame.NoFrame)
         self.toolBox.setFrameShadow(QtGui.QFrame.Plain)
-        #self.toolBox.setTabSpacing(1)
+#        self.toolBox.setTabSpacing(1)
         self.toolBox.setObjectName("toolBox")
         self.page = QtGui.QWidget()
-        self.page.setGeometry(QtCore.QRect(0, 0, 441, 515))
+        self.page.setGeometry(QtCore.QRect(0, 0, 261, 637))
         self.page.setObjectName("page")
-        self.gridLayout_3 = QtGui.QGridLayout(self.page)
-        self.gridLayout_3.setObjectName("gridLayout_3")
-        self.groupBox = QtGui.QGroupBox(self.page)
-        self.groupBox.setObjectName("groupBox")
-        self.gridLayout = QtGui.QGridLayout(self.groupBox)
+        self.gridLayout = QtGui.QGridLayout(self.page)
         self.gridLayout.setMargin(1)
         self.gridLayout.setSpacing(1)
         self.gridLayout.setObjectName("gridLayout")
-        self.label_6 = QtGui.QLabel(self.groupBox)
+        self.label_6 = QtGui.QLabel(self.page)
         sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
         sizePolicy.setHorizontalStretch(0)
         sizePolicy.setVerticalStretch(0)
@@ -45,16 +42,16 @@
         self.label_6.setAlignment(QtCore.Qt.AlignCenter)
         self.label_6.setObjectName("label_6")
         self.gridLayout.addWidget(self.label_6, 0, 0, 1, 2)
-        self.label = QtGui.QLabel(self.groupBox)
+        self.label = QtGui.QLabel(self.page)
         self.label.setObjectName("label")
         self.gridLayout.addWidget(self.label, 1, 0, 1, 1)
-        self.nameLineEdit = QtGui.QLineEdit(self.groupBox)
+        self.nameLineEdit = QtGui.QLineEdit(self.page)
         self.nameLineEdit.setObjectName("nameLineEdit")
         self.gridLayout.addWidget(self.nameLineEdit, 1, 1, 1, 1)
-        self.label_2 = QtGui.QLabel(self.groupBox)
+        self.label_2 = QtGui.QLabel(self.page)
         self.label_2.setObjectName("label_2")
         self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
-        self.sizeComboBox = QtGui.QComboBox(self.groupBox)
+        self.sizeComboBox = QtGui.QComboBox(self.page)
         self.sizeComboBox.setObjectName("sizeComboBox")
         self.sizeComboBox.addItem(QtCore.QString())
         self.sizeComboBox.addItem(QtCore.QString())
@@ -65,43 +62,87 @@
         self.sizeComboBox.addItem(QtCore.QString())
         self.sizeComboBox.addItem(QtCore.QString())
         self.gridLayout.addWidget(self.sizeComboBox, 2, 1, 1, 1)
-        self.extendsSpinBoxX = QtGui.QSpinBox(self.groupBox)
+        self.positionSpinBoxX = QtGui.QDoubleSpinBox(self.page)
         sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
         sizePolicy.setHorizontalStretch(0)
         sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.positionSpinBoxX.sizePolicy().hasHeightForWidth())
+        self.positionSpinBoxX.setSizePolicy(sizePolicy)
+        self.positionSpinBoxX.setMaximum(999999999.0)
+        self.positionSpinBoxX.setObjectName("positionSpinBoxX")
+        self.gridLayout.addWidget(self.positionSpinBoxX, 3, 1, 1, 1)
+        self.label_11 = QtGui.QLabel(self.page)
+        self.label_11.setObjectName("label_11")
+        self.gridLayout.addWidget(self.label_11, 4, 0, 1, 1)
+        self.positionSpinBoxY = QtGui.QDoubleSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.positionSpinBoxY.sizePolicy().hasHeightForWidth())
+        self.positionSpinBoxY.setSizePolicy(sizePolicy)
+        self.positionSpinBoxY.setMaximum(999999999.0)
+        self.positionSpinBoxY.setObjectName("positionSpinBoxY")
+        self.gridLayout.addWidget(self.positionSpinBoxY, 4, 1, 1, 1)
+        self.positionSpinBoxZ = QtGui.QDoubleSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.positionSpinBoxZ.sizePolicy().hasHeightForWidth())
+        self.positionSpinBoxZ.setSizePolicy(sizePolicy)
+        self.positionSpinBoxZ.setMaximum(999999999.0)
+        self.positionSpinBoxZ.setObjectName("positionSpinBoxZ")
+        self.gridLayout.addWidget(self.positionSpinBoxZ, 5, 1, 1, 1)
+        self.extendsSpinBoxX = QtGui.QSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
         sizePolicy.setHeightForWidth(self.extendsSpinBoxX.sizePolicy().hasHeightForWidth())
         self.extendsSpinBoxX.setSizePolicy(sizePolicy)
         self.extendsSpinBoxX.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
         self.extendsSpinBoxX.setMinimum(128)
         self.extendsSpinBoxX.setMaximum(10000)
         self.extendsSpinBoxX.setObjectName("extendsSpinBoxX")
-        self.gridLayout.addWidget(self.extendsSpinBoxX, 3, 1, 1, 1)
-        self.label_3 = QtGui.QLabel(self.groupBox)
+        self.gridLayout.addWidget(self.extendsSpinBoxX, 6, 1, 1, 1)
+        self.label_3 = QtGui.QLabel(self.page)
         self.label_3.setObjectName("label_3")
-        self.gridLayout.addWidget(self.label_3, 4, 0, 1, 1)
-        self.extendsSpinBoxX_2 = QtGui.QSpinBox(self.groupBox)
+        self.gridLayout.addWidget(self.label_3, 7, 0, 1, 1)
+        self.extendsSpinBoxY = QtGui.QSpinBox(self.page)
         sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
         sizePolicy.setHorizontalStretch(0)
         sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.extendsSpinBoxX_2.sizePolicy().hasHeightForWidth())
-        self.extendsSpinBoxX_2.setSizePolicy(sizePolicy)
-        self.extendsSpinBoxX_2.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
-        self.extendsSpinBoxX_2.setMinimum(128)
-        self.extendsSpinBoxX_2.setMaximum(10000)
-        self.extendsSpinBoxX_2.setObjectName("extendsSpinBoxX_2")
-        self.gridLayout.addWidget(self.extendsSpinBoxX_2, 4, 1, 1, 1)
-        self.extendsSpinBoxX_3 = QtGui.QSpinBox(self.groupBox)
+        sizePolicy.setHeightForWidth(self.extendsSpinBoxY.sizePolicy().hasHeightForWidth())
+        self.extendsSpinBoxY.setSizePolicy(sizePolicy)
+        self.extendsSpinBoxY.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
+        self.extendsSpinBoxY.setMinimum(128)
+        self.extendsSpinBoxY.setMaximum(10000)
+        self.extendsSpinBoxY.setObjectName("extendsSpinBoxY")
+        self.gridLayout.addWidget(self.extendsSpinBoxY, 7, 1, 1, 1)
+        self.extendsSpinBoxZ = QtGui.QSpinBox(self.page)
         sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
         sizePolicy.setHorizontalStretch(0)
         sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.extendsSpinBoxX_3.sizePolicy().hasHeightForWidth())
-        self.extendsSpinBoxX_3.setSizePolicy(sizePolicy)
-        self.extendsSpinBoxX_3.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
-        self.extendsSpinBoxX_3.setMinimum(128)
-        self.extendsSpinBoxX_3.setMaximum(10000)
-        self.extendsSpinBoxX_3.setObjectName("extendsSpinBoxX_3")
-        self.gridLayout.addWidget(self.extendsSpinBoxX_3, 5, 1, 1, 1)
-        self.label_7 = QtGui.QLabel(self.groupBox)
+        sizePolicy.setHeightForWidth(self.extendsSpinBoxZ.sizePolicy().hasHeightForWidth())
+        self.extendsSpinBoxZ.setSizePolicy(sizePolicy)
+        self.extendsSpinBoxZ.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
+        self.extendsSpinBoxZ.setMinimum(128)
+        self.extendsSpinBoxZ.setMaximum(10000)
+        self.extendsSpinBoxZ.setObjectName("extendsSpinBoxZ")
+        self.gridLayout.addWidget(self.extendsSpinBoxZ, 8, 1, 1, 1)
+        self.label_10 = QtGui.QLabel(self.page)
+        self.label_10.setObjectName("label_10")
+        self.gridLayout.addWidget(self.label_10, 9, 0, 1, 1)
+        self.terrainHeightSpinBox = QtGui.QDoubleSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.terrainHeightSpinBox.sizePolicy().hasHeightForWidth())
+        self.terrainHeightSpinBox.setSizePolicy(sizePolicy)
+        self.terrainHeightSpinBox.setMaximum(1.0)
+        self.terrainHeightSpinBox.setSingleStep(0.1)
+        self.terrainHeightSpinBox.setProperty("value", QtCore.QVariant(0.5))
+        self.terrainHeightSpinBox.setObjectName("terrainHeightSpinBox")
+        self.gridLayout.addWidget(self.terrainHeightSpinBox, 9, 1, 1, 1)
+        self.label_7 = QtGui.QLabel(self.page)
         sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
         sizePolicy.setHorizontalStretch(0)
         sizePolicy.setVerticalStretch(0)
@@ -109,66 +150,90 @@
         self.label_7.setSizePolicy(sizePolicy)
         self.label_7.setAlignment(QtCore.Qt.AlignCenter)
         self.label_7.setObjectName("label_7")
-        self.gridLayout.addWidget(self.label_7, 6, 0, 1, 2)
-        self.label_4 = QtGui.QLabel(self.groupBox)
+        self.gridLayout.addWidget(self.label_7, 10, 0, 1, 2)
+        self.label_4 = QtGui.QLabel(self.page)
         self.label_4.setObjectName("label_4")
-        self.gridLayout.addWidget(self.label_4, 7, 0, 1, 1)
-        self.baseNameLineEdit = QtGui.QLineEdit(self.groupBox)
+        self.gridLayout.addWidget(self.label_4, 11, 0, 1, 1)
+        self.baseNameLineEdit = QtGui.QLineEdit(self.page)
         self.baseNameLineEdit.setObjectName("baseNameLineEdit")
-        self.gridLayout.addWidget(self.baseNameLineEdit, 7, 1, 1, 1)
-        self.label_5 = QtGui.QLabel(self.groupBox)
+        self.gridLayout.addWidget(self.baseNameLineEdit, 11, 1, 1, 1)
+        self.label_5 = QtGui.QLabel(self.page)
         self.label_5.setObjectName("label_5")
-        self.gridLayout.addWidget(self.label_5, 8, 0, 1, 1)
-        self.baseNameLineEdit_2 = QtGui.QLineEdit(self.groupBox)
-        self.baseNameLineEdit_2.setObjectName("baseNameLineEdit_2")
-        self.gridLayout.addWidget(self.baseNameLineEdit_2, 8, 1, 1, 1)
-        self.label_8 = QtGui.QLabel(self.groupBox)
+        self.gridLayout.addWidget(self.label_5, 12, 0, 1, 1)
+        self.resGroupLineEdit = QtGui.QLineEdit(self.page)
+        self.resGroupLineEdit.setObjectName("resGroupLineEdit")
+        self.gridLayout.addWidget(self.resGroupLineEdit, 12, 1, 1, 1)
+        self.label_8 = QtGui.QLabel(self.page)
         self.label_8.setObjectName("label_8")
-        self.gridLayout.addWidget(self.label_8, 9, 0, 1, 1)
-        self.sizeComboBox_2 = QtGui.QComboBox(self.groupBox)
-        self.sizeComboBox_2.setObjectName("sizeComboBox_2")
-        self.sizeComboBox_2.addItem(QtCore.QString())
-        self.sizeComboBox_2.addItem(QtCore.QString())
-        self.sizeComboBox_2.addItem(QtCore.QString())
-        self.sizeComboBox_2.addItem(QtCore.QString())
-        self.sizeComboBox_2.addItem(QtCore.QString())
-        self.gridLayout.addWidget(self.sizeComboBox_2, 9, 1, 1, 1)
-        self.label_9 = QtGui.QLabel(self.groupBox)
+        self.gridLayout.addWidget(self.label_8, 13, 0, 1, 1)
+        self.texSizeComboBox = QtGui.QComboBox(self.page)
+        self.texSizeComboBox.setObjectName("texSizeComboBox")
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.gridLayout.addWidget(self.texSizeComboBox, 13, 1, 1, 1)
+        self.label_9 = QtGui.QLabel(self.page)
         self.label_9.setObjectName("label_9")
-        self.gridLayout.addWidget(self.label_9, 10, 0, 1, 1)
-        self.sizeComboBox_3 = QtGui.QComboBox(self.groupBox)
-        self.sizeComboBox_3.setObjectName("sizeComboBox_3")
-        self.sizeComboBox_3.addItem(QtCore.QString())
-        self.sizeComboBox_3.addItem(QtCore.QString())
-        self.sizeComboBox_3.addItem(QtCore.QString())
-        self.sizeComboBox_3.addItem(QtCore.QString())
-        self.sizeComboBox_3.addItem(QtCore.QString())
-        self.sizeComboBox_3.addItem(QtCore.QString())
-        self.gridLayout.addWidget(self.sizeComboBox_3, 10, 1, 1, 1)
-        self.gridLayout_3.addWidget(self.groupBox, 2, 0, 1, 1)
-        self.pushButton = QtGui.QPushButton(self.page)
-        self.pushButton.setObjectName("pushButton")
-        self.gridLayout_3.addWidget(self.pushButton, 3, 0, 1, 1)
+        self.gridLayout.addWidget(self.label_9, 14, 0, 1, 1)
+        self.numTexturesComboBox = QtGui.QComboBox(self.page)
+        self.numTexturesComboBox.setObjectName("numTexturesComboBox")
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.gridLayout.addWidget(self.numTexturesComboBox, 14, 1, 1, 1)
+        self.createTerrainButton = QtGui.QPushButton(self.page)
+        self.createTerrainButton.setObjectName("createTerrainButton")
+        self.gridLayout.addWidget(self.createTerrainButton, 15, 0, 1, 2)
         self.toolBox.addItem(self.page, "")
         self.page_2 = QtGui.QWidget()
-        self.page_2.setGeometry(QtCore.QRect(0, 0, 441, 515))
+        self.page_2.setGeometry(QtCore.QRect(0, 0, 261, 637))
         self.page_2.setObjectName("page_2")
         self.toolBox.addItem(self.page_2, "")
         self.Seite = QtGui.QWidget()
+        self.Seite.setGeometry(QtCore.QRect(0, 0, 261, 637))
         self.Seite.setObjectName("Seite")
         self.toolBox.addItem(self.Seite, "")
         self.gridLayout_2.addWidget(self.toolBox, 1, 0, 1, 1)
+        self.label_6.setBuddy(self.nameLineEdit)
+        self.label.setBuddy(self.nameLineEdit)
+        self.label_2.setBuddy(self.sizeComboBox)
+        self.label_11.setBuddy(self.extendsSpinBoxX)
+        self.label_3.setBuddy(self.extendsSpinBoxX)
+        self.label_10.setBuddy(self.extendsSpinBoxX)
+        self.label_7.setBuddy(self.baseNameLineEdit)
+        self.label_4.setBuddy(self.baseNameLineEdit)
+        self.label_5.setBuddy(self.resGroupLineEdit)
+        self.label_8.setBuddy(self.texSizeComboBox)
+        self.label_9.setBuddy(self.numTexturesComboBox)
 
         self.retranslateUi(TerrainManagerUi)
         self.toolBox.setCurrentIndex(0)
         QtCore.QMetaObject.connectSlotsByName(TerrainManagerUi)
+        TerrainManagerUi.setTabOrder(self.nameLineEdit, self.sizeComboBox)
+        TerrainManagerUi.setTabOrder(self.sizeComboBox, self.extendsSpinBoxX)
+        TerrainManagerUi.setTabOrder(self.extendsSpinBoxX, self.extendsSpinBoxY)
+        TerrainManagerUi.setTabOrder(self.extendsSpinBoxY, self.extendsSpinBoxZ)
+        TerrainManagerUi.setTabOrder(self.extendsSpinBoxZ, self.baseNameLineEdit)
+        TerrainManagerUi.setTabOrder(self.baseNameLineEdit, self.resGroupLineEdit)
+        TerrainManagerUi.setTabOrder(self.resGroupLineEdit, self.texSizeComboBox)
+        TerrainManagerUi.setTabOrder(self.texSizeComboBox, self.numTexturesComboBox)
+        TerrainManagerUi.setTabOrder(self.numTexturesComboBox, self.createTerrainButton)
 
     def retranslateUi(self, TerrainManagerUi):
         TerrainManagerUi.setWindowTitle(QtGui.QApplication.translate("TerrainManagerUi", "Form", None, QtGui.QApplication.UnicodeUTF8))
-        self.groupBox.setTitle(QtGui.QApplication.translate("TerrainManagerUi", "Terrain Settings", None, QtGui.QApplication.UnicodeUTF8))
+        self.comboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "No Terrain", None, QtGui.QApplication.UnicodeUTF8))
         self.label_6.setText(QtGui.QApplication.translate("TerrainManagerUi", "Geometry", None, QtGui.QApplication.UnicodeUTF8))
-        self.label.setText(QtGui.QApplication.translate("TerrainManagerUi", "Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_2.setText(QtGui.QApplication.translate("TerrainManagerUi", "Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.label.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Name of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.nameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Name of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_2.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Vertex density", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_2.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Vertex density", None, QtGui.QApplication.UnicodeUTF8))
         self.sizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "8", None, QtGui.QApplication.UnicodeUTF8))
         self.sizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "16", None, QtGui.QApplication.UnicodeUTF8))
         self.sizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "32", None, QtGui.QApplication.UnicodeUTF8))
@@ -177,39 +242,71 @@
         self.sizeComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
         self.sizeComboBox.setItemText(6, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
         self.sizeComboBox.setItemText(7, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxX.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxX.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "X:", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_11.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_11.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Position", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxY.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxY.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxZ.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxZ.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Z:", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxX.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
         self.extendsSpinBoxX.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "X:", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_3.setText(QtGui.QApplication.translate("TerrainManagerUi", "Extends", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxX_2.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxX_3.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_3.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_3.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Extends", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxY.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxY.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxZ.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxZ.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Z:", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_10.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
+"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
+"p, li { white-space: pre-wrap; }\n"
+"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This value means how high the vertices are placed in relation to the terrain extend in Y.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">the vertices are placed in at height 50.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/helpPref/TerrainExtends1.png\" /></p></body></html>", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_10.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Height", None, QtGui.QApplication.UnicodeUTF8))
+        self.terrainHeightSpinBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
+"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
+"p, li { white-space: pre-wrap; }\n"
+"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This value means how high the vertices are placed in relation to the terrain extend in Y.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">the vertices are placed in at height 50.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/helpPref/TerrainExtends1.png\" /></p></body></html>", None, QtGui.QApplication.UnicodeUTF8))
         self.label_7.setText(QtGui.QApplication.translate("TerrainManagerUi", "Splatting Settings", None, QtGui.QApplication.UnicodeUTF8))
         self.label_4.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_4.setText(QtGui.QApplication.translate("TerrainManagerUi", "Base Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_4.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Base Name", None, QtGui.QApplication.UnicodeUTF8))
         self.baseNameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
+        self.baseNameLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ETSplatting", None, QtGui.QApplication.UnicodeUTF8))
         self.label_5.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_5.setText(QtGui.QApplication.translate("TerrainManagerUi", "Res Group", None, QtGui.QApplication.UnicodeUTF8))
-        self.baseNameLineEdit_2.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_5.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Res Group", None, QtGui.QApplication.UnicodeUTF8))
+        self.resGroupLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
+        self.resGroupLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ET", None, QtGui.QApplication.UnicodeUTF8))
         self.label_8.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_8.setText(QtGui.QApplication.translate("TerrainManagerUi", "Tex Size", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_2.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_2.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_2.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_2.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_2.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_2.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_8.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Tex Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
         self.label_9.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_9.setText(QtGui.QApplication.translate("TerrainManagerUi", "NumTextures", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_3.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_3.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "1", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_3.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_3.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "3", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_3.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "4", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_3.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "5", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox_3.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "6", None, QtGui.QApplication.UnicodeUTF8))
-        self.pushButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_9.setText(QtGui.QApplication.translate("TerrainManagerUi", "&NumTextures", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "1", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "3", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "4", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "5", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "6", None, QtGui.QApplication.UnicodeUTF8))
+        self.createTerrainButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
         self.toolBox.setItemText(self.toolBox.indexOf(self.page), QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
         self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), QtGui.QApplication.translate("TerrainManagerUi", "ModifyTerrain", None, QtGui.QApplication.UnicodeUTF8))
         self.toolBox.setItemText(self.toolBox.indexOf(self.Seite), QtGui.QApplication.translate("TerrainManagerUi", "PaintTerrain", None, QtGui.QApplication.UnicodeUTF8))
 
+import help_rc
 
 if __name__ == "__main__":
     import sys

Added: rl/trunk/editors/Lockenwickler/src/help_rc.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/help_rc.py	2009-05-03 11:47:29 UTC (rev 4914)
+++ rl/trunk/editors/Lockenwickler/src/help_rc.py	2009-05-03 15:20:21 UTC (rev 4915)
@@ -0,0 +1,550 @@
+# -*- coding: utf-8 -*-
+
+# Resource object code
+#
+# Created: So Mai 3 16:15:12 2009
+#      by: The Resource Compiler for PyQt (Qt v4.4.1)
+#
+# WARNING! All changes made in this file will be lost!
+
+from PyQt4 import QtCore
+
+qt_resource_data = "\
+\x00\x00\x1f\xcf\
+\x89\
+\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\
+\x00\x01\x2c\x00\x00\x01\x2c\x08\x06\x00\x00\x00\x79\x7d\x8e\x75\
+\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\
+\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\
+\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\
+\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xd9\x05\x03\
+\x0e\x07\x1d\x05\x69\x10\xcd\x00\x00\x00\x19\x74\x45\x58\x74\x43\
+\x6f\x6d\x6d\x65\x6e\x74\x00\x43\x72\x65\x61\x74\x65\x64\x20\x77\
+\x69\x74\x68\x20\x47\x49\x4d\x50\x57\x81\x0e\x17\x00\x00\x1f\x2a\
+\x49\x44\x41\x54\x78\xda\xed\xdd\x7b\x54\x54\xd5\xe2\x07\xf0\xef\
+\x9e\x07\x33\x03\x08\x08\xa2\x80\x8a\x82\x8f\x2b\x3d\x88\x04\xd3\
+\x82\x34\xd1\xf4\x8a\x21\x6a\xa9\xf9\xae\x44\xcb\x5c\xb6\x6e\x4f\
+\x5c\xf9\x08\xb3\x5c\x5e\xb3\xd2\x5b\x5e\xcb\x52\xcb\x65\xbe\x53\
+\x54\x0c\xf2\x91\x52\x5e\xee\x8f\x92\x5a\x1a\x3e\x4b\xe0\x9a\x1a\
+\x82\x0a\x2a\x8c\x03\xf3\xd8\xbf\x3f\xa6\x99\x44\x50\x87\x60\x9c\
+\x19\xfd\x7e\xd6\x9a\xe5\x30\x33\xe7\xcc\xb8\xcf\x99\xef\xec\xb3\
+\xcf\x3e\x7b\x0b\x29\x25\x88\x88\x3c\x81\x82\x45\x40\x44\x0c\x2c\
+\x22\x22\x06\x16\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\
+\x62\x60\x11\x11\x31\xb0\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\
+\x60\x11\x11\x31\xb0\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\
+\x11\x11\x03\x8b\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x06\x16\x11\
+\x11\x03\x8b\x88\x88\x81\x45\x44\x0c\x2c\x22\x22\x06\x16\x11\x11\
+\x03\x8b\x88\x18\x58\x44\x44\x0c\x2c\x22\x22\x06\x16\x11\x31\xb0\
+\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\
+\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x03\x8b\x88\x88\
+\x81\x45\x44\xc4\xc0\x22\x22\x06\x16\x11\x11\x03\x8b\x88\xe8\x56\
+\x07\x96\x94\x92\x25\x48\x44\xb7\x8c\x68\x6c\xe8\x64\x66\x66\xca\
+\xb9\x73\xe7\xe2\xd2\xa5\x4b\x2c\x4d\x22\x57\x7e\x99\x85\x80\xc1\
+\x60\x40\x79\x79\x39\x1e\x7e\xf8\x61\xcc\x9b\x37\x0f\xbe\xbe\xbe\
+\x4e\x7d\xcf\xea\xea\x6a\x28\x14\x0a\xa8\xd5\xea\x5a\x8f\x5b\x2c\
+\x16\xb4\x6d\xdb\x56\x34\xf5\xfb\xa9\x1a\xbb\x82\x75\xeb\xd6\xe1\
+\xbf\xff\xfd\x2f\xf7\x16\x22\x37\x92\x91\x91\x81\xc0\xc0\x40\xf8\
+\xf9\xf9\x39\xef\xf0\x4c\xa1\xc0\xc9\x93\x27\xa1\xd3\xe9\xd0\xa2\
+\x45\x8b\x5a\x47\x5c\x57\xae\x5c\xc1\x47\x1f\x7d\xd4\xe4\xef\xd9\
+\xe8\xc0\xaa\xae\xae\x06\x00\x68\xb5\x5a\x74\xe9\xd2\xa5\x4e\xd2\
+\x12\xd1\xad\xa1\x50\x28\xf0\xeb\xaf\xbf\xe2\xfc\xf9\xf3\x08\x0c\
+\x0c\x44\x5a\x5a\x1a\x5a\xb5\x6a\x25\x9c\xf5\x7e\x1a\x8d\x06\xb3\
+\x67\xcf\x96\x51\x51\x51\x78\xfc\xf1\xc7\x85\xc9\x64\xb2\x3f\x27\
+\xa5\x8c\x74\xc6\x7b\x36\x3a\xb0\x6c\xa9\x1a\x10\x10\x80\xec\xec\
+\x6c\xa7\x16\x10\x11\xdd\xd8\x90\x21\x43\x64\x46\x46\x06\x74\x3a\
+\x1d\xfc\xfd\xfd\xe1\xef\xef\xef\xd4\xf7\x53\x2a\x95\xd0\x6a\xb5\
+\xf0\xf1\xf1\xb9\xf6\xa9\x42\xa7\x84\x72\x53\xad\x48\x4a\x69\xaf\
+\x6d\x11\x91\x6b\x98\xcd\xe6\xdb\xbb\x16\xc9\x4d\x4c\x44\x0c\x2c\
+\x22\x22\x06\x16\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\
+\x62\x60\x11\x11\x31\xb0\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\
+\x60\x11\x11\x31\xb0\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\
+\x11\x11\x03\x8b\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x06\x16\x11\
+\x11\x03\x8b\x88\x88\x81\x45\x44\x0c\x2c\x22\x22\x06\x16\x11\x11\
+\x03\x8b\x88\x18\x58\x44\x44\x0c\x2c\x22\x22\x06\x16\x11\x31\xb0\
+\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\
+\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\x11\x91\xfb\xaa\xa8\xa8\
+\x88\x64\x60\x11\x91\x47\xe8\xde\xbd\xfb\x89\x6f\xbe\xf9\x46\x32\
+\xb0\x88\xc8\xed\x9d\x3b\x77\x0e\xfd\xfa\xf5\xc3\xac\x59\xb3\x9a\
+\x2c\xb4\x18\x58\x44\xe4\x14\x67\xcf\x9e\x15\xe3\xc7\x8f\xc7\x9c\
+\x39\x73\x10\x1f\x1f\x2f\x2b\x2b\x2b\x1b\xbd\x4e\x15\x8b\x95\x88\
+\x9c\x41\xa5\x52\x61\xd9\xb2\x65\x22\x39\x39\x59\xce\x9a\x35\x0b\
+\xe1\xe1\xe1\xf2\x83\x0f\x3e\x40\x68\x68\x28\x2c\x16\x0b\x00\xc0\
+\x64\x32\xe1\x81\x07\x1e\x78\x36\x30\x30\x70\x29\x03\x8b\x88\x5c\
+\x6e\xf0\xe0\xc1\xa2\x79\xf3\xe6\xb2\x6f\xdf\xbe\x18\x33\x66\x4c\
+\x9d\xe7\xb7\x6c\xd9\xf2\xf1\xa0\x41\x83\x18\x58\x44\xe4\x7a\x1f\
+\x7c\xf0\x81\x9c\x39\x73\x26\x42\x43\x43\xb1\x6d\xdb\x36\xb4\x6b\
+\xd7\xae\x83\xc5\x62\xe9\x0b\x00\x52\xca\x48\x3f\x3f\xbf\x69\x3c\
+\x24\x24\x22\x97\x2a\x2e\x2e\x96\x93\x27\x4f\x46\x76\x76\x36\x46\
+\x8c\x18\x81\xb5\x6b\xd7\x8a\xab\x9e\x5e\xfa\x57\xd6\xc9\xc0\x22\
+\x22\xa7\xe8\xd4\xa9\x13\xfc\xfc\xfc\xf0\xf9\xe7\x9f\x63\xdc\xb8\
+\x71\xa2\x29\xd6\xc9\xc0\x22\x22\xa7\x78\xe8\xa1\x87\xb0\x6a\xd5\
+\x2a\xb4\x6d\xdb\x56\x34\xd5\x3a\x19\x58\x44\xe4\x14\x39\x39\x39\
+\xa2\xa9\xd7\xc9\x7e\x58\x44\xe4\x31\x18\x58\x44\xc4\xc0\x22\x22\
+\x62\x60\x11\xd1\x1d\x8b\x8d\xee\x44\xe4\x74\x85\x85\x85\x72\xef\
+\xde\xbd\x28\x2d\x2d\x85\xd9\x6c\xb6\x3f\x5e\x53\x53\x83\xa7\x9e\
+\x7a\x0a\x11\x11\x11\x0e\x35\xd0\x33\xb0\x88\xc8\xa9\xbe\xff\xfe\
+\x7b\x39\x6e\xdc\x38\x1c\x3b\x76\xac\xde\xe7\xbb\x75\xeb\x86\x88\
+\x88\x08\x1e\x12\x12\x91\xeb\xad\x5d\xbb\x16\xc7\x8e\x1d\xc3\x9c\
+\x39\x73\x20\xa5\x14\xd7\xde\x1e\x7b\xec\x31\x87\xbb\x3f\x30\xb0\
+\x88\xc8\xa9\xbc\xbd\xbd\x01\x00\x33\x66\xcc\x68\x74\xbf\x2c\x06\
+\x16\x11\x39\x55\x5a\x5a\x9a\x48\x4a\x4a\xc2\x8c\x19\x33\x1a\x3d\
+\x90\x1f\x03\x8b\x88\x9c\x6a\xc6\x8c\x19\x32\x3b\x3b\x1b\xf3\xe6\
+\xcd\x83\x8f\x8f\x8f\xf4\xf5\xf5\xb5\xdf\x84\x10\x72\xf7\xee\xdd\
+\x0e\x07\x19\x1b\xdd\x89\xc8\xa9\x82\x82\x82\xd0\xa5\x4b\x17\x28\
+\x14\x75\xeb\x47\x55\x55\x55\xd0\xe9\x74\x0e\xaf\x8b\x81\x45\x44\
+\x4e\x35\x6b\xd6\x2c\x31\x6b\xd6\xac\x26\x59\x17\x0f\x09\x89\xa8\
+\x49\x49\x29\xeb\xbd\xcf\xc0\x22\x22\xb7\x23\x84\x40\x87\x0e\x1d\
+\xa4\x10\x42\x0a\x21\xf0\xcc\x33\xcf\xd8\xee\xd7\x7b\xcb\xca\xca\
+\x62\x1b\x16\x11\xb9\xce\x90\x21\x43\x50\x5a\x5a\x0a\xc0\x3a\x2e\
+\x56\x55\x55\x55\xbd\x6d\x58\x06\x83\x01\xad\x5b\xb7\x76\x78\xbd\
+\x0c\x2c\x22\x6a\x72\x0b\x16\x2c\x10\xb6\x43\xc2\xd4\xd4\x54\x91\
+\x9a\x9a\xca\x43\x42\x22\x72\xff\xc3\xc3\xa6\xc4\xc0\x22\x22\x8f\
+\xc1\xc0\x22\x22\x06\x16\x11\x11\x03\x8b\x88\xee\x58\x3c\x4b\x48\
+\x44\x4e\x65\x30\x18\xb0\x65\xcb\x16\x19\x12\x12\x82\x5e\xbd\x7a\
+\x89\x9f\x7e\xfa\x49\x1e\x3a\x74\x08\x6a\xb5\x1a\x0f\x3e\xf8\x20\
+\xc2\xc3\xc3\x1d\x6e\x99\x67\x60\x11\x91\x53\x65\x66\x66\xca\x27\
+\x9f\x7c\x12\x9b\x36\x6d\x42\x41\x41\x81\x4c\x4e\x4e\xc6\xe9\xd3\
+\xa7\x01\x00\x03\x07\x0e\xc4\x8a\x15\x2b\xf6\x07\x07\x07\xc7\xf1\
+\x90\x90\x88\x5c\x2e\x37\x37\x17\x80\xb5\x33\xe9\xfa\xf5\xeb\x71\
+\xfa\xf4\x69\x1c\x3b\x76\x0c\xb3\x67\xcf\xc6\xf6\xed\xdb\x71\xfc\
+\xf8\xf1\x58\x47\xd7\xc5\xc0\x22\x22\xa7\x32\x99\x4c\x00\x80\x53\
+\xa7\x4e\x21\x27\x27\x07\x03\x06\x0c\x40\x44\x44\x84\x18\x37\x6e\
+\x1c\x00\x40\xaf\xd7\x3b\xbc\x2e\x06\x16\x11\x39\xd5\x5d\x77\xdd\
+\x05\x00\x18\x39\x72\x24\xf2\xf2\xf2\xd0\xa7\x4f\x1f\xa8\xd5\x6a\
+\x9c\x3c\x79\x12\x00\xe0\xe7\xe7\xc7\xc0\x22\x22\xf7\x90\x9a\x9a\
+\x2a\x9e\x7c\xf2\x49\xec\xdb\xb7\x0f\xdd\xba\x75\xc3\xc8\x91\x23\
+\x01\x00\xaf\xbc\xf2\x0a\xe2\xe2\xe2\xd0\xa5\x4b\x17\x36\xba\x13\
+\x91\x7b\x50\xa9\x54\x58\xb3\x66\x8d\x58\xb3\x66\x4d\xad\xc7\xbf\
+\xff\xfe\xfb\x06\x5f\xb7\xc3\xc0\x22\xa2\x26\xb7\x71\xe3\x46\x59\
+\x51\x51\x71\xd3\xd7\x19\x8d\x46\x0c\x1a\x34\x08\xad\x5b\xb7\xe6\
+\xbc\x84\x44\xe4\x1a\x93\x27\x4f\xc6\xb9\x73\xe7\x1c\x7a\x6d\x9b\
+\x36\x6d\x1c\x1e\x62\x86\x6d\x58\x44\xd4\xe4\xca\xca\xca\x6a\xcd\
+\x3d\x38\x61\xc2\x04\x44\x45\x45\xe1\xc8\x91\x23\x30\x99\x4c\xc8\
+\xc9\xc9\x41\x9b\x36\x6d\xf0\xc1\x07\x1f\x20\x39\x39\x99\x6d\x58\
+\x44\xe4\x1e\xfe\xfd\xef\x7f\xcb\x65\xcb\x96\xe1\xfc\xf9\xf3\x08\
+\x0c\x0c\x04\x00\xf4\xec\xd9\x13\xeb\xd6\xad\x43\x7c\x7c\x3c\x12\
+\x12\x12\x64\x4c\x4c\x8c\x43\xa1\xc5\x1a\x16\x11\x39\x55\x41\x41\
+\x01\x80\x3f\x27\x54\xb5\xf1\xf1\xf1\x01\x00\x87\x0f\x1d\x19\x58\
+\x44\xe4\x74\x51\x51\x51\x10\x42\x20\x29\x29\xc9\x3e\x6c\xf2\xa1\
+\x43\x87\x30\x62\xc4\x08\xf8\xfa\xfa\xda\x6b\x5d\x3c\x24\x24\x22\
+\x97\x9b\x3a\x75\xaa\xc8\xce\xce\x96\xbb\x77\xef\x46\xab\x56\xad\
+\xec\x8f\x37\x6b\xd6\x0c\x2f\xbd\xf4\x12\xba\x76\xed\xca\x36\x2c\
+\x22\x72\x1f\xdb\xb7\x6f\x17\xdb\xb6\x6d\x93\x79\x79\x79\xb8\x7c\
+\xf9\x32\x5a\xb4\x68\x81\xc4\xc4\x44\xc4\xc7\xc7\x37\xa8\x2f\x16\
+\x03\x8b\x88\x6e\x89\xe4\xe4\x64\x91\x9c\x9c\xdc\xa8\x75\xb0\x0d\
+\x8b\x88\x9c\x6e\xd5\xaa\x55\xf2\xde\x7b\xef\x95\x2a\x95\xaa\xce\
+\xbc\x84\x3b\x76\xec\xe0\xbc\x84\x44\xe4\x1e\x3e\xfb\xec\x33\xf9\
+\xf4\xd3\x4f\x23\x34\x34\x14\x3d\x7b\xf6\xac\x35\x3f\xa1\x5e\xaf\
+\x47\x50\x50\x10\x0f\x09\x89\xc8\x3d\x7c\xff\xfd\xf7\x00\x80\x5d\
+\xbb\x76\xe1\xae\xbb\xee\x6a\xd4\xbc\x5f\x3c\x24\x24\x22\xa7\x8a\
+\x8d\xb5\x8e\xcf\xd7\xb6\x6d\xdb\x46\x4f\x52\xc8\x1a\x16\x11\x39\
+\xd5\xa8\x51\xa3\x44\x4e\x4e\x8e\x7c\xf8\xe1\x87\xe5\xb2\x65\xcb\
+\x10\x1c\x1c\x0c\x29\xad\xcd\x56\x52\x4a\x84\x84\x84\x08\xad\x56\
+\xcb\xc0\x22\x22\xd7\x1b\x37\x6e\x9c\xdc\xb8\x71\x23\x00\x20\x2e\
+\xae\xee\xd0\xed\x19\x19\x19\x32\x25\x25\x85\xa3\x35\x10\x91\xeb\
+\x2d\x58\xb0\x00\xaf\xbd\xf6\x5a\xbd\xd3\xd6\x9b\xcd\x66\x44\x45\
+\x45\xb1\xe3\x28\x11\xb9\x87\x76\xed\xda\x89\x76\xed\xda\xc1\x62\
+\xb1\xc0\x62\xb1\x40\x4a\x09\xb5\x5a\x0d\x93\xc9\x04\x21\x04\x94\
+\x4a\xa5\xc3\xeb\x62\xa3\x3b\x11\x39\x5d\x5e\x5e\x9e\xec\xd3\xa7\
+\x8f\x54\xab\xd5\xd2\xcb\xcb\x4b\xea\xf5\x7a\xc4\xc6\xc6\xca\xb8\
+\xb8\x38\x59\x51\x51\x11\xc9\xc0\x22\x22\xb7\x70\xe4\xc8\x11\x99\
+\x92\x92\x82\xe2\xe2\x62\x3c\xfb\xec\xb3\x00\xac\x33\xe9\xcc\x9c\
+\x39\x13\x07\x0f\x1e\x44\x61\x61\xe1\x09\x06\x16\x11\xb9\x85\x8d\
+\x1b\x37\xe2\xec\xd9\xb3\xd8\xbc\x79\x33\xfa\xf5\xeb\x07\x00\xb0\
+\x58\x2c\x91\xf7\xdd\x77\x1f\x2c\x16\x0b\x1c\x19\x4a\x99\x81\x45\
+\x44\xb7\x44\x49\x49\x09\x00\x20\x26\x26\x06\x66\xb3\x19\x00\x20\
+\xa5\x8c\xb4\xb5\x5d\x59\x2c\x16\x06\x16\x11\xb9\x07\xdb\xa5\x37\
+\x25\x25\x25\x50\xa9\xac\xe7\xf9\xd4\x6a\xf5\xae\x9f\x7f\xfe\x19\
+\x80\x75\x98\x19\x06\x16\x11\xb9\x85\xbf\xff\xfd\xef\xf0\xf2\xf2\
+\xc2\xc4\x89\x13\x51\x59\x59\x09\x00\x28\x2f\x2f\x97\xaf\xbe\xfa\
+\x2a\xba\x75\xeb\x86\x4e\x9d\x3a\x3d\xcb\xc0\x22\x22\xb7\xf0\xd0\
+\x43\x0f\x89\x97\x5f\x7e\x19\x99\x99\x99\x18\x37\x6e\x1c\x84\x10\
+\x08\x0f\x0f\x47\x59\x59\x19\xd2\xd3\xd3\x11\x18\x18\xb8\xd4\xd1\
+\x75\x39\xde\x0f\x4b\x4a\xa0\x9e\x8e\x5f\xc6\x3f\x8e\x43\xab\x85\
+\x80\xd4\x68\x1a\xb4\xec\x5f\x7d\x4f\x87\x97\x69\xe8\xf2\xb6\xd7\
+\x37\xe6\xf3\x02\xb7\x66\xd9\xbf\xfa\x19\xdd\x65\xfb\x78\xe2\xb6\
+\x6d\xcc\xe7\xbd\x45\xdb\xd4\xf6\x7d\x34\x00\x75\xbf\x8f\x4d\xb9\
+\xcf\x34\xd0\xdc\xb9\x73\xc5\xa3\x8f\x3e\x2a\xd7\xaf\x5f\x8f\xb2\
+\xb2\x32\xb4\x6b\xd7\x0e\x13\x26\x4c\x68\xf0\xc5\xd0\x8e\x07\x96\
+\x10\xc0\xff\xfe\x27\x51\x54\x04\xec\xd8\x61\xfd\x5b\xa3\xc1\xd8\
+\x03\x07\xd0\x15\x80\xdf\xe5\xcb\x08\x78\xeb\x2d\xc0\xcf\xaf\xf6\
+\xd8\x36\x21\x21\xc0\xd4\xa9\x02\xb9\xb9\x12\x97\x2f\x03\xbb\x77\
+\x03\x6a\xf5\xcd\xdf\xaf\x7d\x7b\x60\xe2\x44\xeb\x7f\xc6\x60\x00\
+\xf6\xed\x93\xf8\xf1\x47\xe0\xe2\xc5\x1b\xfc\x6f\x54\xc0\xec\xd9\
+\xa2\xd6\x67\x2e\x2c\x94\x38\x79\x12\xf8\xfa\x6b\x40\xa1\xb8\xfe\
+\x8e\xd2\xb5\x2b\xf0\xc4\x13\xc2\xbe\xdc\xf1\xe3\x12\x67\xce\x00\
+\xd9\xd9\x80\x23\x1d\xdb\x14\x0a\x60\xce\x1c\xeb\xf2\x39\x39\xd6\
+\xff\xeb\x77\xdf\x01\x2a\x15\x24\x00\x93\xc5\x02\xa5\x42\x51\x7f\
+\x95\x36\x3a\x1a\x18\x31\xc2\xba\xec\x8e\x1d\xd6\x32\xfe\xdf\xff\
+\xae\xbf\x73\x55\x57\x03\x0b\x16\x88\x5a\x9f\x7f\xe7\x4e\x89\x5f\
+\x7e\x01\xce\x9c\xb9\xf9\x67\x35\x18\x80\x57\x5f\x05\x42\x42\xfe\
+\xfc\xff\xee\xd9\x23\x71\xe9\x12\x90\x9b\x6b\x2d\xc7\x9b\x7d\xb1\
+\xba\x75\x03\x86\x0c\xb1\x2e\x5f\x51\x11\x89\x1f\x7f\x3c\x81\x7d\
+\xfb\xac\x9f\xed\x7a\x9a\x37\x07\x5e\x79\xe5\xcf\xf7\x3c\x77\x6e\
+\x3d\x7e\xfe\x79\x18\xf6\xee\x05\x4c\xa6\xeb\x2f\x67\x36\x03\x03\
+\x06\x00\xbd\x7a\xd5\xde\xb6\xdf\x7c\x23\x71\xf1\x22\xf0\x7f\xff\
+\x77\xe3\xcf\x7c\x75\x79\x09\x01\xec\xda\x25\x51\x5e\x0e\xe4\xe7\
+\x5f\x7f\xdb\xea\xf5\xc0\xbc\x79\x02\xb6\x2f\xbd\x10\xd6\x32\x2e\
+\x2b\x03\x7e\xfe\xf9\xfa\xfb\x92\x4d\xdb\xb6\xc0\x73\xcf\x09\xec\
+\xdb\x67\xdd\x17\xf6\xee\xbd\xf1\x67\xbc\x72\x05\x78\xef\xbd\xda\
+\x1b\xfc\xfc\xf9\x79\x98\x34\x29\x0d\xa7\x4e\x59\xdf\xdf\x68\x04\
+\x2e\x5f\x06\x02\x02\x80\xa4\x24\xeb\xfd\x19\x33\x1e\xc5\xfe\xfd\
+\x3b\x51\x56\x06\x1c\x3b\x86\xa7\x0f\x1d\xc2\x83\x00\x02\x2e\x5e\
+\x44\xb3\xb7\xde\xb2\xee\x8b\x2d\x5b\x02\x1f\x7e\x08\x44\x44\xb8\
+\x24\xad\x3e\xf9\xe4\x13\x99\x91\x91\x81\xed\xdb\xb7\xa3\x77\xef\
+\xde\xf6\xc7\x2f\x5e\xbc\x88\xc4\xc4\x44\xb9\x70\xe1\x42\x44\x47\
+\x47\x3b\xe1\xd2\x1c\x5f\xdf\x7f\x22\x24\x24\x0d\xb1\xb1\xd6\x02\
+\xd4\xe9\x50\x94\x9d\x8d\xfd\x00\x82\xd5\x6a\xd4\xdc\x73\x0f\x10\
+\x1c\x5c\x7b\x19\x3f\x3f\xeb\xbf\x2d\x5b\x5a\xef\x77\xeb\xe6\x58\
+\x00\x5c\x3d\x46\x8e\x52\x09\x84\x85\x59\x37\xd8\x95\x2b\x37\x0e\
+\x8d\x6b\x35\x6b\x96\x8f\x90\x90\x58\xc4\xc6\xde\x38\xb0\xda\xb5\
+\xab\xfb\xb9\x2d\x16\x20\x2e\xee\xe6\x3b\xe7\xb5\x35\xa3\x90\x10\
+\xc0\xdf\xdf\xba\xac\x52\x09\x8b\xc5\x82\x9d\x07\x0f\x22\x2e\x22\
+\x02\x2d\xfd\xfd\xeb\xbe\x77\xdb\xb6\x7f\xfe\x1d\x16\x06\x78\x79\
+\x01\x2d\x5a\x5c\x3f\xb0\x8c\xc6\xba\x8f\x85\x85\x59\xcb\x29\x24\
+\xe4\xe6\xbf\xa2\x46\x23\xa0\xd3\xd5\x7e\x51\x68\xa8\xf5\x8b\x50\
+\x53\x73\xf3\xed\x23\x25\x10\x1e\xfe\xe7\xdf\x5e\x5e\x85\x08\x0d\
+\x05\x62\x62\x6e\x1c\x3c\xd7\xcc\x9a\x02\x8d\x66\x38\x42\x42\x24\
+\xee\xbf\xdf\x5a\xd6\xd7\x63\xb1\x58\xff\x5f\xd7\xb2\x7d\x66\x93\
+\xe9\xc6\x9f\xf9\xda\xcf\x14\x16\x66\xdd\x3e\x42\x5c\x7f\xdb\xd6\
+\x57\x0e\x61\x61\x40\xb3\x66\xd6\xed\x73\xb3\x7d\xc2\x36\xb1\x42\
+\xab\x56\xd6\x7d\xe9\x8f\x7d\xe1\xba\x6a\x6a\xea\x3e\xa6\xd1\x4c\
+\x43\x62\x62\x1a\xca\xcb\xff\x0c\x6e\x83\xc1\x5a\x8e\xf7\xde\x6b\
+\xbd\xaf\xd1\xec\xb2\x7f\x2e\x7f\x7f\x9c\xf8\xea\x2b\xec\x07\xd0\
+\xca\xcb\x0b\xc6\x7b\xef\xb5\xbe\xb7\x9f\x1f\xe0\xeb\x9b\xef\xaa\
+\x43\xc2\xfc\xfc\x7c\x7c\xf5\xd5\x57\x75\x1e\xaf\xac\xac\xc4\x9e\
+\x3d\x7b\x50\x52\x52\x82\xe8\xe8\x68\x47\x6b\xa1\xd2\xb1\xdb\x1f\
+\x5d\xea\xaf\xbd\x0d\x19\x3e\x5c\x02\x90\x41\x21\x21\xb2\xf8\xf4\
+\x69\xd9\x90\x65\xff\xea\x7b\x3a\xbc\x4c\x43\x97\xb7\xbd\xbe\x31\
+\x9f\xb7\x9e\x65\x8d\x52\xe2\xed\x7f\xfe\x53\xfe\x52\x54\x24\x1b\
+\xba\x6c\x93\x96\x4d\x53\xaf\xab\x31\xdb\xc7\x13\xb7\xad\xb3\x97\
+\x69\x82\x6d\x9a\x94\x92\x22\x01\xc8\x96\xad\x5b\xcb\x92\x73\xe7\
+\xa4\xd3\xf6\x99\x3f\x6e\xd3\xa7\x4f\x97\xeb\xd6\xad\xab\x77\xbf\
+\x3e\x74\xe8\x90\x3c\x71\xe2\x84\x1c\xfe\x47\x46\x14\x15\x15\xc9\
+\xc3\x87\x0f\xcb\xc3\x87\x0f\xcb\x23\x47\x8e\xc8\xb9\x73\xe7\x4a\
+\x00\xf2\xdb\x6f\xbf\x95\x8e\xbe\x5f\xc3\x0e\x09\xeb\xa1\xfc\xe3\
+\x97\x51\x25\x25\xc4\xf5\x7e\x5d\xff\xea\x71\xf3\x5f\x59\xee\xea\
+\x65\x1a\xba\xbc\xed\xf5\x4d\xfc\x79\xa5\xd1\x88\x73\x25\x25\xa8\
+\xae\xaa\x6a\xba\xff\x6b\x53\xb6\x45\xb8\x62\xfb\xdc\x26\xdb\xb6\
+\x49\x97\x69\x82\x6d\x6a\xfb\x3e\xaa\xeb\xab\x59\xde\xe2\xf6\xab\
+\xbb\xef\xbe\xfb\xaa\x83\x24\x25\x22\x22\x22\xea\xbc\x66\xc8\x90\
+\x21\xf8\xdb\xdf\xfe\x56\xde\xf4\x6d\x58\x44\x44\x0d\x70\xe8\xd0\
+\x21\xe8\x74\x3a\xbc\xf0\xc2\x0b\xc8\xcc\xcc\x44\x71\x71\x31\xf4\
+\x7a\xbd\xfd\x79\xb5\x5a\x8d\xe0\xe0\x60\xe1\x7f\x6d\x33\x09\x03\
+\x8b\x88\x6e\x35\xdb\x19\xc0\x6d\xdb\xb6\x5d\xf7\x35\x66\xb3\x19\
+\x16\x8b\xa5\xd6\x38\xef\x37\xc2\x7e\x58\x44\xe4\x54\xd3\xa7\x4f\
+\x97\x4b\x96\x2c\x91\xd5\xd7\x9c\x41\x3e\x75\xea\x94\x7c\xf6\xd9\
+\x67\xe5\xbe\x7d\xfb\x1c\x9e\x35\x87\x81\x45\x44\x4e\x55\x55\x55\
+\x85\xe7\x9f\x7f\x1e\x03\x07\x0e\x94\x47\x8e\x1c\x91\x00\xb0\x62\
+\xc5\x0a\xd9\xbb\x77\x6f\x2c\x5b\xb6\xac\x41\xd7\x12\xf2\x90\x90\
+\x88\x9c\x6a\xe1\xc2\x85\x22\x31\x31\x51\x3e\xf7\xdc\x73\x48\x48\
+\x48\x40\x68\x68\xa8\x3c\x7c\xf8\x30\x3a\x77\xee\x8c\x1f\x7e\xf8\
+\x01\x71\x71\x71\x0e\x9f\x0d\x60\x0d\x8b\x88\x9c\x6e\xd0\xa0\x41\
+\xe2\xcc\x99\x33\xe2\xb9\xe7\x9e\xc3\xaf\xbf\xfe\x8a\xf9\xf3\xe7\
+\xe3\xe8\xd1\xa3\xa2\x21\x61\xc5\x1a\x16\x11\xdd\x12\xbf\xff\xfe\
+\xbb\x5c\xb9\x72\x25\xb2\xb2\xb2\x00\x00\x59\x59\x59\x68\xd1\xa2\
+\x85\x1c\x3d\x7a\xb4\x50\x3b\x72\xe5\x0b\x6b\x58\x44\x74\x2b\x2c\
+\x5d\xba\x54\x3e\xf0\xc0\x03\x98\x36\x6d\x1a\x1e\x7f\xfc\x71\x1c\
+\x3e\x7c\x18\x42\x08\x3c\xfd\xf4\xd3\xe8\xda\xb5\xab\x3c\x74\xe8\
+\x10\x1b\xdd\x3d\x4d\x41\x41\x81\xdc\xbd\x7b\xb7\xbc\xba\x9f\x8a\
+\x4d\x4e\x4e\x8e\xdc\xbf\x7f\xbf\xb4\x0d\x7e\x46\xe4\x49\xf2\xf3\
+\xf3\x61\x36\x9b\xf1\xe3\x8f\x3f\x62\xfa\xf4\xe9\x22\x32\x32\x52\
+\xec\xda\xb5\x4b\x2c\x5f\xbe\x1c\x05\x05\x05\x38\x7d\xfa\x34\x6b\
+\x58\x9e\xe6\x9d\x77\xde\xc1\x84\x09\x13\x70\xea\xd4\xa9\x3a\xbf\
+\x36\xa3\x46\x8d\xc2\x9c\x39\x73\x60\x30\x18\x58\x50\xe4\x71\x86\
+\x0f\x1f\x8e\x13\x27\x4e\x88\xfb\xef\xbf\xbf\x56\x7b\xd5\xd3\x4f\
+\x3f\x2d\x0e\x1c\x38\x80\xce\x9d\x3b\x3b\xbc\x2e\xb6\x61\xb9\x89\
+\xea\xea\x6a\x18\x0c\x86\x3a\xa7\x78\x8f\x1d\x3b\x26\x2f\x5c\xb8\
+\x00\xb3\xd9\x5c\xef\xbc\x6e\x44\xee\x48\x4a\x69\xdf\x5f\xfb\xf4\
+\xe9\x73\xdd\x1d\xd7\xd1\x51\x1a\x58\xc3\x72\x03\x45\x45\x45\x52\
+\x08\x21\x85\x10\x72\xdd\xba\x75\x38\x7b\xf6\x2c\xa2\xa2\xa2\x60\
+\x7b\x4c\x08\x21\xa3\xa2\xa2\x10\x1e\x1e\x8e\xf1\xe3\xc7\x43\x73\
+\xbd\xf1\xc6\x88\xdc\x8c\x10\x02\x42\x08\x39\x70\xe0\x40\x79\xd5\
+\x63\x72\xf4\xe8\xd1\xf6\xbf\x4f\x9d\x3a\x25\x85\x10\x72\xe7\xce\
+\x9d\x0e\xb7\x61\xb1\x86\xe5\x42\x61\x61\x61\x62\xf7\xee\xdd\x52\
+\xab\xd5\x62\xfd\xfa\xf5\x38\x7e\xfc\x38\x26\x4e\x9c\x88\xab\xaf\
+\xad\x52\xab\xd5\x08\x09\x09\x41\xa7\x4e\x9d\x58\xbd\x22\x8f\x73\
+\x6d\xbb\x6b\x7d\xed\xb0\x52\x3a\x9c\x57\x0c\x2c\x57\xd2\x68\x34\
+\x48\x4c\x4c\x14\x00\xd0\xad\x5b\x37\x48\x29\xe1\xe5\xe5\xc5\x82\
+\x21\xe2\x21\xa1\x7b\x33\x1a\x8d\xd8\xb0\x61\x83\xec\xd1\xa3\x87\
+\xf4\xf7\xf7\x97\x3a\x9d\xce\x7e\xf3\xf2\xf2\x92\xfd\xfb\xf7\xaf\
+\xf7\x0c\x22\xd1\x9d\x84\x35\x2c\x37\xf1\xee\xbb\xef\xca\xf4\xf4\
+\x74\xc4\xc6\xc6\x62\xe2\xc4\x89\xb5\x1a\xd8\xa5\x94\x88\x8a\x8a\
+\xb2\x4f\x91\x44\xe4\x29\x6a\x6a\x6a\x60\x30\x18\xec\xfb\x73\x75\
+\x75\x35\xf4\x7a\x3d\xf4\x7a\xfd\xfa\x0b\x17\x2e\x30\xb0\x3c\xd5\
+\x89\x13\x27\xe0\xed\xed\x8d\xa5\x4b\x97\x22\x26\x26\x86\xed\x55\
+\x74\x5b\xd8\xb3\x67\x0f\x74\x3a\x9d\xbd\x91\x2a\x23\x23\x03\x3e\
+\x3e\x3e\xb5\x1a\xad\x1a\xd2\xbf\x90\x81\xe5\xe2\xc3\x40\x00\x50\
+\x28\x14\x98\x33\x67\x0e\x2e\x5d\xba\x84\x6d\xdb\xb6\x21\x2a\x2a\
+\xaa\xce\xf8\x40\x0a\x85\x02\x0a\x85\x82\x5d\x1b\xc8\x63\xec\xdc\
+\xb9\xf3\xa6\xe3\x5c\x99\x4c\x26\xc4\xc5\xc5\x39\x3c\x2f\x21\x03\
+\xcb\x85\x82\x82\x82\xa4\x4e\xa7\x03\x60\x3d\x1b\x58\x5e\x5e\x8e\
+\xcd\x9b\x37\xe3\xbd\xf7\xde\x93\x57\x77\x61\x30\x9b\xcd\xe8\xd5\
+\xab\x17\x56\xae\x5c\x29\xbc\xaf\x9d\xc8\x81\xc8\x4d\xf5\xed\xdb\
+\xb7\xc9\x7f\x5d\x19\x58\x2e\xb4\x78\xf1\x62\x5c\x7d\xe1\xa7\xad\
+\x06\x65\xf9\x63\xb2\x80\xab\x85\x86\x86\xf2\x0c\x22\xdd\xf1\x18\
+\x58\x2e\x34\x76\xec\x58\x1e\xdf\x11\x31\xb0\x3c\xcf\xba\x75\xeb\
+\x64\x41\x41\x01\xb4\x5a\x2d\xcc\x66\xb3\xfd\xd2\x06\x5b\xad\xcb\
+\xcb\xcb\x0b\x6d\xdb\xb6\x45\xf7\xee\xdd\x11\x1e\x1e\x2e\x94\x8e\
+\xcc\xed\x48\xc4\xc0\x22\x67\x38\x73\xe6\x0c\xd6\xac\x59\x83\x13\
+\x27\x4e\xa0\x67\xcf\x9e\x68\xd5\xaa\x15\x2e\x5e\xbc\x88\x1d\x3b\
+\x76\x20\x2c\x2c\x0c\x5d\xbb\x76\xc5\x0f\x3f\xfc\x80\x66\xcd\x9a\
+\x61\xe6\xcc\x99\x72\xd4\xa8\x51\x82\xdd\x1c\xe8\x4e\xc3\x8e\xa3\
+\x6e\xa2\x4b\x97\x2e\xd0\x6a\xb5\xf8\xe8\xa3\x8f\x90\x99\x99\x89\
+\x55\xab\x56\x21\x23\x23\x03\xd9\xd9\xd9\xb0\x58\x2c\x48\x4e\x4e\
+\xc6\x96\x2d\x5b\xe0\xe7\xe7\x87\x37\xde\x78\x03\xbf\xfc\xf2\x8b\
+\x64\xa9\x11\x6b\x58\xe4\x12\xab\x57\xaf\xc6\xd9\xb3\x67\xf1\xf0\
+\xc3\x0f\xa3\x59\xb3\x66\xf6\xc7\xfb\xf7\xef\x8f\xca\xca\x4a\x6c\
+\xda\xb4\x09\x93\x26\x4d\x42\xbf\x7e\xfd\xb0\x70\xe1\x42\x54\x54\
+\x54\xb0\xd0\xc8\x63\xe4\xe6\xe6\xca\xe5\xcb\x97\xa3\xb0\xb0\x10\
+\xa6\xab\x26\x78\xd5\xeb\xf5\x58\xb2\x64\x09\xba\x75\xeb\xe6\x50\
+\x7b\x2e\x03\xcb\x4d\x74\xe8\xd0\x01\x97\x2f\x5f\xc6\x87\x1f\x7e\
+\x88\x29\x53\xa6\x20\x20\x20\x00\x7a\xbd\x1e\xab\x57\xaf\x46\x65\
+\x65\x25\x22\x22\x22\x50\x55\x55\x85\xa2\xa2\x22\xf8\xf9\xf9\xa1\
+\x21\x93\x4f\x12\xb9\x52\x56\x56\x96\x1c\x3e\x7c\x38\xaa\xea\x99\
+\xf9\x5c\x4a\x89\xf2\x72\x87\x27\x7e\x66\x60\xb9\x8b\xa9\x53\xa7\
+\xfe\xd3\x6c\x36\xa7\x2d\x5f\xbe\x1c\x6b\xd6\xac\x81\x8f\x8f\x0f\
+\xaa\xaa\xaa\x20\x84\xc0\x84\x09\x13\x30\x63\xc6\x0c\x94\x96\x96\
+\x22\x2c\x2c\x0c\x73\xe7\xce\x45\x87\x0e\x1d\x78\x86\x91\x3c\xc2\
+\x57\x5f\x7d\x85\xca\xca\x4a\xac\x5e\xbd\x1a\x23\x47\x8e\x6c\xd4\
+\x7e\xcb\xc0\x72\x13\x41\x41\x41\xd3\xd2\xd3\xd3\xa7\x4d\x9a\x34\
+\x49\x96\x96\x96\xa2\xa6\xa6\x06\x2a\x95\x0a\x41\x41\x41\x88\x88\
+\x88\x10\xb6\x1e\xee\xef\xbe\xfb\x2e\x7b\xbb\x93\x47\x69\xd3\xa6\
+\x0d\x00\x34\x3a\xac\x18\x58\x2e\xf6\xed\xb7\xdf\xca\xb0\xb0\x30\
+\x74\xec\xd8\x51\x1c\x3b\x76\x4c\x9e\x3b\x77\x0e\x4a\xa5\x12\x0a\
+\x85\x02\x4a\xa5\x12\x52\x4a\x94\x95\x95\xa1\xa4\xa4\x44\x36\x6f\
+\xde\x1c\x9d\x3b\x77\x66\x77\x06\xf2\x38\x69\x69\x69\xe2\xe8\xd1\
+\xa3\xf2\xf1\xc7\x1f\x97\x5f\x7c\xf1\x85\xd0\x6a\xb5\x0c\x2c\x4f\
+\xd4\xab\x57\x2f\x8c\x1d\x3b\x16\x2b\x57\xae\xc4\xcc\x99\x33\xb1\
+\x61\xc3\x86\x7a\xaf\xbd\xb2\x58\x2c\xe8\xdb\xb7\xaf\xed\xc2\x51\
+\x16\x1c\x79\x94\xb1\x63\xc7\xca\x55\xab\x56\x01\x40\xad\x0b\xa1\
+\x6d\x32\x33\x33\x31\x70\xe0\x40\x36\xba\xbb\xbb\xd2\xd2\xd2\x7c\
+\xad\x56\x1b\x27\xa5\xc4\xb2\x65\xcb\xc4\xe2\xc5\x8b\xf7\xab\xd5\
+\xea\xe1\x4a\xa5\xb2\x50\x08\x01\xa3\xd1\xd8\x57\xa9\x54\xee\x52\
+\x28\x14\xb0\x58\x2c\xe0\x75\x84\xe4\x89\x06\x0d\x1a\x84\xa0\xa0\
+\xa0\x7a\x9b\x32\xaa\xab\xab\xd1\xb1\x63\x47\xd6\xb0\x3c\x41\x70\
+\x70\x70\x9c\xed\x7e\xb3\x66\xcd\x60\x32\x99\xa6\x6d\xdd\xba\xf5\
+\x44\x4e\x4e\x0e\x2e\x5c\xb8\x80\x97\x5e\x7a\x09\x07\x0e\x1c\xc0\
+\xb7\xdf\x7e\x8b\x79\xf3\xe6\xc1\xcf\xcf\x8f\x8d\x57\xe4\x71\x86\
+\x0d\x1b\x26\x86\x0d\x1b\xd6\x24\xeb\x62\xc7\x51\x37\x51\x5c\x5c\
+\x2c\x47\x8d\x1a\xb5\xf3\xe5\x97\x5f\xc6\x6f\xbf\xfd\x86\x8c\x8c\
+\x0c\x1c\x3d\x7a\x14\xd1\xd1\xd1\xd8\xb0\x61\x03\x3e\xfd\xf4\x53\
+\xfb\x70\x34\x44\xee\xce\x6c\x36\xdb\xc7\xb9\xb2\x58\x2c\xf6\xbf\
+\xaf\xbd\x99\x4c\xa6\x06\x8d\xe9\xce\xc0\x72\x13\x9f\x7e\xfa\x29\
+\xf6\xed\xdb\x87\xcf\x3f\xff\x1c\xef\xbe\xfb\x2e\x00\x6b\x1f\x95\
+\x9e\x3d\x7b\xc2\xd7\xd7\x17\x07\x0f\x1e\x64\x60\x91\xc7\x68\xd5\
+\xaa\x95\x54\xa9\x54\x12\x00\x46\x8e\x1c\x29\x55\x2a\x55\xbd\x37\
+\xb5\x5a\x2d\x33\x33\x33\x39\x6b\x8e\x07\xd6\xb0\xe0\xed\xed\x8d\
+\xce\x9d\x3b\xe3\xf2\xe5\xcb\xb5\x7f\x55\xfe\x68\xc3\x22\xf2\x14\
+\xcb\x97\x2f\xb7\xef\xc7\x2f\xbe\xf8\x22\x92\x92\x92\xea\x6d\xc3\
+\xfa\x63\x00\x3f\x87\xd7\xcb\xc0\x72\x13\x91\x91\x91\xd0\xeb\xf5\
+\x28\x2a\x2a\xb2\xf7\x5b\xd1\x6a\xb5\xc8\xcb\xcb\x83\xc1\x60\x40\
+\xe7\xce\x9d\x39\xa6\x3b\x79\x8c\x41\x83\x06\xd9\xd3\xa9\x47\x8f\
+\x1e\xa2\x47\x8f\x1e\x4d\xb2\x5e\x7e\x03\xdc\xc4\xc4\x89\x13\xb1\
+\x67\xcf\x1e\x8c\x1d\x3b\x16\x89\x89\x89\x00\xac\xd7\x17\x16\x14\
+\x14\x20\x32\x32\x12\xcf\x3f\xff\x3c\x07\xf0\xa3\x3b\x1e\x03\xcb\
+\x4d\xb4\x6d\xdb\x56\x64\x64\x64\xcc\xfb\xe8\xa3\x8f\xd2\x16\x2f\
+\x5e\x0c\x00\xf8\xcf\x7f\xfe\x83\x49\x93\x26\x61\xfa\xf4\xe9\xcf\
+\x06\x06\x06\x2e\x65\x29\x91\xa7\xaa\xa9\xa9\xc1\xd7\x5f\x7f\x2d\
+\x8b\x8b\x8b\x61\x30\x18\xec\x0d\xed\x35\x35\x35\x18\x33\x66\x0c\
+\xda\xb7\x6f\xcf\x7e\x58\x9e\x26\x28\x28\x68\xda\xf4\xe9\xd3\xa7\
+\x4d\x9f\x3e\x9d\x85\x41\xb7\x8d\x8b\x17\x2f\x22\x25\x25\x45\xe6\
+\xe6\xe6\xd6\x7b\xe2\x28\x26\x26\x06\xed\xdb\xb7\x67\x0d\xcb\xdd\
+\x19\x8d\x46\x1c\x3d\x7a\x54\xda\x46\x17\xbd\x1e\x29\x25\x7c\x7c\
+\x7c\x10\x19\x19\x29\x78\x1d\x21\x79\x9a\xa5\x4b\x97\xca\x9c\x9c\
+\x1c\xbc\xf0\xc2\x0b\x78\xe4\x91\x47\x30\x74\xe8\x50\x9c\x3f\x7f\
+\x1e\xa9\xa9\xa9\x48\x48\x48\xc0\x63\x8f\x3d\xe6\xf0\x4e\xcd\xc0\
+\x72\xa1\x53\xa7\x4e\xc9\xe8\xe8\x68\x68\xb5\x5a\x08\x21\x20\x84\
+\x80\x8f\x8f\x0f\xa4\x94\xb8\x7c\xf9\xb2\xfd\x32\x1d\x8b\xc5\x82\
+\x3e\x7d\xfa\x60\xed\xda\xb5\xb5\xc6\xca\x22\xf2\x04\xc5\xc5\xc5\
+\x00\x80\x45\x8b\x16\xe1\xcb\x2f\xbf\xb4\x3f\xfe\xd6\x5b\x6f\xe1\
+\xee\xbb\xef\x46\xaf\x5e\xbd\x64\x6c\x6c\x2c\x0f\x09\xdd\x5d\x78\
+\x78\xb8\x28\x2a\x2a\x92\x00\x20\x84\x40\x45\x45\x05\x06\x0f\x1e\
+\x0c\x5f\x5f\x5f\x9c\x3c\x79\x52\x94\x94\x94\x48\x5b\x8d\x4a\xab\
+\xd5\xc2\xd7\xd7\x97\x85\x46\x1e\xc7\x76\xd6\xbb\xb2\xb2\xd2\x7e\
+\x79\xd9\x81\x03\x07\xec\x3f\xc8\x0d\x99\x01\x9a\x81\xe5\x42\x4a\
+\xa5\xb2\x56\x63\xe3\x1f\x1d\xe9\xa0\xd1\x68\xa0\xd3\xe9\x10\x11\
+\x11\xc1\xe3\x3f\xf2\x78\x23\x47\x8e\x44\x7a\x7a\x3a\x5e\x7a\xe9\
+\x25\xcc\x99\x33\x07\x1d\x3b\x76\xc4\x80\x01\x03\x00\x00\x81\x81\
+\x81\x68\xd9\xb2\x25\x03\xcb\x13\xb1\x73\x28\xdd\x8e\x7c\x7c\x7c\
+\xf2\x8b\x8a\x8a\x62\xc3\xc2\xc2\x04\x00\x7c\xfc\xf1\xc7\x72\xf6\
+\xec\xd9\x30\x18\x0c\x78\xed\xb5\xd7\x70\xdf\x7d\xf7\xb1\x0d\xcb\
+\x13\x69\x34\x9a\x72\xa5\x52\xd9\x9c\x1d\x44\xe9\x76\x92\x96\x96\
+\x16\xbb\x62\xc5\x0a\x7b\x57\x86\xc4\xc4\x44\x61\xeb\x6b\xd8\x50\
+\xfc\x66\xb8\xd0\xef\xbf\xff\x2e\xfb\xf7\xef\x0f\x95\x4a\x05\x21\
+\x04\x4c\x26\x13\x8e\x1f\x3f\x0e\xa5\x52\x89\x07\x1f\x7c\x50\x56\
+\x57\x57\x43\x08\x01\xb3\xd9\x8c\xee\xdd\xbb\x63\xe1\xc2\x85\xc2\
+\x36\xb5\x3d\x91\xa7\x88\x8f\x8f\xc7\x8a\x15\x2b\x50\x5c\x5c\x2c\
+\x1d\xed\x6f\xc5\xc0\x72\x43\x3a\x9d\xae\xc3\xd0\xa1\x43\x4f\x5c\
+\xdd\x83\x7d\xf4\xe8\xd1\x00\x50\x6b\x66\x11\x29\x25\x3a\x74\xe8\
+\x00\x8e\x36\x4a\x9e\x68\xc2\x84\x09\x22\x37\x37\x57\xf6\xee\xdd\
+\x1b\x1b\x37\x6e\x94\x5d\xba\x74\xb1\x77\xcf\x91\x52\x42\xa7\xd3\
+\xd5\x3b\x70\x25\x03\xcb\xcd\x04\x04\x04\x14\xa6\xa7\xa7\xb3\x61\
+\x9d\x6e\x6b\xc3\x87\x0f\x97\x1b\x36\x6c\x00\x00\xdb\x85\xce\xb5\
+\x46\x67\xd8\xb2\x65\x4b\xad\x6b\x0f\x19\x58\x44\xe4\x32\x6f\xbf\
+\xfd\x36\xa6\x4e\x9d\x8a\x73\xe7\xce\xd5\x79\xce\x64\x32\xa1\x47\
+\x8f\x1e\x0e\xcf\xf3\xc5\xc0\x22\x22\xa7\x5a\xbc\x78\x31\x16\x2d\
+\x5a\x04\x29\x65\xa3\x8f\x26\x38\x80\x1f\x11\x39\x95\xed\xea\x8c\
+\xa6\xe8\xb6\xc3\xc0\x22\x22\xa7\x9a\x32\x65\x0a\xe2\xe3\xe3\x91\
+\x96\x96\x26\xaf\x3e\x99\xf4\x57\xf0\x90\xd0\x4d\x48\x29\xf1\xeb\
+\xaf\xbf\xca\x82\x82\x02\x54\x55\x55\xd5\x1a\xe7\x5a\x4a\x89\xd0\
+\xd0\x50\xf4\xee\xdd\x5b\xb0\x8f\x16\x79\x9a\x8f\x3f\xfe\x18\x05\
+\x05\x05\xc8\xcb\xcb\xc3\xc6\x8d\x1b\xa5\x97\x97\x97\xfd\x62\xff\
+\xca\xca\x4a\xac\x5b\xb7\x0e\xf1\xf1\xf1\x6c\x74\xf7\x24\x19\x19\
+\x19\x32\x2d\x2d\x0d\xbf\xff\xfe\x3b\xee\xb9\xe7\x9e\x5a\xa3\x8b\
+\x5a\x2c\x16\xc4\xc5\xc5\x21\x21\x21\x81\xa3\x8e\x92\xc7\xa9\xa8\
+\xa8\x80\xc5\x62\x81\x8f\x8f\x0f\xca\xcb\x6b\xb7\xaf\x57\x56\x56\
+\xa2\xba\xba\x9a\x35\x2c\x4f\xb3\x61\xc3\x06\x94\x94\x94\x60\xd3\
+\xa6\x4d\x48\x48\x48\xa8\xf3\x6b\xa3\x50\x28\xa0\xd1\x68\x58\x50\
+\xe4\x71\xde\x7f\xff\x7d\xf1\xfe\xfb\xef\x37\xc9\xba\xd8\x86\xe5\
+\x26\xfa\xf5\xeb\x87\xc0\xc0\x40\x68\x34\x1a\x68\xb5\x5a\xe8\x74\
+\xba\x5a\x37\x86\x15\x79\xba\xcf\x3f\xff\x5c\x8e\x19\x33\x46\xf6\
+\xea\xd5\x4b\xd6\xd4\xd4\xe0\xa9\xa7\x9e\x92\x6f\xbd\xf5\x96\xb4\
+\x4d\x07\xc6\x1a\x96\x07\x09\x08\x08\x40\x78\x78\x38\x46\x8c\x18\
+\x81\xd1\xa3\x47\xcb\xa0\xa0\x20\x7b\x3b\x96\xad\xa7\xfb\xd0\xa1\
+\x43\x05\xc7\x75\x27\x4f\x94\x94\x94\x24\xb3\xb2\xb2\xec\x7f\xd7\
+\xd4\xd4\xa0\x7d\xfb\xf6\x58\xb2\x64\x09\x9e\x7c\xf2\x49\xd9\xb1\
+\x63\x47\xb6\x61\x79\x92\xdc\xdc\x5c\x9c\x3b\x77\x0e\xe1\xe1\xe1\
+\xd8\xb3\x67\x0f\xae\x1e\x85\xd4\x76\x2d\x61\x4a\x4a\x0a\x0b\x8a\
+\x3c\xce\xea\xd5\xab\x65\x76\x76\x36\xa6\x4c\x99\x82\x7e\xfd\xfa\
+\x21\x25\x25\x05\x26\x93\x29\x32\x29\x29\x09\xb3\x67\xcf\x46\x49\
+\x49\x89\xc3\xd3\xd5\x33\xb0\xdc\x80\x94\x12\xf3\xe7\xcf\x17\xf3\
+\xe7\xcf\x67\x61\xd0\x6d\xe7\x87\x1f\x7e\x80\x94\x12\x0b\x17\x2e\
+\xc4\x96\x2d\x5b\x6c\xfb\x7c\x64\x48\x48\x08\x00\xe0\xca\x95\x2b\
+\x3c\x24\xf4\x04\x59\x59\x59\xb2\x75\xeb\xd6\x88\x8e\x8e\x16\x07\
+\x0f\x1e\x94\xbf\xfd\xf6\x1b\xd4\x6a\x75\xbd\x81\x16\x18\x18\x88\
+\xae\x5d\xbb\x0a\x5e\x00\x4d\x9e\xc6\xd6\x61\x54\xa5\x52\xd9\xef\
+\x0b\x21\x0a\xcf\x9f\x3f\x0f\x00\x0d\x9a\xbe\x8e\x81\xe5\xda\xe3\
+\x7a\x0c\x19\x32\x04\x9b\x36\x6d\xc2\xeb\xaf\xbf\x8e\xed\xdb\xb7\
+\x5f\xf7\xb5\xdd\xbb\x77\xc7\xae\x5d\xbb\x38\x4c\x32\x79\x8c\xf3\
+\xe7\xcf\xcf\xf3\xf5\xf5\x9d\x76\xd7\x5d\x77\x01\x00\xb6\x6e\xdd\
+\x6a\xef\x96\xa3\x50\x28\x0a\x37\x6f\xde\x8c\xa0\xa0\x20\x8e\x38\
+\xea\x29\x2a\x2b\x2b\x85\x5a\xad\x86\x94\x12\x5f\x7e\xf9\xa5\xb8\
+\x51\x2f\x60\x95\x4a\xc5\x89\x54\xc9\xa3\xb4\x68\xd1\x22\x2d\x3e\
+\x3e\x3e\x2d\x27\x27\x47\x2c\x59\xb2\x44\x8e\x1a\x35\x0a\xc9\xc9\
+\xc9\x00\x80\xf9\xf3\xe7\xcb\xb7\xdf\x7e\x1b\x2f\xbc\xf0\x02\x3a\
+\x77\xee\xcc\x11\x47\x3d\x81\x8f\x8f\x8f\xfd\xbe\x46\xa3\x61\xd7\
+\x05\xba\xed\xf8\xfa\xfa\x42\xa9\x54\x62\xcb\x96\x2d\x78\xe3\x8d\
+\x37\xb0\x6a\xd5\x2a\x00\xc0\xc2\x85\x0b\x31\x73\xe6\x4c\xbc\xf6\
+\xda\x6b\x0d\x6a\xe6\x60\x60\xb9\x99\xfc\xfc\x7c\x59\x58\x58\x08\
+\xbd\x5e\x5f\xab\x5b\x43\x48\x48\x08\x1e\x7d\xf4\x51\x5e\x9a\x43\
+\x1e\xa9\x5d\xbb\x76\x62\xc5\x8a\x15\x58\xbe\x7c\xb9\xfd\x31\x47\
+\x07\xed\x63\x60\xb9\xa1\xf2\xf2\xf2\xbe\x53\xa6\x4c\xd9\xb9\x79\
+\xf3\x66\x18\x0c\x06\x68\xb5\x5a\x18\x0c\x06\xfb\xf3\x8f\x3c\xf2\
+\x08\x12\x12\x12\x38\x2f\x21\x79\x94\x8a\x8a\x0a\x1c\x3c\x78\x50\
+\xea\xf5\xfa\x7a\x9f\x37\x9b\xcd\xb8\xe7\x9e\x7b\x84\xbf\xbf\x3f\
+\x03\xcb\x93\xcc\x9b\x37\x6f\xe7\x9a\x35\x6b\x90\x9e\x9e\x8e\x11\
+\x23\x46\x20\x2a\x2a\x0a\xab\x57\xaf\xc6\xc9\x93\x27\x91\x9b\x9b\
+\x8b\x15\x2b\x56\x3c\xcb\xb0\x22\x4f\x93\x97\x97\x87\xfb\xee\xbb\
+\xef\x86\xaf\xc9\xc8\xc8\x90\x29\x29\x29\xec\x38\xea\x49\xce\x9c\
+\x39\x83\xe0\xe0\x60\xa4\xa6\xa6\xc2\x76\xba\xb7\xbc\xbc\x1c\x69\
+\x69\x69\xf0\xf2\xf2\xc2\xe4\xc9\x93\x3f\xfe\xec\xb3\xcf\x96\x72\
+\x12\x0a\xf2\x24\xbd\x7a\xf5\x42\x46\x46\x46\x87\xaa\xaa\xaa\x13\
+\xf5\x3d\x6f\xb1\x58\xd0\xb2\x65\x4b\x36\xba\x7b\x9a\xbe\x7d\xfb\
+\xe2\x8b\x2f\xbe\xc0\xa6\x4d\x9b\x30\x64\xc8\x10\x04\x06\x06\x62\
+\xed\xda\xb5\x38\x7f\xfe\x3c\x8c\x46\x63\x9d\x21\x67\x88\x3c\x81\
+\x56\xab\x45\x40\x40\x40\x61\x40\x40\x40\x93\xcc\x5d\xc0\xc0\x72\
+\x13\xe3\xc7\x8f\x17\x7d\xfb\xf6\x95\x57\xae\x5c\x41\x9b\x36\x6d\
+\xc4\xf2\xe5\xcb\x65\x6a\x6a\x2a\xbe\xfb\xee\x3b\xc4\xc4\xc4\x60\
+\xee\xdc\xb9\xf6\x69\xbe\x89\xee\x54\x1c\xad\xc1\x4d\x0c\x1f\x3e\
+\x5c\x76\xea\xd4\xc9\xfe\x77\x4a\x4a\x8a\x28\x2b\x2b\x13\x52\x4a\
+\xf1\xd3\x4f\x3f\x89\xe8\xe8\x68\xce\xae\x43\x77\x3c\xd6\xb0\xdc\
+\x44\x62\x62\x22\xf2\xf3\xf3\x51\x58\x58\xe8\xf0\x85\xa0\x44\xee\
+\xac\x29\x26\x9d\x60\x60\xb9\xa9\xd8\xd8\x58\x44\x46\x46\x62\xf2\
+\xe4\xc9\x78\xfe\xf9\xe7\x65\x64\x64\x64\xad\x7e\x58\xc1\xc1\xc1\
+\x88\x8f\x8f\xe7\xb5\x84\xc4\x1a\x16\xb9\xde\xdb\x6f\xbf\x8d\xfd\
+\xfb\xf7\x43\xa5\x52\xe1\xcd\x37\xdf\xac\xd5\xc0\x6e\xb1\x58\xd0\
+\xa7\x4f\x1f\xdc\x7f\xff\xfd\xec\x87\x45\x0c\x2c\x72\xbd\x29\x53\
+\xa6\x20\x29\x29\x09\x03\x06\x0c\x80\x9f\x9f\x5f\x9d\xaa\xb4\x4a\
+\xa5\xaa\x75\x29\x0f\x11\x03\x8b\x5c\x66\xe5\xca\x95\xd8\xba\x75\
+\x2b\x12\x13\x13\xe1\x68\xaf\x5f\xa2\x3b\x0d\xcf\x12\xba\x89\x67\
+\x9e\x79\x06\x1d\x3b\x76\xc4\xf6\xed\xdb\x61\x34\x1a\x21\xa5\xac\
+\x73\x23\x62\x0d\x8b\xdc\xc2\xf1\xe3\xc7\x51\x59\x59\x89\x7f\xfc\
+\xe3\x1f\xd8\xba\x75\xab\x6c\xdd\xba\x75\xad\x46\xf7\xbb\xef\xbe\
+\x1b\x2f\xbe\xf8\xa2\xd0\x6a\xb5\x2c\x2c\x62\x60\x91\x6b\xe9\x74\
+\x3a\x0c\x1b\x36\x0c\x5e\x5e\x5e\x30\x99\x4c\xb5\xa6\xf5\xb6\x8d\
+\xd6\xf0\x57\xae\x6e\x27\x62\x60\x51\x93\x1b\x3b\x76\xac\x00\x60\
+\x9f\x78\x82\x88\xea\xe2\x4f\xb6\x1b\xc9\xcf\xcf\x97\x83\x07\x0f\
+\x96\x0a\x85\x42\x0a\x21\xe4\x27\x9f\x7c\x22\x53\x53\x53\xa5\x10\
+\x42\x66\x67\x67\xb3\x11\x8b\x18\x58\x2c\x02\xf7\xb0\x77\xef\x5e\
+\x39\x68\xd0\x20\x5c\xb8\x70\x01\xe9\xe9\xe9\xd6\x8d\xa3\x50\xe0\
+\x9d\x77\xde\x81\xb7\xb7\x37\x56\xaf\x5e\x5d\x6b\x7c\x2c\x22\x06\
+\x16\xb9\xcc\x9a\x35\x6b\x60\x30\x18\xb0\x68\xd1\x22\x3c\xf1\xc4\
+\x13\x00\xac\x83\x9b\x35\x6f\xde\x1c\x4a\xa5\x12\xa5\xa5\xa5\x68\
+\xc8\x0c\xb9\x44\x0c\x2c\x72\x1a\xa3\xd1\x08\xa5\x52\x09\x6f\x6f\
+\x6f\xd4\xd4\xd4\x00\xf8\xb3\x3d\xcb\x62\xb1\xc0\xcb\xcb\x8b\x8d\
+\xee\xc4\xc0\x62\x11\xb8\x4e\x55\x55\x15\xbe\xf8\xe2\x0b\xf9\xdb\
+\x6f\xbf\xc9\x3e\x7d\xfa\xc0\x68\x34\x22\x23\x23\xc3\x1e\x58\xb6\
+\xc9\x27\x6b\x6a\x6a\xd0\xbf\x7f\x7f\xce\x9a\x43\x77\x3c\x9e\x25\
+\x74\xa1\xb2\xb2\x32\x39\x66\xcc\x18\x2c\x5a\xb4\x08\x93\x27\x4f\
+\xc6\xd1\xa3\x47\xb1\x60\xc1\x02\x7c\xf2\xc9\x27\x00\x80\xd9\xb3\
+\x67\xe3\xe2\xc5\x8b\x78\xe6\x99\x67\xf0\xd4\x53\x4f\xf1\xc2\x67\
+\x62\x60\xb1\x08\x5c\xc7\x76\xc8\xa7\x54\x2a\xa1\x56\xab\xf1\xe6\
+\x9b\x6f\x62\xe8\xd0\xa1\xd8\xb5\x6b\x17\xca\xca\xca\xd0\xac\x59\
+\x33\x24\x26\x26\x22\x21\x21\x81\x7d\x1d\x88\x18\x58\xee\xe1\xd2\
+\xa5\x4b\x38\x7a\xf4\x28\x2c\x16\x0b\x7c\x7c\x7c\xf0\xc4\x13\x4f\
+\x40\xa1\x50\x40\x4a\x09\xa3\xd1\x88\x43\x87\x0e\x49\x1f\x1f\x1f\
+\x84\x87\x87\x0b\xb6\x63\x11\x03\x8b\x5c\xea\xf5\xd7\x5f\xc7\xeb\
+\xaf\xbf\x7e\xc3\xd7\xc4\xc7\xc7\x23\x3b\x3b\x9b\x53\xd5\x13\x03\
+\x8b\x5c\x6b\xfe\xfc\xf9\x18\x31\x62\x44\xad\xcb\x71\xae\xe5\xed\
+\xed\x5d\xce\x31\xdd\x89\x81\x45\x2e\xe7\xed\xed\x8d\xf0\xf0\x70\
+\xb6\x53\x11\xdd\x04\x1b\x44\x5c\xc8\x56\xa3\xb2\x75\x63\x20\x22\
+\xd6\xb0\xdc\x56\xcb\x96\x2d\xc5\x67\x9f\x7d\x26\x1f\x7c\xf0\x41\
+\x16\x06\x11\x03\xcb\xbd\xf9\xf8\xf8\x60\xfc\xf8\xf1\x3c\x14\x24\
+\xe2\x21\x21\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\x62\
+\x60\x59\xd9\xae\x87\x13\x42\x70\x34\x81\xeb\x50\xab\xd5\x50\x2a\
+\x95\xd0\x68\x34\x2c\x0c\x72\xaa\xdb\xfd\x02\xf9\x46\x9f\x25\x34\
+\x1a\x8d\x00\x00\xbd\x5e\x8f\x7f\xfd\xeb\x5f\x08\x08\x08\xe0\x50\
+\xbe\xd7\xb0\x58\x2c\xc8\xcb\xcb\x83\xc5\x62\x41\xab\x56\xad\x58\
+\x3e\xe4\x14\x1a\x8d\x06\xc7\x8e\x1d\x03\x60\xed\xdb\xa7\xd1\x68\
+\x3a\xdc\x8a\x1f\xe3\xeb\x55\x54\xa4\x94\x4d\x3e\x47\x81\x68\xec\
+\x7c\x77\xf1\xf1\xf1\x32\x37\x37\xd7\x5a\x5d\xe3\x85\xb9\xd7\xe5\
+\x8c\x8d\x47\x54\xdf\x8f\xa3\xcd\xab\xaf\xbe\x8a\x80\x80\x00\xe7\
+\xd5\x76\x54\x2a\x64\x65\x65\x21\x24\x24\x04\x31\x31\x31\xb5\x46\
+\xc4\x35\x18\x0c\x78\xf3\xcd\x37\x9b\x7c\x87\x6f\x74\x0d\xab\x7d\
+\xfb\xf6\xc8\xcd\xcd\xb5\x0f\x91\x42\x44\xae\x21\x84\x80\xc9\x64\
+\x82\xd1\x68\x84\x4e\xa7\x43\x60\x60\x20\xfc\xfc\xfc\x9c\x1a\x58\
+\xe1\xe1\xe1\x08\x0a\x0a\x82\xbf\xbf\x7f\xad\xb0\x74\xd6\xd5\x1b\
+\x8d\xae\x61\x15\x15\x15\xc9\xcc\xcc\x4c\xe8\x74\x3a\xa7\x16\x0e\
+\x11\xdd\x3c\xb0\xf4\x7a\x3d\x4a\x4b\x4b\xd1\xa9\x53\x27\x0c\x1e\
+\x3c\xd8\xa5\x55\x7a\xb7\x3b\x24\xe4\x61\x0e\x11\xdd\xd2\x50\x6e\
+\x6c\x0d\x8b\x88\xe8\x56\x61\x2b\x39\x11\x31\xb0\x88\x88\x18\x58\
+\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\x88\x81\x45\x44\
+\xc4\xc0\x22\x22\x62\x60\x11\x11\x03\x8b\x88\x88\x81\x45\x44\xc4\
+\xc0\x22\x22\x06\x16\x11\x11\x03\x8b\x88\x88\x81\x45\x44\x0c\x2c\
+\x22\x22\x06\x16\x11\x11\x03\x8b\x88\x18\x58\x44\x44\x0c\x2c\x22\
+\x22\x06\x16\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\x62\
+\x60\x11\x11\x31\xb0\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\
+\x11\x11\x03\x8b\x45\x40\x44\x0c\x2c\x22\x22\x06\x16\x11\x31\xb0\
+\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\x62\x60\x11\x11\x31\xb0\x88\
+\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\x88\
+\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x03\x8b\x88\x88\x81\
+\x45\x44\xc4\xc0\x22\xa2\xdb\xc8\xff\x03\x94\x2f\xf5\x90\x11\xa7\
+\x53\x72\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\
+"
+
+qt_resource_name = "\
+\x00\x08\
+\x0c\x35\x75\x76\
+\x00\x68\
+\x00\x65\x00\x6c\x00\x70\x00\x50\x00\x72\x00\x65\x00\x66\
+\x00\x13\
+\x05\xdd\x1a\x07\
+\x00\x54\
+\x00\x65\x00\x72\x00\x72\x00\x61\x00\x69\x00\x6e\x00\x45\x00\x78\x00\x74\x00\x65\x00\x6e\x00\x64\x00\x73\x00\x31\x00\x2e\x00\x70\
+\x00\x6e\x00\x67\
+"
+
+qt_resource_struct = "\
+\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x01\
+\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x02\
+\x00\x00\x00\x16\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\
+"
+
+def qInitResources():
+    QtCore.qRegisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)
+
+def qCleanupResources():
+    QtCore.qUnregisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)
+
+qInitResources()

Added: rl/trunk/editors/Lockenwickler/src/media/help/TerrainExtends1.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/help/TerrainExtends1.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/help/help.qrc
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/help/help.qrc	2009-05-03 11:47:29 UTC (rev 4914)
+++ rl/trunk/editors/Lockenwickler/src/media/help/help.qrc	2009-05-03 15:20:21 UTC (rev 4915)
@@ -0,0 +1,5 @@
+<RCC>
+  <qresource prefix="helpPref" >
+    <file>TerrainExtends1.png</file>
+  </qresource>
+</RCC>

Added: rl/trunk/editors/Lockenwickler/src/media/help/help_rc.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/help/help_rc.py	2009-05-03 11:47:29 UTC (rev 4914)
+++ rl/trunk/editors/Lockenwickler/src/media/help/help_rc.py	2009-05-03 15:20:21 UTC (rev 4915)
@@ -0,0 +1,550 @@
+# -*- coding: utf-8 -*-
+
+# Resource object code
+#
+# Created: So Mai 3 16:15:12 2009
+#      by: The Resource Compiler for PyQt (Qt v4.4.1)
+#
+# WARNING! All changes made in this file will be lost!
+
+from PyQt4 import QtCore
+
+qt_resource_data = "\
+\x00\x00\x1f\xcf\
+\x89\
+\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\
+\x00\x01\x2c\x00\x00\x01\x2c\x08\x06\x00\x00\x00\x79\x7d\x8e\x75\
+\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\
+\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\
+\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\
+\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xd9\x05\x03\
+\x0e\x07\x1d\x05\x69\x10\xcd\x00\x00\x00\x19\x74\x45\x58\x74\x43\
+\x6f\x6d\x6d\x65\x6e\x74\x00\x43\x72\x65\x61\x74\x65\x64\x20\x77\
+\x69\x74\x68\x20\x47\x49\x4d\x50\x57\x81\x0e\x17\x00\x00\x1f\x2a\
+\x49\x44\x41\x54\x78\xda\xed\xdd\x7b\x54\x54\xd5\xe2\x07\xf0\xef\
+\x9e\x07\x33\x03\x08\x08\xa2\x80\x8a\x82\x8f\x2b\x3d\x88\x04\xd3\
+\x82\x34\xd1\xf4\x8a\x21\x6a\xa9\xf9\xae\x44\xcb\x5c\xb6\x6e\x4f\
+\x5c\xf9\x08\xb3\x5c\x5e\xb3\xd2\x5b\x5e\xcb\x52\xcb\x65\xbe\x53\
+\x54\x0c\xf2\x91\x52\x5e\xee\x8f\x92\x5a\x1a\x3e\x4b\xe0\x9a\x1a\
+\x82\x0a\x2a\x8c\x03\xf3\xd8\xbf\x3f\xa6\x99\x44\x50\x87\x60\x9c\
+\x19\xfd\x7e\xd6\x9a\xe5\x30\x33\xe7\xcc\xb8\xcf\x99\xef\xec\xb3\
+\xcf\x3e\x7b\x0b\x29\x25\x88\x88\x3c\x81\x82\x45\x40\x44\x0c\x2c\
+\x22\x22\x06\x16\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\
+\x62\x60\x11\x11\x31\xb0\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\
+\x60\x11\x11\x31\xb0\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\
+\x11\x11\x03\x8b\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x06\x16\x11\
+\x11\x03\x8b\x88\x88\x81\x45\x44\x0c\x2c\x22\x22\x06\x16\x11\x11\
+\x03\x8b\x88\x18\x58\x44\x44\x0c\x2c\x22\x22\x06\x16\x11\x31\xb0\
+\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\
+\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x03\x8b\x88\x88\
+\x81\x45\x44\xc4\xc0\x22\x22\x06\x16\x11\x11\x03\x8b\x88\xe8\x56\
+\x07\x96\x94\x92\x25\x48\x44\xb7\x8c\x68\x6c\xe8\x64\x66\x66\xca\
+\xb9\x73\xe7\xe2\xd2\xa5\x4b\x2c\x4d\x22\x57\x7e\x99\x85\x80\xc1\
+\x60\x40\x79\x79\x39\x1e\x7e\xf8\x61\xcc\x9b\x37\x0f\xbe\xbe\xbe\
+\x4e\x7d\xcf\xea\xea\x6a\x28\x14\x0a\xa8\xd5\xea\x5a\x8f\x5b\x2c\
+\x16\xb4\x6d\xdb\x56\x34\xf5\xfb\xa9\x1a\xbb\x82\x75\xeb\xd6\xe1\
+\xbf\xff\xfd\x2f\xf7\x16\x22\x37\x92\x91\x91\x81\xc0\xc0\x40\xf8\
+\xf9\xf9\x39\xef\xf0\x4c\xa1\xc0\xc9\x93\x27\xa1\xd3\xe9\xd0\xa2\
+\x45\x8b\x5a\x47\x5c\x57\xae\x5c\xc1\x47\x1f\x7d\xd4\xe4\xef\xd9\
+\xe8\xc0\xaa\xae\xae\x06\x00\x68\xb5\x5a\x74\xe9\xd2\xa5\x4e\xd2\
+\x12\xd1\xad\xa1\x50\x28\xf0\xeb\xaf\xbf\xe2\xfc\xf9\xf3\x08\x0c\
+\x0c\x44\x5a\x5a\x1a\x5a\xb5\x6a\x25\x9c\xf5\x7e\x1a\x8d\x06\xb3\
+\x67\xcf\x96\x51\x51\x51\x78\xfc\xf1\xc7\x85\xc9\x64\xb2\x3f\x27\
+\xa5\x8c\x74\xc6\x7b\x36\x3a\xb0\x6c\xa9\x1a\x10\x10\x80\xec\xec\
+\x6c\xa7\x16\x10\x11\xdd\xd8\x90\x21\x43\x64\x46\x46\x06\x74\x3a\
+\x1d\xfc\xfd\xfd\xe1\xef\xef\xef\xd4\xf7\x53\x2a\x95\xd0\x6a\xb5\
+\xf0\xf1\xf1\xb9\xf6\xa9\x42\xa7\x84\x72\x53\xad\x48\x4a\x69\xaf\
+\x6d\x11\x91\x6b\x98\xcd\xe6\xdb\xbb\x16\xc9\x4d\x4c\x44\x0c\x2c\
+\x22\x22\x06\x16\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\
+\x62\x60\x11\x11\x31\xb0\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\
+\x60\x11\x11\x31\xb0\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\
+\x11\x11\x03\x8b\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x06\x16\x11\
+\x11\x03\x8b\x88\x88\x81\x45\x44\x0c\x2c\x22\x22\x06\x16\x11\x11\
+\x03\x8b\x88\x18\x58\x44\x44\x0c\x2c\x22\x22\x06\x16\x11\x31\xb0\
+\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\
+\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\x11\x91\xfb\xaa\xa8\xa8\
+\x88\x64\x60\x11\x91\x47\xe8\xde\xbd\xfb\x89\x6f\xbe\xf9\x46\x32\
+\xb0\x88\xc8\xed\x9d\x3b\x77\x0e\xfd\xfa\xf5\xc3\xac\x59\xb3\x9a\
+\x2c\xb4\x18\x58\x44\xe4\x14\x67\xcf\x9e\x15\xe3\xc7\x8f\xc7\x9c\
+\x39\x73\x10\x1f\x1f\x2f\x2b\x2b\x2b\x1b\xbd\x4e\x15\x8b\x95\x88\
+\x9c\x41\xa5\x52\x61\xd9\xb2\x65\x22\x39\x39\x59\xce\x9a\x35\x0b\
+\xe1\xe1\xe1\xf2\x83\x0f\x3e\x40\x68\x68\x28\x2c\x16\x0b\x00\xc0\
+\x64\x32\xe1\x81\x07\x1e\x78\x36\x30\x30\x70\x29\x03\x8b\x88\x5c\
+\x6e\xf0\xe0\xc1\xa2\x79\xf3\xe6\xb2\x6f\xdf\xbe\x18\x33\x66\x4c\
+\x9d\xe7\xb7\x6c\xd9\xf2\xf1\xa0\x41\x83\x18\x58\x44\xe4\x7a\x1f\
+\x7c\xf0\x81\x9c\x39\x73\x26\x42\x43\x43\xb1\x6d\xdb\x36\xb4\x6b\
+\xd7\xae\x83\xc5\x62\xe9\x0b\x00\x52\xca\x48\x3f\x3f\xbf\x69\x3c\
+\x24\x24\x22\x97\x2a\x2e\x2e\x96\x93\x27\x4f\x46\x76\x76\x36\x46\
+\x8c\x18\x81\xb5\x6b\xd7\x8a\xab\x9e\x5e\xfa\x57\xd6\xc9\xc0\x22\
+\x22\xa7\xe8\xd4\xa9\x13\xfc\xfc\xfc\xf0\xf9\xe7\x9f\x63\xdc\xb8\
+\x71\xa2\x29\xd6\xc9\xc0\x22\x22\xa7\x78\xe8\xa1\x87\xb0\x6a\xd5\
+\x2a\xb4\x6d\xdb\x56\x34\xd5\x3a\x19\x58\x44\xe4\x14\x39\x39\x39\
+\xa2\xa9\xd7\xc9\x7e\x58\x44\xe4\x31\x18\x58\x44\xc4\xc0\x22\x22\
+\x62\x60\x11\xd1\x1d\x8b\x8d\xee\x44\xe4\x74\x85\x85\x85\x72\xef\
+\xde\xbd\x28\x2d\x2d\x85\xd9\x6c\xb6\x3f\x5e\x53\x53\x83\xa7\x9e\
+\x7a\x0a\x11\x11\x11\x0e\x35\xd0\x33\xb0\x88\xc8\xa9\xbe\xff\xfe\
+\x7b\x39\x6e\xdc\x38\x1c\x3b\x76\xac\xde\xe7\xbb\x75\xeb\x86\x88\
+\x88\x08\x1e\x12\x12\x91\xeb\xad\x5d\xbb\x16\xc7\x8e\x1d\xc3\x9c\
+\x39\x73\x20\xa5\x14\xd7\xde\x1e\x7b\xec\x31\x87\xbb\x3f\x30\xb0\
+\x88\xc8\xa9\xbc\xbd\xbd\x01\x00\x33\x66\xcc\x68\x74\xbf\x2c\x06\
+\x16\x11\x39\x55\x5a\x5a\x9a\x48\x4a\x4a\xc2\x8c\x19\x33\x1a\x3d\
+\x90\x1f\x03\x8b\x88\x9c\x6a\xc6\x8c\x19\x32\x3b\x3b\x1b\xf3\xe6\
+\xcd\x83\x8f\x8f\x8f\xf4\xf5\xf5\xb5\xdf\x84\x10\x72\xf7\xee\xdd\
+\x0e\x07\x19\x1b\xdd\x89\xc8\xa9\x82\x82\x82\xd0\xa5\x4b\x17\x28\
+\x14\x75\xeb\x47\x55\x55\x55\xd0\xe9\x74\x0e\xaf\x8b\x81\x45\x44\
+\x4e\x35\x6b\xd6\x2c\x31\x6b\xd6\xac\x26\x59\x17\x0f\x09\x89\xa8\
+\x49\x49\x29\xeb\xbd\xcf\xc0\x22\x22\xb7\x23\x84\x40\x87\x0e\x1d\
+\xa4\x10\x42\x0a\x21\xf0\xcc\x33\xcf\xd8\xee\xd7\x7b\xcb\xca\xca\
+\x62\x1b\x16\x11\xb9\xce\x90\x21\x43\x50\x5a\x5a\x0a\xc0\x3a\x2e\
+\x56\x55\x55\x55\xbd\x6d\x58\x06\x83\x01\xad\x5b\xb7\x76\x78\xbd\
+\x0c\x2c\x22\x6a\x72\x0b\x16\x2c\x10\xb6\x43\xc2\xd4\xd4\x54\x91\
+\x9a\x9a\xca\x43\x42\x22\x72\xff\xc3\xc3\xa6\xc4\xc0\x22\x22\x8f\
+\xc1\xc0\x22\x22\x06\x16\x11\x11\x03\x8b\x88\xee\x58\x3c\x4b\x48\
+\x44\x4e\x65\x30\x18\xb0\x65\xcb\x16\x19\x12\x12\x82\x5e\xbd\x7a\
+\x89\x9f\x7e\xfa\x49\x1e\x3a\x74\x08\x6a\xb5\x1a\x0f\x3e\xf8\x20\
+\xc2\xc3\xc3\x1d\x6e\x99\x67\x60\x11\x91\x53\x65\x66\x66\xca\x27\
+\x9f\x7c\x12\x9b\x36\x6d\x42\x41\x41\x81\x4c\x4e\x4e\xc6\xe9\xd3\
+\xa7\x01\x00\x03\x07\x0e\xc4\x8a\x15\x2b\xf6\x07\x07\x07\xc7\xf1\
+\x90\x90\x88\x5c\x2e\x37\x37\x17\x80\xb5\x33\xe9\xfa\xf5\xeb\x71\
+\xfa\xf4\x69\x1c\x3b\x76\x0c\xb3\x67\xcf\xc6\xf6\xed\xdb\x71\xfc\
+\xf8\xf1\x58\x47\xd7\xc5\xc0\x22\x22\xa7\x32\x99\x4c\x00\x80\x53\
+\xa7\x4e\x21\x27\x27\x07\x03\x06\x0c\x40\x44\x44\x84\x18\x37\x6e\
+\x1c\x00\x40\xaf\xd7\x3b\xbc\x2e\x06\x16\x11\x39\xd5\x5d\x77\xdd\
+\x05\x00\x18\x39\x72\x24\xf2\xf2\xf2\xd0\xa7\x4f\x1f\xa8\xd5\x6a\
+\x9c\x3c\x79\x12\x00\xe0\xe7\xe7\xc7\xc0\x22\x22\xf7\x90\x9a\x9a\
+\x2a\x9e\x7c\xf2\x49\xec\xdb\xb7\x0f\xdd\xba\x75\xc3\xc8\x91\x23\
+\x01\x00\xaf\xbc\xf2\x0a\xe2\xe2\xe2\xd0\xa5\x4b\x17\x36\xba\x13\
+\x91\x7b\x50\xa9\x54\x58\xb3\x66\x8d\x58\xb3\x66\x4d\xad\xc7\xbf\
+\xff\xfe\xfb\x06\x5f\xb7\xc3\xc0\x22\xa2\x26\xb7\x71\xe3\x46\x59\
+\x51\x51\x71\xd3\xd7\x19\x8d\x46\x0c\x1a\x34\x08\xad\x5b\xb7\xe6\
+\xbc\x84\x44\xe4\x1a\x93\x27\x4f\xc6\xb9\x73\xe7\x1c\x7a\x6d\x9b\
+\x36\x6d\x1c\x1e\x62\x86\x6d\x58\x44\xd4\xe4\xca\xca\xca\x6a\xcd\
+\x3d\x38\x61\xc2\x04\x44\x45\x45\xe1\xc8\x91\x23\x30\x99\x4c\xc8\
+\xc9\xc9\x41\x9b\x36\x6d\xf0\xc1\x07\x1f\x20\x39\x39\x99\x6d\x58\
+\x44\xe4\x1e\xfe\xfd\xef\x7f\xcb\x65\xcb\x96\xe1\xfc\xf9\xf3\x08\
+\x0c\x0c\x04\x00\xf4\xec\xd9\x13\xeb\xd6\xad\x43\x7c\x7c\x3c\x12\
+\x12\x12\x64\x4c\x4c\x8c\x43\xa1\xc5\x1a\x16\x11\x39\x55\x41\x41\
+\x01\x80\x3f\x27\x54\xb5\xf1\xf1\xf1\x01\x00\x87\x0f\x1d\x19\x58\
+\x44\xe4\x74\x51\x51\x51\x10\x42\x20\x29\x29\xc9\x3e\x6c\xf2\xa1\
+\x43\x87\x30\x62\xc4\x08\xf8\xfa\xfa\xda\x6b\x5d\x3c\x24\x24\x22\
+\x97\x9b\x3a\x75\xaa\xc8\xce\xce\x96\xbb\x77\xef\x46\xab\x56\xad\
+\xec\x8f\x37\x6b\xd6\x0c\x2f\xbd\xf4\x12\xba\x76\xed\xca\x36\x2c\
+\x22\x72\x1f\xdb\xb7\x6f\x17\xdb\xb6\x6d\x93\x79\x79\x79\xb8\x7c\
+\xf9\x32\x5a\xb4\x68\x81\xc4\xc4\x44\xc4\xc7\xc7\x37\xa8\x2f\x16\
+\x03\x8b\x88\x6e\x89\xe4\xe4\x64\x91\x9c\x9c\xdc\xa8\x75\xb0\x0d\
+\x8b\x88\x9c\x6e\xd5\xaa\x55\xf2\xde\x7b\xef\x95\x2a\x95\xaa\xce\
+\xbc\x84\x3b\x76\xec\xe0\xbc\x84\x44\xe4\x1e\x3e\xfb\xec\x33\xf9\
+\xf4\xd3\x4f\x23\x34\x34\x14\x3d\x7b\xf6\xac\x35\x3f\xa1\x5e\xaf\
+\x47\x50\x50\x10\x0f\x09\x89\xc8\x3d\x7c\xff\xfd\xf7\x00\x80\x5d\
+\xbb\x76\xe1\xae\xbb\xee\x6a\xd4\xbc\x5f\x3c\x24\x24\x22\xa7\x8a\
+\x8d\xb5\x8e\xcf\xd7\xb6\x6d\xdb\x46\x4f\x52\xc8\x1a\x16\x11\x39\
+\xd5\xa8\x51\xa3\x44\x4e\x4e\x8e\x7c\xf8\xe1\x87\xe5\xb2\x65\xcb\
+\x10\x1c\x1c\x0c\x29\xad\xcd\x56\x52\x4a\x84\x84\x84\x08\xad\x56\
+\xcb\xc0\x22\x22\xd7\x1b\x37\x6e\x9c\xdc\xb8\x71\x23\x00\x20\x2e\
+\xae\xee\xd0\xed\x19\x19\x19\x32\x25\x25\x85\xa3\x35\x10\x91\xeb\
+\x2d\x58\xb0\x00\xaf\xbd\xf6\x5a\xbd\xd3\xd6\x9b\xcd\x66\x44\x45\
+\x45\xb1\xe3\x28\x11\xb9\x87\x76\xed\xda\x89\x76\xed\xda\xc1\x62\
+\xb1\xc0\x62\xb1\x40\x4a\x09\xb5\x5a\x0d\x93\xc9\x04\x21\x04\x94\
+\x4a\xa5\xc3\xeb\x62\xa3\x3b\x11\x39\x5d\x5e\x5e\x9e\xec\xd3\xa7\
+\x8f\x54\xab\xd5\xd2\xcb\xcb\x4b\xea\xf5\x7a\xc4\xc6\xc6\xca\xb8\
+\xb8\x38\x59\x51\x51\x11\xc9\xc0\x22\x22\xb7\x70\xe4\xc8\x11\x99\
+\x92\x92\x82\xe2\xe2\x62\x3c\xfb\xec\xb3\x00\xac\x33\xe9\xcc\x9c\
+\x39\x13\x07\x0f\x1e\x44\x61\x61\xe1\x09\x06\x16\x11\xb9\x85\x8d\
+\x1b\x37\xe2\xec\xd9\xb3\xd8\xbc\x79\x33\xfa\xf5\xeb\x07\x00\xb0\
+\x58\x2c\x91\xf7\xdd\x77\x1f\x2c\x16\x0b\x1c\x19\x4a\x99\x81\x45\
+\x44\xb7\x44\x49\x49\x09\x00\x20\x26\x26\x06\x66\xb3\x19\x00\x20\
+\xa5\x8c\xb4\xb5\x5d\x59\x2c\x16\x06\x16\x11\xb9\x07\xdb\xa5\x37\
+\x25\x25\x25\x50\xa9\xac\xe7\xf9\xd4\x6a\xf5\xae\x9f\x7f\xfe\x19\
+\x80\x75\x98\x19\x06\x16\x11\xb9\x85\xbf\xff\xfd\xef\xf0\xf2\xf2\
+\xc2\xc4\x89\x13\x51\x59\x59\x09\x00\x28\x2f\x2f\x97\xaf\xbe\xfa\
+\x2a\xba\x75\xeb\x86\x4e\x9d\x3a\x3d\xcb\xc0\x22\x22\xb7\xf0\xd0\
+\x43\x0f\x89\x97\x5f\x7e\x19\x99\x99\x99\x18\x37\x6e\x1c\x84\x10\
+\x08\x0f\x0f\x47\x59\x59\x19\xd2\xd3\xd3\x11\x18\x18\xb8\xd4\xd1\
+\x75\x39\xde\x0f\x4b\x4a\xa0\x9e\x8e\x5f\xc6\x3f\x8e\x43\xab\x85\
+\x80\xd4\x68\x1a\xb4\xec\x5f\x7d\x4f\x87\x97\x69\xe8\xf2\xb6\xd7\
+\x37\xe6\xf3\x02\xb7\x66\xd9\xbf\xfa\x19\xdd\x65\xfb\x78\xe2\xb6\
+\x6d\xcc\xe7\xbd\x45\xdb\xd4\xf6\x7d\x34\x00\x75\xbf\x8f\x4d\xb9\
+\xcf\x34\xd0\xdc\xb9\x73\xc5\xa3\x8f\x3e\x2a\xd7\xaf\x5f\x8f\xb2\
+\xb2\x32\xb4\x6b\xd7\x0e\x13\x26\x4c\x68\xf0\xc5\xd0\x8e\x07\x96\
+\x10\xc0\xff\xfe\x27\x51\x54\x04\xec\xd8\x61\xfd\x5b\xa3\xc1\xd8\
+\x03\x07\xd0\x15\x80\xdf\xe5\xcb\x08\x78\xeb\x2d\xc0\xcf\xaf\xf6\
+\xd8\x36\x21\x21\xc0\xd4\xa9\x02\xb9\xb9\x12\x97\x2f\x03\xbb\x77\
+\x03\x6a\xf5\xcd\xdf\xaf\x7d\x7b\x60\xe2\x44\xeb\x7f\xc6\x60\x00\
+\xf6\xed\x93\xf8\xf1\x47\xe0\xe2\xc5\x1b\xfc\x6f\x54\xc0\xec\xd9\
+\xa2\xd6\x67\x2e\x2c\x94\x38\x79\x12\xf8\xfa\x6b\x40\xa1\xb8\xfe\
+\x8e\xd2\xb5\x2b\xf0\xc4\x13\xc2\xbe\xdc\xf1\xe3\x12\x67\xce\x00\
+\xd9\xd9\x80\x23\x1d\xdb\x14\x0a\x60\xce\x1c\xeb\xf2\x39\x39\xd6\
+\xff\xeb\x77\xdf\x01\x2a\x15\x24\x00\x93\xc5\x02\xa5\x42\x51\x7f\
+\x95\x36\x3a\x1a\x18\x31\xc2\xba\xec\x8e\x1d\xd6\x32\xfe\xdf\xff\
+\xae\xbf\x73\x55\x57\x03\x0b\x16\x88\x5a\x9f\x7f\xe7\x4e\x89\x5f\
+\x7e\x01\xce\x9c\xb9\xf9\x67\x35\x18\x80\x57\x5f\x05\x42\x42\xfe\
+\xfc\xff\xee\xd9\x23\x71\xe9\x12\x90\x9b\x6b\x2d\xc7\x9b\x7d\xb1\
+\xba\x75\x03\x86\x0c\xb1\x2e\x5f\x51\x11\x89\x1f\x7f\x3c\x81\x7d\
+\xfb\xac\x9f\xed\x7a\x9a\x37\x07\x5e\x79\xe5\xcf\xf7\x3c\x77\x6e\
+\x3d\x7e\xfe\x79\x18\xf6\xee\x05\x4c\xa6\xeb\x2f\x67\x36\x03\x03\
+\x06\x00\xbd\x7a\xd5\xde\xb6\xdf\x7c\x23\x71\xf1\x22\xf0\x7f\xff\
+\x77\xe3\xcf\x7c\x75\x79\x09\x01\xec\xda\x25\x51\x5e\x0e\xe4\xe7\
+\x5f\x7f\xdb\xea\xf5\xc0\xbc\x79\x02\xb6\x2f\xbd\x10\xd6\x32\x2e\
+\x2b\x03\x7e\xfe\xf9\xfa\xfb\x92\x4d\xdb\xb6\xc0\x73\xcf\x09\xec\
+\xdb\x67\xdd\x17\xf6\xee\xbd\xf1\x67\xbc\x72\x05\x78\xef\xbd\xda\
+\x1b\xfc\xfc\xf9\x79\x98\x34\x29\x0d\xa7\x4e\x59\xdf\xdf\x68\x04\
+\x2e\x5f\x06\x02\x02\x80\xa4\x24\xeb\xfd\x19\x33\x1e\xc5\xfe\xfd\
+\x3b\x51\x56\x06\x1c\x3b\x86\xa7\x0f\x1d\xc2\x83\x00\x02\x2e\x5e\
+\x44\xb3\xb7\xde\xb2\xee\x8b\x2d\x5b\x02\x1f\x7e\x08\x44\x44\xb8\
+\x24\xad\x3e\xf9\xe4\x13\x99\x91\x91\x81\xed\xdb\xb7\xa3\x77\xef\
+\xde\xf6\xc7\x2f\x5e\xbc\x88\xc4\xc4\x44\xb9\x70\xe1\x42\x44\x47\
+\x47\x3b\xe1\xd2\x1c\x5f\xdf\x7f\x22\x24\x24\x0d\xb1\xb1\xd6\x02\
+\xd4\xe9\x50\x94\x9d\x8d\xfd\x00\x82\xd5\x6a\xd4\xdc\x73\x0f\x10\
+\x1c\x5c\x7b\x19\x3f\x3f\xeb\xbf\x2d\x5b\x5a\xef\x77\xeb\xe6\x58\
+\x00\x5c\x3d\x46\x8e\x52\x09\x84\x85\x59\x37\xd8\x95\x2b\x37\x0e\
+\x8d\x6b\x35\x6b\x96\x8f\x90\x90\x58\xc4\xc6\xde\x38\xb0\xda\xb5\
+\xab\xfb\xb9\x2d\x16\x20\x2e\xee\xe6\x3b\xe7\xb5\x35\xa3\x90\x10\
+\xc0\xdf\xdf\xba\xac\x52\x09\x8b\xc5\x82\x9d\x07\x0f\x22\x2e\x22\
+\x02\x2d\xfd\xfd\xeb\xbe\x77\xdb\xb6\x7f\xfe\x1d\x16\x06\x78\x79\
+\x01\x2d\x5a\x5c\x3f\xb0\x8c\xc6\xba\x8f\x85\x85\x59\xcb\x29\x24\
+\xe4\xe6\xbf\xa2\x46\x23\xa0\xd3\xd5\x7e\x51\x68\xa8\xf5\x8b\x50\
+\x53\x73\xf3\xed\x23\x25\x10\x1e\xfe\xe7\xdf\x5e\x5e\x85\x08\x0d\
+\x05\x62\x62\x6e\x1c\x3c\xd7\xcc\x9a\x02\x8d\x66\x38\x42\x42\x24\
+\xee\xbf\xdf\x5a\xd6\xd7\x63\xb1\x58\xff\x5f\xd7\xb2\x7d\x66\x93\
+\xe9\xc6\x9f\xf9\xda\xcf\x14\x16\x66\xdd\x3e\x42\x5c\x7f\xdb\xd6\
+\x57\x0e\x61\x61\x40\xb3\x66\xd6\xed\x73\xb3\x7d\xc2\x36\xb1\x42\
+\xab\x56\xd6\x7d\xe9\x8f\x7d\xe1\xba\x6a\x6a\xea\x3e\xa6\xd1\x4c\
+\x43\x62\x62\x1a\xca\xcb\xff\x0c\x6e\x83\xc1\x5a\x8e\xf7\xde\x6b\
+\xbd\xaf\xd1\xec\xb2\x7f\x2e\x7f\x7f\x9c\xf8\xea\x2b\xec\x07\xd0\
+\xca\xcb\x0b\xc6\x7b\xef\xb5\xbe\xb7\x9f\x1f\xe0\xeb\x9b\xef\xaa\
+\x43\xc2\xfc\xfc\x7c\x7c\xf5\xd5\x57\x75\x1e\xaf\xac\xac\xc4\x9e\
+\x3d\x7b\x50\x52\x52\x82\xe8\xe8\x68\x47\x6b\xa1\xd2\xb1\xdb\x1f\
+\x5d\xea\xaf\xbd\x0d\x19\x3e\x5c\x02\x90\x41\x21\x21\xb2\xf8\xf4\
+\x69\xd9\x90\x65\xff\xea\x7b\x3a\xbc\x4c\x43\x97\xb7\xbd\xbe\x31\
+\x9f\xb7\x9e\x65\x8d\x52\xe2\xed\x7f\xfe\x53\xfe\x52\x54\x24\x1b\
+\xba\x6c\x93\x96\x4d\x53\xaf\xab\x31\xdb\xc7\x13\xb7\xad\xb3\x97\
+\x69\x82\x6d\x9a\x94\x92\x22\x01\xc8\x96\xad\x5b\xcb\x92\x73\xe7\
+\xa4\xd3\xf6\x99\x3f\x6e\xd3\xa7\x4f\x97\xeb\xd6\xad\xab\x77\xbf\
+\x3e\x74\xe8\x90\x3c\x71\xe2\x84\x1c\xfe\x47\x46\x14\x15\x15\xc9\
+\xc3\x87\x0f\xcb\xc3\x87\x0f\xcb\x23\x47\x8e\xc8\xb9\x73\xe7\x4a\
+\x00\xf2\xdb\x6f\xbf\x95\x8e\xbe\x5f\xc3\x0e\x09\xeb\xa1\xfc\xe3\
+\x97\x51\x25\x25\xc4\xf5\x7e\x5d\xff\xea\x71\xf3\x5f\x59\xee\xea\
+\x65\x1a\xba\xbc\xed\xf5\x4d\xfc\x79\xa5\xd1\x88\x73\x25\x25\xa8\
+\xae\xaa\x6a\xba\xff\x6b\x53\xb6\x45\xb8\x62\xfb\xdc\x26\xdb\xb6\
+\x49\x97\x69\x82\x6d\x6a\xfb\x3e\xaa\xeb\xab\x59\xde\xe2\xf6\xab\
+\xbb\xef\xbe\xfb\xaa\x83\x24\x25\x22\x22\x22\xea\xbc\x66\xc8\x90\
+\x21\xf8\xdb\xdf\xfe\x56\xde\xf4\x6d\x58\x44\x44\x0d\x70\xe8\xd0\
+\x21\xe8\x74\x3a\xbc\xf0\xc2\x0b\xc8\xcc\xcc\x44\x71\x71\x31\xf4\
+\x7a\xbd\xfd\x79\xb5\x5a\x8d\xe0\xe0\x60\xe1\x7f\x6d\x33\x09\x03\
+\x8b\x88\x6e\x35\xdb\x19\xc0\x6d\xdb\xb6\x5d\xf7\x35\x66\xb3\x19\
+\x16\x8b\xa5\xd6\x38\xef\x37\xc2\x7e\x58\x44\xe4\x54\xd3\xa7\x4f\
+\x97\x4b\x96\x2c\x91\xd5\xd7\x9c\x41\x3e\x75\xea\x94\x7c\xf6\xd9\
+\x67\xe5\xbe\x7d\xfb\x1c\x9e\x35\x87\x81\x45\x44\x4e\x55\x55\x55\
+\x85\xe7\x9f\x7f\x1e\x03\x07\x0e\x94\x47\x8e\x1c\x91\x00\xb0\x62\
+\xc5\x0a\xd9\xbb\x77\x6f\x2c\x5b\xb6\xac\x41\xd7\x12\xf2\x90\x90\
+\x88\x9c\x6a\xe1\xc2\x85\x22\x31\x31\x51\x3e\xf7\xdc\x73\x48\x48\
+\x48\x40\x68\x68\xa8\x3c\x7c\xf8\x30\x3a\x77\xee\x8c\x1f\x7e\xf8\
+\x01\x71\x71\x71\x0e\x9f\x0d\x60\x0d\x8b\x88\x9c\x6e\xd0\xa0\x41\
+\xe2\xcc\x99\x33\xe2\xb9\xe7\x9e\xc3\xaf\xbf\xfe\x8a\xf9\xf3\xe7\
+\xe3\xe8\xd1\xa3\xa2\x21\x61\xc5\x1a\x16\x11\xdd\x12\xbf\xff\xfe\
+\xbb\x5c\xb9\x72\x25\xb2\xb2\xb2\x00\x00\x59\x59\x59\x68\xd1\xa2\
+\x85\x1c\x3d\x7a\xb4\x50\x3b\x72\xe5\x0b\x6b\x58\x44\x74\x2b\x2c\
+\x5d\xba\x54\x3e\xf0\xc0\x03\x98\x36\x6d\x1a\x1e\x7f\xfc\x71\x1c\
+\x3e\x7c\x18\x42\x08\x3c\xfd\xf4\xd3\xe8\xda\xb5\xab\x3c\x74\xe8\
+\x10\x1b\xdd\x3d\x4d\x41\x41\x81\xdc\xbd\x7b\xb7\xbc\xba\x9f\x8a\
+\x4d\x4e\x4e\x8e\xdc\xbf\x7f\xbf\xb4\x0d\x7e\x46\xe4\x49\xf2\xf3\
+\xf3\x61\x36\x9b\xf1\xe3\x8f\x3f\x62\xfa\xf4\xe9\x22\x32\x32\x52\
+\xec\xda\xb5\x4b\x2c\x5f\xbe\x1c\x05\x05\x05\x38\x7d\xfa\x34\x6b\
+\x58\x9e\xe6\x9d\x77\xde\xc1\x84\x09\x13\x70\xea\xd4\xa9\x3a\xbf\
+\x36\xa3\x46\x8d\xc2\x9c\x39\x73\x60\x30\x18\x58\x50\xe4\x71\x86\
+\x0f\x1f\x8e\x13\x27\x4e\x88\xfb\xef\xbf\xbf\x56\x7b\xd5\xd3\x4f\
+\x3f\x2d\x0e\x1c\x38\x80\xce\x9d\x3b\x3b\xbc\x2e\xb6\x61\xb9\x89\
+\xea\xea\x6a\x18\x0c\x86\x3a\xa7\x78\x8f\x1d\x3b\x26\x2f\x5c\xb8\
+\x00\xb3\xd9\x5c\xef\xbc\x6e\x44\xee\x48\x4a\x69\xdf\x5f\xfb\xf4\
+\xe9\x73\xdd\x1d\xd7\xd1\x51\x1a\x58\xc3\x72\x03\x45\x45\x45\x52\
+\x08\x21\x85\x10\x72\xdd\xba\x75\x38\x7b\xf6\x2c\xa2\xa2\xa2\x60\
+\x7b\x4c\x08\x21\xa3\xa2\xa2\x10\x1e\x1e\x8e\xf1\xe3\xc7\x43\x73\
+\xbd\xf1\xc6\x88\xdc\x8c\x10\x02\x42\x08\x39\x70\xe0\x40\x79\xd5\
+\x63\x72\xf4\xe8\xd1\xf6\xbf\x4f\x9d\x3a\x25\x85\x10\x72\xe7\xce\
+\x9d\x0e\xb7\x61\xb1\x86\xe5\x42\x61\x61\x61\x62\xf7\xee\xdd\x52\
+\xab\xd5\x62\xfd\xfa\xf5\x38\x7e\xfc\x38\x26\x4e\x9c\x88\xab\xaf\
+\xad\x52\xab\xd5\x08\x09\x09\x41\xa7\x4e\x9d\x58\xbd\x22\x8f\x73\
+\x6d\xbb\x6b\x7d\xed\xb0\x52\x3a\x9c\x57\x0c\x2c\x57\xd2\x68\x34\
+\x48\x4c\x4c\x14\x00\xd0\xad\x5b\x37\x48\x29\xe1\xe5\xe5\xc5\x82\
+\x21\xe2\x21\xa1\x7b\x33\x1a\x8d\xd8\xb0\x61\x83\xec\xd1\xa3\x87\
+\xf4\xf7\xf7\x97\x3a\x9d\xce\x7e\xf3\xf2\xf2\x92\xfd\xfb\xf7\xaf\
+\xf7\x0c\x22\xd1\x9d\x84\x35\x2c\x37\xf1\xee\xbb\xef\xca\xf4\xf4\
+\x74\xc4\xc6\xc6\x62\xe2\xc4\x89\xb5\x1a\xd8\xa5\x94\x88\x8a\x8a\
+\xb2\x4f\x91\x44\xe4\x29\x6a\x6a\x6a\x60\x30\x18\xec\xfb\x73\x75\
+\x75\x35\xf4\x7a\x3d\xf4\x7a\xfd\xfa\x0b\x17\x2e\x30\xb0\x3c\xd5\
+\x89\x13\x27\xe0\xed\xed\x8d\xa5\x4b\x97\x22\x26\x26\x86\xed\x55\
+\x74\x5b\xd8\xb3\x67\x0f\x74\x3a\x9d\xbd\x91\x2a\x23\x23\x03\x3e\
+\x3e\x3e\xb5\x1a\xad\x1a\xd2\xbf\x90\x81\xe5\xe2\xc3\x40\x00\x50\
+\x28\x14\x98\x33\x67\x0e\x2e\x5d\xba\x84\x6d\xdb\xb6\x21\x2a\x2a\
+\xaa\xce\xf8\x40\x0a\x85\x02\x0a\x85\x82\x5d\x1b\xc8\x63\xec\xdc\
+\xb9\xf3\xa6\xe3\x5c\x99\x4c\x26\xc4\xc5\xc5\x39\x3c\x2f\x21\x03\
+\xcb\x85\x82\x82\x82\xa4\x4e\xa7\x03\x60\x3d\x1b\x58\x5e\x5e\x8e\
+\xcd\x9b\x37\xe3\xbd\xf7\xde\x93\x57\x77\x61\x30\x9b\xcd\xe8\xd5\
+\xab\x17\x56\xae\x5c\x29\xbc\xaf\x9d\xc8\x81\xc8\x4d\xf5\xed\xdb\
+\xb7\xc9\x7f\x5d\x19\x58\x2e\xb4\x78\xf1\x62\x5c\x7d\xe1\xa7\xad\
+\x06\x65\xf9\x63\xb2\x80\xab\x85\x86\x86\xf2\x0c\x22\xdd\xf1\x18\
+\x58\x2e\x34\x76\xec\x58\x1e\xdf\x11\x31\xb0\x3c\xcf\xba\x75\xeb\
+\x64\x41\x41\x01\xb4\x5a\x2d\xcc\x66\xb3\xfd\xd2\x06\x5b\xad\xcb\
+\xcb\xcb\x0b\x6d\xdb\xb6\x45\xf7\xee\xdd\x11\x1e\x1e\x2e\x94\x8e\
+\xcc\xed\x48\xc4\xc0\x22\x67\x38\x73\xe6\x0c\xd6\xac\x59\x83\x13\
+\x27\x4e\xa0\x67\xcf\x9e\x68\xd5\xaa\x15\x2e\x5e\xbc\x88\x1d\x3b\
+\x76\x20\x2c\x2c\x0c\x5d\xbb\x76\xc5\x0f\x3f\xfc\x80\x66\xcd\x9a\
+\x61\xe6\xcc\x99\x72\xd4\xa8\x51\x82\xdd\x1c\xe8\x4e\xc3\x8e\xa3\
+\x6e\xa2\x4b\x97\x2e\xd0\x6a\xb5\xf8\xe8\xa3\x8f\x90\x99\x99\x89\
+\x55\xab\x56\x21\x23\x23\x03\xd9\xd9\xd9\xb0\x58\x2c\x48\x4e\x4e\
+\xc6\x96\x2d\x5b\xe0\xe7\xe7\x87\x37\xde\x78\x03\xbf\xfc\xf2\x8b\
+\x64\xa9\x11\x6b\x58\xe4\x12\xab\x57\xaf\xc6\xd9\xb3\x67\xf1\xf0\
+\xc3\x0f\xa3\x59\xb3\x66\xf6\xc7\xfb\xf7\xef\x8f\xca\xca\x4a\x6c\
+\xda\xb4\x09\x93\x26\x4d\x42\xbf\x7e\xfd\xb0\x70\xe1\x42\x54\x54\
+\x54\xb0\xd0\xc8\x63\xe4\xe6\xe6\xca\xe5\xcb\x97\xa3\xb0\xb0\x10\
+\xa6\xab\x26\x78\xd5\xeb\xf5\x58\xb2\x64\x09\xba\x75\xeb\xe6\x50\
+\x7b\x2e\x03\xcb\x4d\x74\xe8\xd0\x01\x97\x2f\x5f\xc6\x87\x1f\x7e\
+\x88\x29\x53\xa6\x20\x20\x20\x00\x7a\xbd\x1e\xab\x57\xaf\x46\x65\
+\x65\x25\x22\x22\x22\x50\x55\x55\x85\xa2\xa2\x22\xf8\xf9\xf9\xa1\
+\x21\x93\x4f\x12\xb9\x52\x56\x56\x96\x1c\x3e\x7c\x38\xaa\xea\x99\
+\xf9\x5c\x4a\x89\xf2\x72\x87\x27\x7e\x66\x60\xb9\x8b\xa9\x53\xa7\
+\xfe\xd3\x6c\x36\xa7\x2d\x5f\xbe\x1c\x6b\xd6\xac\x81\x8f\x8f\x0f\
+\xaa\xaa\xaa\x20\x84\xc0\x84\x09\x13\x30\x63\xc6\x0c\x94\x96\x96\
+\x22\x2c\x2c\x0c\x73\xe7\xce\x45\x87\x0e\x1d\x78\x86\x91\x3c\xc2\
+\x57\x5f\x7d\x85\xca\xca\x4a\xac\x5e\xbd\x1a\x23\x47\x8e\x6c\xd4\
+\x7e\xcb\xc0\x72\x13\x41\x41\x41\xd3\xd2\xd3\xd3\xa7\x4d\x9a\x34\
+\x49\x96\x96\x96\xa2\xa6\xa6\x06\x2a\x95\x0a\x41\x41\x41\x88\x88\
+\x88\x10\xb6\x1e\xee\xef\xbe\xfb\x2e\x7b\xbb\x93\x47\x69\xd3\xa6\
+\x0d\x00\x34\x3a\xac\x18\x58\x2e\xf6\xed\xb7\xdf\xca\xb0\xb0\x30\
+\x74\xec\xd8\x51\x1c\x3b\x76\x4c\x9e\x3b\x77\x0e\x4a\xa5\x12\x0a\
+\x85\x02\x4a\xa5\x12\x52\x4a\x94\x95\x95\xa1\xa4\xa4\x44\x36\x6f\
+\xde\x1c\x9d\x3b\x77\x66\x77\x06\xf2\x38\x69\x69\x69\xe2\xe8\xd1\
+\xa3\xf2\xf1\xc7\x1f\x97\x5f\x7c\xf1\x85\xd0\x6a\xb5\x0c\x2c\x4f\
+\xd4\xab\x57\x2f\x8c\x1d\x3b\x16\x2b\x57\xae\xc4\xcc\x99\x33\xb1\
+\x61\xc3\x86\x7a\xaf\xbd\xb2\x58\x2c\xe8\xdb\xb7\xaf\xed\xc2\x51\
+\x16\x1c\x79\x94\xb1\x63\xc7\xca\x55\xab\x56\x01\x40\xad\x0b\xa1\
+\x6d\x32\x33\x33\x31\x70\xe0\x40\x36\xba\xbb\xbb\xd2\xd2\xd2\x7c\
+\xad\x56\x1b\x27\xa5\xc4\xb2\x65\xcb\xc4\xe2\xc5\x8b\xf7\xab\xd5\
+\xea\xe1\x4a\xa5\xb2\x50\x08\x01\xa3\xd1\xd8\x57\xa9\x54\xee\x52\
+\x28\x14\xb0\x58\x2c\xe0\x75\x84\xe4\x89\x06\x0d\x1a\x84\xa0\xa0\
+\xa0\x7a\x9b\x32\xaa\xab\xab\xd1\xb1\x63\x47\xd6\xb0\x3c\x41\x70\
+\x70\x70\x9c\xed\x7e\xb3\x66\xcd\x60\x32\x99\xa6\x6d\xdd\xba\xf5\
+\x44\x4e\x4e\x0e\x2e\x5c\xb8\x80\x97\x5e\x7a\x09\x07\x0e\x1c\xc0\
+\xb7\xdf\x7e\x8b\x79\xf3\xe6\xc1\xcf\xcf\x8f\x8d\x57\xe4\x71\x86\
+\x0d\x1b\x26\x86\x0d\x1b\xd6\x24\xeb\x62\xc7\x51\x37\x51\x5c\x5c\
+\x2c\x47\x8d\x1a\xb5\xf3\xe5\x97\x5f\xc6\x6f\xbf\xfd\x86\x8c\x8c\
+\x0c\x1c\x3d\x7a\x14\xd1\xd1\xd1\xd8\xb0\x61\x03\x3e\xfd\xf4\x53\
+\xfb\x70\x34\x44\xee\xce\x6c\x36\xdb\xc7\xb9\xb2\x58\x2c\xf6\xbf\
+\xaf\xbd\x99\x4c\xa6\x06\x8d\xe9\xce\xc0\x72\x13\x9f\x7e\xfa\x29\
+\xf6\xed\xdb\x87\xcf\x3f\xff\x1c\xef\xbe\xfb\x2e\x00\x6b\x1f\x95\
+\x9e\x3d\x7b\xc2\xd7\xd7\x17\x07\x0f\x1e\x64\x60\x91\xc7\x68\xd5\
+\xaa\x95\x54\xa9\x54\x12\x00\x46\x8e\x1c\x29\x55\x2a\x55\xbd\x37\
+\xb5\x5a\x2d\x33\x33\x33\x39\x6b\x8e\x07\xd6\xb0\xe0\xed\xed\x8d\
+\xce\x9d\x3b\xe3\xf2\xe5\xcb\xb5\x7f\x55\xfe\x68\xc3\x22\xf2\x14\
+\xcb\x97\x2f\xb7\xef\xc7\x2f\xbe\xf8\x22\x92\x92\x92\xea\x6d\xc3\
+\xfa\x63\x00\x3f\x87\xd7\xcb\xc0\x72\x13\x91\x91\x91\xd0\xeb\xf5\
+\x28\x2a\x2a\xb2\xf7\x5b\xd1\x6a\xb5\xc8\xcb\xcb\x83\xc1\x60\x40\
+\xe7\xce\x9d\x39\xa6\x3b\x79\x8c\x41\x83\x06\xd9\xd3\xa9\x47\x8f\
+\x1e\xa2\x47\x8f\x1e\x4d\xb2\x5e\x7e\x03\xdc\xc4\xc4\x89\x13\xb1\
+\x67\xcf\x1e\x8c\x1d\x3b\x16\x89\x89\x89\x00\xac\xd7\x17\x16\x14\
+\x14\x20\x32\x32\x12\xcf\x3f\xff\x3c\x07\xf0\xa3\x3b\x1e\x03\xcb\
+\x4d\xb4\x6d\xdb\x56\x64\x64\x64\xcc\xfb\xe8\xa3\x8f\xd2\x16\x2f\
+\x5e\x0c\x00\xf8\xcf\x7f\xfe\x83\x49\x93\x26\x61\xfa\xf4\xe9\xcf\
+\x06\x06\x06\x2e\x65\x29\x91\xa7\xaa\xa9\xa9\xc1\xd7\x5f\x7f\x2d\
+\x8b\x8b\x8b\x61\x30\x18\xec\x0d\xed\x35\x35\x35\x18\x33\x66\x0c\
+\xda\xb7\x6f\xcf\x7e\x58\x9e\x26\x28\x28\x68\xda\xf4\xe9\xd3\xa7\
+\x4d\x9f\x3e\x9d\x85\x41\xb7\x8d\x8b\x17\x2f\x22\x25\x25\x45\xe6\
+\xe6\xe6\xd6\x7b\xe2\x28\x26\x26\x06\xed\xdb\xb7\x67\x0d\xcb\xdd\
+\x19\x8d\x46\x1c\x3d\x7a\x54\xda\x46\x17\xbd\x1e\x29\x25\x7c\x7c\
+\x7c\x10\x19\x19\x29\x78\x1d\x21\x79\x9a\xa5\x4b\x97\xca\x9c\x9c\
+\x1c\xbc\xf0\xc2\x0b\x78\xe4\x91\x47\x30\x74\xe8\x50\x9c\x3f\x7f\
+\x1e\xa9\xa9\xa9\x48\x48\x48\xc0\x63\x8f\x3d\xe6\xf0\x4e\xcd\xc0\
+\x72\xa1\x53\xa7\x4e\xc9\xe8\xe8\x68\x68\xb5\x5a\x08\x21\x20\x84\
+\x80\x8f\x8f\x0f\xa4\x94\xb8\x7c\xf9\xb2\xfd\x32\x1d\x8b\xc5\x82\
+\x3e\x7d\xfa\x60\xed\xda\xb5\xb5\xc6\xca\x22\xf2\x04\xc5\xc5\xc5\
+\x00\x80\x45\x8b\x16\xe1\xcb\x2f\xbf\xb4\x3f\xfe\xd6\x5b\x6f\xe1\
+\xee\xbb\xef\x46\xaf\x5e\xbd\x64\x6c\x6c\x2c\x0f\x09\xdd\x5d\x78\
+\x78\xb8\x28\x2a\x2a\x92\x00\x20\x84\x40\x45\x45\x05\x06\x0f\x1e\
+\x0c\x5f\x5f\x5f\x9c\x3c\x79\x52\x94\x94\x94\x48\x5b\x8d\x4a\xab\
+\xd5\xc2\xd7\xd7\x97\x85\x46\x1e\xc7\x76\xd6\xbb\xb2\xb2\xd2\x7e\
+\x79\xd9\x81\x03\x07\xec\x3f\xc8\x0d\x99\x01\x9a\x81\xe5\x42\x4a\
+\xa5\xb2\x56\x63\xe3\x1f\x1d\xe9\xa0\xd1\x68\xa0\xd3\xe9\x10\x11\
+\x11\xc1\xe3\x3f\xf2\x78\x23\x47\x8e\x44\x7a\x7a\x3a\x5e\x7a\xe9\
+\x25\xcc\x99\x33\x07\x1d\x3b\x76\xc4\x80\x01\x03\x00\x00\x81\x81\
+\x81\x68\xd9\xb2\x25\x03\xcb\x13\xb1\x73\x28\xdd\x8e\x7c\x7c\x7c\
+\xf2\x8b\x8a\x8a\x62\xc3\xc2\xc2\x04\x00\x7c\xfc\xf1\xc7\x72\xf6\
+\xec\xd9\x30\x18\x0c\x78\xed\xb5\xd7\x70\xdf\x7d\xf7\xb1\x0d\xcb\
+\x13\x69\x34\x9a\x72\xa5\x52\xd9\x9c\x1d\x44\xe9\x76\x92\x96\x96\
+\x16\xbb\x62\xc5\x0a\x7b\x57\x86\xc4\xc4\x44\x61\xeb\x6b\xd8\x50\
+\xfc\x66\xb8\xd0\xef\xbf\xff\x2e\xfb\xf7\xef\x0f\x95\x4a\x05\x21\
+\x04\x4c\x26\x13\x8e\x1f\x3f\x0e\xa5\x52\x89\x07\x1f\x7c\x50\x56\
+\x57\x57\x43\x08\x01\xb3\xd9\x8c\xee\xdd\xbb\x63\xe1\xc2\x85\xc2\
+\x36\xb5\x3d\x91\xa7\x88\x8f\x8f\xc7\x8a\x15\x2b\x50\x5c\x5c\x2c\
+\x1d\xed\x6f\xc5\xc0\x72\x43\x3a\x9d\xae\xc3\xd0\xa1\x43\x4f\x5c\
+\xdd\x83\x7d\xf4\xe8\xd1\x00\x50\x6b\x66\x11\x29\x25\x3a\x74\xe8\
+\x00\x8e\x36\x4a\x9e\x68\xc2\x84\x09\x22\x37\x37\x57\xf6\xee\xdd\
+\x1b\x1b\x37\x6e\x94\x5d\xba\x74\xb1\x77\xcf\x91\x52\x42\xa7\xd3\
+\xd5\x3b\x70\x25\x03\xcb\xcd\x04\x04\x04\x14\xa6\xa7\xa7\xb3\x61\
+\x9d\x6e\x6b\xc3\x87\x0f\x97\x1b\x36\x6c\x00\x00\xdb\x85\xce\xb5\
+\x46\x67\xd8\xb2\x65\x4b\xad\x6b\x0f\x19\x58\x44\xe4\x32\x6f\xbf\
+\xfd\x36\xa6\x4e\x9d\x8a\x73\xe7\xce\xd5\x79\xce\x64\x32\xa1\x47\
+\x8f\x1e\x0e\xcf\xf3\xc5\xc0\x22\x22\xa7\x5a\xbc\x78\x31\x16\x2d\
+\x5a\x04\x29\x65\xa3\x8f\x26\x38\x80\x1f\x11\x39\x95\xed\xea\x8c\
+\xa6\xe8\xb6\xc3\xc0\x22\x22\xa7\x9a\x32\x65\x0a\xe2\xe3\xe3\x91\
+\x96\x96\x26\xaf\x3e\x99\xf4\x57\xf0\x90\xd0\x4d\x48\x29\xf1\xeb\
+\xaf\xbf\xca\x82\x82\x02\x54\x55\x55\xd5\x1a\xe7\x5a\x4a\x89\xd0\
+\xd0\x50\xf4\xee\xdd\x5b\xb0\x8f\x16\x79\x9a\x8f\x3f\xfe\x18\x05\
+\x05\x05\xc8\xcb\xcb\xc3\xc6\x8d\x1b\xa5\x97\x97\x97\xfd\x62\xff\
+\xca\xca\x4a\xac\x5b\xb7\x0e\xf1\xf1\xf1\x6c\x74\xf7\x24\x19\x19\
+\x19\x32\x2d\x2d\x0d\xbf\xff\xfe\x3b\xee\xb9\xe7\x9e\x5a\xa3\x8b\
+\x5a\x2c\x16\xc4\xc5\xc5\x21\x21\x21\x81\xa3\x8e\x92\xc7\xa9\xa8\
+\xa8\x80\xc5\x62\x81\x8f\x8f\x0f\xca\xcb\x6b\xb7\xaf\x57\x56\x56\
+\xa2\xba\xba\x9a\x35\x2c\x4f\xb3\x61\xc3\x06\x94\x94\x94\x60\xd3\
+\xa6\x4d\x48\x48\x48\xa8\xf3\x6b\xa3\x50\x28\xa0\xd1\x68\x58\x50\
+\xe4\x71\xde\x7f\xff\x7d\xf1\xfe\xfb\xef\x37\xc9\xba\xd8\x86\xe5\
+\x26\xfa\xf5\xeb\x87\xc0\xc0\x40\x68\x34\x1a\x68\xb5\x5a\xe8\x74\
+\xba\x5a\x37\x86\x15\x79\xba\xcf\x3f\xff\x5c\x8e\x19\x33\x46\xf6\
+\xea\xd5\x4b\xd6\xd4\xd4\xe0\xa9\xa7\x9e\x92\x6f\xbd\xf5\x96\xb4\
+\x4d\x07\xc6\x1a\x96\x07\x09\x08\x08\x40\x78\x78\x38\x46\x8c\x18\
+\x81\xd1\xa3\x47\xcb\xa0\xa0\x20\x7b\x3b\x96\xad\xa7\xfb\xd0\xa1\
+\x43\x05\xc7\x75\x27\x4f\x94\x94\x94\x24\xb3\xb2\xb2\xec\x7f\xd7\
+\xd4\xd4\xa0\x7d\xfb\xf6\x58\xb2\x64\x09\x9e\x7c\xf2\x49\xd9\xb1\
+\x63\x47\xb6\x61\x79\x92\xdc\xdc\x5c\x9c\x3b\x77\x0e\xe1\xe1\xe1\
+\xd8\xb3\x67\x0f\xae\x1e\x85\xd4\x76\x2d\x61\x4a\x4a\x0a\x0b\x8a\
+\x3c\xce\xea\xd5\xab\x65\x76\x76\x36\xa6\x4c\x99\x82\x7e\xfd\xfa\
+\x21\x25\x25\x05\x26\x93\x29\x32\x29\x29\x09\xb3\x67\xcf\x46\x49\
+\x49\x89\xc3\xd3\xd5\x33\xb0\xdc\x80\x94\x12\xf3\xe7\xcf\x17\xf3\
+\xe7\xcf\x67\x61\xd0\x6d\xe7\x87\x1f\x7e\x80\x94\x12\x0b\x17\x2e\
+\xc4\x96\x2d\x5b\x6c\xfb\x7c\x64\x48\x48\x08\x00\xe0\xca\x95\x2b\
+\x3c\x24\xf4\x04\x59\x59\x59\xb2\x75\xeb\xd6\x88\x8e\x8e\x16\x07\
+\x0f\x1e\x94\xbf\xfd\xf6\x1b\xd4\x6a\x75\xbd\x81\x16\x18\x18\x88\
+\xae\x5d\xbb\x0a\x5e\x00\x4d\x9e\xc6\xd6\x61\x54\xa5\x52\xd9\xef\
+\x0b\x21\x0a\xcf\x9f\x3f\x0f\x00\x0d\x9a\xbe\x8e\x81\xe5\xda\xe3\
+\x7a\x0c\x19\x32\x04\x9b\x36\x6d\xc2\xeb\xaf\xbf\x8e\xed\xdb\xb7\
+\x5f\xf7\xb5\xdd\xbb\x77\xc7\xae\x5d\xbb\x38\x4c\x32\x79\x8c\xf3\
+\xe7\xcf\xcf\xf3\xf5\xf5\x9d\x76\xd7\x5d\x77\x01\x00\xb6\x6e\xdd\
+\x6a\xef\x96\xa3\x50\x28\x0a\x37\x6f\xde\x8c\xa0\xa0\x20\x8e\x38\
+\xea\x29\x2a\x2b\x2b\x85\x5a\xad\x86\x94\x12\x5f\x7e\xf9\xa5\xb8\
+\x51\x2f\x60\x95\x4a\xc5\x89\x54\xc9\xa3\xb4\x68\xd1\x22\x2d\x3e\
+\x3e\x3e\x2d\x27\x27\x47\x2c\x59\xb2\x44\x8e\x1a\x35\x0a\xc9\xc9\
+\xc9\x00\x80\xf9\xf3\xe7\xcb\xb7\xdf\x7e\x1b\x2f\xbc\xf0\x02\x3a\
+\x77\xee\xcc\x11\x47\x3d\x81\x8f\x8f\x8f\xfd\xbe\x46\xa3\x61\xd7\
+\x05\xba\xed\xf8\xfa\xfa\x42\xa9\x54\x62\xcb\x96\x2d\x78\xe3\x8d\
+\x37\xb0\x6a\xd5\x2a\x00\xc0\xc2\x85\x0b\x31\x73\xe6\x4c\xbc\xf6\
+\xda\x6b\x0d\x6a\xe6\x60\x60\xb9\x99\xfc\xfc\x7c\x59\x58\x58\x08\
+\xbd\x5e\x5f\xab\x5b\x43\x48\x48\x08\x1e\x7d\xf4\x51\x5e\x9a\x43\
+\x1e\xa9\x5d\xbb\x76\x62\xc5\x8a\x15\x58\xbe\x7c\xb9\xfd\x31\x47\
+\x07\xed\x63\x60\xb9\xa1\xf2\xf2\xf2\xbe\x53\xa6\x4c\xd9\xb9\x79\
+\xf3\x66\x18\x0c\x06\x68\xb5\x5a\x18\x0c\x06\xfb\xf3\x8f\x3c\xf2\
+\x08\x12\x12\x12\x38\x2f\x21\x79\x94\x8a\x8a\x0a\x1c\x3c\x78\x50\
+\xea\xf5\xfa\x7a\x9f\x37\x9b\xcd\xb8\xe7\x9e\x7b\x84\xbf\xbf\x3f\
+\x03\xcb\x93\xcc\x9b\x37\x6f\xe7\x9a\x35\x6b\x90\x9e\x9e\x8e\x11\
+\x23\x46\x20\x2a\x2a\x0a\xab\x57\xaf\xc6\xc9\x93\x27\x91\x9b\x9b\
+\x8b\x15\x2b\x56\x3c\xcb\xb0\x22\x4f\x93\x97\x97\x87\xfb\xee\xbb\
+\xef\x86\xaf\xc9\xc8\xc8\x90\x29\x29\x29\xec\x38\xea\x49\xce\x9c\
+\x39\x83\xe0\xe0\x60\xa4\xa6\xa6\xc2\x76\xba\xb7\xbc\xbc\x1c\x69\
+\x69\x69\xf0\xf2\xf2\xc2\xe4\xc9\x93\x3f\xfe\xec\xb3\xcf\x96\x72\
+\x12\x0a\xf2\x24\xbd\x7a\xf5\x42\x46\x46\x46\x87\xaa\xaa\xaa\x13\
+\xf5\x3d\x6f\xb1\x58\xd0\xb2\x65\x4b\x36\xba\x7b\x9a\xbe\x7d\xfb\
+\xe2\x8b\x2f\xbe\xc0\xa6\x4d\x9b\x30\x64\xc8\x10\x04\x06\x06\x62\
+\xed\xda\xb5\x38\x7f\xfe\x3c\x8c\x46\x63\x9d\x21\x67\x88\x3c\x81\
+\x56\xab\x45\x40\x40\x40\x61\x40\x40\x40\x93\xcc\x5d\xc0\xc0\x72\
+\x13\xe3\xc7\x8f\x17\x7d\xfb\xf6\x95\x57\xae\x5c\x41\x9b\x36\x6d\
+\xc4\xf2\xe5\xcb\x65\x6a\x6a\x2a\xbe\xfb\xee\x3b\xc4\xc4\xc4\x60\
+\xee\xdc\xb9\xf6\x69\xbe\x89\xee\x54\x1c\xad\xc1\x4d\x0c\x1f\x3e\
+\x5c\x76\xea\xd4\xc9\xfe\x77\x4a\x4a\x8a\x28\x2b\x2b\x13\x52\x4a\
+\xf1\xd3\x4f\x3f\x89\xe8\xe8\x68\xce\xae\x43\x77\x3c\xd6\xb0\xdc\
+\x44\x62\x62\x22\xf2\xf3\xf3\x51\x58\x58\xe8\xf0\x85\xa0\x44\xee\
+\xac\x29\x26\x9d\x60\x60\xb9\xa9\xd8\xd8\x58\x44\x46\x46\x62\xf2\
+\xe4\xc9\x78\xfe\xf9\xe7\x65\x64\x64\x64\xad\x7e\x58\xc1\xc1\xc1\
+\x88\x8f\x8f\xe7\xb5\x84\xc4\x1a\x16\xb9\xde\xdb\x6f\xbf\x8d\xfd\
+\xfb\xf7\x43\xa5\x52\xe1\xcd\x37\xdf\xac\xd5\xc0\x6e\xb1\x58\xd0\
+\xa7\x4f\x1f\xdc\x7f\xff\xfd\xec\x87\x45\x0c\x2c\x72\xbd\x29\x53\
+\xa6\x20\x29\x29\x09\x03\x06\x0c\x80\x9f\x9f\x5f\x9d\xaa\xb4\x4a\
+\xa5\xaa\x75\x29\x0f\x11\x03\x8b\x5c\x66\xe5\xca\x95\xd8\xba\x75\
+\x2b\x12\x13\x13\xe1\x68\xaf\x5f\xa2\x3b\x0d\xcf\x12\xba\x89\x67\
+\x9e\x79\x06\x1d\x3b\x76\xc4\xf6\xed\xdb\x61\x34\x1a\x21\xa5\xac\
+\x73\x23\x62\x0d\x8b\xdc\xc2\xf1\xe3\xc7\x51\x59\x59\x89\x7f\xfc\
+\xe3\x1f\xd8\xba\x75\xab\x6c\xdd\xba\x75\xad\x46\xf7\xbb\xef\xbe\
+\x1b\x2f\xbe\xf8\xa2\xd0\x6a\xb5\x2c\x2c\x62\x60\x91\x6b\xe9\x74\
+\x3a\x0c\x1b\x36\x0c\x5e\x5e\x5e\x30\x99\x4c\xb5\xa6\xf5\xb6\x8d\
+\xd6\xf0\x57\xae\x6e\x27\x62\x60\x51\x93\x1b\x3b\x76\xac\x00\x60\
+\x9f\x78\x82\x88\xea\xe2\x4f\xb6\x1b\xc9\xcf\xcf\x97\x83\x07\x0f\
+\x96\x0a\x85\x42\x0a\x21\xe4\x27\x9f\x7c\x22\x53\x53\x53\xa5\x10\
+\x42\x66\x67\x67\xb3\x11\x8b\x18\x58\x2c\x02\xf7\xb0\x77\xef\x5e\
+\x39\x68\xd0\x20\x5c\xb8\x70\x01\xe9\xe9\xe9\xd6\x8d\xa3\x50\xe0\
+\x9d\x77\xde\x81\xb7\xb7\x37\x56\xaf\x5e\x5d\x6b\x7c\x2c\x22\x06\
+\x16\xb9\xcc\x9a\x35\x6b\x60\x30\x18\xb0\x68\xd1\x22\x3c\xf1\xc4\
+\x13\x00\xac\x83\x9b\x35\x6f\xde\x1c\x4a\xa5\x12\xa5\xa5\xa5\x68\
+\xc8\x0c\xb9\x44\x0c\x2c\x72\x1a\xa3\xd1\x08\xa5\x52\x09\x6f\x6f\
+\x6f\xd4\xd4\xd4\x00\xf8\xb3\x3d\xcb\x62\xb1\xc0\xcb\xcb\x8b\x8d\
+\xee\xc4\xc0\x62\x11\xb8\x4e\x55\x55\x15\xbe\xf8\xe2\x0b\xf9\xdb\
+\x6f\xbf\xc9\x3e\x7d\xfa\xc0\x68\x34\x22\x23\x23\xc3\x1e\x58\xb6\
+\xc9\x27\x6b\x6a\x6a\xd0\xbf\x7f\x7f\xce\x9a\x43\x77\x3c\x9e\x25\
+\x74\xa1\xb2\xb2\x32\x39\x66\xcc\x18\x2c\x5a\xb4\x08\x93\x27\x4f\
+\xc6\xd1\xa3\x47\xb1\x60\xc1\x02\x7c\xf2\xc9\x27\x00\x80\xd9\xb3\
+\x67\xe3\xe2\xc5\x8b\x78\xe6\x99\x67\xf0\xd4\x53\x4f\xf1\xc2\x67\
+\x62\x60\xb1\x08\x5c\xc7\x76\xc8\xa7\x54\x2a\xa1\x56\xab\xf1\xe6\
+\x9b\x6f\x62\xe8\xd0\xa1\xd8\xb5\x6b\x17\xca\xca\xca\xd0\xac\x59\
+\x33\x24\x26\x26\x22\x21\x21\x81\x7d\x1d\x88\x18\x58\xee\xe1\xd2\
+\xa5\x4b\x38\x7a\xf4\x28\x2c\x16\x0b\x7c\x7c\x7c\xf0\xc4\x13\x4f\
+\x40\xa1\x50\x40\x4a\x09\xa3\xd1\x88\x43\x87\x0e\x49\x1f\x1f\x1f\
+\x84\x87\x87\x0b\xb6\x63\x11\x03\x8b\x5c\xea\xf5\xd7\x5f\xc7\xeb\
+\xaf\xbf\x7e\xc3\xd7\xc4\xc7\xc7\x23\x3b\x3b\x9b\x53\xd5\x13\x03\
+\x8b\x5c\x6b\xfe\xfc\xf9\x18\x31\x62\x44\xad\xcb\x71\xae\xe5\xed\
+\xed\x5d\xce\x31\xdd\x89\x81\x45\x2e\xe7\xed\xed\x8d\xf0\xf0\x70\
+\xb6\x53\x11\xdd\x04\x1b\x44\x5c\xc8\x56\xa3\xb2\x75\x63\x20\x22\
+\xd6\xb0\xdc\x56\xcb\x96\x2d\xc5\x67\x9f\x7d\x26\x1f\x7c\xf0\x41\
+\x16\x06\x11\x03\xcb\xbd\xf9\xf8\xf8\x60\xfc\xf8\xf1\x3c\x14\x24\
+\xe2\x21\x21\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\x62\
+\x60\x59\xd9\xae\x87\x13\x42\x70\x34\x81\xeb\x50\xab\xd5\x50\x2a\
+\x95\xd0\x68\x34\x2c\x0c\x72\xaa\xdb\xfd\x02\xf9\x46\x9f\x25\x34\
+\x1a\x8d\x00\x00\xbd\x5e\x8f\x7f\xfd\xeb\x5f\x08\x08\x08\xe0\x50\
+\xbe\xd7\xb0\x58\x2c\xc8\xcb\xcb\x83\xc5\x62\x41\xab\x56\xad\x58\
+\x3e\xe4\x14\x1a\x8d\x06\xc7\x8e\x1d\x03\x60\xed\xdb\xa7\xd1\x68\
+\x3a\xdc\x8a\x1f\xe3\xeb\x55\x54\xa4\x94\x4d\x3e\x47\x81\x68\xec\
+\x7c\x77\xf1\xf1\xf1\x32\x37\x37\xd7\x5a\x5d\xe3\x85\xb9\xd7\xe5\
+\x8c\x8d\x47\x54\xdf\x8f\xa3\xcd\xab\xaf\xbe\x8a\x80\x80\x00\xe7\
+\xd5\x76\x54\x2a\x64\x65\x65\x21\x24\x24\x04\x31\x31\x31\xb5\x46\
+\xc4\x35\x18\x0c\x78\xf3\xcd\x37\x9b\x7c\x87\x6f\x74\x0d\xab\x7d\
+\xfb\xf6\xc8\xcd\xcd\xb5\x0f\x91\x42\x44\xae\x21\x84\x80\xc9\x64\
+\x82\xd1\x68\x84\x4e\xa7\x43\x60\x60\x20\xfc\xfc\xfc\x9c\x1a\x58\
+\xe1\xe1\xe1\x08\x0a\x0a\x82\xbf\xbf\x7f\xad\xb0\x74\xd6\xd5\x1b\
+\x8d\xae\x61\x15\x15\x15\xc9\xcc\xcc\x4c\xe8\x74\x3a\xa7\x16\x0e\
+\x11\xdd\x3c\xb0\xf4\x7a\x3d\x4a\x4b\x4b\xd1\xa9\x53\x27\x0c\x1e\
+\x3c\xd8\xa5\x55\x7a\xb7\x3b\x24\xe4\x61\x0e\x11\xdd\xd2\x50\x6e\
+\x6c\x0d\x8b\x88\xe8\x56\x61\x2b\x39\x11\x31\xb0\x88\x88\x18\x58\
+\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\x88\x81\x45\x44\
+\xc4\xc0\x22\x22\x62\x60\x11\x11\x03\x8b\x88\x88\x81\x45\x44\xc4\
+\xc0\x22\x22\x06\x16\x11\x11\x03\x8b\x88\x88\x81\x45\x44\x0c\x2c\
+\x22\x22\x06\x16\x11\x11\x03\x8b\x88\x18\x58\x44\x44\x0c\x2c\x22\
+\x22\x06\x16\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\x62\
+\x60\x11\x11\x31\xb0\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\
+\x11\x11\x03\x8b\x45\x40\x44\x0c\x2c\x22\x22\x06\x16\x11\x31\xb0\
+\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\x62\x60\x11\x11\x31\xb0\x88\
+\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\x88\
+\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x03\x8b\x88\x88\x81\
+\x45\x44\xc4\xc0\x22\xa2\xdb\xc8\xff\x03\x94\x2f\xf5\x90\x11\xa7\
+\x53\x72\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\
+"
+
+qt_resource_name = "\
+\x00\x08\
+\x0c\x35\x75\x76\
+\x00\x68\
+\x00\x65\x00\x6c\x00\x70\x00\x50\x00\x72\x00\x65\x00\x66\
+\x00\x13\
+\x05\xdd\x1a\x07\
+\x00\x54\
+\x00\x65\x00\x72\x00\x72\x00\x61\x00\x69\x00\x6e\x00\x45\x00\x78\x00\x74\x00\x65\x00\x6e\x00\x64\x00\x73\x00\x31\x00\x2e\x00\x70\
+\x00\x6e\x00\x67\
+"
+
+qt_resource_struct = "\
+\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x01\
+\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x02\
+\x00\x00\x00\x16\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\
+"
+
+def qInitResources():
+    QtCore.qRegisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)
+
+def qCleanupResources():
+    QtCore.qUnregisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)
+
+qInitResources()

Added: rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
===================================================================
--- rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-03 11:47:29 UTC (rev 4914)
+++ rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-03 15:20:21 UTC (rev 4915)
@@ -0,0 +1,597 @@
+<ui version="4.0" >
+ <class>TerrainManagerUi</class>
+ <widget class="QWidget" name="TerrainManagerUi" >
+  <property name="geometry" >
+   <rect>
+    <x>0</x>
+    <y>0</y>
+    <width>263</width>
+    <height>748</height>
+   </rect>
+  </property>
+  <property name="windowTitle" >
+   <string>Form</string>
+  </property>
+  <layout class="QGridLayout" name="gridLayout_2" >
+   <property name="margin" >
+    <number>1</number>
+   </property>
+   <property name="spacing" >
+    <number>1</number>
+   </property>
+   <item row="0" column="0" >
+    <widget class="QComboBox" name="comboBox" >
+     <item>
+      <property name="text" >
+       <string>No Terrain</string>
+      </property>
+     </item>
+    </widget>
+   </item>
+   <item row="1" column="0" >
+    <widget class="QToolBox" name="toolBox" >
+     <property name="frameShape" >
+      <enum>QFrame::NoFrame</enum>
+     </property>
+     <property name="frameShadow" >
+      <enum>QFrame::Plain</enum>
+     </property>
+     <property name="currentIndex" >
+      <number>0</number>
+     </property>
+     <property name="tabSpacing" >
+      <number>1</number>
+     </property>
+     <widget class="QWidget" name="page" >
+      <property name="geometry" >
+       <rect>
+        <x>0</x>
+        <y>0</y>
+        <width>261</width>
+        <height>637</height>
+       </rect>
+      </property>
+      <attribute name="label" >
+       <string>Create Terrain</string>
+      </attribute>
+      <layout class="QGridLayout" name="gridLayout" >
+       <property name="margin" >
+        <number>1</number>
+       </property>
+       <property name="spacing" >
+        <number>1</number>
+       </property>
+       <item row="0" column="0" colspan="2" >
+        <widget class="QLabel" name="label_6" >
+         <property name="sizePolicy" >
+          <sizepolicy vsizetype="Fixed" hsizetype="Preferred" >
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
+         </property>
+         <property name="text" >
+          <string>Geometry</string>
+         </property>
+         <property name="alignment" >
+          <set>Qt::AlignCenter</set>
+         </property>
+         <property name="buddy" >
+          <cstring>nameLineEdit</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="1" column="0" >
+        <widget class="QLabel" name="label" >
+         <property name="toolTip" >
+          <string>Name of the terrain</string>
+         </property>
+         <property name="text" >
+          <string>&amp;Name</string>
+         </property>
+         <property name="buddy" >
+          <cstring>nameLineEdit</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="1" column="1" >
+        <widget class="QLineEdit" name="nameLineEdit" >
+         <property name="toolTip" >
+          <string>Name of the terrain</string>
+         </property>
+        </widget>
+       </item>
+       <item row="2" column="0" >
+        <widget class="QLabel" name="label_2" >
+         <property name="toolTip" >
+          <string>Vertex density</string>
+         </property>
+         <property name="text" >
+          <string>&amp;Size</string>
+         </property>
+         <property name="buddy" >
+          <cstring>sizeComboBox</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="2" column="1" >
+        <widget class="QComboBox" name="sizeComboBox" >
+         <property name="toolTip" >
+          <string>Vertex density</string>
+         </property>
+         <item>
+          <property name="text" >
+           <string>8</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>16</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>32</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>64</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>128</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>256</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>512</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>1024</string>
+          </property>
+         </item>
+        </widget>
+       </item>
+       <item row="3" column="1" >
+        <widget class="QDoubleSpinBox" name="positionSpinBoxX" >
+         <property name="sizePolicy" >
+          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
+         </property>
+         <property name="toolTip" >
+          <string>Position of the terrain</string>
+         </property>
+         <property name="prefix" >
+          <string>X:</string>
+         </property>
+         <property name="maximum" >
+          <double>999999999.000000000000000</double>
+         </property>
+        </widget>
+       </item>
+       <item row="4" column="0" >
+        <widget class="QLabel" name="label_11" >
+         <property name="toolTip" >
+          <string>Position of the terrain</string>
+         </property>
+         <property name="text" >
+          <string>&amp;Position</string>
+         </property>
+         <property name="buddy" >
+          <cstring>extendsSpinBoxX</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="4" column="1" >
+        <widget class="QDoubleSpinBox" name="positionSpinBoxY" >
+         <property name="sizePolicy" >
+          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
+         </property>
+         <property name="toolTip" >
+          <string>Position of the terrain</string>
+         </property>
+         <property name="prefix" >
+          <string>Y:</string>
+         </property>
+         <property name="maximum" >
+          <double>999999999.000000000000000</double>
+         </property>
+        </widget>
+       </item>
+       <item row="5" column="1" >
+        <widget class="QDoubleSpinBox" name="positionSpinBoxZ" >
+         <property name="sizePolicy" >
+          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
+         </property>
+         <property name="toolTip" >
+          <string>Position of the terrain</string>
+         </property>
+         <property name="prefix" >
+          <string>Z:</string>
+         </property>
+         <property name="suffix" >
+          <string/>
+         </property>
+         <property name="maximum" >
+          <double>999999999.000000000000000</double>
+         </property>
+        </widget>
+       </item>
+       <item row="6" column="1" >
+        <widget class="QSpinBox" name="extendsSpinBoxX" >
+         <property name="sizePolicy" >
+          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
+         </property>
+         <property name="toolTip" >
+          <string>The extends of the terrain</string>
+         </property>
+         <property name="correctionMode" >
+          <enum>QAbstractSpinBox::CorrectToNearestValue</enum>
+         </property>
+         <property name="suffix" >
+          <string/>
+         </property>
+         <property name="prefix" >
+          <string>X:</string>
+         </property>
+         <property name="minimum" >
+          <number>128</number>
+         </property>
+         <property name="maximum" >
+          <number>10000</number>
+         </property>
+        </widget>
+       </item>
+       <item row="7" column="0" >
+        <widget class="QLabel" name="label_3" >
+         <property name="toolTip" >
+          <string>The extends of the terrain</string>
+         </property>
+         <property name="text" >
+          <string>&amp;Extends</string>
+         </property>
+         <property name="buddy" >
+          <cstring>extendsSpinBoxX</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="7" column="1" >
+        <widget class="QSpinBox" name="extendsSpinBoxY" >
+         <property name="sizePolicy" >
+          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
+         </property>
+         <property name="toolTip" >
+          <string>The extends of the terrain</string>
+         </property>
+         <property name="correctionMode" >
+          <enum>QAbstractSpinBox::CorrectToNearestValue</enum>
+         </property>
+         <property name="suffix" >
+          <string/>
+         </property>
+         <property name="prefix" >
+          <string>Y:</string>
+         </property>
+         <property name="minimum" >
+          <number>128</number>
+         </property>
+         <property name="maximum" >
+          <number>10000</number>
+         </property>
+        </widget>
+       </item>
+       <item row="8" column="1" >
+        <widget class="QSpinBox" name="extendsSpinBoxZ" >
+         <property name="sizePolicy" >
+          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
+         </property>
+         <property name="toolTip" >
+          <string>The extends of the terrain</string>
+         </property>
+         <property name="correctionMode" >
+          <enum>QAbstractSpinBox::CorrectToNearestValue</enum>
+         </property>
+         <property name="suffix" >
+          <string/>
+         </property>
+         <property name="prefix" >
+          <string>Z:</string>
+         </property>
+         <property name="minimum" >
+          <number>128</number>
+         </property>
+         <property name="maximum" >
+          <number>10000</number>
+         </property>
+        </widget>
+       </item>
+       <item row="9" column="0" >
+        <widget class="QLabel" name="label_10" >
+         <property name="toolTip" >
+          <string>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
+&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
+p, li { white-space: pre-wrap; }
+&lt;/style>&lt;/head>&lt;body style=" font-family:'Sans Serif'; font-size:9pt; font-weight:400; font-style:normal;">
+&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">This value means how high the vertices are placed in relation to the terrain extend in Y.&lt;/p>
+&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5&lt;/p>
+&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">the vertices are placed in at height 50.&lt;/p>
+&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;img src=":/helpPref/TerrainExtends1.png" />&lt;/p>&lt;/body>&lt;/html></string>
+         </property>
+         <property name="text" >
+          <string>&amp;Height</string>
+         </property>
+         <property name="buddy" >
+          <cstring>extendsSpinBoxX</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="9" column="1" >
+        <widget class="QDoubleSpinBox" name="terrainHeightSpinBox" >
+         <property name="sizePolicy" >
+          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
+         </property>
+         <property name="toolTip" >
+          <string>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
+&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
+p, li { white-space: pre-wrap; }
+&lt;/style>&lt;/head>&lt;body style=" font-family:'Sans Serif'; font-size:9pt; font-weight:400; font-style:normal;">
+&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">This value means how high the vertices are placed in relation to the terrain extend in Y.&lt;/p>
+&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5&lt;/p>
+&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">the vertices are placed in at height 50.&lt;/p>
+&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;img src=":/helpPref/TerrainExtends1.png" />&lt;/p>&lt;/body>&lt;/html></string>
+         </property>
+         <property name="maximum" >
+          <double>1.000000000000000</double>
+         </property>
+         <property name="singleStep" >
+          <double>0.100000000000000</double>
+         </property>
+         <property name="value" >
+          <double>0.500000000000000</double>
+         </property>
+        </widget>
+       </item>
+       <item row="10" column="0" colspan="2" >
+        <widget class="QLabel" name="label_7" >
+         <property name="sizePolicy" >
+          <sizepolicy vsizetype="Fixed" hsizetype="Preferred" >
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
+         </property>
+         <property name="text" >
+          <string>Splatting Settings</string>
+         </property>
+         <property name="alignment" >
+          <set>Qt::AlignCenter</set>
+         </property>
+         <property name="buddy" >
+          <cstring>baseNameLineEdit</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="11" column="0" >
+        <widget class="QLabel" name="label_4" >
+         <property name="toolTip" >
+          <string>Base name for the map textures (will be appended by their number)</string>
+         </property>
+         <property name="text" >
+          <string>&amp;Base Name</string>
+         </property>
+         <property name="buddy" >
+          <cstring>baseNameLineEdit</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="11" column="1" >
+        <widget class="QLineEdit" name="baseNameLineEdit" >
+         <property name="toolTip" >
+          <string>Base name for the map textures (will be appended by their number)</string>
+         </property>
+         <property name="text" >
+          <string>ETSplatting</string>
+         </property>
+        </widget>
+       </item>
+       <item row="12" column="0" >
+        <widget class="QLabel" name="label_5" >
+         <property name="toolTip" >
+          <string>The resource group the textures will be placed in</string>
+         </property>
+         <property name="text" >
+          <string>&amp;Res Group</string>
+         </property>
+         <property name="buddy" >
+          <cstring>resGroupLineEdit</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="12" column="1" >
+        <widget class="QLineEdit" name="resGroupLineEdit" >
+         <property name="toolTip" >
+          <string>The resource group the textures will be placed in</string>
+         </property>
+         <property name="text" >
+          <string>ET</string>
+         </property>
+        </widget>
+       </item>
+       <item row="13" column="0" >
+        <widget class="QLabel" name="label_8" >
+         <property name="toolTip" >
+          <string>Texture size in pixels</string>
+         </property>
+         <property name="text" >
+          <string>&amp;Tex Size</string>
+         </property>
+         <property name="buddy" >
+          <cstring>texSizeComboBox</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="13" column="1" >
+        <widget class="QComboBox" name="texSizeComboBox" >
+         <property name="toolTip" >
+          <string>Texture size in pixels</string>
+         </property>
+         <item>
+          <property name="text" >
+           <string>64</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>128</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>256</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>512</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>1024</string>
+          </property>
+         </item>
+        </widget>
+       </item>
+       <item row="14" column="0" >
+        <widget class="QLabel" name="label_9" >
+         <property name="toolTip" >
+          <string>Number of splatting textures (Layers)</string>
+         </property>
+         <property name="text" >
+          <string>&amp;NumTextures</string>
+         </property>
+         <property name="buddy" >
+          <cstring>numTexturesComboBox</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="14" column="1" >
+        <widget class="QComboBox" name="numTexturesComboBox" >
+         <property name="toolTip" >
+          <string>Number of splatting textures (Layers)</string>
+         </property>
+         <item>
+          <property name="text" >
+           <string>1</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>2</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>3</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>4</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>5</string>
+          </property>
+         </item>
+         <item>
+          <property name="text" >
+           <string>6</string>
+          </property>
+         </item>
+        </widget>
+       </item>
+       <item row="15" column="0" colspan="2" >
+        <widget class="QPushButton" name="createTerrainButton" >
+         <property name="text" >
+          <string>Create Terrain</string>
+         </property>
+        </widget>
+       </item>
+      </layout>
+     </widget>
+     <widget class="QWidget" name="page_2" >
+      <property name="geometry" >
+       <rect>
+        <x>0</x>
+        <y>0</y>
+        <width>261</width>
+        <height>637</height>
+       </rect>
+      </property>
+      <attribute name="label" >
+       <string>ModifyTerrain</string>
+      </attribute>
+     </widget>
+     <widget class="QWidget" name="Seite" >
+      <property name="geometry" >
+       <rect>
+        <x>0</x>
+        <y>0</y>
+        <width>261</width>
+        <height>637</height>
+       </rect>
+      </property>
+      <attribute name="label" >
+       <string>PaintTerrain</string>
+      </attribute>
+     </widget>
+    </widget>
+   </item>
+  </layout>
+ </widget>
+ <tabstops>
+  <tabstop>nameLineEdit</tabstop>
+  <tabstop>sizeComboBox</tabstop>
+  <tabstop>extendsSpinBoxX</tabstop>
+  <tabstop>extendsSpinBoxY</tabstop>
+  <tabstop>extendsSpinBoxZ</tabstop>
+  <tabstop>baseNameLineEdit</tabstop>
+  <tabstop>resGroupLineEdit</tabstop>
+  <tabstop>texSizeComboBox</tabstop>
+  <tabstop>numTexturesComboBox</tabstop>
+  <tabstop>createTerrainButton</tabstop>
+ </tabstops>
+ <resources>
+  <include location="../src/media/help/help.qrc" />
+ </resources>
+ <connections/>
+</ui>



From fusion2 at mail.berlios.de  Sun May  3 18:38:13 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Sun, 3 May 2009 18:38:13 +0200
Subject: [Dsa-hl-svn] r4916 - in rl/trunk/editors/Lockenwickler: src
	src/media ui files
Message-ID: <200905031638.n43GcDlN029129@sheep.berlios.de>

Author: fusion2
Date: 2009-05-03 18:38:09 +0200 (Sun, 03 May 2009)
New Revision: 4916

Modified:
   rl/trunk/editors/Lockenwickler/src/
   rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
   rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
   rl/trunk/editors/Lockenwickler/src/media/
   rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
Log:
- bugfixes


Property changes on: rl/trunk/editors/Lockenwickler/src
___________________________________________________________________
Name: svn:ignore
   - ogre.cfg
SelectionBuffer - Kopie.py

   + ogre.cfg
SelectionBuffer - Kopie.py
ogre.log
depthbuffer.png


Modified: rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-03 15:20:21 UTC (rev 4915)
+++ rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-03 16:38:09 UTC (rev 4916)
@@ -1,155 +1,157 @@
-#################################################
-# This source file is part of Rastullahs Lockenwickler.
-# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-#  but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
-#################################################
-
-from PyQt4.QtCore import *
-from PyQt4.QtGui import *
-
-import ogre.renderer.OGRE as og
-import ogre.addons.et as ET
-
-import Ui_MyTerrainManagerDock
-
-class MyTerrainManagerDock(Ui_MyTerrainManagerDock.Ui_TerrainManagerUi, QWidget):
-    def __init__(self, parent):
-        super(MyTerrainManagerDock, self).__init__(parent)
-        self.setupUi(self)
-        QWidget.connect(self.createTerrainButton, SIGNAL("clicked()"), self.onCreateTerrainButtonClicked)
-        
-    def onCreateTerrainButtonClicked(self):
-        terrainData = {}
-        terrainData["name"]  = str(self.nameLineEdit.text())
-        terrainData["size"]  = int(self.sizeComboBox.currentText())
-        terrainData["positionX"]  = self.positionSpinBoxX.value()
-        terrainData["positionY"]  = self.positionSpinBoxY.value()
-        terrainData["positionZ"]  = self.positionSpinBoxZ.value()
-        terrainData["extendsX"]  = self.extendsSpinBoxX.value()
-        terrainData["extendsY"]  = self.extendsSpinBoxY.value()
-        terrainData["extendsZ"]  = self.extendsSpinBoxZ.value()
-        terrainData["terrainSize"] = int(self.sizeComboBox.currentText())
-        terrainData["terrainHeight"]  = self.terrainHeightSpinBox.value()
-        terrainData["splattingBaseName"]  = str(self.baseNameLineEdit.text())
-        terrainData["splattingResGroup"]  = str(self.resGroupLineEdit.text())
-        terrainData["splattingTexturSize"]  = int(self.texSizeComboBox.currentText())
-        terrainData["splattingNumTextures"]  = int(self.numTexturesComboBox.currentText())
-        
-        self.emit(SIGNAL("createTerrain"), terrainData)
-        
-class Terrain():
-    def __init__(self, sceneManager):
-        self.sceneManager = sceneManager
-        self.camera = self.sceneManager.getCamera("MainCam")
-        self.position = og.Vector3()
-        self.extends = og.Vector3(128, 50, 128)
-        self.terrainHeight = 0.5
-        self.name = ""
-        self.terrainSize = 129
-        self.splattingBaseName = "ETSplatting"
-        self.splattingResGroup = "ET"
-        self.splattingTexturSize = 128
-        self.splattingNumTextures = 6
-        
-        ## create terrain manager
-        self.terrainManager =  ET.TerrainManager(self.sceneManager)
-        self.terrainManager.setLODErrorMargin(2, self.camera.getViewport().getActualHeight())
-        self.terrainManager.setUseLODMorphing(True, 0.2, "morphFactor")
-    
-    def create(self, arg):
-        self.name = arg["name"]
-        self.position = og.Vector3(arg["positionX"], arg["positionY"], arg["positionZ"])
-        self.extends = og.Vector3(arg["extendsX"], arg["extendsY"], arg["extendsZ"]) + 1
-        self.terrainHeight = arg["terrainHeight"]
-        self.terrainSize = arg["terrainSize"]
-        self.splattingBaseName = arg["splattingBaseName"]
-        self.splattingResGroup = arg["splattingResGroup"]
-        self.splattingTexturSize = arg["splattingTexturSize"]
-        self.splattingNumTextures = arg["splattingNumTextures"]
-        
-        
-        ## create a fresh, mid-high terrain for editing
-        # Note 
-        heightMapValues = og.LodDistanceList() ## ET.stdVectorFloat()
-        for i in xrange(self.terrainSize):
-            for j in xrange(self.terrainSize):
-                heightMapValues.append(float(self.terrainHeight))
-        # width, height, heightmapvalues as a float array
-        self.terrainInfo = ET.TerrainInfo (self.terrainSize, self.terrainSize, heightMapValues )
-        
-        ## save typing self
-        terrainInfo  = self.terrainInfo 
-        sceneManager = self.sceneManager
-        terrainMgr   = self.terrainManager
-        
-        ## set position and size of the terrain
-        half = self.extends / 2
-        minPos = self.position - half
-        maxPos = self.position + half
-        terrainInfo.setExtents(og.AxisAlignedBox(minPos.x, minPos.y, minPos.z, minPos.x, minPos.y, minPos.z))
-
-        ## now render it
-        terrainMgr.createTerrain(terrainInfo)
-
-        ## create the splatting manager
-#        * @param baseName   base name for the map textures (will be appended by their number)
-#        * @param group      the resource group the textures will be placed in
-#        * @param width      width of the textures in pixels
-#        * @param height     height of the textures in pixels
-#        * @param channels   Number of channels per texture (must be in {1, 2, 3, 4})
-        self.splatMgr = ET.SplattingManager(self.splattingBaseName, self.splattingResGroup, self.splattingTexturSize, self.splattingTexturSize, 3)
-        ## specify number of splatting textures we need to handle
-        self.splatMgr.setNumTextures(self.numTextures)
-
-        ## create a manual lightmap texture
-        lightmapTex = og.TextureManager.getSingleton().createManual(
-        self.splattingBaseName, self.splattingResGroup, og.TEX_TYPE_2D, self.splattingTexturSize, self.splattingTexturSize, 1, og.PF_BYTE_RGB)
-
-        lightmap = og.Image()
-        ET.createTerrainLightmap(terrainInfo, lightmap, 128, 128,\
-                                 og.Vector3(1, -1, 1),\
-                                 og.ColourValue().White,\
-                                 og.ColourValue(0.3, 0.3, 0.3,1.0))
-        lightmapTex.getBuffer(0, 0).blitFromMemory(lightmap.getPixelBox(0, 0))
-
-        ##  load the terrain material and assign it
-#        material = og.MaterialManager.getSingleton().getByName("ETTerrainMaterial")
-        material = og.MaterialManager.getSingleton().getByName("Lockenwickler_Area")
-        self.terrainManager.setMaterial(material)
-        
-class MyTerrainManager():
-    def __init__(self, sceneManager):
-        self.sceneManager = sceneManager
-        self.dockWidgetContents = None
-
-    def getDockWidget(self, parent):
-        if self.dockWidgetContents is None:
-            self.dockWidgetContents = MyTerrainManagerDock(parent)
-            self.myTerrainManagerDock = QDockWidget("Terrain Tools", parent)
-            self.myTerrainManagerDock.setObjectName("TerrainToolsDockWindow")
-            self.myTerrainManagerDock.setAllowedAreas(Qt.LeftDockWidgetArea | Qt.RightDockWidgetArea)
-            self.myTerrainManagerDock.setWidget(self.dockWidgetContents)
-            self.myTerrainManagerDock.setWindowIcon(QIcon("media/icons/terrain_small.png"))
-            parent.addDockWidget(Qt.LeftDockWidgetArea, self.myTerrainManagerDock)
-            
-            QWidget.connect(self.dockWidgetContents, SIGNAL("createTerrain"), self.onCreateTerrain)
-            
-            
-        return self.myTerrainManagerDock
-
-    def onCreateTerrain(self, arg):
-        self.terrain = Terrain(self.sceneManager)
-        self.terrain.create(arg)
+#################################################
+# This source file is part of Rastullahs Lockenwickler.
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+#  but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
+#################################################
+
+from PyQt4.QtCore import *
+from PyQt4.QtGui import *
+
+import ogre.renderer.OGRE as og
+import ogre.addons.et as ET
+
+import Ui_MyTerrainManagerDock
+
+class MyTerrainManagerDock(Ui_MyTerrainManagerDock.Ui_TerrainManagerUi, QWidget):
+    def __init__(self, parent):
+        super(MyTerrainManagerDock, self).__init__(parent)
+        self.setupUi(self)
+        QWidget.connect(self.createTerrainButton, SIGNAL("clicked()"), self.onCreateTerrainButtonClicked)
+        
+    def onCreateTerrainButtonClicked(self):
+        terrainData = {}
+        terrainData["name"]  = str(self.nameLineEdit.text())
+        terrainData["size"]  = int(self.sizeComboBox.currentText())
+        terrainData["positionX"]  = self.positionSpinBoxX.value()
+        terrainData["positionY"]  = self.positionSpinBoxY.value()
+        terrainData["positionZ"]  = self.positionSpinBoxZ.value()
+        terrainData["extendsX"]  = self.extendsSpinBoxX.value()
+        terrainData["extendsY"]  = self.extendsSpinBoxY.value()
+        terrainData["extendsZ"]  = self.extendsSpinBoxZ.value()
+        terrainData["terrainSize"] = int(self.sizeComboBox.currentText())
+        terrainData["terrainHeight"]  = self.terrainHeightSpinBox.value()
+        terrainData["splattingBaseName"]  = str(self.baseNameLineEdit.text())
+        terrainData["splattingResGroup"]  = str(self.resGroupLineEdit.text())
+        terrainData["splattingTexturSize"]  = int(self.texSizeComboBox.currentText())
+        terrainData["splattingNumTextures"]  = int(self.numTexturesComboBox.currentText())
+        
+        self.emit(SIGNAL("createTerrain"), terrainData)
+        
+class Terrain():
+    def __init__(self, sceneManager):
+        self.sceneManager = sceneManager
+        self.camera = self.sceneManager.getCamera("MainCam")
+        self.position = og.Vector3()
+        self.extends = og.Vector3(128, 50, 128)
+        self.terrainHeight = 0.5
+        self.name = ""
+        self.terrainSize = 129
+        self.splattingBaseName = "ETSplatting"
+        self.splattingResGroup = "ET"
+        self.splattingTexturSize = 128
+        self.splattingNumTextures = 6
+        
+        ## create terrain manager
+        self.terrainManager =  ET.TerrainManager(self.sceneManager)
+        self.terrainManager.setLODErrorMargin(2, self.camera.getViewport().getActualHeight())
+        self.terrainManager.setUseLODMorphing(True, 0.2, "morphFactor")
+    
+    def create(self, arg):
+        self.name = arg["name"]
+        self.position = og.Vector3(arg["positionX"], arg["positionY"], arg["positionZ"])
+        self.extends = og.Vector3(arg["extendsX"], arg["extendsY"], arg["extendsZ"])
+        self.terrainHeight = arg["terrainHeight"]
+        self.terrainSize = arg["terrainSize"] + 1
+        self.splattingBaseName = arg["splattingBaseName"]
+        self.splattingResGroup = arg["splattingResGroup"]
+        self.splattingTexturSize = arg["splattingTexturSize"]
+        self.splattingNumTextures = arg["splattingNumTextures"]
+        
+        
+        ## create a fresh, mid-high terrain for editing
+        # Note 
+        heightMapValues = og.LodDistanceList() ## ET.stdVectorFloat()
+        for i in xrange(self.terrainSize):
+            for j in xrange(self.terrainSize):
+                heightMapValues.append(self.terrainHeight)
+        # width, height, heightmapvalues as a float array
+        self.terrainInfo = ET.TerrainInfo (self.terrainSize, self.terrainSize, heightMapValues )
+        
+        ## save typing self
+        terrainInfo  = self.terrainInfo 
+        sceneManager = self.sceneManager
+        terrainMgr   = self.terrainManager
+        
+        ## set position and size of the terrain
+        half = self.extends / 2
+        minPos = self.position - half
+        maxPos = self.position + half
+        terrainInfo.setExtents(og.AxisAlignedBox(int(minPos.x), int(minPos.y), int(minPos.z), int(minPos.x), int(minPos.y), int(minPos.z)))
+
+        print minPos.x, minPos.y, minPos.z, minPos.x, minPos.y, minPos.z
+
+        ## now render it
+        terrainMgr.createTerrain(terrainInfo)
+
+        ## create the splatting manager
+#        * @param baseName   base name for the map textures (will be appended by their number)
+#        * @param group      the resource group the textures will be placed in
+#        * @param width      width of the textures in pixels
+#        * @param height     height of the textures in pixels
+#        * @param channels   Number of channels per texture (must be in {1, 2, 3, 4})
+        self.splatMgr = ET.SplattingManager(self.splattingBaseName, self.splattingResGroup, self.splattingTexturSize, self.splattingTexturSize, 3)
+        ## specify number of splatting textures we need to handle
+        self.splatMgr.setNumTextures(self.splattingNumTextures)
+
+        ## create a manual lightmap texture
+        lightmapTex = og.TextureManager.getSingleton().createManual(
+        self.splattingBaseName, self.splattingResGroup, og.TEX_TYPE_2D, self.splattingTexturSize, self.splattingTexturSize, 1, og.PF_BYTE_RGB)
+
+        lightmap = og.Image()
+        ET.createTerrainLightmap(terrainInfo, lightmap, 128, 128,\
+                                 og.Vector3(1, -1, 1),\
+                                 og.ColourValue().White,\
+                                 og.ColourValue(0.3, 0.3, 0.3,1.0))
+        lightmapTex.getBuffer(0, 0).blitFromMemory(lightmap.getPixelBox(0, 0))
+
+        ##  load the terrain material and assign it
+        material = og.MaterialManager.getSingleton().getByName("ETTerrainMaterial")
+#        material = og.MaterialManager.getSingleton().getByName("Lockenwickler_Area")
+        self.terrainManager.setMaterial(material)
+        
+class MyTerrainManager():
+    def __init__(self, sceneManager):
+        self.sceneManager = sceneManager
+        self.dockWidgetContents = None
+
+    def getDockWidget(self, parent):
+        if self.dockWidgetContents is None:
+            self.dockWidgetContents = MyTerrainManagerDock(parent)
+            self.myTerrainManagerDock = QDockWidget("Terrain Tools", parent)
+            self.myTerrainManagerDock.setObjectName("TerrainToolsDockWindow")
+            self.myTerrainManagerDock.setAllowedAreas(Qt.LeftDockWidgetArea | Qt.RightDockWidgetArea)
+            self.myTerrainManagerDock.setWidget(self.dockWidgetContents)
+            self.myTerrainManagerDock.setWindowIcon(QIcon("media/icons/terrain_small.png"))
+            parent.addDockWidget(Qt.LeftDockWidgetArea, self.myTerrainManagerDock)
+            
+            QWidget.connect(self.dockWidgetContents, SIGNAL("createTerrain"), self.onCreateTerrain)
+            
+            
+        return self.myTerrainManagerDock
+
+    def onCreateTerrain(self, arg):
+        self.terrain = Terrain(self.sceneManager)
+        self.terrain.create(arg)

Modified: rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-03 15:20:21 UTC (rev 4915)
+++ rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-03 16:38:09 UTC (rev 4916)
@@ -1,319 +1,323 @@
-# -*- coding: utf-8 -*-
-
-# Form implementation generated from reading ui file '/home/fusion/dev/ui files/MyTerrainManagerDock.ui'
-#
-# Created: Sun May  3 16:55:48 2009
-#      by: PyQt4 UI code generator 4.4.4
-#
-# WARNING! All changes made in this file will be lost!
-
-from PyQt4 import QtCore, QtGui
-
-class Ui_TerrainManagerUi(object):
-    def setupUi(self, TerrainManagerUi):
-        TerrainManagerUi.setObjectName("TerrainManagerUi")
-        TerrainManagerUi.resize(263, 748)
-        self.gridLayout_2 = QtGui.QGridLayout(TerrainManagerUi)
-        self.gridLayout_2.setMargin(1)
-        self.gridLayout_2.setSpacing(1)
-        self.gridLayout_2.setObjectName("gridLayout_2")
-        self.comboBox = QtGui.QComboBox(TerrainManagerUi)
-        self.comboBox.setObjectName("comboBox")
-        self.comboBox.addItem(QtCore.QString())
-        self.gridLayout_2.addWidget(self.comboBox, 0, 0, 1, 1)
-        self.toolBox = QtGui.QToolBox(TerrainManagerUi)
-        self.toolBox.setFrameShape(QtGui.QFrame.NoFrame)
-        self.toolBox.setFrameShadow(QtGui.QFrame.Plain)
-#        self.toolBox.setTabSpacing(1)
-        self.toolBox.setObjectName("toolBox")
-        self.page = QtGui.QWidget()
-        self.page.setGeometry(QtCore.QRect(0, 0, 261, 637))
-        self.page.setObjectName("page")
-        self.gridLayout = QtGui.QGridLayout(self.page)
-        self.gridLayout.setMargin(1)
-        self.gridLayout.setSpacing(1)
-        self.gridLayout.setObjectName("gridLayout")
-        self.label_6 = QtGui.QLabel(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
-        self.label_6.setSizePolicy(sizePolicy)
-        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
-        self.label_6.setObjectName("label_6")
-        self.gridLayout.addWidget(self.label_6, 0, 0, 1, 2)
-        self.label = QtGui.QLabel(self.page)
-        self.label.setObjectName("label")
-        self.gridLayout.addWidget(self.label, 1, 0, 1, 1)
-        self.nameLineEdit = QtGui.QLineEdit(self.page)
-        self.nameLineEdit.setObjectName("nameLineEdit")
-        self.gridLayout.addWidget(self.nameLineEdit, 1, 1, 1, 1)
-        self.label_2 = QtGui.QLabel(self.page)
-        self.label_2.setObjectName("label_2")
-        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
-        self.sizeComboBox = QtGui.QComboBox(self.page)
-        self.sizeComboBox.setObjectName("sizeComboBox")
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.gridLayout.addWidget(self.sizeComboBox, 2, 1, 1, 1)
-        self.positionSpinBoxX = QtGui.QDoubleSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.positionSpinBoxX.sizePolicy().hasHeightForWidth())
-        self.positionSpinBoxX.setSizePolicy(sizePolicy)
-        self.positionSpinBoxX.setMaximum(999999999.0)
-        self.positionSpinBoxX.setObjectName("positionSpinBoxX")
-        self.gridLayout.addWidget(self.positionSpinBoxX, 3, 1, 1, 1)
-        self.label_11 = QtGui.QLabel(self.page)
-        self.label_11.setObjectName("label_11")
-        self.gridLayout.addWidget(self.label_11, 4, 0, 1, 1)
-        self.positionSpinBoxY = QtGui.QDoubleSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.positionSpinBoxY.sizePolicy().hasHeightForWidth())
-        self.positionSpinBoxY.setSizePolicy(sizePolicy)
-        self.positionSpinBoxY.setMaximum(999999999.0)
-        self.positionSpinBoxY.setObjectName("positionSpinBoxY")
-        self.gridLayout.addWidget(self.positionSpinBoxY, 4, 1, 1, 1)
-        self.positionSpinBoxZ = QtGui.QDoubleSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.positionSpinBoxZ.sizePolicy().hasHeightForWidth())
-        self.positionSpinBoxZ.setSizePolicy(sizePolicy)
-        self.positionSpinBoxZ.setMaximum(999999999.0)
-        self.positionSpinBoxZ.setObjectName("positionSpinBoxZ")
-        self.gridLayout.addWidget(self.positionSpinBoxZ, 5, 1, 1, 1)
-        self.extendsSpinBoxX = QtGui.QSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.extendsSpinBoxX.sizePolicy().hasHeightForWidth())
-        self.extendsSpinBoxX.setSizePolicy(sizePolicy)
-        self.extendsSpinBoxX.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
-        self.extendsSpinBoxX.setMinimum(128)
-        self.extendsSpinBoxX.setMaximum(10000)
-        self.extendsSpinBoxX.setObjectName("extendsSpinBoxX")
-        self.gridLayout.addWidget(self.extendsSpinBoxX, 6, 1, 1, 1)
-        self.label_3 = QtGui.QLabel(self.page)
-        self.label_3.setObjectName("label_3")
-        self.gridLayout.addWidget(self.label_3, 7, 0, 1, 1)
-        self.extendsSpinBoxY = QtGui.QSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.extendsSpinBoxY.sizePolicy().hasHeightForWidth())
-        self.extendsSpinBoxY.setSizePolicy(sizePolicy)
-        self.extendsSpinBoxY.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
-        self.extendsSpinBoxY.setMinimum(128)
-        self.extendsSpinBoxY.setMaximum(10000)
-        self.extendsSpinBoxY.setObjectName("extendsSpinBoxY")
-        self.gridLayout.addWidget(self.extendsSpinBoxY, 7, 1, 1, 1)
-        self.extendsSpinBoxZ = QtGui.QSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.extendsSpinBoxZ.sizePolicy().hasHeightForWidth())
-        self.extendsSpinBoxZ.setSizePolicy(sizePolicy)
-        self.extendsSpinBoxZ.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
-        self.extendsSpinBoxZ.setMinimum(128)
-        self.extendsSpinBoxZ.setMaximum(10000)
-        self.extendsSpinBoxZ.setObjectName("extendsSpinBoxZ")
-        self.gridLayout.addWidget(self.extendsSpinBoxZ, 8, 1, 1, 1)
-        self.label_10 = QtGui.QLabel(self.page)
-        self.label_10.setObjectName("label_10")
-        self.gridLayout.addWidget(self.label_10, 9, 0, 1, 1)
-        self.terrainHeightSpinBox = QtGui.QDoubleSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.terrainHeightSpinBox.sizePolicy().hasHeightForWidth())
-        self.terrainHeightSpinBox.setSizePolicy(sizePolicy)
-        self.terrainHeightSpinBox.setMaximum(1.0)
-        self.terrainHeightSpinBox.setSingleStep(0.1)
-        self.terrainHeightSpinBox.setProperty("value", QtCore.QVariant(0.5))
-        self.terrainHeightSpinBox.setObjectName("terrainHeightSpinBox")
-        self.gridLayout.addWidget(self.terrainHeightSpinBox, 9, 1, 1, 1)
-        self.label_7 = QtGui.QLabel(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
-        self.label_7.setSizePolicy(sizePolicy)
-        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
-        self.label_7.setObjectName("label_7")
-        self.gridLayout.addWidget(self.label_7, 10, 0, 1, 2)
-        self.label_4 = QtGui.QLabel(self.page)
-        self.label_4.setObjectName("label_4")
-        self.gridLayout.addWidget(self.label_4, 11, 0, 1, 1)
-        self.baseNameLineEdit = QtGui.QLineEdit(self.page)
-        self.baseNameLineEdit.setObjectName("baseNameLineEdit")
-        self.gridLayout.addWidget(self.baseNameLineEdit, 11, 1, 1, 1)
-        self.label_5 = QtGui.QLabel(self.page)
-        self.label_5.setObjectName("label_5")
-        self.gridLayout.addWidget(self.label_5, 12, 0, 1, 1)
-        self.resGroupLineEdit = QtGui.QLineEdit(self.page)
-        self.resGroupLineEdit.setObjectName("resGroupLineEdit")
-        self.gridLayout.addWidget(self.resGroupLineEdit, 12, 1, 1, 1)
-        self.label_8 = QtGui.QLabel(self.page)
-        self.label_8.setObjectName("label_8")
-        self.gridLayout.addWidget(self.label_8, 13, 0, 1, 1)
-        self.texSizeComboBox = QtGui.QComboBox(self.page)
-        self.texSizeComboBox.setObjectName("texSizeComboBox")
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.gridLayout.addWidget(self.texSizeComboBox, 13, 1, 1, 1)
-        self.label_9 = QtGui.QLabel(self.page)
-        self.label_9.setObjectName("label_9")
-        self.gridLayout.addWidget(self.label_9, 14, 0, 1, 1)
-        self.numTexturesComboBox = QtGui.QComboBox(self.page)
-        self.numTexturesComboBox.setObjectName("numTexturesComboBox")
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.gridLayout.addWidget(self.numTexturesComboBox, 14, 1, 1, 1)
-        self.createTerrainButton = QtGui.QPushButton(self.page)
-        self.createTerrainButton.setObjectName("createTerrainButton")
-        self.gridLayout.addWidget(self.createTerrainButton, 15, 0, 1, 2)
-        self.toolBox.addItem(self.page, "")
-        self.page_2 = QtGui.QWidget()
-        self.page_2.setGeometry(QtCore.QRect(0, 0, 261, 637))
-        self.page_2.setObjectName("page_2")
-        self.toolBox.addItem(self.page_2, "")
-        self.Seite = QtGui.QWidget()
-        self.Seite.setGeometry(QtCore.QRect(0, 0, 261, 637))
-        self.Seite.setObjectName("Seite")
-        self.toolBox.addItem(self.Seite, "")
-        self.gridLayout_2.addWidget(self.toolBox, 1, 0, 1, 1)
-        self.label_6.setBuddy(self.nameLineEdit)
-        self.label.setBuddy(self.nameLineEdit)
-        self.label_2.setBuddy(self.sizeComboBox)
-        self.label_11.setBuddy(self.extendsSpinBoxX)
-        self.label_3.setBuddy(self.extendsSpinBoxX)
-        self.label_10.setBuddy(self.extendsSpinBoxX)
-        self.label_7.setBuddy(self.baseNameLineEdit)
-        self.label_4.setBuddy(self.baseNameLineEdit)
-        self.label_5.setBuddy(self.resGroupLineEdit)
-        self.label_8.setBuddy(self.texSizeComboBox)
-        self.label_9.setBuddy(self.numTexturesComboBox)
-
-        self.retranslateUi(TerrainManagerUi)
-        self.toolBox.setCurrentIndex(0)
-        QtCore.QMetaObject.connectSlotsByName(TerrainManagerUi)
-        TerrainManagerUi.setTabOrder(self.nameLineEdit, self.sizeComboBox)
-        TerrainManagerUi.setTabOrder(self.sizeComboBox, self.extendsSpinBoxX)
-        TerrainManagerUi.setTabOrder(self.extendsSpinBoxX, self.extendsSpinBoxY)
-        TerrainManagerUi.setTabOrder(self.extendsSpinBoxY, self.extendsSpinBoxZ)
-        TerrainManagerUi.setTabOrder(self.extendsSpinBoxZ, self.baseNameLineEdit)
-        TerrainManagerUi.setTabOrder(self.baseNameLineEdit, self.resGroupLineEdit)
-        TerrainManagerUi.setTabOrder(self.resGroupLineEdit, self.texSizeComboBox)
-        TerrainManagerUi.setTabOrder(self.texSizeComboBox, self.numTexturesComboBox)
-        TerrainManagerUi.setTabOrder(self.numTexturesComboBox, self.createTerrainButton)
-
-    def retranslateUi(self, TerrainManagerUi):
-        TerrainManagerUi.setWindowTitle(QtGui.QApplication.translate("TerrainManagerUi", "Form", None, QtGui.QApplication.UnicodeUTF8))
-        self.comboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "No Terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_6.setText(QtGui.QApplication.translate("TerrainManagerUi", "Geometry", None, QtGui.QApplication.UnicodeUTF8))
-        self.label.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Name of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.label.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.nameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Name of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_2.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Vertex density", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_2.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Size", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Vertex density", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "8", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "16", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "32", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(6, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(7, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxX.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxX.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "X:", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_11.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_11.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Position", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxY.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxY.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxZ.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxZ.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Z:", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxX.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxX.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "X:", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_3.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_3.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Extends", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxY.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxY.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxZ.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxZ.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Z:", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_10.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
-"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
-"p, li { white-space: pre-wrap; }\n"
-"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This value means how high the vertices are placed in relation to the terrain extend in Y.</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">the vertices are placed in at height 50.</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/helpPref/TerrainExtends1.png\" /></p></body></html>", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_10.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Height", None, QtGui.QApplication.UnicodeUTF8))
-        self.terrainHeightSpinBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
-"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
-"p, li { white-space: pre-wrap; }\n"
-"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This value means how high the vertices are placed in relation to the terrain extend in Y.</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">the vertices are placed in at height 50.</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/helpPref/TerrainExtends1.png\" /></p></body></html>", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_7.setText(QtGui.QApplication.translate("TerrainManagerUi", "Splatting Settings", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_4.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_4.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Base Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.baseNameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
-        self.baseNameLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ETSplatting", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_5.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_5.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Res Group", None, QtGui.QApplication.UnicodeUTF8))
-        self.resGroupLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
-        self.resGroupLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ET", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_8.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_8.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Tex Size", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_9.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_9.setText(QtGui.QApplication.translate("TerrainManagerUi", "&NumTextures", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "1", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "3", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "4", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "5", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "6", None, QtGui.QApplication.UnicodeUTF8))
-        self.createTerrainButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.toolBox.setItemText(self.toolBox.indexOf(self.page), QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), QtGui.QApplication.translate("TerrainManagerUi", "ModifyTerrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.toolBox.setItemText(self.toolBox.indexOf(self.Seite), QtGui.QApplication.translate("TerrainManagerUi", "PaintTerrain", None, QtGui.QApplication.UnicodeUTF8))
-
-import help_rc
-
-if __name__ == "__main__":
-    import sys
-    app = QtGui.QApplication(sys.argv)
-    TerrainManagerUi = QtGui.QWidget()
-    ui = Ui_TerrainManagerUi()
-    ui.setupUi(TerrainManagerUi)
-    TerrainManagerUi.show()
-    sys.exit(app.exec_())
-
+# -*- coding: utf-8 -*-
+
+# Form implementation generated from reading ui file 'D:\Lockenwickler\ui files\MyTerrainManagerDock.ui'
+#
+# Created: Sun May 03 18:30:28 2009
+#      by: PyQt4 UI code generator 4.4.3
+#
+# WARNING! All changes made in this file will be lost!
+
+from PyQt4 import QtCore, QtGui
+
+class Ui_TerrainManagerUi(object):
+    def setupUi(self, TerrainManagerUi):
+        TerrainManagerUi.setObjectName("TerrainManagerUi")
+        TerrainManagerUi.resize(263, 748)
+        self.gridLayout_2 = QtGui.QGridLayout(TerrainManagerUi)
+        self.gridLayout_2.setMargin(1)
+        self.gridLayout_2.setSpacing(1)
+        self.gridLayout_2.setObjectName("gridLayout_2")
+        self.comboBox = QtGui.QComboBox(TerrainManagerUi)
+        self.comboBox.setObjectName("comboBox")
+        self.comboBox.addItem(QtCore.QString())
+        self.gridLayout_2.addWidget(self.comboBox, 0, 0, 1, 1)
+        self.toolBox = QtGui.QToolBox(TerrainManagerUi)
+        self.toolBox.setFrameShape(QtGui.QFrame.NoFrame)
+        self.toolBox.setFrameShadow(QtGui.QFrame.Plain)
+#        self.toolBox.setTabSpacing(1)
+        self.toolBox.setObjectName("toolBox")
+        self.page = QtGui.QWidget()
+        self.page.setGeometry(QtCore.QRect(0, 0, 261, 656))
+        self.page.setObjectName("page")
+        self.gridLayout = QtGui.QGridLayout(self.page)
+        self.gridLayout.setMargin(1)
+        self.gridLayout.setSpacing(1)
+        self.gridLayout.setObjectName("gridLayout")
+        self.label_6 = QtGui.QLabel(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
+        self.label_6.setSizePolicy(sizePolicy)
+        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
+        self.label_6.setObjectName("label_6")
+        self.gridLayout.addWidget(self.label_6, 0, 0, 1, 2)
+        self.label = QtGui.QLabel(self.page)
+        self.label.setObjectName("label")
+        self.gridLayout.addWidget(self.label, 1, 0, 1, 1)
+        self.nameLineEdit = QtGui.QLineEdit(self.page)
+        self.nameLineEdit.setObjectName("nameLineEdit")
+        self.gridLayout.addWidget(self.nameLineEdit, 1, 1, 1, 1)
+        self.label_2 = QtGui.QLabel(self.page)
+        self.label_2.setObjectName("label_2")
+        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
+        self.sizeComboBox = QtGui.QComboBox(self.page)
+        self.sizeComboBox.setObjectName("sizeComboBox")
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.gridLayout.addWidget(self.sizeComboBox, 2, 1, 1, 1)
+        self.positionSpinBoxX = QtGui.QDoubleSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.positionSpinBoxX.sizePolicy().hasHeightForWidth())
+        self.positionSpinBoxX.setSizePolicy(sizePolicy)
+        self.positionSpinBoxX.setMinimum(-999999999.0)
+        self.positionSpinBoxX.setMaximum(999999999.0)
+        self.positionSpinBoxX.setProperty("value", QtCore.QVariant(0.0))
+        self.positionSpinBoxX.setObjectName("positionSpinBoxX")
+        self.gridLayout.addWidget(self.positionSpinBoxX, 3, 1, 1, 1)
+        self.label_11 = QtGui.QLabel(self.page)
+        self.label_11.setObjectName("label_11")
+        self.gridLayout.addWidget(self.label_11, 4, 0, 1, 1)
+        self.positionSpinBoxY = QtGui.QDoubleSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.positionSpinBoxY.sizePolicy().hasHeightForWidth())
+        self.positionSpinBoxY.setSizePolicy(sizePolicy)
+        self.positionSpinBoxY.setMinimum(-999999999.0)
+        self.positionSpinBoxY.setMaximum(999999999.0)
+        self.positionSpinBoxY.setObjectName("positionSpinBoxY")
+        self.gridLayout.addWidget(self.positionSpinBoxY, 4, 1, 1, 1)
+        self.positionSpinBoxZ = QtGui.QDoubleSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.positionSpinBoxZ.sizePolicy().hasHeightForWidth())
+        self.positionSpinBoxZ.setSizePolicy(sizePolicy)
+        self.positionSpinBoxZ.setMinimum(-999999999.0)
+        self.positionSpinBoxZ.setMaximum(999999999.0)
+        self.positionSpinBoxZ.setObjectName("positionSpinBoxZ")
+        self.gridLayout.addWidget(self.positionSpinBoxZ, 5, 1, 1, 1)
+        self.extendsSpinBoxX = QtGui.QSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.extendsSpinBoxX.sizePolicy().hasHeightForWidth())
+        self.extendsSpinBoxX.setSizePolicy(sizePolicy)
+        self.extendsSpinBoxX.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
+        self.extendsSpinBoxX.setMinimum(0)
+        self.extendsSpinBoxX.setMaximum(10000)
+        self.extendsSpinBoxX.setObjectName("extendsSpinBoxX")
+        self.gridLayout.addWidget(self.extendsSpinBoxX, 6, 1, 1, 1)
+        self.label_3 = QtGui.QLabel(self.page)
+        self.label_3.setObjectName("label_3")
+        self.gridLayout.addWidget(self.label_3, 7, 0, 1, 1)
+        self.extendsSpinBoxY = QtGui.QSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.extendsSpinBoxY.sizePolicy().hasHeightForWidth())
+        self.extendsSpinBoxY.setSizePolicy(sizePolicy)
+        self.extendsSpinBoxY.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
+        self.extendsSpinBoxY.setMinimum(0)
+        self.extendsSpinBoxY.setMaximum(10000)
+        self.extendsSpinBoxY.setObjectName("extendsSpinBoxY")
+        self.gridLayout.addWidget(self.extendsSpinBoxY, 7, 1, 1, 1)
+        self.extendsSpinBoxZ = QtGui.QSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.extendsSpinBoxZ.sizePolicy().hasHeightForWidth())
+        self.extendsSpinBoxZ.setSizePolicy(sizePolicy)
+        self.extendsSpinBoxZ.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
+        self.extendsSpinBoxZ.setMinimum(0)
+        self.extendsSpinBoxZ.setMaximum(10000)
+        self.extendsSpinBoxZ.setObjectName("extendsSpinBoxZ")
+        self.gridLayout.addWidget(self.extendsSpinBoxZ, 8, 1, 1, 1)
+        self.label_10 = QtGui.QLabel(self.page)
+        self.label_10.setObjectName("label_10")
+        self.gridLayout.addWidget(self.label_10, 9, 0, 1, 1)
+        self.terrainHeightSpinBox = QtGui.QDoubleSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.terrainHeightSpinBox.sizePolicy().hasHeightForWidth())
+        self.terrainHeightSpinBox.setSizePolicy(sizePolicy)
+        self.terrainHeightSpinBox.setMaximum(1.0)
+        self.terrainHeightSpinBox.setSingleStep(0.1)
+        self.terrainHeightSpinBox.setProperty("value", QtCore.QVariant(0.5))
+        self.terrainHeightSpinBox.setObjectName("terrainHeightSpinBox")
+        self.gridLayout.addWidget(self.terrainHeightSpinBox, 9, 1, 1, 1)
+        self.label_7 = QtGui.QLabel(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
+        self.label_7.setSizePolicy(sizePolicy)
+        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
+        self.label_7.setObjectName("label_7")
+        self.gridLayout.addWidget(self.label_7, 10, 0, 1, 2)
+        self.label_4 = QtGui.QLabel(self.page)
+        self.label_4.setObjectName("label_4")
+        self.gridLayout.addWidget(self.label_4, 11, 0, 1, 1)
+        self.baseNameLineEdit = QtGui.QLineEdit(self.page)
+        self.baseNameLineEdit.setObjectName("baseNameLineEdit")
+        self.gridLayout.addWidget(self.baseNameLineEdit, 11, 1, 1, 1)
+        self.label_5 = QtGui.QLabel(self.page)
+        self.label_5.setObjectName("label_5")
+        self.gridLayout.addWidget(self.label_5, 12, 0, 1, 1)
+        self.resGroupLineEdit = QtGui.QLineEdit(self.page)
+        self.resGroupLineEdit.setObjectName("resGroupLineEdit")
+        self.gridLayout.addWidget(self.resGroupLineEdit, 12, 1, 1, 1)
+        self.label_8 = QtGui.QLabel(self.page)
+        self.label_8.setObjectName("label_8")
+        self.gridLayout.addWidget(self.label_8, 13, 0, 1, 1)
+        self.texSizeComboBox = QtGui.QComboBox(self.page)
+        self.texSizeComboBox.setObjectName("texSizeComboBox")
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.gridLayout.addWidget(self.texSizeComboBox, 13, 1, 1, 1)
+        self.label_9 = QtGui.QLabel(self.page)
+        self.label_9.setObjectName("label_9")
+        self.gridLayout.addWidget(self.label_9, 14, 0, 1, 1)
+        self.numTexturesComboBox = QtGui.QComboBox(self.page)
+        self.numTexturesComboBox.setObjectName("numTexturesComboBox")
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.gridLayout.addWidget(self.numTexturesComboBox, 14, 1, 1, 1)
+        self.createTerrainButton = QtGui.QPushButton(self.page)
+        self.createTerrainButton.setObjectName("createTerrainButton")
+        self.gridLayout.addWidget(self.createTerrainButton, 15, 0, 1, 2)
+        self.toolBox.addItem(self.page, "")
+        self.page_2 = QtGui.QWidget()
+        self.page_2.setGeometry(QtCore.QRect(0, 0, 261, 656))
+        self.page_2.setObjectName("page_2")
+        self.toolBox.addItem(self.page_2, "")
+        self.Seite = QtGui.QWidget()
+        self.Seite.setGeometry(QtCore.QRect(0, 0, 261, 656))
+        self.Seite.setObjectName("Seite")
+        self.toolBox.addItem(self.Seite, "")
+        self.gridLayout_2.addWidget(self.toolBox, 1, 0, 1, 1)
+        self.label_6.setBuddy(self.nameLineEdit)
+        self.label.setBuddy(self.nameLineEdit)
+        self.label_2.setBuddy(self.sizeComboBox)
+        self.label_11.setBuddy(self.extendsSpinBoxX)
+        self.label_3.setBuddy(self.extendsSpinBoxX)
+        self.label_10.setBuddy(self.extendsSpinBoxX)
+        self.label_7.setBuddy(self.baseNameLineEdit)
+        self.label_4.setBuddy(self.baseNameLineEdit)
+        self.label_5.setBuddy(self.resGroupLineEdit)
+        self.label_8.setBuddy(self.texSizeComboBox)
+        self.label_9.setBuddy(self.numTexturesComboBox)
+
+        self.retranslateUi(TerrainManagerUi)
+        self.toolBox.setCurrentIndex(0)
+        QtCore.QMetaObject.connectSlotsByName(TerrainManagerUi)
+        TerrainManagerUi.setTabOrder(self.nameLineEdit, self.sizeComboBox)
+        TerrainManagerUi.setTabOrder(self.sizeComboBox, self.extendsSpinBoxX)
+        TerrainManagerUi.setTabOrder(self.extendsSpinBoxX, self.extendsSpinBoxY)
+        TerrainManagerUi.setTabOrder(self.extendsSpinBoxY, self.extendsSpinBoxZ)
+        TerrainManagerUi.setTabOrder(self.extendsSpinBoxZ, self.baseNameLineEdit)
+        TerrainManagerUi.setTabOrder(self.baseNameLineEdit, self.resGroupLineEdit)
+        TerrainManagerUi.setTabOrder(self.resGroupLineEdit, self.texSizeComboBox)
+        TerrainManagerUi.setTabOrder(self.texSizeComboBox, self.numTexturesComboBox)
+        TerrainManagerUi.setTabOrder(self.numTexturesComboBox, self.createTerrainButton)
+
+    def retranslateUi(self, TerrainManagerUi):
+        TerrainManagerUi.setWindowTitle(QtGui.QApplication.translate("TerrainManagerUi", "Form", None, QtGui.QApplication.UnicodeUTF8))
+        self.comboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "No Terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_6.setText(QtGui.QApplication.translate("TerrainManagerUi", "Geometry", None, QtGui.QApplication.UnicodeUTF8))
+        self.label.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Name of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.nameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Name of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_2.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Vertex density", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_2.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Vertex density", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "8", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "16", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "32", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(6, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(7, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxX.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxX.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "X:", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_11.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_11.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Position", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxY.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxY.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxZ.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxZ.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Z:", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxX.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxX.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "X:", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_3.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_3.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Extends", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxY.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxY.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxZ.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxZ.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Z:", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_10.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
+"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
+"p, li { white-space: pre-wrap; }\n"
+"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This value means how high the vertices are placed in relation to the terrain extend in Y.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">the vertices are placed in at height 50.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/helpPref/TerrainExtends1.png\" /></p></body></html>", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_10.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Height", None, QtGui.QApplication.UnicodeUTF8))
+        self.terrainHeightSpinBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
+"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
+"p, li { white-space: pre-wrap; }\n"
+"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This value means how high the vertices are placed in relation to the terrain extend in Y.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">the vertices are placed in at height 50.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/helpPref/TerrainExtends1.png\" /></p></body></html>", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_7.setText(QtGui.QApplication.translate("TerrainManagerUi", "Splatting Settings", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_4.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_4.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Base Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.baseNameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
+        self.baseNameLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ETSplatting", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_5.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_5.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Res Group", None, QtGui.QApplication.UnicodeUTF8))
+        self.resGroupLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
+        self.resGroupLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ET", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_8.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_8.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Tex Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_9.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_9.setText(QtGui.QApplication.translate("TerrainManagerUi", "&NumTextures", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "1", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "3", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "4", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "5", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "6", None, QtGui.QApplication.UnicodeUTF8))
+        self.createTerrainButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.toolBox.setItemText(self.toolBox.indexOf(self.page), QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), QtGui.QApplication.translate("TerrainManagerUi", "ModifyTerrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.toolBox.setItemText(self.toolBox.indexOf(self.Seite), QtGui.QApplication.translate("TerrainManagerUi", "PaintTerrain", None, QtGui.QApplication.UnicodeUTF8))
+
+import help_rc
+
+if __name__ == "__main__":
+    import sys
+    app = QtGui.QApplication(sys.argv)
+    TerrainManagerUi = QtGui.QWidget()
+    ui = Ui_TerrainManagerUi()
+    ui.setupUi(TerrainManagerUi)
+    TerrainManagerUi.show()
+    sys.exit(app.exec_())
+


Property changes on: rl/trunk/editors/Lockenwickler/src/media
___________________________________________________________________
Name: svn:ignore
   - .Bpib
skelett.blend
skelett_merged.blend

   + .Bpib
skelett.blend
skelett_merged.blend
pivots.blend1


Modified: rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
===================================================================
--- rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-03 15:20:21 UTC (rev 4915)
+++ rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-03 16:38:09 UTC (rev 4916)
@@ -48,7 +48,7 @@
         <x>0</x>
         <y>0</y>
         <width>261</width>
-        <height>637</height>
+        <height>656</height>
        </rect>
       </property>
       <attribute name="label" >
@@ -174,9 +174,15 @@
          <property name="prefix" >
           <string>X:</string>
          </property>
+         <property name="minimum" >
+          <double>-999999999.000000000000000</double>
+         </property>
          <property name="maximum" >
           <double>999999999.000000000000000</double>
          </property>
+         <property name="value" >
+          <double>0.000000000000000</double>
+         </property>
         </widget>
        </item>
        <item row="4" column="0" >
@@ -206,6 +212,9 @@
          <property name="prefix" >
           <string>Y:</string>
          </property>
+         <property name="minimum" >
+          <double>-999999999.000000000000000</double>
+         </property>
          <property name="maximum" >
           <double>999999999.000000000000000</double>
          </property>
@@ -228,6 +237,9 @@
          <property name="suffix" >
           <string/>
          </property>
+         <property name="minimum" >
+          <double>-999999999.000000000000000</double>
+         </property>
          <property name="maximum" >
           <double>999999999.000000000000000</double>
          </property>
@@ -254,7 +266,7 @@
           <string>X:</string>
          </property>
          <property name="minimum" >
-          <number>128</number>
+          <number>0</number>
          </property>
          <property name="maximum" >
           <number>10000</number>
@@ -295,7 +307,7 @@
           <string>Y:</string>
          </property>
          <property name="minimum" >
-          <number>128</number>
+          <number>0</number>
          </property>
          <property name="maximum" >
           <number>10000</number>
@@ -323,7 +335,7 @@
           <string>Z:</string>
          </property>
          <property name="minimum" >
-          <number>128</number>
+          <number>0</number>
          </property>
          <property name="maximum" >
           <number>10000</number>
@@ -554,7 +566,7 @@
         <x>0</x>
         <y>0</y>
         <width>261</width>
-        <height>637</height>
+        <height>656</height>
        </rect>
       </property>
       <attribute name="label" >
@@ -567,7 +579,7 @@
         <x>0</x>
         <y>0</y>
         <width>261</width>
-        <height>637</height>
+        <height>656</height>
        </rect>
       </property>
       <attribute name="label" >



From fusion2 at mail.berlios.de  Mon May  4 21:22:07 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Mon, 4 May 2009 21:22:07 +0200
Subject: [Dsa-hl-svn] r4917 - in rl/trunk/editors/Lockenwickler/src: .
	media/icons media/terrain media/terrain/brushes
Message-ID: <200905041922.n44JM7cb019824@sheep.berlios.de>

Author: fusion2
Date: 2009-05-04 21:22:03 +0200 (Mon, 04 May 2009)
New Revision: 4917

Added:
   rl/trunk/editors/Lockenwickler/src/media/icons/icons.qrc
   rl/trunk/editors/Lockenwickler/src/media/terrain/brushes/
   rl/trunk/editors/Lockenwickler/src/media/terrain/brushes/brush.png
Removed:
   rl/trunk/editors/Lockenwickler/src/media/terrain/brush.png
Modified:
   rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
   rl/trunk/editors/Lockenwickler/src/ModuleManager.py
   rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
   rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py
   rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
Log:
- Improvements to the terrain tools



Modified: rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-05-03 16:38:09 UTC (rev 4916)
+++ rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-05-04 19:22:03 UTC (rev 4917)
@@ -332,7 +332,6 @@
     def finishEditorSetup(self):
         if not self.editorSetupFinished:
             og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
-            og.ResourceGroupManager.getSingleton().addResourceLocation("./media/terrain", "FileSystem", "General", False)
             og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
 
             self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)

Modified: rl/trunk/editors/Lockenwickler/src/ModuleManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-05-03 16:38:09 UTC (rev 4916)
+++ rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-05-04 19:22:03 UTC (rev 4917)
@@ -979,7 +979,7 @@
                     self.updatePivots()
                 elif controlDown and not shiftDown:
                     so.setSelected(True)
-
+                    
                     for soFromList in self.userSelectionList:
                         if soFromList == so:
                             return # object already selected

Modified: rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-03 16:38:09 UTC (rev 4916)
+++ rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-04 19:22:03 UTC (rev 4917)
@@ -1,157 +1,244 @@
-#################################################
-# This source file is part of Rastullahs Lockenwickler.
-# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-#  but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
-#################################################
-
-from PyQt4.QtCore import *
-from PyQt4.QtGui import *
-
-import ogre.renderer.OGRE as og
-import ogre.addons.et as ET
-
-import Ui_MyTerrainManagerDock
-
-class MyTerrainManagerDock(Ui_MyTerrainManagerDock.Ui_TerrainManagerUi, QWidget):
-    def __init__(self, parent):
-        super(MyTerrainManagerDock, self).__init__(parent)
-        self.setupUi(self)
-        QWidget.connect(self.createTerrainButton, SIGNAL("clicked()"), self.onCreateTerrainButtonClicked)
-        
-    def onCreateTerrainButtonClicked(self):
-        terrainData = {}
-        terrainData["name"]  = str(self.nameLineEdit.text())
-        terrainData["size"]  = int(self.sizeComboBox.currentText())
-        terrainData["positionX"]  = self.positionSpinBoxX.value()
-        terrainData["positionY"]  = self.positionSpinBoxY.value()
-        terrainData["positionZ"]  = self.positionSpinBoxZ.value()
-        terrainData["extendsX"]  = self.extendsSpinBoxX.value()
-        terrainData["extendsY"]  = self.extendsSpinBoxY.value()
-        terrainData["extendsZ"]  = self.extendsSpinBoxZ.value()
-        terrainData["terrainSize"] = int(self.sizeComboBox.currentText())
-        terrainData["terrainHeight"]  = self.terrainHeightSpinBox.value()
-        terrainData["splattingBaseName"]  = str(self.baseNameLineEdit.text())
-        terrainData["splattingResGroup"]  = str(self.resGroupLineEdit.text())
-        terrainData["splattingTexturSize"]  = int(self.texSizeComboBox.currentText())
-        terrainData["splattingNumTextures"]  = int(self.numTexturesComboBox.currentText())
-        
-        self.emit(SIGNAL("createTerrain"), terrainData)
-        
-class Terrain():
-    def __init__(self, sceneManager):
-        self.sceneManager = sceneManager
-        self.camera = self.sceneManager.getCamera("MainCam")
-        self.position = og.Vector3()
-        self.extends = og.Vector3(128, 50, 128)
-        self.terrainHeight = 0.5
-        self.name = ""
-        self.terrainSize = 129
-        self.splattingBaseName = "ETSplatting"
-        self.splattingResGroup = "ET"
-        self.splattingTexturSize = 128
-        self.splattingNumTextures = 6
-        
-        ## create terrain manager
-        self.terrainManager =  ET.TerrainManager(self.sceneManager)
-        self.terrainManager.setLODErrorMargin(2, self.camera.getViewport().getActualHeight())
-        self.terrainManager.setUseLODMorphing(True, 0.2, "morphFactor")
-    
-    def create(self, arg):
-        self.name = arg["name"]
-        self.position = og.Vector3(arg["positionX"], arg["positionY"], arg["positionZ"])
-        self.extends = og.Vector3(arg["extendsX"], arg["extendsY"], arg["extendsZ"])
-        self.terrainHeight = arg["terrainHeight"]
-        self.terrainSize = arg["terrainSize"] + 1
-        self.splattingBaseName = arg["splattingBaseName"]
-        self.splattingResGroup = arg["splattingResGroup"]
-        self.splattingTexturSize = arg["splattingTexturSize"]
-        self.splattingNumTextures = arg["splattingNumTextures"]
-        
-        
-        ## create a fresh, mid-high terrain for editing
-        # Note 
-        heightMapValues = og.LodDistanceList() ## ET.stdVectorFloat()
-        for i in xrange(self.terrainSize):
-            for j in xrange(self.terrainSize):
-                heightMapValues.append(self.terrainHeight)
-        # width, height, heightmapvalues as a float array
-        self.terrainInfo = ET.TerrainInfo (self.terrainSize, self.terrainSize, heightMapValues )
-        
-        ## save typing self
-        terrainInfo  = self.terrainInfo 
-        sceneManager = self.sceneManager
-        terrainMgr   = self.terrainManager
-        
-        ## set position and size of the terrain
-        half = self.extends / 2
-        minPos = self.position - half
-        maxPos = self.position + half
-        terrainInfo.setExtents(og.AxisAlignedBox(int(minPos.x), int(minPos.y), int(minPos.z), int(minPos.x), int(minPos.y), int(minPos.z)))
-
-        print minPos.x, minPos.y, minPos.z, minPos.x, minPos.y, minPos.z
-
-        ## now render it
-        terrainMgr.createTerrain(terrainInfo)
-
-        ## create the splatting manager
-#        * @param baseName   base name for the map textures (will be appended by their number)
-#        * @param group      the resource group the textures will be placed in
-#        * @param width      width of the textures in pixels
-#        * @param height     height of the textures in pixels
-#        * @param channels   Number of channels per texture (must be in {1, 2, 3, 4})
-        self.splatMgr = ET.SplattingManager(self.splattingBaseName, self.splattingResGroup, self.splattingTexturSize, self.splattingTexturSize, 3)
-        ## specify number of splatting textures we need to handle
-        self.splatMgr.setNumTextures(self.splattingNumTextures)
-
-        ## create a manual lightmap texture
-        lightmapTex = og.TextureManager.getSingleton().createManual(
-        self.splattingBaseName, self.splattingResGroup, og.TEX_TYPE_2D, self.splattingTexturSize, self.splattingTexturSize, 1, og.PF_BYTE_RGB)
-
-        lightmap = og.Image()
-        ET.createTerrainLightmap(terrainInfo, lightmap, 128, 128,\
-                                 og.Vector3(1, -1, 1),\
-                                 og.ColourValue().White,\
-                                 og.ColourValue(0.3, 0.3, 0.3,1.0))
-        lightmapTex.getBuffer(0, 0).blitFromMemory(lightmap.getPixelBox(0, 0))
-
-        ##  load the terrain material and assign it
-        material = og.MaterialManager.getSingleton().getByName("ETTerrainMaterial")
-#        material = og.MaterialManager.getSingleton().getByName("Lockenwickler_Area")
-        self.terrainManager.setMaterial(material)
-        
-class MyTerrainManager():
-    def __init__(self, sceneManager):
-        self.sceneManager = sceneManager
-        self.dockWidgetContents = None
-
-    def getDockWidget(self, parent):
-        if self.dockWidgetContents is None:
-            self.dockWidgetContents = MyTerrainManagerDock(parent)
-            self.myTerrainManagerDock = QDockWidget("Terrain Tools", parent)
-            self.myTerrainManagerDock.setObjectName("TerrainToolsDockWindow")
-            self.myTerrainManagerDock.setAllowedAreas(Qt.LeftDockWidgetArea | Qt.RightDockWidgetArea)
-            self.myTerrainManagerDock.setWidget(self.dockWidgetContents)
-            self.myTerrainManagerDock.setWindowIcon(QIcon("media/icons/terrain_small.png"))
-            parent.addDockWidget(Qt.LeftDockWidgetArea, self.myTerrainManagerDock)
-            
-            QWidget.connect(self.dockWidgetContents, SIGNAL("createTerrain"), self.onCreateTerrain)
-            
-            
-        return self.myTerrainManagerDock
-
-    def onCreateTerrain(self, arg):
-        self.terrain = Terrain(self.sceneManager)
-        self.terrain.create(arg)
+#################################################
+# This source file is part of Rastullahs Lockenwickler.
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+#  but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
+#################################################
+
+from PyQt4.QtCore import *
+from PyQt4.QtGui import *
+
+import ogre.renderer.OGRE as og
+import ogre.addons.et as ET
+
+import Ui_MyTerrainManagerDock
+from GlobDirectoryWalker import GlobDirectoryWalker
+
+class BrushDialog(QDialog):
+    def __init__(self, parent = None):
+        super(BrushDialog, self).__init__(parent)
+        self.setupUi(self)
+        self.brushName = ""
+        
+        for file in GlobDirectoryWalker("./media/terrain/brushes", "*.png"):
+            btn = QListWidgetItem()
+            btn.setText(file.replace("./media/terrain/brushes/", ""))
+            btn.setIcon(QIcon(file))
+            self.listWidget.addItem(btn)
+        
+    def setupUi(self, Dialog):
+        Dialog.setObjectName("Dialog")
+        Dialog.resize(343, 388)
+        self.gridLayout = QGridLayout(Dialog)
+        self.gridLayout.setObjectName("gridLayout")
+        self.pushButton = QPushButton(Dialog)
+        self.pushButton.setObjectName("pushButton")
+        self.gridLayout.addWidget(self.pushButton, 1, 0, 1, 1)
+        self.pushButton_2 = QPushButton(Dialog)
+        self.pushButton_2.setObjectName("pushButton_2")
+        self.gridLayout.addWidget(self.pushButton_2, 1, 1, 1, 1)
+        self.listWidget = QListWidget(Dialog)
+        self.listWidget.setObjectName("listWidget")
+        self.gridLayout.addWidget(self.listWidget, 0, 0, 1, 2)
+
+        self.retranslateUi(Dialog)
+        QObject.connect(self.pushButton_2, SIGNAL("pressed()"), Dialog.reject)
+        QObject.connect(self.pushButton, SIGNAL("pressed()"), Dialog.accept)
+        QObject.connect(self.listWidget, SIGNAL("doubleClicked(QModelIndex)"), Dialog.saveBrushName)
+        QObject.connect(self.listWidget, SIGNAL("doubleClicked(QModelIndex)"), Dialog.accept)
+        QMetaObject.connectSlotsByName(Dialog)
+
+    def retranslateUi(self, Dialog):
+        Dialog.setWindowTitle(QApplication.translate("Dialog", "Dialog", None, QApplication.UnicodeUTF8))
+        self.pushButton.setText(QApplication.translate("Dialog", "Ok", None, QApplication.UnicodeUTF8))
+        self.pushButton_2.setText(QApplication.translate("Dialog", "Cancel", None, QApplication.UnicodeUTF8))
+    
+    def saveBrushName(self):
+        item = self.listWidget.currentItem()
+        self.brushName = str(item.text())
+        
+class MyTerrainManagerDock(Ui_MyTerrainManagerDock.Ui_TerrainManagerUi, QWidget):
+    def __init__(self, onBrushChangedCallback, parent = None):
+        super(MyTerrainManagerDock, self).__init__(parent)
+        self.setupUi(self)
+        QWidget.connect(self.createTerrainButton, SIGNAL("clicked()"), self.onCreateTerrainButtonClicked)
+        QWidget.connect(self.brushButton, SIGNAL("clicked()"), self.onBrushButtonClicked)
+        self.onBrushChangedCallback = onBrushChangedCallback
+        
+    def onBrushButtonClicked(self):
+        dlg = BrushDialog(self)
+        dlg.exec_()
+        self.onBrushChangedCallback(dlg.brushName)
+        self.brushButton.setIcon(QIcon("./media/terrain/brushes/" + dlg.brushName))
+        self.brushButton.setIconSize(QSize(150, 150))
+        self.brushButton.setText(dlg.brushName)
+        
+    def onCreateTerrainButtonClicked(self):
+        terrainData = {}
+        terrainData["name"]  = str(self.nameLineEdit.text())
+        terrainData["size"]  = int(self.sizeComboBox.currentText())
+        terrainData["positionX"]  = self.positionSpinBoxX.value()
+        terrainData["positionY"]  = self.positionSpinBoxY.value()
+        terrainData["positionZ"]  = self.positionSpinBoxZ.value()
+        terrainData["extendsX"]  = self.extendsSpinBoxX.value()
+        terrainData["extendsY"]  = self.extendsSpinBoxY.value()
+        terrainData["extendsZ"]  = self.extendsSpinBoxZ.value()
+        terrainData["terrainSize"] = int(self.sizeComboBox.currentText())
+        terrainData["terrainHeight"]  = self.terrainHeightSpinBox.value()
+        terrainData["splattingBaseName"]  = str(self.baseNameLineEdit.text())
+        terrainData["splattingResGroup"]  = str(self.resGroupLineEdit.text())
+        terrainData["splattingTextureSize"]  = int(self.texSizeComboBox.currentText())
+        terrainData["splattingNumTextures"]  = int(self.numTexturesComboBox.currentText())
+        
+        self.emit(SIGNAL("createTerrain"), terrainData)
+        
+class Terrain():
+    def __init__(self, sceneManager):
+        self.sceneManager = sceneManager
+        self.camera = self.sceneManager.getCamera("MainCam")
+        self.position = og.Vector3()
+        self.extends = og.Vector3(128, 50, 128)
+        self.terrainHeight = 0.5
+        self.name = ""
+        self.terrainSize = 129
+        self.splattingBaseName = "ETSplatting"
+        self.splattingResGroup = "ET"
+        self.splattingTextureSize = 128
+        self.splattingNumTextures = 6
+        
+        self.created = False
+        self.terrainInfo = None
+        
+    def create(self, arg):
+#        if self.created:
+#            del self.terrainInfo
+#            del self.terrainManager
+        if arg is not None:
+            self.name = arg["name"]
+            self.position = og.Vector3(arg["positionX"], arg["positionY"], arg["positionZ"])
+            self.extends = og.Vector3(arg["extendsX"], arg["extendsY"], arg["extendsZ"])
+            self.terrainHeight = arg["terrainHeight"]
+            self.terrainSize = arg["terrainSize"] + 1
+            self.splattingBaseName = arg["splattingBaseName"]
+            self.splattingResGroup = arg["splattingResGroup"]
+            self.splattingTextureSize = arg["splattingTextureSize"]
+            self.splattingNumTextures = arg["splattingNumTextures"]
+        
+        self.terrainManager =  ET.TerrainManager(self.sceneManager, self.name)
+        self.terrainManager.setLODErrorMargin(2, self.camera.getViewport().getActualHeight())
+        self.terrainManager.setUseLODMorphing(True, 0.2, "morphFactor")
+        
+        ## create a fresh, mid-high terrain for editing
+        # Note 
+        heightMapValues = og.LodDistanceList() ## ET.stdVectorFloat()
+        for i in xrange(self.terrainSize):
+            for j in xrange(self.terrainSize):
+                heightMapValues.append(self.terrainHeight)
+        # width, height, heightmapvalues as a float array
+        self.terrainInfo = ET.TerrainInfo (self.terrainSize, self.terrainSize, heightMapValues )
+        
+        ## save typing self
+        terrainInfo  = self.terrainInfo 
+        sceneManager = self.sceneManager
+        terrainMgr   = self.terrainManager
+        
+        ## set position and size of the terrain
+        half = self.extends / 2
+        terrainInfo.setExtents(og.AxisAlignedBox(-half.x, -half.y, -half.z, half.x, half.y, half.z))
+
+
+        ## now render it
+        terrainMgr.createTerrain(terrainInfo)
+
+        ## create the splatting manager
+#        * @param baseName   base name for the map textures (will be appended by their number)
+#        * @param group      the resource group the textures will be placed in
+#        * @param width      width of the textures in pixels
+#        * @param height     height of the textures in pixels
+#        * @param channels   Number of channels per texture (must be in {1, 2, 3, 4})
+        self.splatMgr = ET.SplattingManager(self.splattingBaseName, self.splattingResGroup, self.splattingTextureSize, self.splattingTextureSize, 3)
+        ## specify number of splatting textures we need to handle
+        self.splatMgr.setNumTextures(self.splattingNumTextures)
+        
+        ## create a manual lightmap texture
+        lightmapTex = og.TextureManager.getSingleton().createManual(
+        "ETLightmap", self.splattingResGroup, og.TEX_TYPE_2D, self.splattingTextureSize, self.splattingTextureSize, 1, og.PF_BYTE_RGB)
+
+        lightmap = og.Image()
+        ET.createTerrainLightmap(terrainInfo, lightmap, 128, 128,\
+                                 og.Vector3(1, -1, 1),\
+                                 og.ColourValue().White,\
+                                 og.ColourValue(0.3, 0.3, 0.3,1.0))
+        lightmapTex.getBuffer(0, 0).blitFromMemory(lightmap.getPixelBox(0, 0))
+
+        ##  load the terrain material and assign it
+        material = og.MaterialManager.getSingleton().getByName("ETTerrainMaterial")
+#        material = og.MaterialManager.getSingleton().getByName("Lockenwickler_Area")
+        self.terrainManager.setMaterial(material)
+        
+        self.sceneNode = self.sceneManager.getSceneNode(self.name + "/Terrain")
+        self.sceneNode.setPosition(self.position)
+        self.created = True
+        
+class MyTerrainManager():
+    def __init__(self, sceneManager):
+        self.sceneManager = sceneManager
+        self.dockWidgetContents = None
+        og.ResourceGroupManager.getSingleton().addResourceLocation("./media/terrain", "FileSystem", "ET", True)
+        self.terrainList = []
+    
+    def getDockWidget(self, parent):
+        if self.dockWidgetContents is None:
+            self.dockWidgetContents = MyTerrainManagerDock(self.onBrushChanged, parent)
+            self.myTerrainManagerDock = QDockWidget("Terrain Tools", parent)
+            self.myTerrainManagerDock.setObjectName("TerrainToolsDockWindow")
+            self.myTerrainManagerDock.setAllowedAreas(Qt.LeftDockWidgetArea | Qt.RightDockWidgetArea)
+            self.myTerrainManagerDock.setWidget(self.dockWidgetContents)
+            self.myTerrainManagerDock.setWindowIcon(QIcon("media/icons/terrain_small.png"))
+            parent.addDockWidget(Qt.LeftDockWidgetArea, self.myTerrainManagerDock)
+            
+            QWidget.connect(self.dockWidgetContents, SIGNAL("createTerrain"), self.onCreateTerrain)
+            
+            
+        return self.myTerrainManagerDock
+
+    def onBrushChanged(self, brushName):
+        print brushName
+
+    def onCreateTerrain(self, arg):
+        terrain = Terrain(self.sceneManager)
+        terrain.create(arg)
+        self.terrainList.append(terrain)
+        
+        og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
+        
+        self.updateTerrainListBox()
+        
+#        i = 0
+#        numChildren = self.sceneManager.getRootSceneNode().numChildren()
+#        while i < numChildren:
+#            n = self.sceneManager.getRootSceneNode().getChild(i)
+#            name = n.getName()
+#            print name
+#            i += 1
+
+    def updateTerrainListBox(self):
+        self.dockWidgetContents.terrainListComboBox.clear()
+        if len(self.terrainList) == 0:
+            self.dockWidgetContents.terrainListComboBox.addItem("No Terrain")
+            return
+            
+        for terrain in self.terrainList:
+            self.dockWidgetContents.terrainListComboBox.addItem(terrain.name)

Modified: rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py	2009-05-03 16:38:09 UTC (rev 4916)
+++ rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py	2009-05-04 19:22:03 UTC (rev 4917)
@@ -52,8 +52,8 @@
         self.entity = entity #the selected entity
         self.isPivot = False
 
+        print self.entity.getParentNode().getName()
 
-
     #if True this instance will show its bounding box else it will hide it
     def setSelected(self,  selected):
         if selected == True:
@@ -102,7 +102,6 @@
                 self.lastEntity = subEntity.getParent().getName()
                 self.colorDict[self.lastEntity] = self.currentColorAsVector3
                 return self.lastTechnique
-        
 
     def randomizeColor(self):
         r = random.randrange(1, 255)
@@ -187,7 +186,8 @@
 
         self.pBox = og.PixelBox(pixelBuffer.getWidth(), pixelBuffer.getHeight(),pixelBuffer.getDepth(), pixelBuffer.getFormat(), VoidPointer)
         self.renderTexture.copyContentsToMemory(self.pBox, og.RenderTarget.FrameBuffer.FB_FRONT)
-
+        
+#        self.renderTexture.writeContentsToFile("selectionbuffer.png")
 #        i = 0
 #        
 #        while i < len(self.buffer):

Modified: rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-03 16:38:09 UTC (rev 4916)
+++ rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-04 19:22:03 UTC (rev 4917)
@@ -1,323 +1,394 @@
-# -*- coding: utf-8 -*-
-
-# Form implementation generated from reading ui file 'D:\Lockenwickler\ui files\MyTerrainManagerDock.ui'
-#
-# Created: Sun May 03 18:30:28 2009
-#      by: PyQt4 UI code generator 4.4.3
-#
-# WARNING! All changes made in this file will be lost!
-
-from PyQt4 import QtCore, QtGui
-
-class Ui_TerrainManagerUi(object):
-    def setupUi(self, TerrainManagerUi):
-        TerrainManagerUi.setObjectName("TerrainManagerUi")
-        TerrainManagerUi.resize(263, 748)
-        self.gridLayout_2 = QtGui.QGridLayout(TerrainManagerUi)
-        self.gridLayout_2.setMargin(1)
-        self.gridLayout_2.setSpacing(1)
-        self.gridLayout_2.setObjectName("gridLayout_2")
-        self.comboBox = QtGui.QComboBox(TerrainManagerUi)
-        self.comboBox.setObjectName("comboBox")
-        self.comboBox.addItem(QtCore.QString())
-        self.gridLayout_2.addWidget(self.comboBox, 0, 0, 1, 1)
-        self.toolBox = QtGui.QToolBox(TerrainManagerUi)
-        self.toolBox.setFrameShape(QtGui.QFrame.NoFrame)
-        self.toolBox.setFrameShadow(QtGui.QFrame.Plain)
-#        self.toolBox.setTabSpacing(1)
-        self.toolBox.setObjectName("toolBox")
-        self.page = QtGui.QWidget()
-        self.page.setGeometry(QtCore.QRect(0, 0, 261, 656))
-        self.page.setObjectName("page")
-        self.gridLayout = QtGui.QGridLayout(self.page)
-        self.gridLayout.setMargin(1)
-        self.gridLayout.setSpacing(1)
-        self.gridLayout.setObjectName("gridLayout")
-        self.label_6 = QtGui.QLabel(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
-        self.label_6.setSizePolicy(sizePolicy)
-        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
-        self.label_6.setObjectName("label_6")
-        self.gridLayout.addWidget(self.label_6, 0, 0, 1, 2)
-        self.label = QtGui.QLabel(self.page)
-        self.label.setObjectName("label")
-        self.gridLayout.addWidget(self.label, 1, 0, 1, 1)
-        self.nameLineEdit = QtGui.QLineEdit(self.page)
-        self.nameLineEdit.setObjectName("nameLineEdit")
-        self.gridLayout.addWidget(self.nameLineEdit, 1, 1, 1, 1)
-        self.label_2 = QtGui.QLabel(self.page)
-        self.label_2.setObjectName("label_2")
-        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
-        self.sizeComboBox = QtGui.QComboBox(self.page)
-        self.sizeComboBox.setObjectName("sizeComboBox")
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.sizeComboBox.addItem(QtCore.QString())
-        self.gridLayout.addWidget(self.sizeComboBox, 2, 1, 1, 1)
-        self.positionSpinBoxX = QtGui.QDoubleSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.positionSpinBoxX.sizePolicy().hasHeightForWidth())
-        self.positionSpinBoxX.setSizePolicy(sizePolicy)
-        self.positionSpinBoxX.setMinimum(-999999999.0)
-        self.positionSpinBoxX.setMaximum(999999999.0)
-        self.positionSpinBoxX.setProperty("value", QtCore.QVariant(0.0))
-        self.positionSpinBoxX.setObjectName("positionSpinBoxX")
-        self.gridLayout.addWidget(self.positionSpinBoxX, 3, 1, 1, 1)
-        self.label_11 = QtGui.QLabel(self.page)
-        self.label_11.setObjectName("label_11")
-        self.gridLayout.addWidget(self.label_11, 4, 0, 1, 1)
-        self.positionSpinBoxY = QtGui.QDoubleSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.positionSpinBoxY.sizePolicy().hasHeightForWidth())
-        self.positionSpinBoxY.setSizePolicy(sizePolicy)
-        self.positionSpinBoxY.setMinimum(-999999999.0)
-        self.positionSpinBoxY.setMaximum(999999999.0)
-        self.positionSpinBoxY.setObjectName("positionSpinBoxY")
-        self.gridLayout.addWidget(self.positionSpinBoxY, 4, 1, 1, 1)
-        self.positionSpinBoxZ = QtGui.QDoubleSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.positionSpinBoxZ.sizePolicy().hasHeightForWidth())
-        self.positionSpinBoxZ.setSizePolicy(sizePolicy)
-        self.positionSpinBoxZ.setMinimum(-999999999.0)
-        self.positionSpinBoxZ.setMaximum(999999999.0)
-        self.positionSpinBoxZ.setObjectName("positionSpinBoxZ")
-        self.gridLayout.addWidget(self.positionSpinBoxZ, 5, 1, 1, 1)
-        self.extendsSpinBoxX = QtGui.QSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.extendsSpinBoxX.sizePolicy().hasHeightForWidth())
-        self.extendsSpinBoxX.setSizePolicy(sizePolicy)
-        self.extendsSpinBoxX.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
-        self.extendsSpinBoxX.setMinimum(0)
-        self.extendsSpinBoxX.setMaximum(10000)
-        self.extendsSpinBoxX.setObjectName("extendsSpinBoxX")
-        self.gridLayout.addWidget(self.extendsSpinBoxX, 6, 1, 1, 1)
-        self.label_3 = QtGui.QLabel(self.page)
-        self.label_3.setObjectName("label_3")
-        self.gridLayout.addWidget(self.label_3, 7, 0, 1, 1)
-        self.extendsSpinBoxY = QtGui.QSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.extendsSpinBoxY.sizePolicy().hasHeightForWidth())
-        self.extendsSpinBoxY.setSizePolicy(sizePolicy)
-        self.extendsSpinBoxY.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
-        self.extendsSpinBoxY.setMinimum(0)
-        self.extendsSpinBoxY.setMaximum(10000)
-        self.extendsSpinBoxY.setObjectName("extendsSpinBoxY")
-        self.gridLayout.addWidget(self.extendsSpinBoxY, 7, 1, 1, 1)
-        self.extendsSpinBoxZ = QtGui.QSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.extendsSpinBoxZ.sizePolicy().hasHeightForWidth())
-        self.extendsSpinBoxZ.setSizePolicy(sizePolicy)
-        self.extendsSpinBoxZ.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
-        self.extendsSpinBoxZ.setMinimum(0)
-        self.extendsSpinBoxZ.setMaximum(10000)
-        self.extendsSpinBoxZ.setObjectName("extendsSpinBoxZ")
-        self.gridLayout.addWidget(self.extendsSpinBoxZ, 8, 1, 1, 1)
-        self.label_10 = QtGui.QLabel(self.page)
-        self.label_10.setObjectName("label_10")
-        self.gridLayout.addWidget(self.label_10, 9, 0, 1, 1)
-        self.terrainHeightSpinBox = QtGui.QDoubleSpinBox(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.terrainHeightSpinBox.sizePolicy().hasHeightForWidth())
-        self.terrainHeightSpinBox.setSizePolicy(sizePolicy)
-        self.terrainHeightSpinBox.setMaximum(1.0)
-        self.terrainHeightSpinBox.setSingleStep(0.1)
-        self.terrainHeightSpinBox.setProperty("value", QtCore.QVariant(0.5))
-        self.terrainHeightSpinBox.setObjectName("terrainHeightSpinBox")
-        self.gridLayout.addWidget(self.terrainHeightSpinBox, 9, 1, 1, 1)
-        self.label_7 = QtGui.QLabel(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
-        self.label_7.setSizePolicy(sizePolicy)
-        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
-        self.label_7.setObjectName("label_7")
-        self.gridLayout.addWidget(self.label_7, 10, 0, 1, 2)
-        self.label_4 = QtGui.QLabel(self.page)
-        self.label_4.setObjectName("label_4")
-        self.gridLayout.addWidget(self.label_4, 11, 0, 1, 1)
-        self.baseNameLineEdit = QtGui.QLineEdit(self.page)
-        self.baseNameLineEdit.setObjectName("baseNameLineEdit")
-        self.gridLayout.addWidget(self.baseNameLineEdit, 11, 1, 1, 1)
-        self.label_5 = QtGui.QLabel(self.page)
-        self.label_5.setObjectName("label_5")
-        self.gridLayout.addWidget(self.label_5, 12, 0, 1, 1)
-        self.resGroupLineEdit = QtGui.QLineEdit(self.page)
-        self.resGroupLineEdit.setObjectName("resGroupLineEdit")
-        self.gridLayout.addWidget(self.resGroupLineEdit, 12, 1, 1, 1)
-        self.label_8 = QtGui.QLabel(self.page)
-        self.label_8.setObjectName("label_8")
-        self.gridLayout.addWidget(self.label_8, 13, 0, 1, 1)
-        self.texSizeComboBox = QtGui.QComboBox(self.page)
-        self.texSizeComboBox.setObjectName("texSizeComboBox")
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.gridLayout.addWidget(self.texSizeComboBox, 13, 1, 1, 1)
-        self.label_9 = QtGui.QLabel(self.page)
-        self.label_9.setObjectName("label_9")
-        self.gridLayout.addWidget(self.label_9, 14, 0, 1, 1)
-        self.numTexturesComboBox = QtGui.QComboBox(self.page)
-        self.numTexturesComboBox.setObjectName("numTexturesComboBox")
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.gridLayout.addWidget(self.numTexturesComboBox, 14, 1, 1, 1)
-        self.createTerrainButton = QtGui.QPushButton(self.page)
-        self.createTerrainButton.setObjectName("createTerrainButton")
-        self.gridLayout.addWidget(self.createTerrainButton, 15, 0, 1, 2)
-        self.toolBox.addItem(self.page, "")
-        self.page_2 = QtGui.QWidget()
-        self.page_2.setGeometry(QtCore.QRect(0, 0, 261, 656))
-        self.page_2.setObjectName("page_2")
-        self.toolBox.addItem(self.page_2, "")
-        self.Seite = QtGui.QWidget()
-        self.Seite.setGeometry(QtCore.QRect(0, 0, 261, 656))
-        self.Seite.setObjectName("Seite")
-        self.toolBox.addItem(self.Seite, "")
-        self.gridLayout_2.addWidget(self.toolBox, 1, 0, 1, 1)
-        self.label_6.setBuddy(self.nameLineEdit)
-        self.label.setBuddy(self.nameLineEdit)
-        self.label_2.setBuddy(self.sizeComboBox)
-        self.label_11.setBuddy(self.extendsSpinBoxX)
-        self.label_3.setBuddy(self.extendsSpinBoxX)
-        self.label_10.setBuddy(self.extendsSpinBoxX)
-        self.label_7.setBuddy(self.baseNameLineEdit)
-        self.label_4.setBuddy(self.baseNameLineEdit)
-        self.label_5.setBuddy(self.resGroupLineEdit)
-        self.label_8.setBuddy(self.texSizeComboBox)
-        self.label_9.setBuddy(self.numTexturesComboBox)
-
-        self.retranslateUi(TerrainManagerUi)
-        self.toolBox.setCurrentIndex(0)
-        QtCore.QMetaObject.connectSlotsByName(TerrainManagerUi)
-        TerrainManagerUi.setTabOrder(self.nameLineEdit, self.sizeComboBox)
-        TerrainManagerUi.setTabOrder(self.sizeComboBox, self.extendsSpinBoxX)
-        TerrainManagerUi.setTabOrder(self.extendsSpinBoxX, self.extendsSpinBoxY)
-        TerrainManagerUi.setTabOrder(self.extendsSpinBoxY, self.extendsSpinBoxZ)
-        TerrainManagerUi.setTabOrder(self.extendsSpinBoxZ, self.baseNameLineEdit)
-        TerrainManagerUi.setTabOrder(self.baseNameLineEdit, self.resGroupLineEdit)
-        TerrainManagerUi.setTabOrder(self.resGroupLineEdit, self.texSizeComboBox)
-        TerrainManagerUi.setTabOrder(self.texSizeComboBox, self.numTexturesComboBox)
-        TerrainManagerUi.setTabOrder(self.numTexturesComboBox, self.createTerrainButton)
-
-    def retranslateUi(self, TerrainManagerUi):
-        TerrainManagerUi.setWindowTitle(QtGui.QApplication.translate("TerrainManagerUi", "Form", None, QtGui.QApplication.UnicodeUTF8))
-        self.comboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "No Terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_6.setText(QtGui.QApplication.translate("TerrainManagerUi", "Geometry", None, QtGui.QApplication.UnicodeUTF8))
-        self.label.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Name of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.label.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.nameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Name of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_2.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Vertex density", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_2.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Size", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Vertex density", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "8", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "16", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "32", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(6, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
-        self.sizeComboBox.setItemText(7, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxX.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxX.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "X:", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_11.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_11.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Position", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxY.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxY.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxZ.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.positionSpinBoxZ.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Z:", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxX.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxX.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "X:", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_3.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_3.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Extends", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxY.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxY.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxZ.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.extendsSpinBoxZ.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Z:", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_10.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
-"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
-"p, li { white-space: pre-wrap; }\n"
-"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This value means how high the vertices are placed in relation to the terrain extend in Y.</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">the vertices are placed in at height 50.</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/helpPref/TerrainExtends1.png\" /></p></body></html>", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_10.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Height", None, QtGui.QApplication.UnicodeUTF8))
-        self.terrainHeightSpinBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
-"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
-"p, li { white-space: pre-wrap; }\n"
-"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This value means how high the vertices are placed in relation to the terrain extend in Y.</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">the vertices are placed in at height 50.</p>\n"
-"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/helpPref/TerrainExtends1.png\" /></p></body></html>", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_7.setText(QtGui.QApplication.translate("TerrainManagerUi", "Splatting Settings", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_4.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_4.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Base Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.baseNameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
-        self.baseNameLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ETSplatting", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_5.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_5.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Res Group", None, QtGui.QApplication.UnicodeUTF8))
-        self.resGroupLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
-        self.resGroupLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ET", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_8.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_8.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Tex Size", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_9.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_9.setText(QtGui.QApplication.translate("TerrainManagerUi", "&NumTextures", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "1", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "3", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "4", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "5", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "6", None, QtGui.QApplication.UnicodeUTF8))
-        self.createTerrainButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.toolBox.setItemText(self.toolBox.indexOf(self.page), QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), QtGui.QApplication.translate("TerrainManagerUi", "ModifyTerrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.toolBox.setItemText(self.toolBox.indexOf(self.Seite), QtGui.QApplication.translate("TerrainManagerUi", "PaintTerrain", None, QtGui.QApplication.UnicodeUTF8))
-
-import help_rc
-
-if __name__ == "__main__":
-    import sys
-    app = QtGui.QApplication(sys.argv)
-    TerrainManagerUi = QtGui.QWidget()
-    ui = Ui_TerrainManagerUi()
-    ui.setupUi(TerrainManagerUi)
-    TerrainManagerUi.show()
-    sys.exit(app.exec_())
-
+# -*- coding: utf-8 -*-
+
+# Form implementation generated from reading ui file '/home/fusion/dev/ui files/MyTerrainManagerDock.ui'
+#
+# Created: Mon May  4 20:23:29 2009
+#      by: PyQt4 UI code generator 4.4.4
+#
+# WARNING! All changes made in this file will be lost!
+
+from PyQt4 import QtCore, QtGui
+
+class Ui_TerrainManagerUi(object):
+    def setupUi(self, TerrainManagerUi):
+        TerrainManagerUi.setObjectName("TerrainManagerUi")
+        TerrainManagerUi.resize(266, 748)
+        self.gridLayout_2 = QtGui.QGridLayout(TerrainManagerUi)
+        self.gridLayout_2.setMargin(1)
+        self.gridLayout_2.setSpacing(1)
+        self.gridLayout_2.setObjectName("gridLayout_2")
+        self.terrainListComboBox = QtGui.QComboBox(TerrainManagerUi)
+        self.terrainListComboBox.setObjectName("terrainListComboBox")
+        self.terrainListComboBox.addItem(QtCore.QString())
+        self.gridLayout_2.addWidget(self.terrainListComboBox, 0, 0, 1, 1)
+        self.deleteTerrainButton = QtGui.QToolButton(TerrainManagerUi)
+        icon = QtGui.QIcon()
+        icon.addPixmap(QtGui.QPixmap(":/iconsPref/editdelete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
+        self.deleteTerrainButton.setIcon(icon)
+        self.deleteTerrainButton.setObjectName("deleteTerrainButton")
+        self.gridLayout_2.addWidget(self.deleteTerrainButton, 0, 1, 1, 1)
+        self.toolBox = QtGui.QToolBox(TerrainManagerUi)
+        self.toolBox.setFrameShape(QtGui.QFrame.NoFrame)
+        self.toolBox.setFrameShadow(QtGui.QFrame.Sunken)
+#        self.toolBox.setTabSpacing(1)
+        self.toolBox.setObjectName("toolBox")
+        self.page = QtGui.QWidget()
+        self.page.setGeometry(QtCore.QRect(0, 0, 264, 634))
+        self.page.setObjectName("page")
+        self.gridLayout = QtGui.QGridLayout(self.page)
+        self.gridLayout.setMargin(1)
+        self.gridLayout.setSpacing(1)
+        self.gridLayout.setObjectName("gridLayout")
+        self.label_6 = QtGui.QLabel(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
+        self.label_6.setSizePolicy(sizePolicy)
+        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
+        self.label_6.setObjectName("label_6")
+        self.gridLayout.addWidget(self.label_6, 0, 0, 1, 2)
+        self.label = QtGui.QLabel(self.page)
+        self.label.setObjectName("label")
+        self.gridLayout.addWidget(self.label, 1, 0, 1, 1)
+        self.nameLineEdit = QtGui.QLineEdit(self.page)
+        self.nameLineEdit.setObjectName("nameLineEdit")
+        self.gridLayout.addWidget(self.nameLineEdit, 1, 1, 1, 1)
+        self.label_2 = QtGui.QLabel(self.page)
+        self.label_2.setObjectName("label_2")
+        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
+        self.sizeComboBox = QtGui.QComboBox(self.page)
+        self.sizeComboBox.setObjectName("sizeComboBox")
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.sizeComboBox.addItem(QtCore.QString())
+        self.gridLayout.addWidget(self.sizeComboBox, 2, 1, 1, 1)
+        self.positionSpinBoxX = QtGui.QDoubleSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.positionSpinBoxX.sizePolicy().hasHeightForWidth())
+        self.positionSpinBoxX.setSizePolicy(sizePolicy)
+        self.positionSpinBoxX.setMinimum(-999999999.0)
+        self.positionSpinBoxX.setMaximum(999999999.0)
+        self.positionSpinBoxX.setProperty("value", QtCore.QVariant(0.0))
+        self.positionSpinBoxX.setObjectName("positionSpinBoxX")
+        self.gridLayout.addWidget(self.positionSpinBoxX, 3, 1, 1, 1)
+        self.label_11 = QtGui.QLabel(self.page)
+        self.label_11.setObjectName("label_11")
+        self.gridLayout.addWidget(self.label_11, 4, 0, 1, 1)
+        self.positionSpinBoxY = QtGui.QDoubleSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.positionSpinBoxY.sizePolicy().hasHeightForWidth())
+        self.positionSpinBoxY.setSizePolicy(sizePolicy)
+        self.positionSpinBoxY.setMinimum(-999999999.0)
+        self.positionSpinBoxY.setMaximum(999999999.0)
+        self.positionSpinBoxY.setObjectName("positionSpinBoxY")
+        self.gridLayout.addWidget(self.positionSpinBoxY, 4, 1, 1, 1)
+        self.positionSpinBoxZ = QtGui.QDoubleSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.positionSpinBoxZ.sizePolicy().hasHeightForWidth())
+        self.positionSpinBoxZ.setSizePolicy(sizePolicy)
+        self.positionSpinBoxZ.setMinimum(-999999999.0)
+        self.positionSpinBoxZ.setMaximum(999999999.0)
+        self.positionSpinBoxZ.setObjectName("positionSpinBoxZ")
+        self.gridLayout.addWidget(self.positionSpinBoxZ, 5, 1, 1, 1)
+        self.extendsSpinBoxX = QtGui.QSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.extendsSpinBoxX.sizePolicy().hasHeightForWidth())
+        self.extendsSpinBoxX.setSizePolicy(sizePolicy)
+        self.extendsSpinBoxX.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
+        self.extendsSpinBoxX.setMinimum(0)
+        self.extendsSpinBoxX.setMaximum(10000)
+        self.extendsSpinBoxX.setProperty("value", QtCore.QVariant(128))
+        self.extendsSpinBoxX.setObjectName("extendsSpinBoxX")
+        self.gridLayout.addWidget(self.extendsSpinBoxX, 6, 1, 1, 1)
+        self.label_3 = QtGui.QLabel(self.page)
+        self.label_3.setObjectName("label_3")
+        self.gridLayout.addWidget(self.label_3, 7, 0, 1, 1)
+        self.extendsSpinBoxY = QtGui.QSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.extendsSpinBoxY.sizePolicy().hasHeightForWidth())
+        self.extendsSpinBoxY.setSizePolicy(sizePolicy)
+        self.extendsSpinBoxY.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
+        self.extendsSpinBoxY.setMinimum(0)
+        self.extendsSpinBoxY.setMaximum(10000)
+        self.extendsSpinBoxY.setProperty("value", QtCore.QVariant(128))
+        self.extendsSpinBoxY.setObjectName("extendsSpinBoxY")
+        self.gridLayout.addWidget(self.extendsSpinBoxY, 7, 1, 1, 1)
+        self.extendsSpinBoxZ = QtGui.QSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.extendsSpinBoxZ.sizePolicy().hasHeightForWidth())
+        self.extendsSpinBoxZ.setSizePolicy(sizePolicy)
+        self.extendsSpinBoxZ.setCorrectionMode(QtGui.QAbstractSpinBox.CorrectToNearestValue)
+        self.extendsSpinBoxZ.setMinimum(0)
+        self.extendsSpinBoxZ.setMaximum(10000)
+        self.extendsSpinBoxZ.setProperty("value", QtCore.QVariant(128))
+        self.extendsSpinBoxZ.setObjectName("extendsSpinBoxZ")
+        self.gridLayout.addWidget(self.extendsSpinBoxZ, 8, 1, 1, 1)
+        self.label_10 = QtGui.QLabel(self.page)
+        self.label_10.setObjectName("label_10")
+        self.gridLayout.addWidget(self.label_10, 9, 0, 1, 1)
+        self.terrainHeightSpinBox = QtGui.QDoubleSpinBox(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.terrainHeightSpinBox.sizePolicy().hasHeightForWidth())
+        self.terrainHeightSpinBox.setSizePolicy(sizePolicy)
+        self.terrainHeightSpinBox.setMaximum(1.0)
+        self.terrainHeightSpinBox.setSingleStep(0.1)
+        self.terrainHeightSpinBox.setProperty("value", QtCore.QVariant(0.5))
+        self.terrainHeightSpinBox.setObjectName("terrainHeightSpinBox")
+        self.gridLayout.addWidget(self.terrainHeightSpinBox, 9, 1, 1, 1)
+        self.label_7 = QtGui.QLabel(self.page)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
+        self.label_7.setSizePolicy(sizePolicy)
+        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
+        self.label_7.setObjectName("label_7")
+        self.gridLayout.addWidget(self.label_7, 10, 0, 1, 2)
+        self.label_4 = QtGui.QLabel(self.page)
+        self.label_4.setObjectName("label_4")
+        self.gridLayout.addWidget(self.label_4, 11, 0, 1, 1)
+        self.baseNameLineEdit = QtGui.QLineEdit(self.page)
+        self.baseNameLineEdit.setObjectName("baseNameLineEdit")
+        self.gridLayout.addWidget(self.baseNameLineEdit, 11, 1, 1, 1)
+        self.label_5 = QtGui.QLabel(self.page)
+        self.label_5.setObjectName("label_5")
+        self.gridLayout.addWidget(self.label_5, 12, 0, 1, 1)
+        self.resGroupLineEdit = QtGui.QLineEdit(self.page)
+        self.resGroupLineEdit.setObjectName("resGroupLineEdit")
+        self.gridLayout.addWidget(self.resGroupLineEdit, 12, 1, 1, 1)
+        self.label_8 = QtGui.QLabel(self.page)
+        self.label_8.setObjectName("label_8")
+        self.gridLayout.addWidget(self.label_8, 13, 0, 1, 1)
+        self.texSizeComboBox = QtGui.QComboBox(self.page)
+        self.texSizeComboBox.setObjectName("texSizeComboBox")
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.texSizeComboBox.addItem(QtCore.QString())
+        self.gridLayout.addWidget(self.texSizeComboBox, 13, 1, 1, 1)
+        self.label_9 = QtGui.QLabel(self.page)
+        self.label_9.setObjectName("label_9")
+        self.gridLayout.addWidget(self.label_9, 14, 0, 1, 1)
+        self.numTexturesComboBox = QtGui.QComboBox(self.page)
+        self.numTexturesComboBox.setObjectName("numTexturesComboBox")
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.numTexturesComboBox.addItem(QtCore.QString())
+        self.gridLayout.addWidget(self.numTexturesComboBox, 14, 1, 1, 1)
+        self.createTerrainButton = QtGui.QPushButton(self.page)
+        self.createTerrainButton.setObjectName("createTerrainButton")
+        self.gridLayout.addWidget(self.createTerrainButton, 15, 0, 1, 2)
+        self.toolBox.addItem(self.page, "")
+        self.page_2 = QtGui.QWidget()
+        self.page_2.setGeometry(QtCore.QRect(0, 0, 264, 634))
+        self.page_2.setObjectName("page_2")
+        self.gridLayout_3 = QtGui.QGridLayout(self.page_2)
+        self.gridLayout_3.setMargin(1)
+        self.gridLayout_3.setSpacing(1)
+        self.gridLayout_3.setObjectName("gridLayout_3")
+        self.terrainModToolComboBox = QtGui.QComboBox(self.page_2)
+        self.terrainModToolComboBox.setObjectName("terrainModToolComboBox")
+        self.terrainModToolComboBox.addItem(QtCore.QString())
+        self.terrainModToolComboBox.addItem(QtCore.QString())
+        self.terrainModToolComboBox.addItem(QtCore.QString())
+        self.gridLayout_3.addWidget(self.terrainModToolComboBox, 0, 0, 1, 4)
+        self.label_12 = QtGui.QLabel(self.page_2)
+        self.label_12.setObjectName("label_12")
+        self.gridLayout_3.addWidget(self.label_12, 1, 0, 1, 2)
+        self.intensitySlider = QtGui.QSlider(self.page_2)
+        self.intensitySlider.setProperty("value", QtCore.QVariant(2))
+        self.intensitySlider.setOrientation(QtCore.Qt.Horizontal)
+        self.intensitySlider.setObjectName("intensitySlider")
+        self.gridLayout_3.addWidget(self.intensitySlider, 1, 2, 1, 1)
+        self.label_13 = QtGui.QLabel(self.page_2)
+        self.label_13.setObjectName("label_13")
+        self.gridLayout_3.addWidget(self.label_13, 1, 3, 1, 1)
+        self.brushButton = QtGui.QPushButton(self.page_2)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.brushButton.sizePolicy().hasHeightForWidth())
+        self.brushButton.setSizePolicy(sizePolicy)
+        self.brushButton.setMinimumSize(QtCore.QSize(130, 130))
+        self.brushButton.setObjectName("brushButton")
+        self.gridLayout_3.addWidget(self.brushButton, 2, 1, 1, 2)
+        spacerItem = QtGui.QSpacerItem(20, 451, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
+        self.gridLayout_3.addItem(spacerItem, 3, 2, 1, 1)
+        self.label_14 = QtGui.QLabel(self.page_2)
+        self.label_14.setObjectName("label_14")
+        self.gridLayout_3.addWidget(self.label_14, 2, 0, 1, 1)
+        self.toolBox.addItem(self.page_2, "")
+        self.Seite = QtGui.QWidget()
+        self.Seite.setGeometry(QtCore.QRect(0, 0, 264, 634))
+        self.Seite.setObjectName("Seite")
+        self.toolBox.addItem(self.Seite, "")
+        self.gridLayout_2.addWidget(self.toolBox, 1, 0, 1, 2)
+        self.label_6.setBuddy(self.nameLineEdit)
+        self.label.setBuddy(self.nameLineEdit)
+        self.label_2.setBuddy(self.sizeComboBox)
+        self.label_11.setBuddy(self.extendsSpinBoxX)
+        self.label_3.setBuddy(self.extendsSpinBoxX)
+        self.label_10.setBuddy(self.extendsSpinBoxX)
+        self.label_7.setBuddy(self.baseNameLineEdit)
+        self.label_4.setBuddy(self.baseNameLineEdit)
+        self.label_5.setBuddy(self.resGroupLineEdit)
+        self.label_8.setBuddy(self.texSizeComboBox)
+        self.label_9.setBuddy(self.numTexturesComboBox)
+        self.label_12.setBuddy(self.intensitySlider)
+        self.label_14.setBuddy(self.brushButton)
+
+        self.retranslateUi(TerrainManagerUi)
+        self.toolBox.setCurrentIndex(1)
+        self.sizeComboBox.setCurrentIndex(3)
+        QtCore.QObject.connect(self.intensitySlider, QtCore.SIGNAL("sliderMoved(int)"), self.label_13.setNum)
+        QtCore.QMetaObject.connectSlotsByName(TerrainManagerUi)
+        TerrainManagerUi.setTabOrder(self.terrainModToolComboBox, self.intensitySlider)
+        TerrainManagerUi.setTabOrder(self.intensitySlider, self.brushButton)
+        TerrainManagerUi.setTabOrder(self.brushButton, self.extendsSpinBoxZ)
+        TerrainManagerUi.setTabOrder(self.extendsSpinBoxZ, self.baseNameLineEdit)
+        TerrainManagerUi.setTabOrder(self.baseNameLineEdit, self.resGroupLineEdit)
+        TerrainManagerUi.setTabOrder(self.resGroupLineEdit, self.texSizeComboBox)
+        TerrainManagerUi.setTabOrder(self.texSizeComboBox, self.numTexturesComboBox)
+        TerrainManagerUi.setTabOrder(self.numTexturesComboBox, self.createTerrainButton)
+        TerrainManagerUi.setTabOrder(self.createTerrainButton, self.terrainListComboBox)
+        TerrainManagerUi.setTabOrder(self.terrainListComboBox, self.positionSpinBoxX)
+        TerrainManagerUi.setTabOrder(self.positionSpinBoxX, self.positionSpinBoxY)
+        TerrainManagerUi.setTabOrder(self.positionSpinBoxY, self.positionSpinBoxZ)
+        TerrainManagerUi.setTabOrder(self.positionSpinBoxZ, self.terrainHeightSpinBox)
+        TerrainManagerUi.setTabOrder(self.terrainHeightSpinBox, self.nameLineEdit)
+        TerrainManagerUi.setTabOrder(self.nameLineEdit, self.sizeComboBox)
+        TerrainManagerUi.setTabOrder(self.sizeComboBox, self.extendsSpinBoxX)
+        TerrainManagerUi.setTabOrder(self.extendsSpinBoxX, self.extendsSpinBoxY)
+
+    def retranslateUi(self, TerrainManagerUi):
+        TerrainManagerUi.setWindowTitle(QtGui.QApplication.translate("TerrainManagerUi", "Form", None, QtGui.QApplication.UnicodeUTF8))
+        self.terrainListComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "No Terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.deleteTerrainButton.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Delete the current terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.deleteTerrainButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "...", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_6.setText(QtGui.QApplication.translate("TerrainManagerUi", "Geometry", None, QtGui.QApplication.UnicodeUTF8))
+        self.label.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Name of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.nameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Name of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_2.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Vertex density", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_2.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Vertex density", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "8", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "16", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "32", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(6, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
+        self.sizeComboBox.setItemText(7, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxX.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxX.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "X:", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_11.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_11.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Position", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxY.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxY.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxZ.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Position of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.positionSpinBoxZ.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Z:", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxX.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxX.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "X:", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_3.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_3.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Extends", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxY.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxY.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Y:", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxZ.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The extends of the terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.extendsSpinBoxZ.setPrefix(QtGui.QApplication.translate("TerrainManagerUi", "Z:", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_10.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
+"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
+"p, li { white-space: pre-wrap; }\n"
+"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This value means how high the vertices are placed in relation to the terrain extend in Y.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">the vertices are placed in at height 50.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/helpPref/TerrainExtends1.png\" /></p></body></html>", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_10.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Height", None, QtGui.QApplication.UnicodeUTF8))
+        self.terrainHeightSpinBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
+"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
+"p, li { white-space: pre-wrap; }\n"
+"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This value means how high the vertices are placed in relation to the terrain extend in Y.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">the vertices are placed in at height 50.</p>\n"
+"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/helpPref/TerrainExtends1.png\" /></p></body></html>", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_7.setText(QtGui.QApplication.translate("TerrainManagerUi", "Splatting Settings", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_4.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_4.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Base Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.baseNameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
+        self.baseNameLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ETSplatting", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_5.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_5.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Res Group", None, QtGui.QApplication.UnicodeUTF8))
+        self.resGroupLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
+        self.resGroupLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ET", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_8.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_8.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Tex Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
+        self.texSizeComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_9.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_9.setText(QtGui.QApplication.translate("TerrainManagerUi", "&NumTextures", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "1", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "3", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "4", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "5", None, QtGui.QApplication.UnicodeUTF8))
+        self.numTexturesComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "6", None, QtGui.QApplication.UnicodeUTF8))
+        self.createTerrainButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.toolBox.setItemText(self.toolBox.indexOf(self.page), QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.terrainModToolComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Terrain tools", None, QtGui.QApplication.UnicodeUTF8))
+        self.terrainModToolComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "Flatten", None, QtGui.QApplication.UnicodeUTF8))
+        self.terrainModToolComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "Lower", None, QtGui.QApplication.UnicodeUTF8))
+        self.terrainModToolComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "Raise", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_12.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_12.setText(QtGui.QApplication.translate("TerrainManagerUi", "Intensity", None, QtGui.QApplication.UnicodeUTF8))
+        self.intensitySlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_13.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_13.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
+        self.brushButton.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The brush that is applied", None, QtGui.QApplication.UnicodeUTF8))
+        self.brushButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "PushButton", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_14.setText(QtGui.QApplication.translate("TerrainManagerUi", "Brush Type  ", None, QtGui.QApplication.UnicodeUTF8))
+        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), QtGui.QApplication.translate("TerrainManagerUi", "ModifyTerrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.toolBox.setItemText(self.toolBox.indexOf(self.Seite), QtGui.QApplication.translate("TerrainManagerUi", "PaintTerrain", None, QtGui.QApplication.UnicodeUTF8))
+
+import help_rc
+import icons_rc
+
+if __name__ == "__main__":
+    import sys
+    app = QtGui.QApplication(sys.argv)
+    TerrainManagerUi = QtGui.QWidget()
+    ui = Ui_TerrainManagerUi()
+    ui.setupUi(TerrainManagerUi)
+    TerrainManagerUi.show()
+    sys.exit(app.exec_())
+

Added: rl/trunk/editors/Lockenwickler/src/media/icons/icons.qrc
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/icons/icons.qrc	2009-05-03 16:38:09 UTC (rev 4916)
+++ rl/trunk/editors/Lockenwickler/src/media/icons/icons.qrc	2009-05-04 19:22:03 UTC (rev 4917)
@@ -0,0 +1,51 @@
+<RCC>
+  <qresource prefix="iconsPref" >
+    <file>2rightarrow.png</file>
+    <file>14_layer_invisible.png</file>
+    <file>14_layer_visible.png</file>
+    <file>agt_games.png</file>
+    <file>agt_multimedia.png</file>
+    <file>back.png</file>
+    <file>colors.png</file>
+    <file>configure.png</file>
+    <file>console.png</file>
+    <file>cursor.png</file>
+    <file>decrypted.png</file>
+    <file>dissociatecell.png</file>
+    <file>edit_add.png</file>
+    <file>editclear.png</file>
+    <file>editcopy.png</file>
+    <file>editcut.png</file>
+    <file>editdelete.png</file>
+    <file>editpaste.png</file>
+    <file>edit.png</file>
+    <file>edit_remove.png</file>
+    <file>encrypted.png</file>
+    <file>endturn.png</file>
+    <file>exit.png</file>
+    <file>fileexport.png</file>
+    <file>filenew.png</file>
+    <file>fileopen.png</file>
+    <file>filesave.png</file>
+    <file>find.png</file>
+    <file>forward.png</file>
+    <file>goto.png</file>
+    <file>idea.png</file>
+    <file>lockenwickler_provisorium.png</file>
+    <file>lockenwickler_provisorium_small.png</file>
+    <file>move.png</file>
+    <file>move_task_down.png</file>
+    <file>move_task_up.png</file>
+    <file>multirow.png</file>
+    <file>ok.png</file>
+    <file>playlist.png</file>
+    <file>redo.png</file>
+    <file>resizecol.png</file>
+    <file>rotate.png</file>
+    <file>terrain.png</file>
+    <file>terrain_small.png</file>
+    <file>tux.png</file>
+    <file>unsortedlist1.png</file>
+    <file>view_tree.png</file>
+  </qresource>
+</RCC>

Deleted: rl/trunk/editors/Lockenwickler/src/media/terrain/brush.png
===================================================================
(Binary files differ)

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/brushes/brush.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/brushes/brush.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream



From fusion2 at mail.berlios.de  Wed May  6 20:12:33 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Wed, 6 May 2009 20:12:33 +0200
Subject: [Dsa-hl-svn] r4919 - in rl/trunk/editors/Lockenwickler: . src ui
	files
Message-ID: <200905061812.n46ICXI6009130@sheep.berlios.de>

Author: fusion2
Date: 2009-05-06 20:12:31 +0200 (Wed, 06 May 2009)
New Revision: 4919

Modified:
   rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
   rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
   rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
   rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
Log:
- Brush type, Brush intensity and Brush radius can be selected and edited

Modified: rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
===================================================================
--- rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-05-05 17:25:04 UTC (rev 4918)
+++ rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-05-06 18:12:31 UTC (rev 4919)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE Project SYSTEM "Project-4.6.dtd">
 <!-- eric4 project file for project Lockenwickler -->
-<!-- Saved: 2009-05-05, 19:20:31 -->
+<!-- Saved: 2009-05-06, 20:05:26 -->
 <!-- Copyright (C) 2009 Stefan Stammberger, sstammberger at web.de -->
 <Project version="4.6">
   <Language>en</Language>
@@ -53,6 +53,7 @@
     <Source>src/Ui_MyTerrainManagerDock.py</Source>
     <Source>src/media/help/help_rc.py</Source>
     <Source>ui files/Ui_BrushDialog.py</Source>
+    <Source>ui files/Ui_MyTerrainManagerDock.py</Source>
   </Sources>
   <Forms>
     <Form>ui files/GOPropertyEditorDialogINT.ui</Form>

Modified: rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-05 17:25:04 UTC (rev 4918)
+++ rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-06 18:12:31 UTC (rev 4919)
@@ -76,20 +76,38 @@
         self.terrainManager = terrainManager
         QWidget.connect(self.createTerrainButton, SIGNAL("clicked()"), self.onCreateTerrainButtonClicked)
         QWidget.connect(self.deleteTerrainButton, SIGNAL("clicked()"), self.onDeleteTerrainButtonClicked)
-        QWidget.connect(self.brushButton, SIGNAL("clicked()"), self.onBrushButtonClicked)
+        QWidget.connect(self.editBrushButton, SIGNAL("clicked()"), self.onEditBrushButtonClicked)
+        QWidget.connect(self.paintBrushButton, SIGNAL("clicked()"), self.onPaintBrushButtonClicked)
         QWidget.connect(self.terrainListComboBox, SIGNAL("currentIndexChanged ( const QString &)"), self.onTerrainChanged)
         QWidget.connect(self.toggleTerrainVisibilityButton, SIGNAL("toggled ( bool )"), self.onToggleTerrainVisiblity)
+        QWidget.connect(self.toolBox, SIGNAL("currentChanged( int )"), self.onModeChanged)
+        QWidget.connect(self.toolBox, SIGNAL("currentChanged( int )"), self.onModeChanged)
+        
         self.onBrushChangedCallback = onBrushChangedCallback
         self.lastTerrain = None
         
-    def onBrushButtonClicked(self):
+    def onEditBrushButtonClicked(self):
         dlg = BrushDialog(self)
         dlg.exec_()
-        self.onBrushChangedCallback(dlg.brushName)
-        self.brushButton.setIcon(QIcon("./media/terrain/brushes/" + dlg.brushName))
-        self.brushButton.setIconSize(QSize(150, 150))
-        self.brushButton.setText(dlg.brushName)
+        self.terrainManager.setEditBrush(dlg.brushName)
+        self.editBrushButton.setIcon(QIcon("./media/terrain/brushes/" + dlg.brushName))
+        self.editBrushButton.setIconSize(QSize(150, 150))
+        self.editBrushButton.setText(dlg.brushName)
         
+    def onPaintBrushButtonClicked(self):
+        dlg = BrushDialog(self)
+        dlg.exec_()
+        self.terrainManager.setPaintBrush(dlg.brushName)
+        self.paintBrushButton.setIcon(QIcon("./media/terrain/brushes/" + dlg.brushName))
+        self.paintBrushButton.setIconSize(QSize(150, 150))
+        self.paintBrushButton.setText(dlg.brushName)
+        
+    def onPaintBrushSizeChanged(self, val):
+        self.paintBrushSize = val
+        
+    def onEditBrushSizeChanged(self, val):
+        self.editBrushSize = val
+        
     def onCreateTerrainButtonClicked(self):
         terrainData = {}
         terrainData["name"]  = str(self.nameLineEdit.text())
@@ -110,22 +128,39 @@
         self.emit(SIGNAL("createTerrain"), terrainData)
         
     def onDeleteTerrainButtonClicked(self):
-        reply = QtGui.QMessageBox.question(self,  "This cannot be undone!",  "Really delete the terrain?",  QMessageBox.Yes|QMessageBox.Cancel)
+        reply = QMessageBox.question(self,  "This cannot be undone!",  "Really delete the terrain?",  QMessageBox.Yes|QMessageBox.Cancel)
         if reply == QMessageBox.Cancel:
             return
         elif reply == QMessageBox.Yes:
             self.terrainManager.deleteTerrain(str(self.terrainListComboBox.currentText()))
+        self.lastTerrain = None
+    
+    def onModeChanged(self, mode):
+        self.terrainManager.setEditMode(mode)
         
     def onTerrainChanged(self, text):
+        self.terrainManager.setCurrentTerrain(text)
         terrain = self.terrainManager.getTerrain(text)
         if terrain is not None:
+            QWidget.disconnect(self.toggleTerrainVisibilityButton, SIGNAL("toggled ( bool )"), self.onToggleTerrainVisiblity)
             self.toggleTerrainVisibilityButton.setChecked(terrain.visible)
+            QWidget.connect(self.toggleTerrainVisibilityButton, SIGNAL("toggled ( bool )"), self.onToggleTerrainVisiblity)
             
             self.lastTerrain = terrain
         
+        
     def onToggleTerrainVisiblity(self, visibility):
         if self.lastTerrain is not None:
             self.lastTerrain.setVisible(visibility)
+            
+    def updateTerrainListBox(self, terrainList):
+        self.terrainListComboBox.clear()
+        if len(terrainList) == 0:
+            self.terrainListComboBox.addItem("No Terrain")
+            return
+            
+        for terrain in terrainList:
+            self.terrainListComboBox.addItem(terrain.name)
         
 class Terrain():
     def __init__(self, sceneManager):
@@ -222,11 +257,12 @@
         
     def setVisible(self, visibility):
         try:
-            if self.parentSceneNode.getChild(self.sceneNode.getName()):
-                self.parentSceneNode.addChild(self.sceneNode)
+            #if self.parentSceneNode.getChild(self.sceneNode.getName()):
+            if not visibility:
+                self.parentSceneNode.removeChild(self.sceneNode)
                 self.visible = visibility
             else:
-                self.parentSceneNode.attachChild(self.sceneNode)
+                self.parentSceneNode.addChild(self.sceneNode)
                 self.visible = visibility
         except og.OgreException, e:
             print e
@@ -237,13 +273,22 @@
         self.dockWidgetContents = None
         og.ResourceGroupManager.getSingleton().addResourceLocation("./media/terrain", "FileSystem", "ET", True)
         self.terrainList = []
+        
+        self.currentEditBrush = None
+        self.editBrushes = {}        
+        self.editBrushSize = val
+        
+        self.currentPaintBrush = None
+        self.paintBrushes = {}
+        self.paintBrushSize = val
     
     def deleteTerrain(self, name):
         for terrain in self.terrainList:
             if terrain.name == name:
                 self.terrainList.remove(terrain)
                 del terrain
-    
+        self.updateTerrainListBox()
+        
     def getDockWidget(self, parent):
         if self.dockWidgetContents is None:
             self.dockWidgetContents = MyTerrainManagerDock(self, self.onBrushChanged, parent)
@@ -267,6 +312,12 @@
     def onBrushChanged(self, brushName):
         print brushName
 
+    def onPaintBrushSizeChanged(self, val):
+        self.paintBrushSize = val
+        
+    def onEditBrushSizeChanged(self, val):
+        self.editBrushSize = val
+
     def onCreateTerrain(self, arg):
         terrain = Terrain(self.sceneManager)
         terrain.create(arg)
@@ -285,10 +336,21 @@
 #            i += 1
 
     def updateTerrainListBox(self):
-        self.dockWidgetContents.terrainListComboBox.clear()
-        if len(self.terrainList) == 0:
-            self.dockWidgetContents.terrainListComboBox.addItem("No Terrain")
-            return
-            
-        for terrain in self.terrainList:
-            self.dockWidgetContents.terrainListComboBox.addItem(terrain.name)
+        self.dockWidgetContents.updateTerrainListBox(self.terrainList)
+
+    def setCurrentTerrain(self, text):
+        self.currentTerrain = self.getTerrain(text)
+        
+    def setEditBrush(self, brush):
+        self.editBrushes
+        
+    def setPaintBrush(self, brush):
+        print brush
+        
+    def setEditMode(self, mode):
+        self.editMode = mode
+        
+#        if mode == 0:
+#            
+#        elif mode == 1:
+#        elif mode == 2:

Modified: rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-05 17:25:04 UTC (rev 4918)
+++ rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-06 18:12:31 UTC (rev 4919)
@@ -2,7 +2,7 @@
 
 # Form implementation generated from reading ui file '/home/fusion/dev/ui files/MyTerrainManagerDock.ui'
 #
-# Created: Tue May  5 18:01:03 2009
+# Created: Wed May  6 20:00:32 2009
 #      by: PyQt4 UI code generator 4.4.4
 #
 # WARNING! All changes made in this file will be lost!
@@ -13,14 +13,14 @@
     def setupUi(self, TerrainManagerUi):
         TerrainManagerUi.setObjectName("TerrainManagerUi")
         TerrainManagerUi.resize(266, 748)
-        self.gridLayout_2 = QtGui.QGridLayout(TerrainManagerUi)
-        self.gridLayout_2.setMargin(1)
-        self.gridLayout_2.setSpacing(1)
-        self.gridLayout_2.setObjectName("gridLayout_2")
+        self.gridLayout_4 = QtGui.QGridLayout(TerrainManagerUi)
+        self.gridLayout_4.setMargin(1)
+        self.gridLayout_4.setSpacing(1)
+        self.gridLayout_4.setObjectName("gridLayout_4")
         self.terrainListComboBox = QtGui.QComboBox(TerrainManagerUi)
         self.terrainListComboBox.setObjectName("terrainListComboBox")
         self.terrainListComboBox.addItem(QtCore.QString())
-        self.gridLayout_2.addWidget(self.terrainListComboBox, 0, 0, 1, 1)
+        self.gridLayout_4.addWidget(self.terrainListComboBox, 0, 0, 1, 1)
         self.toggleTerrainVisibilityButton = QtGui.QToolButton(TerrainManagerUi)
         icon = QtGui.QIcon()
         icon.addPixmap(QtGui.QPixmap(":/iconsPref/14_layer_invisible.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
@@ -28,20 +28,20 @@
         self.toggleTerrainVisibilityButton.setIcon(icon)
         self.toggleTerrainVisibilityButton.setCheckable(True)
         self.toggleTerrainVisibilityButton.setObjectName("toggleTerrainVisibilityButton")
-        self.gridLayout_2.addWidget(self.toggleTerrainVisibilityButton, 0, 1, 1, 1)
+        self.gridLayout_4.addWidget(self.toggleTerrainVisibilityButton, 0, 1, 1, 1)
         self.editTerrainButton = QtGui.QToolButton(TerrainManagerUi)
         icon1 = QtGui.QIcon()
         icon1.addPixmap(QtGui.QPixmap(":/iconsPref/colors.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
         self.editTerrainButton.setIcon(icon1)
         self.editTerrainButton.setCheckable(True)
         self.editTerrainButton.setObjectName("editTerrainButton")
-        self.gridLayout_2.addWidget(self.editTerrainButton, 0, 2, 1, 1)
+        self.gridLayout_4.addWidget(self.editTerrainButton, 0, 2, 1, 1)
         self.deleteTerrainButton = QtGui.QToolButton(TerrainManagerUi)
         icon2 = QtGui.QIcon()
         icon2.addPixmap(QtGui.QPixmap(":/iconsPref/editdelete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
         self.deleteTerrainButton.setIcon(icon2)
         self.deleteTerrainButton.setObjectName("deleteTerrainButton")
-        self.gridLayout_2.addWidget(self.deleteTerrainButton, 0, 3, 1, 1)
+        self.gridLayout_4.addWidget(self.deleteTerrainButton, 0, 3, 1, 1)
         self.toolBox = QtGui.QToolBox(TerrainManagerUi)
         self.toolBox.setFrameShape(QtGui.QFrame.NoFrame)
         self.toolBox.setFrameShadow(QtGui.QFrame.Sunken)
@@ -217,6 +217,8 @@
         self.createTerrainButton = QtGui.QPushButton(self.page)
         self.createTerrainButton.setObjectName("createTerrainButton")
         self.gridLayout.addWidget(self.createTerrainButton, 15, 0, 1, 2)
+        spacerItem = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
+        self.gridLayout.addItem(spacerItem, 16, 0, 1, 1)
         self.toolBox.addItem(self.page, "")
         self.page_2 = QtGui.QWidget()
         self.page_2.setGeometry(QtCore.QRect(0, 0, 264, 634))
@@ -230,38 +232,89 @@
         self.terrainModToolComboBox.addItem(QtCore.QString())
         self.terrainModToolComboBox.addItem(QtCore.QString())
         self.terrainModToolComboBox.addItem(QtCore.QString())
-        self.gridLayout_3.addWidget(self.terrainModToolComboBox, 0, 0, 1, 4)
+        self.gridLayout_3.addWidget(self.terrainModToolComboBox, 0, 0, 1, 3)
         self.label_12 = QtGui.QLabel(self.page_2)
         self.label_12.setObjectName("label_12")
-        self.gridLayout_3.addWidget(self.label_12, 1, 0, 1, 2)
-        self.intensitySlider = QtGui.QSlider(self.page_2)
-        self.intensitySlider.setProperty("value", QtCore.QVariant(2))
-        self.intensitySlider.setOrientation(QtCore.Qt.Horizontal)
-        self.intensitySlider.setObjectName("intensitySlider")
-        self.gridLayout_3.addWidget(self.intensitySlider, 1, 2, 1, 1)
+        self.gridLayout_3.addWidget(self.label_12, 1, 0, 1, 1)
+        self.editIntensitySlider = QtGui.QSlider(self.page_2)
+        self.editIntensitySlider.setProperty("value", QtCore.QVariant(2))
+        self.editIntensitySlider.setOrientation(QtCore.Qt.Horizontal)
+        self.editIntensitySlider.setObjectName("editIntensitySlider")
+        self.gridLayout_3.addWidget(self.editIntensitySlider, 1, 1, 1, 1)
         self.label_13 = QtGui.QLabel(self.page_2)
         self.label_13.setObjectName("label_13")
-        self.gridLayout_3.addWidget(self.label_13, 1, 3, 1, 1)
-        self.brushButton = QtGui.QPushButton(self.page_2)
+        self.gridLayout_3.addWidget(self.label_13, 1, 2, 1, 1)
+        self.label_15 = QtGui.QLabel(self.page_2)
+        self.label_15.setObjectName("label_15")
+        self.gridLayout_3.addWidget(self.label_15, 2, 0, 1, 1)
+        self.label_16 = QtGui.QLabel(self.page_2)
+        self.label_16.setObjectName("label_16")
+        self.gridLayout_3.addWidget(self.label_16, 2, 2, 1, 1)
+        self.label_14 = QtGui.QLabel(self.page_2)
+        self.label_14.setObjectName("label_14")
+        self.gridLayout_3.addWidget(self.label_14, 3, 0, 1, 1)
+        self.editBrushButton = QtGui.QPushButton(self.page_2)
         sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
         sizePolicy.setHorizontalStretch(0)
         sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.brushButton.sizePolicy().hasHeightForWidth())
-        self.brushButton.setSizePolicy(sizePolicy)
-        self.brushButton.setMinimumSize(QtCore.QSize(130, 130))
-        self.brushButton.setObjectName("brushButton")
-        self.gridLayout_3.addWidget(self.brushButton, 2, 1, 1, 2)
-        spacerItem = QtGui.QSpacerItem(20, 451, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
-        self.gridLayout_3.addItem(spacerItem, 3, 2, 1, 1)
-        self.label_14 = QtGui.QLabel(self.page_2)
-        self.label_14.setObjectName("label_14")
-        self.gridLayout_3.addWidget(self.label_14, 2, 0, 1, 1)
+        sizePolicy.setHeightForWidth(self.editBrushButton.sizePolicy().hasHeightForWidth())
+        self.editBrushButton.setSizePolicy(sizePolicy)
+        self.editBrushButton.setMinimumSize(QtCore.QSize(130, 130))
+        self.editBrushButton.setObjectName("editBrushButton")
+        self.gridLayout_3.addWidget(self.editBrushButton, 3, 1, 1, 1)
+        spacerItem1 = QtGui.QSpacerItem(20, 451, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
+        self.gridLayout_3.addItem(spacerItem1, 4, 1, 1, 1)
+        self.editBrushSizeSlider = QtGui.QSlider(self.page_2)
+        self.editBrushSizeSlider.setProperty("value", QtCore.QVariant(2))
+        self.editBrushSizeSlider.setOrientation(QtCore.Qt.Horizontal)
+        self.editBrushSizeSlider.setObjectName("editBrushSizeSlider")
+        self.gridLayout_3.addWidget(self.editBrushSizeSlider, 2, 1, 1, 1)
         self.toolBox.addItem(self.page_2, "")
-        self.Seite = QtGui.QWidget()
-        self.Seite.setGeometry(QtCore.QRect(0, 0, 264, 634))
-        self.Seite.setObjectName("Seite")
-        self.toolBox.addItem(self.Seite, "")
-        self.gridLayout_2.addWidget(self.toolBox, 1, 0, 1, 4)
+        self.page_3 = QtGui.QWidget()
+        self.page_3.setGeometry(QtCore.QRect(0, 0, 264, 634))
+        self.page_3.setObjectName("page_3")
+        self.gridLayout_2 = QtGui.QGridLayout(self.page_3)
+        self.gridLayout_2.setMargin(1)
+        self.gridLayout_2.setSpacing(1)
+        self.gridLayout_2.setObjectName("gridLayout_2")
+        self.label_18 = QtGui.QLabel(self.page_3)
+        self.label_18.setObjectName("label_18")
+        self.gridLayout_2.addWidget(self.label_18, 0, 0, 1, 1)
+        self.paintIntensitySlider = QtGui.QSlider(self.page_3)
+        self.paintIntensitySlider.setProperty("value", QtCore.QVariant(2))
+        self.paintIntensitySlider.setOrientation(QtCore.Qt.Horizontal)
+        self.paintIntensitySlider.setObjectName("paintIntensitySlider")
+        self.gridLayout_2.addWidget(self.paintIntensitySlider, 0, 1, 1, 1)
+        self.label_21 = QtGui.QLabel(self.page_3)
+        self.label_21.setObjectName("label_21")
+        self.gridLayout_2.addWidget(self.label_21, 0, 2, 1, 1)
+        self.label_20 = QtGui.QLabel(self.page_3)
+        self.label_20.setObjectName("label_20")
+        self.gridLayout_2.addWidget(self.label_20, 1, 0, 1, 1)
+        self.paintBrushSizeSlider = QtGui.QSlider(self.page_3)
+        self.paintBrushSizeSlider.setProperty("value", QtCore.QVariant(2))
+        self.paintBrushSizeSlider.setOrientation(QtCore.Qt.Horizontal)
+        self.paintBrushSizeSlider.setObjectName("paintBrushSizeSlider")
+        self.gridLayout_2.addWidget(self.paintBrushSizeSlider, 1, 1, 1, 1)
+        self.label_17 = QtGui.QLabel(self.page_3)
+        self.label_17.setObjectName("label_17")
+        self.gridLayout_2.addWidget(self.label_17, 1, 2, 1, 1)
+        self.label_19 = QtGui.QLabel(self.page_3)
+        self.label_19.setObjectName("label_19")
+        self.gridLayout_2.addWidget(self.label_19, 2, 0, 1, 1)
+        self.paintBrushButton = QtGui.QPushButton(self.page_3)
+        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
+        sizePolicy.setHorizontalStretch(0)
+        sizePolicy.setVerticalStretch(0)
+        sizePolicy.setHeightForWidth(self.paintBrushButton.sizePolicy().hasHeightForWidth())
+        self.paintBrushButton.setSizePolicy(sizePolicy)
+        self.paintBrushButton.setMinimumSize(QtCore.QSize(130, 130))
+        self.paintBrushButton.setObjectName("paintBrushButton")
+        self.gridLayout_2.addWidget(self.paintBrushButton, 2, 1, 1, 1)
+        spacerItem2 = QtGui.QSpacerItem(20, 451, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
+        self.gridLayout_2.addItem(spacerItem2, 3, 1, 1, 1)
+        self.toolBox.addItem(self.page_3, "")
+        self.gridLayout_4.addWidget(self.toolBox, 1, 0, 1, 4)
         self.label_6.setBuddy(self.nameLineEdit)
         self.label.setBuddy(self.nameLineEdit)
         self.label_2.setBuddy(self.sizeComboBox)
@@ -273,17 +326,24 @@
         self.label_5.setBuddy(self.resGroupLineEdit)
         self.label_8.setBuddy(self.texSizeComboBox)
         self.label_9.setBuddy(self.numTexturesComboBox)
-        self.label_12.setBuddy(self.intensitySlider)
-        self.label_14.setBuddy(self.brushButton)
+        self.label_12.setBuddy(self.editIntensitySlider)
+        self.label_15.setBuddy(self.editIntensitySlider)
+        self.label_14.setBuddy(self.editBrushButton)
+        self.label_18.setBuddy(self.editIntensitySlider)
+        self.label_20.setBuddy(self.editIntensitySlider)
+        self.label_19.setBuddy(self.editBrushButton)
 
         self.retranslateUi(TerrainManagerUi)
-        self.toolBox.setCurrentIndex(1)
+        self.toolBox.setCurrentIndex(0)
         self.sizeComboBox.setCurrentIndex(3)
-        QtCore.QObject.connect(self.intensitySlider, QtCore.SIGNAL("sliderMoved(int)"), self.label_13.setNum)
+        QtCore.QObject.connect(self.editIntensitySlider, QtCore.SIGNAL("sliderMoved(int)"), self.label_13.setNum)
+        QtCore.QObject.connect(self.editBrushSizeSlider, QtCore.SIGNAL("valueChanged(int)"), self.label_16.setNum)
+        QtCore.QObject.connect(self.paintBrushSizeSlider, QtCore.SIGNAL("valueChanged(int)"), self.label_17.setNum)
+        QtCore.QObject.connect(self.paintIntensitySlider, QtCore.SIGNAL("valueChanged(int)"), self.label_21.setNum)
         QtCore.QMetaObject.connectSlotsByName(TerrainManagerUi)
-        TerrainManagerUi.setTabOrder(self.terrainModToolComboBox, self.intensitySlider)
-        TerrainManagerUi.setTabOrder(self.intensitySlider, self.brushButton)
-        TerrainManagerUi.setTabOrder(self.brushButton, self.extendsSpinBoxZ)
+        TerrainManagerUi.setTabOrder(self.terrainModToolComboBox, self.editIntensitySlider)
+        TerrainManagerUi.setTabOrder(self.editIntensitySlider, self.editBrushButton)
+        TerrainManagerUi.setTabOrder(self.editBrushButton, self.extendsSpinBoxZ)
         TerrainManagerUi.setTabOrder(self.extendsSpinBoxZ, self.baseNameLineEdit)
         TerrainManagerUi.setTabOrder(self.baseNameLineEdit, self.resGroupLineEdit)
         TerrainManagerUi.setTabOrder(self.resGroupLineEdit, self.texSizeComboBox)
@@ -390,14 +450,32 @@
         self.terrainModToolComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "Raise", None, QtGui.QApplication.UnicodeUTF8))
         self.label_12.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_12.setText(QtGui.QApplication.translate("TerrainManagerUi", "Intensity", None, QtGui.QApplication.UnicodeUTF8))
-        self.intensitySlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.editIntensitySlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_13.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_13.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
-        self.brushButton.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The brush that is applied", None, QtGui.QApplication.UnicodeUTF8))
-        self.brushButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "PushButton", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_15.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_15.setText(QtGui.QApplication.translate("TerrainManagerUi", "Brush Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_16.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_16.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
         self.label_14.setText(QtGui.QApplication.translate("TerrainManagerUi", "Brush Type  ", None, QtGui.QApplication.UnicodeUTF8))
+        self.editBrushButton.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The brush that is applied", None, QtGui.QApplication.UnicodeUTF8))
+        self.editBrushButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "PushButton", None, QtGui.QApplication.UnicodeUTF8))
+        self.editBrushSizeSlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), QtGui.QApplication.translate("TerrainManagerUi", "ModifyTerrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.toolBox.setItemText(self.toolBox.indexOf(self.Seite), QtGui.QApplication.translate("TerrainManagerUi", "PaintTerrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_18.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_18.setText(QtGui.QApplication.translate("TerrainManagerUi", "Intensity", None, QtGui.QApplication.UnicodeUTF8))
+        self.paintIntensitySlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_21.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_21.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_20.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_20.setText(QtGui.QApplication.translate("TerrainManagerUi", "Brush Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.paintBrushSizeSlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_17.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_17.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_19.setText(QtGui.QApplication.translate("TerrainManagerUi", "Brush Type  ", None, QtGui.QApplication.UnicodeUTF8))
+        self.paintBrushButton.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The brush that is applied", None, QtGui.QApplication.UnicodeUTF8))
+        self.paintBrushButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "PushButton", None, QtGui.QApplication.UnicodeUTF8))
+        self.toolBox.setItemText(self.toolBox.indexOf(self.page_3), QtGui.QApplication.translate("TerrainManagerUi", "PaintTerrain", None, QtGui.QApplication.UnicodeUTF8))
 
 import help_rc
 import icons_rc

Modified: rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
===================================================================
--- rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-05 17:25:04 UTC (rev 4918)
+++ rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-06 18:12:31 UTC (rev 4919)
@@ -12,7 +12,7 @@
   <property name="windowTitle" >
    <string>Form</string>
   </property>
-  <layout class="QGridLayout" name="gridLayout_2" >
+  <layout class="QGridLayout" name="gridLayout_4" >
    <property name="margin" >
     <number>1</number>
    </property>
@@ -619,6 +619,19 @@
          </property>
         </widget>
        </item>
+       <item row="16" column="0" >
+        <spacer name="verticalSpacer_2" >
+         <property name="orientation" >
+          <enum>Qt::Vertical</enum>
+         </property>
+         <property name="sizeHint" stdset="0" >
+          <size>
+           <width>20</width>
+           <height>40</height>
+          </size>
+         </property>
+        </spacer>
+       </item>
       </layout>
      </widget>
      <widget class="QWidget" name="page_2" >
@@ -640,7 +653,7 @@
        <property name="spacing" >
         <number>1</number>
        </property>
-       <item row="0" column="0" colspan="4" >
+       <item row="0" column="0" colspan="3" >
         <widget class="QComboBox" name="terrainModToolComboBox" >
          <property name="toolTip" >
           <string>Terrain tools</string>
@@ -662,7 +675,7 @@
          </item>
         </widget>
        </item>
-       <item row="1" column="0" colspan="2" >
+       <item row="1" column="0" >
         <widget class="QLabel" name="label_12" >
          <property name="toolTip" >
           <string>The intensity wich is applied to the tool</string>
@@ -671,12 +684,12 @@
           <string>Intensity</string>
          </property>
          <property name="buddy" >
-          <cstring>intensitySlider</cstring>
+          <cstring>editIntensitySlider</cstring>
          </property>
         </widget>
        </item>
-       <item row="1" column="2" >
-        <widget class="QSlider" name="intensitySlider" >
+       <item row="1" column="1" >
+        <widget class="QSlider" name="editIntensitySlider" >
          <property name="toolTip" >
           <string>The intensity wich is applied to the tool</string>
          </property>
@@ -688,7 +701,7 @@
          </property>
         </widget>
        </item>
-       <item row="1" column="3" >
+       <item row="1" column="2" >
         <widget class="QLabel" name="label_13" >
          <property name="toolTip" >
           <string>The intensity wich is applied to the tool</string>
@@ -698,8 +711,41 @@
          </property>
         </widget>
        </item>
-       <item row="2" column="1" colspan="2" >
-        <widget class="QPushButton" name="brushButton" >
+       <item row="2" column="0" >
+        <widget class="QLabel" name="label_15" >
+         <property name="toolTip" >
+          <string>The diameter of the tool</string>
+         </property>
+         <property name="text" >
+          <string>Brush Size</string>
+         </property>
+         <property name="buddy" >
+          <cstring>editIntensitySlider</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="2" column="2" >
+        <widget class="QLabel" name="label_16" >
+         <property name="toolTip" >
+          <string>The diameter of the tool</string>
+         </property>
+         <property name="text" >
+          <string>2</string>
+         </property>
+        </widget>
+       </item>
+       <item row="3" column="0" >
+        <widget class="QLabel" name="label_14" >
+         <property name="text" >
+          <string>Brush Type  </string>
+         </property>
+         <property name="buddy" >
+          <cstring>editBrushButton</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="3" column="1" >
+        <widget class="QPushButton" name="editBrushButton" >
          <property name="sizePolicy" >
           <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
            <horstretch>0</horstretch>
@@ -720,7 +766,7 @@
          </property>
         </widget>
        </item>
-       <item row="3" column="2" >
+       <item row="4" column="1" >
         <spacer name="verticalSpacer" >
          <property name="orientation" >
           <enum>Qt::Vertical</enum>
@@ -733,19 +779,31 @@
          </property>
         </spacer>
        </item>
-       <item row="2" column="0" >
-        <widget class="QLabel" name="label_14" >
-         <property name="text" >
-          <string>Brush Type  </string>
+       <item row="2" column="1" >
+        <widget class="QSlider" name="editBrushSizeSlider" >
+         <property name="toolTip" >
+          <string>The diameter of the tool</string>
          </property>
-         <property name="buddy" >
-          <cstring>brushButton</cstring>
+         <property name="value" >
+          <number>2</number>
          </property>
+         <property name="orientation" >
+          <enum>Qt::Horizontal</enum>
+         </property>
         </widget>
        </item>
       </layout>
+      <zorder>terrainModToolComboBox</zorder>
+      <zorder>label_12</zorder>
+      <zorder>editIntensitySlider</zorder>
+      <zorder>label_13</zorder>
+      <zorder>editBrushButton</zorder>
+      <zorder>label_14</zorder>
+      <zorder>label_15</zorder>
+      <zorder>label_16</zorder>
+      <zorder>editBrushSizeSlider</zorder>
      </widget>
-     <widget class="QWidget" name="Seite" >
+     <widget class="QWidget" name="page_3" >
       <property name="geometry" >
        <rect>
         <x>0</x>
@@ -757,6 +815,147 @@
       <attribute name="label" >
        <string>PaintTerrain</string>
       </attribute>
+      <layout class="QGridLayout" name="gridLayout_2" >
+       <property name="margin" >
+        <number>1</number>
+       </property>
+       <property name="spacing" >
+        <number>1</number>
+       </property>
+       <item row="0" column="0" >
+        <widget class="QLabel" name="label_18" >
+         <property name="toolTip" >
+          <string>The intensity wich is applied to the tool</string>
+         </property>
+         <property name="text" >
+          <string>Intensity</string>
+         </property>
+         <property name="buddy" >
+          <cstring>editIntensitySlider</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="0" column="1" >
+        <widget class="QSlider" name="paintIntensitySlider" >
+         <property name="toolTip" >
+          <string>The intensity wich is applied to the tool</string>
+         </property>
+         <property name="value" >
+          <number>2</number>
+         </property>
+         <property name="orientation" >
+          <enum>Qt::Horizontal</enum>
+         </property>
+        </widget>
+       </item>
+       <item row="0" column="2" >
+        <widget class="QLabel" name="label_21" >
+         <property name="toolTip" >
+          <string>The intensity wich is applied to the tool</string>
+         </property>
+         <property name="text" >
+          <string>2</string>
+         </property>
+        </widget>
+       </item>
+       <item row="1" column="0" >
+        <widget class="QLabel" name="label_20" >
+         <property name="toolTip" >
+          <string>The diameter of the tool</string>
+         </property>
+         <property name="text" >
+          <string>Brush Size</string>
+         </property>
+         <property name="buddy" >
+          <cstring>editIntensitySlider</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="1" column="1" >
+        <widget class="QSlider" name="paintBrushSizeSlider" >
+         <property name="toolTip" >
+          <string>The diameter of the tool</string>
+         </property>
+         <property name="value" >
+          <number>2</number>
+         </property>
+         <property name="orientation" >
+          <enum>Qt::Horizontal</enum>
+         </property>
+        </widget>
+       </item>
+       <item row="1" column="2" >
+        <widget class="QLabel" name="label_17" >
+         <property name="toolTip" >
+          <string>The diameter of the tool</string>
+         </property>
+         <property name="text" >
+          <string>2</string>
+         </property>
+        </widget>
+       </item>
+       <item row="2" column="0" >
+        <widget class="QLabel" name="label_19" >
+         <property name="text" >
+          <string>Brush Type  </string>
+         </property>
+         <property name="buddy" >
+          <cstring>editBrushButton</cstring>
+         </property>
+        </widget>
+       </item>
+       <item row="2" column="1" >
+        <widget class="QPushButton" name="paintBrushButton" >
+         <property name="sizePolicy" >
+          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
+         </property>
+         <property name="minimumSize" >
+          <size>
+           <width>130</width>
+           <height>130</height>
+          </size>
+         </property>
+         <property name="toolTip" >
+          <string>The brush that is applied</string>
+         </property>
+         <property name="text" >
+          <string>PushButton</string>
+         </property>
+        </widget>
+       </item>
+       <item row="3" column="1" >
+        <spacer name="verticalSpacer_3" >
+         <property name="orientation" >
+          <enum>Qt::Vertical</enum>
+         </property>
+         <property name="sizeHint" stdset="0" >
+          <size>
+           <width>20</width>
+           <height>451</height>
+          </size>
+         </property>
+        </spacer>
+       </item>
+      </layout>
+      <zorder>brushButton</zorder>
+      <zorder>intensitySlider</zorder>
+      <zorder>label_19</zorder>
+      <zorder>brushSizeSlider</zorder>
+      <zorder>label_17</zorder>
+      <zorder>verticalSpacer_3</zorder>
+      <zorder>label_18</zorder>
+      <zorder>label_21</zorder>
+      <zorder>label_18</zorder>
+      <zorder>label_20</zorder>
+      <zorder>paintIntensitySlider</zorder>
+      <zorder>verticalSpacer_3</zorder>
+      <zorder>paintBrushSizeSlider</zorder>
+      <zorder>paintBrushButton</zorder>
+      <zorder>label_17</zorder>
+      <zorder>label_19</zorder>
      </widget>
     </widget>
    </item>
@@ -764,8 +963,8 @@
  </widget>
  <tabstops>
   <tabstop>terrainModToolComboBox</tabstop>
-  <tabstop>intensitySlider</tabstop>
-  <tabstop>brushButton</tabstop>
+  <tabstop>editIntensitySlider</tabstop>
+  <tabstop>editBrushButton</tabstop>
   <tabstop>extendsSpinBoxZ</tabstop>
   <tabstop>baseNameLineEdit</tabstop>
   <tabstop>resGroupLineEdit</tabstop>
@@ -788,7 +987,7 @@
  </resources>
  <connections>
   <connection>
-   <sender>intensitySlider</sender>
+   <sender>editIntensitySlider</sender>
    <signal>sliderMoved(int)</signal>
    <receiver>label_13</receiver>
    <slot>setNum(int)</slot>
@@ -803,5 +1002,53 @@
     </hint>
    </hints>
   </connection>
+  <connection>
+   <sender>editBrushSizeSlider</sender>
+   <signal>valueChanged(int)</signal>
+   <receiver>label_16</receiver>
+   <slot>setNum(int)</slot>
+   <hints>
+    <hint type="sourcelabel" >
+     <x>160</x>
+     <y>141</y>
+    </hint>
+    <hint type="destinationlabel" >
+     <x>258</x>
+     <y>143</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>paintBrushSizeSlider</sender>
+   <signal>valueChanged(int)</signal>
+   <receiver>label_17</receiver>
+   <slot>setNum(int)</slot>
+   <hints>
+    <hint type="sourcelabel" >
+     <x>141</x>
+     <y>142</y>
+    </hint>
+    <hint type="destinationlabel" >
+     <x>259</x>
+     <y>143</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>paintIntensitySlider</sender>
+   <signal>valueChanged(int)</signal>
+   <receiver>label_21</receiver>
+   <slot>setNum(int)</slot>
+   <hints>
+    <hint type="sourcelabel" >
+     <x>173</x>
+     <y>124</y>
+    </hint>
+    <hint type="destinationlabel" >
+     <x>259</x>
+     <y>125</y>
+    </hint>
+   </hints>
+  </connection>
  </connections>
 </ui>



From fusion2 at mail.berlios.de  Thu May  7 20:43:10 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Thu, 7 May 2009 20:43:10 +0200
Subject: [Dsa-hl-svn] r4920 - in rl/trunk/editors/Lockenwickler: . src ui
	files
Message-ID: <200905071843.n47IhAqw006451@sheep.berlios.de>

Author: fusion2
Date: 2009-05-07 20:43:07 +0200 (Thu, 07 May 2009)
New Revision: 4920

Modified:
   rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
   rl/trunk/editors/Lockenwickler/src/ModuleManager.py
   rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
   rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
Log:
- More work on terrain editing

Modified: rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
===================================================================
--- rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-05-06 18:12:31 UTC (rev 4919)
+++ rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-05-07 18:43:07 UTC (rev 4920)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE Project SYSTEM "Project-4.6.dtd">
 <!-- eric4 project file for project Lockenwickler -->
-<!-- Saved: 2009-05-06, 20:05:26 -->
+<!-- Saved: 2009-05-07, 20:40:18 -->
 <!-- Copyright (C) 2009 Stefan Stammberger, sstammberger at web.de -->
 <Project version="4.6">
   <Language>en</Language>
@@ -53,7 +53,6 @@
     <Source>src/Ui_MyTerrainManagerDock.py</Source>
     <Source>src/media/help/help_rc.py</Source>
     <Source>ui files/Ui_BrushDialog.py</Source>
-    <Source>ui files/Ui_MyTerrainManagerDock.py</Source>
   </Sources>
   <Forms>
     <Form>ui files/GOPropertyEditorDialogINT.ui</Form>

Modified: rl/trunk/editors/Lockenwickler/src/ModuleManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-05-06 18:12:31 UTC (rev 4919)
+++ rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-05-07 18:43:07 UTC (rev 4920)
@@ -1143,12 +1143,17 @@
                 i = i+1
         self.cutList = []
         self.moduleExplorer.updateView()
+    def leftMouseDown(self):
+        if self.pivot is not None and not self.pivot.isTransforming:
+            self.myTerrainManager.leftMouseDown()
         
     def leftMouseUp(self):
         if self.pivot is not None and self.pivot.isTransforming:
             self.propertyWindow.updateProperties()
             self.pivot.stopTransforming()
-
+        else:
+            self.myTerrainManager.leftMouseUp()
+            
     def resetSelection(self):
         if self.userSelectionList is not None:
             for so in self.userSelectionList:

Modified: rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-06 18:12:31 UTC (rev 4919)
+++ rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-07 18:43:07 UTC (rev 4920)
@@ -70,7 +70,7 @@
         self.brushName = str(item.text())
         
 class MyTerrainManagerDock(Ui_MyTerrainManagerDock.Ui_TerrainManagerUi, QWidget):
-    def __init__(self, terrainManager, onBrushChangedCallback, parent = None):
+    def __init__(self, terrainManager, parent = None):
         super(MyTerrainManagerDock, self).__init__(parent)
         self.setupUi(self)
         self.terrainManager = terrainManager
@@ -82,8 +82,11 @@
         QWidget.connect(self.toggleTerrainVisibilityButton, SIGNAL("toggled ( bool )"), self.onToggleTerrainVisiblity)
         QWidget.connect(self.toolBox, SIGNAL("currentChanged( int )"), self.onModeChanged)
         QWidget.connect(self.toolBox, SIGNAL("currentChanged( int )"), self.onModeChanged)
+        QWidget.connect(self.editBrushSizeSlider, SIGNAL("valueChanged( int )"), self.terrainManager.onEditBrushSizeChanged)
+        QWidget.connect(self.editIntensitySlider, SIGNAL("valueChanged( int )"), self.terrainManager.onEditBrushIntensityChanged)
+        QWidget.connect(self.paintBrushSizeSlider, SIGNAL("valueChanged( int )"), self.terrainManager.onPaintBrushSizeChanged)
+        QWidget.connect(self.paintIntensitySlider, SIGNAL("valueChanged( int )"), self.terrainManager.onPaintBrushIntensityChanged)
         
-        self.onBrushChangedCallback = onBrushChangedCallback
         self.lastTerrain = None
         
     def onEditBrushButtonClicked(self):
@@ -271,17 +274,28 @@
     def __init__(self, sceneManager):
         self.sceneManager = sceneManager
         self.dockWidgetContents = None
-        og.ResourceGroupManager.getSingleton().addResourceLocation("./media/terrain", "FileSystem", "ET", True)
+        og.ResourceGroupManager.getSingleton().addResourceLocation("./media/terrain", "FileSystem", "ET", False)        
+        og.ResourceGroupManager.getSingleton().addResourceLocation("./media/terrain/brushes", "FileSystem", "ET", False)
+        
         self.terrainList = []
         
         self.currentEditBrush = None
+        self.currentEditBrushName = None
         self.editBrushes = {}        
-        self.editBrushSize = val
+        self.editBrushSize = 32    
+        self.editBrushIntensity = 32
         
         self.currentPaintBrush = None
+        self.currentPaintBrushName = None
         self.paintBrushes = {}
-        self.paintBrushSize = val
+        self.paintBrushSize = 32
+        self.paintBrushIntensity = 32
     
+        self.leftMouseDown = False
+        
+        self.mainTimer = QTimer(None)
+        self.mainTimer.start(5)
+    
     def deleteTerrain(self, name):
         for terrain in self.terrainList:
             if terrain.name == name:
@@ -291,7 +305,7 @@
         
     def getDockWidget(self, parent):
         if self.dockWidgetContents is None:
-            self.dockWidgetContents = MyTerrainManagerDock(self, self.onBrushChanged, parent)
+            self.dockWidgetContents = MyTerrainManagerDock(self, parent)
             self.myTerrainManagerDock = QDockWidget("Terrain Tools", parent)
             self.myTerrainManagerDock.setObjectName("TerrainToolsDockWindow")
             self.myTerrainManagerDock.setAllowedAreas(Qt.LeftDockWidgetArea | Qt.RightDockWidgetArea)
@@ -309,15 +323,26 @@
             if terrain.name == name:
                 return terrain
 
-    def onBrushChanged(self, brushName):
-        print brushName
+    def leftMouseDown(self):
+        self.leftMouseDown = True
+        
+    def leftMouseUp(self):
+        self.leftMouseDown = False
 
     def onPaintBrushSizeChanged(self, val):
         self.paintBrushSize = val
+        self.updatePaintBrush()
         
+    def onPaintBrushIntensityChanged(self, val):
+        self.paintBrushIntensity = val
+        
     def onEditBrushSizeChanged(self, val):
         self.editBrushSize = val
-
+        self.updateEditBrush()
+        
+    def onEditBrushIntensityChanged(self, val):
+        self.editBrushIntensity = val
+        
     def onCreateTerrain(self, arg):
         terrain = Terrain(self.sceneManager)
         terrain.create(arg)
@@ -338,19 +363,48 @@
     def updateTerrainListBox(self):
         self.dockWidgetContents.updateTerrainListBox(self.terrainList)
 
+    def updateEditBrush(self):
+        if self.currentEditBrush is not None:
+            self.currentEditBrush = None
+        image = og.Image()
+        image.load(self.currentEditBrushName, "ET")
+        image.resize(self.editBrushSize, self.editBrushSize)
+        self.currentEditBrush = ET.loadBrushFromImage(image)
+        
+    def updatePaintBrush(self):
+        if self.currentPaintBrush is not None:
+            self.currentPaintBrush = None
+        image = og.Image()
+        image.load(self.currentPaintBrushName, "ET")
+        image.resize(self.paintBrushSize, self.paintBrushSize)
+        self.currentPaintBrush = ET.loadBrushFromImage(image)
+
     def setCurrentTerrain(self, text):
         self.currentTerrain = self.getTerrain(text)
         
     def setEditBrush(self, brush):
-        self.editBrushes
+        self.currentEditBrushName = brush
+        self.updateEditBrush()
         
     def setPaintBrush(self, brush):
-        print brush
+        self.currentPaintBrushName = brush
+        self.updatePaintBrush()
         
     def setEditMode(self, mode):
         self.editMode = mode
         
-#        if mode == 0:
-#            
-#        elif mode == 1:
-#        elif mode == 2:
+        if self.editMode == 0:
+            self.mainTimer.disconnect(self.mainTimer, SIGNAL("timeout()"), self.update)
+        elif self.editMode == 1:
+            self.mainTimer.connect(self.mainTimer, SIGNAL("timeout()"), self.update)
+        elif self.editMode == 2:
+            self.mainTimer.connect(self.mainTimer, SIGNAL("timeout()"), self.update)
+        
+    def update(self):
+        if self.editMode == 1:
+            if self.currentEditBrushName is not None:
+                print self.currentEditBrushName + " " + str(self.editBrushSize) + " " + str(self.editBrushIntensity)
+        if self.editMode == 2:
+            if self.currentPaintBrushName is not None:
+                print self.currentPaintBrushName + " " + str(self.paintBrushSize) + " " + str(self.paintBrushIntensity)
+

Modified: rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
===================================================================
--- rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-06 18:12:31 UTC (rev 4919)
+++ rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-07 18:43:07 UTC (rev 4920)
@@ -86,7 +86,7 @@
       <enum>QFrame::Sunken</enum>
      </property>
      <property name="currentIndex" >
-      <number>0</number>
+      <number>2</number>
      </property>
      <property name="tabSpacing" >
       <number>1</number>
@@ -653,6 +653,19 @@
        <property name="spacing" >
         <number>1</number>
        </property>
+       <item row="4" column="1" >
+        <spacer name="verticalSpacer" >
+         <property name="orientation" >
+          <enum>Qt::Vertical</enum>
+         </property>
+         <property name="sizeHint" stdset="0" >
+          <size>
+           <width>20</width>
+           <height>451</height>
+          </size>
+         </property>
+        </spacer>
+       </item>
        <item row="0" column="0" colspan="3" >
         <widget class="QComboBox" name="terrainModToolComboBox" >
          <property name="toolTip" >
@@ -711,26 +724,25 @@
          </property>
         </widget>
        </item>
-       <item row="2" column="0" >
-        <widget class="QLabel" name="label_15" >
-         <property name="toolTip" >
-          <string>The diameter of the tool</string>
+       <item row="3" column="1" >
+        <widget class="QPushButton" name="editBrushButton" >
+         <property name="sizePolicy" >
+          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+           <horstretch>0</horstretch>
+           <verstretch>0</verstretch>
+          </sizepolicy>
          </property>
-         <property name="text" >
-          <string>Brush Size</string>
+         <property name="minimumSize" >
+          <size>
+           <width>130</width>
+           <height>130</height>
+          </size>
          </property>
-         <property name="buddy" >
-          <cstring>editIntensitySlider</cstring>
-         </property>
-        </widget>
-       </item>
-       <item row="2" column="2" >
-        <widget class="QLabel" name="label_16" >
          <property name="toolTip" >
-          <string>The diameter of the tool</string>
+          <string>The brush that is applied</string>
          </property>
          <property name="text" >
-          <string>2</string>
+          <string>PushButton</string>
          </property>
         </widget>
        </item>
@@ -744,40 +756,28 @@
          </property>
         </widget>
        </item>
-       <item row="3" column="1" >
-        <widget class="QPushButton" name="editBrushButton" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
-           <horstretch>0</horstretch>
-           <verstretch>0</verstretch>
-          </sizepolicy>
-         </property>
-         <property name="minimumSize" >
-          <size>
-           <width>130</width>
-           <height>130</height>
-          </size>
-         </property>
+       <item row="2" column="0" >
+        <widget class="QLabel" name="label_15" >
          <property name="toolTip" >
-          <string>The brush that is applied</string>
+          <string>The diameter of the tool</string>
          </property>
          <property name="text" >
-          <string>PushButton</string>
+          <string>Brush Size</string>
          </property>
+         <property name="buddy" >
+          <cstring>editIntensitySlider</cstring>
+         </property>
         </widget>
        </item>
-       <item row="4" column="1" >
-        <spacer name="verticalSpacer" >
-         <property name="orientation" >
-          <enum>Qt::Vertical</enum>
+       <item row="2" column="2" >
+        <widget class="QLabel" name="label_16" >
+         <property name="toolTip" >
+          <string>The diameter of the tool</string>
          </property>
-         <property name="sizeHint" stdset="0" >
-          <size>
-           <width>20</width>
-           <height>451</height>
-          </size>
+         <property name="text" >
+          <string>2</string>
          </property>
-        </spacer>
+        </widget>
        </item>
        <item row="2" column="1" >
         <widget class="QSlider" name="editBrushSizeSlider" >
@@ -822,42 +822,29 @@
        <property name="spacing" >
         <number>1</number>
        </property>
-       <item row="0" column="0" >
-        <widget class="QLabel" name="label_18" >
+       <item row="0" column="2" >
+        <widget class="QLabel" name="label_21" >
          <property name="toolTip" >
           <string>The intensity wich is applied to the tool</string>
          </property>
          <property name="text" >
-          <string>Intensity</string>
+          <string>2</string>
          </property>
-         <property name="buddy" >
-          <cstring>editIntensitySlider</cstring>
-         </property>
         </widget>
        </item>
-       <item row="0" column="1" >
-        <widget class="QSlider" name="paintIntensitySlider" >
+       <item row="0" column="0" >
+        <widget class="QLabel" name="label_18" >
          <property name="toolTip" >
           <string>The intensity wich is applied to the tool</string>
          </property>
-         <property name="value" >
-          <number>2</number>
+         <property name="text" >
+          <string>Intensity</string>
          </property>
-         <property name="orientation" >
-          <enum>Qt::Horizontal</enum>
+         <property name="buddy" >
+          <cstring>editIntensitySlider</cstring>
          </property>
         </widget>
        </item>
-       <item row="0" column="2" >
-        <widget class="QLabel" name="label_21" >
-         <property name="toolTip" >
-          <string>The intensity wich is applied to the tool</string>
-         </property>
-         <property name="text" >
-          <string>2</string>
-         </property>
-        </widget>
-       </item>
        <item row="1" column="0" >
         <widget class="QLabel" name="label_20" >
          <property name="toolTip" >
@@ -871,10 +858,10 @@
          </property>
         </widget>
        </item>
-       <item row="1" column="1" >
-        <widget class="QSlider" name="paintBrushSizeSlider" >
+       <item row="0" column="1" >
+        <widget class="QSlider" name="paintIntensitySlider" >
          <property name="toolTip" >
-          <string>The diameter of the tool</string>
+          <string>The intensity wich is applied to the tool</string>
          </property>
          <property name="value" >
           <number>2</number>
@@ -884,24 +871,30 @@
          </property>
         </widget>
        </item>
-       <item row="1" column="2" >
-        <widget class="QLabel" name="label_17" >
-         <property name="toolTip" >
-          <string>The diameter of the tool</string>
+       <item row="3" column="1" >
+        <spacer name="verticalSpacer_3" >
+         <property name="orientation" >
+          <enum>Qt::Vertical</enum>
          </property>
-         <property name="text" >
-          <string>2</string>
+         <property name="sizeHint" stdset="0" >
+          <size>
+           <width>20</width>
+           <height>451</height>
+          </size>
          </property>
-        </widget>
+        </spacer>
        </item>
-       <item row="2" column="0" >
-        <widget class="QLabel" name="label_19" >
-         <property name="text" >
-          <string>Brush Type  </string>
+       <item row="1" column="1" >
+        <widget class="QSlider" name="paintBrushSizeSlider" >
+         <property name="toolTip" >
+          <string>The diameter of the tool</string>
          </property>
-         <property name="buddy" >
-          <cstring>editBrushButton</cstring>
+         <property name="value" >
+          <number>2</number>
          </property>
+         <property name="orientation" >
+          <enum>Qt::Horizontal</enum>
+         </property>
         </widget>
        </item>
        <item row="2" column="1" >
@@ -926,27 +919,27 @@
          </property>
         </widget>
        </item>
-       <item row="3" column="1" >
-        <spacer name="verticalSpacer_3" >
-         <property name="orientation" >
-          <enum>Qt::Vertical</enum>
+       <item row="1" column="2" >
+        <widget class="QLabel" name="label_17" >
+         <property name="toolTip" >
+          <string>The diameter of the tool</string>
          </property>
-         <property name="sizeHint" stdset="0" >
-          <size>
-           <width>20</width>
-           <height>451</height>
-          </size>
+         <property name="text" >
+          <string>2</string>
          </property>
-        </spacer>
+        </widget>
        </item>
+       <item row="2" column="0" >
+        <widget class="QLabel" name="label_19" >
+         <property name="text" >
+          <string>Brush Type  </string>
+         </property>
+         <property name="buddy" >
+          <cstring>editBrushButton</cstring>
+         </property>
+        </widget>
+       </item>
       </layout>
-      <zorder>brushButton</zorder>
-      <zorder>intensitySlider</zorder>
-      <zorder>label_19</zorder>
-      <zorder>brushSizeSlider</zorder>
-      <zorder>label_17</zorder>
-      <zorder>verticalSpacer_3</zorder>
-      <zorder>label_18</zorder>
       <zorder>label_21</zorder>
       <zorder>label_18</zorder>
       <zorder>label_20</zorder>
@@ -1025,12 +1018,12 @@
    <slot>setNum(int)</slot>
    <hints>
     <hint type="sourcelabel" >
-     <x>141</x>
-     <y>142</y>
+     <x>140</x>
+     <y>67</y>
     </hint>
     <hint type="destinationlabel" >
-     <x>259</x>
-     <y>143</y>
+     <x>258</x>
+     <y>69</y>
     </hint>
    </hints>
   </connection>
@@ -1041,12 +1034,12 @@
    <slot>setNum(int)</slot>
    <hints>
     <hint type="sourcelabel" >
-     <x>173</x>
-     <y>124</y>
+     <x>172</x>
+     <y>48</y>
     </hint>
     <hint type="destinationlabel" >
-     <x>259</x>
-     <y>125</y>
+     <x>258</x>
+     <y>50</y>
     </hint>
    </hints>
   </connection>



From fusion2 at mail.berlios.de  Sat May  9 21:18:58 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Sat, 9 May 2009 21:18:58 +0200
Subject: [Dsa-hl-svn] r4921 - in rl/trunk/editors/Lockenwickler: . src ui
	files
Message-ID: <200905091918.n49JIwWe011389@sheep.berlios.de>

Author: fusion2
Date: 2009-05-09 21:18:54 +0200 (Sat, 09 May 2009)
New Revision: 4921

Modified:
   rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
   rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
   rl/trunk/editors/Lockenwickler/src/ModuleManager.py
   rl/trunk/editors/Lockenwickler/src/MovePivot.py
   rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
   rl/trunk/editors/Lockenwickler/src/OgreMainWindow.py
   rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py
   rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
   rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
Log:
- Raise and lower terrain works

Modified: rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
===================================================================
--- rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-05-07 18:43:07 UTC (rev 4920)
+++ rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-05-09 19:18:54 UTC (rev 4921)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE Project SYSTEM "Project-4.6.dtd">
 <!-- eric4 project file for project Lockenwickler -->
-<!-- Saved: 2009-05-07, 20:40:18 -->
+<!-- Saved: 2009-05-09, 21:08:47 -->
 <!-- Copyright (C) 2009 Stefan Stammberger, sstammberger at web.de -->
 <Project version="4.6">
   <Language>en</Language>
@@ -53,6 +53,7 @@
     <Source>src/Ui_MyTerrainManagerDock.py</Source>
     <Source>src/media/help/help_rc.py</Source>
     <Source>ui files/Ui_BrushDialog.py</Source>
+    <Source>ui files/Ui_MyTerrainManagerDock.py</Source>
   </Sources>
   <Forms>
     <Form>ui files/GOPropertyEditorDialogINT.ui</Form>

Modified: rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-05-07 18:43:07 UTC (rev 4920)
+++ rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-05-09 19:18:54 UTC (rev 4921)
@@ -326,6 +326,8 @@
         self.hboxlayout.addLayout(self.gridlayout)
         self.setCentralWidget(self.centralwidget)
         
+        self.myTerrainManager.ogreMainWindow = self.ogreMainWindow
+        
         oglog = og.LogManager.getSingleton().getDefaultLog()
         oglog.addListener(self.consoleWindow.lockenLog)
 

Modified: rl/trunk/editors/Lockenwickler/src/ModuleManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-05-07 18:43:07 UTC (rev 4920)
+++ rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-05-09 19:18:54 UTC (rev 4921)
@@ -931,8 +931,6 @@
         self.resetSelection()
         self.userSelectionList = self.selectionBuffer.manualSelectObjects(items)
         
-        print len(self.userSelectionList)
-        
         if len(self.userSelectionList) > 1:
             self.propertyWindow.clear()
         elif len(self.userSelectionList) > 0 and len(self.userSelectionList) < 2:
@@ -1143,16 +1141,21 @@
                 i = i+1
         self.cutList = []
         self.moduleExplorer.updateView()
-    def leftMouseDown(self):
+        
+    def setLeftMouseDown(self):
+        self.leftMouseDown = True
+        
         if self.pivot is not None and not self.pivot.isTransforming:
-            self.myTerrainManager.leftMouseDown()
+            self.myTerrainManager.leftMouseDown = True
         
-    def leftMouseUp(self):
+    def setLeftMouseUp(self):
+        self.leftMouseDown = False
+        
         if self.pivot is not None and self.pivot.isTransforming:
             self.propertyWindow.updateProperties()
             self.pivot.stopTransforming()
         else:
-            self.myTerrainManager.leftMouseUp()
+            self.myTerrainManager.leftMouseDown = False
             
     def resetSelection(self):
         if self.userSelectionList is not None:

Modified: rl/trunk/editors/Lockenwickler/src/MovePivot.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MovePivot.py	2009-05-07 18:43:07 UTC (rev 4920)
+++ rl/trunk/editors/Lockenwickler/src/MovePivot.py	2009-05-09 19:18:54 UTC (rev 4921)
@@ -232,7 +232,7 @@
                 if self.moveDirection == "UniScaler":
                     for so in self.selectionList:
                         val = incY / 6.0
-                        print val
+#                        print val
                         scale = so.entity.getParentNode().getScale() + og.Vector3(val * scaleFactor, val * scaleFactor, val * scaleFactor)
                         so.entity.getParentNode().setScale(scale)
         

Modified: rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-07 18:43:07 UTC (rev 4920)
+++ rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-09 19:18:54 UTC (rev 4921)
@@ -270,6 +270,32 @@
         except og.OgreException, e:
             print e
             
+    def deform(self, brush, pos, brushIntensity):
+        ## translate our cursor position to vertex indexes
+        x = int( self.terrainManager.getTerrainInfo().posToVertexX(pos.x) )
+        z = int( self.terrainManager.getTerrainInfo().posToVertexZ(pos.z) )
+
+        ## choose a brush intensity, this determines
+        ## how extreme our brush works on the terrain
+        ## and tell the ETM to deform the terrain
+        #brushIntensity = float(evt.timeSinceLastFrame * 0.4 * dr)
+        self.terrainManager.deform(x, z, brush, brushIntensity * 0.0004)
+
+    def updateLightMap(self):
+        lightmap = og.Image()
+        ET.createTerrainLightmap(
+                             self.terrainManager.getTerrainInfo() ,
+                             lightmap, 128, 128 ,
+                             og.Vector3(1, -1, 1) ,
+                             og.ColourValue(1 ,1, 1) ,      
+                             og.ColourValue(0.3, 0.3,  0.3) )
+
+        ## get our dynamic texture and update its contents
+        tex = og.TextureManager.getSingleton().getByName("ETLightmap")
+        l = lightmap.getPixelBox(0, 0)
+        tex.getBuffer(0, 0).blitFromMemory(lightmap.getPixelBox(0, 0))
+        
+        
 class MyTerrainManager():
     def __init__(self, sceneManager):
         self.sceneManager = sceneManager
@@ -279,6 +305,10 @@
         
         self.terrainList = []
         
+        self.currentRay = None
+        self.currentTerrain = None
+        self.isEditing = False
+        
         self.currentEditBrush = None
         self.currentEditBrushName = None
         self.editBrushes = {}        
@@ -296,6 +326,33 @@
         self.mainTimer = QTimer(None)
         self.mainTimer.start(5)
     
+        self.setupFinished = False
+    
+        self.ogreMainWindow = None
+
+        
+    def createEditingCircle(self):
+        self.editingCircle = self.sceneManager.createManualObject("TerrainManagerEditingCircle")
+        self.editingCircle.setDynamic(True)
+        self.editingCircleAccuracy = 6
+        
+        self.editingCircle.begin("BaseWhiteNoLighting", og.RenderOperation.OT_LINE_STRIP)
+        
+        point_index = 0
+        theta = 0
+        while theta < 2 * og.Math.PI:
+            self.editingCircle.position(10 * og.Math.Cos(theta), 0, 10 * og.Math.Sin(theta))
+            self.editingCircle.index(point_index)
+            point_index += 1
+            theta += og.Math.PI / self.editingCircleAccuracy
+            
+        self.editingCircle.index(0)
+        
+        self.editingCircle.end()
+        
+        self.pointerNode.createChildSceneNode("TerrainManagerEditingCircleNode").attachObject(self.editingCircle)
+
+        
     def deleteTerrain(self, name):
         for terrain in self.terrainList:
             if terrain.name == name:
@@ -323,11 +380,9 @@
             if terrain.name == name:
                 return terrain
 
-    def leftMouseDown(self):
-        self.leftMouseDown = True
-        
     def leftMouseUp(self):
-        self.leftMouseDown = False
+        if self.currentTerrain:
+            self.currentTerrain.updateLightMap()
 
     def onPaintBrushSizeChanged(self, val):
         self.paintBrushSize = val
@@ -344,6 +399,16 @@
         self.editBrushIntensity = val
         
     def onCreateTerrain(self, arg):
+        if not self.setupFinished:
+            self.pointer = self.sceneManager.createEntity("TerrainManagerPointerNodeMesh", "UniCube.mesh")
+            self.pointerNode = self.sceneManager.getRootSceneNode().createChild("TerrainManagerPointerNode")
+            self.pointerNode.attachObject(self.pointer)
+
+            self.createEditingCircle()
+            
+            self.setupFinished = True
+        
+        
         terrain = Terrain(self.sceneManager)
         terrain.create(arg)
         self.terrainList.append(terrain)
@@ -364,8 +429,12 @@
         self.dockWidgetContents.updateTerrainListBox(self.terrainList)
 
     def updateEditBrush(self):
-        if self.currentEditBrush is not None:
+        if self.currentEditBrushName is None:
+            return
+            
+        if self.currentEditBrush is None:
             self.currentEditBrush = None
+            
         image = og.Image()
         image.load(self.currentEditBrushName, "ET")
         image.resize(self.editBrushSize, self.editBrushSize)
@@ -395,16 +464,56 @@
         
         if self.editMode == 0:
             self.mainTimer.disconnect(self.mainTimer, SIGNAL("timeout()"), self.update)
+                
         elif self.editMode == 1:
             self.mainTimer.connect(self.mainTimer, SIGNAL("timeout()"), self.update)
         elif self.editMode == 2:
             self.mainTimer.connect(self.mainTimer, SIGNAL("timeout()"), self.update)
         
     def update(self):
-        if self.editMode == 1:
-            if self.currentEditBrushName is not None:
-                print self.currentEditBrushName + " " + str(self.editBrushSize) + " " + str(self.editBrushIntensity)
-        if self.editMode == 2:
-            if self.currentPaintBrushName is not None:
+        self.currentRay = self.ogreMainWindow.getCameraToViewportRay()
+        
+        self.updatePointer()
+            
+        if self.editMode == 1 and self.isEditing:
+            if self.currentEditBrushName is not None and self.editBrushIntensity is not 0 and self.leftMouseDown:
+                self.currentTerrain.deform(self.currentEditBrush, self.pointerNode.getPosition(), self.editBrushIntensity)
+        elif self.editMode == 2 and self.isEditing:
+            if self.currentPaintBrushName is not None :
                 print self.currentPaintBrushName + " " + str(self.paintBrushSize) + " " + str(self.paintBrushIntensity)
+    
+    def updateEditingCircle(self):
+        self.editingCircle.beginUpdate(0)
 
+        point_index = 0
+        theta = 0
+        while theta < 2 * og.Math.PI:
+            x = og.Math.Abs(self.pointerNode.getPosition().x) * og.Math.Cos(theta)
+            z = og.Math.Abs(self.pointerNode.getPosition().z) * og.Math.Sin(theta)
+            
+            y = self.currentTerrain.terrainManager.getTerrainInfo().getHeightAt(x, z)
+            
+            self.editingCircle.position(x, y + 0.3, z)
+            self.editingCircle.index(point_index)
+            point_index += 1
+            theta += og.Math.PI / self.editingCircleAccuracy
+            
+        self.editingCircle.index(0)
+
+        self.editingCircle.end()
+
+    def updatePointer(self):
+        if self.currentTerrain is not None:    #float getHeightAt(float x, float z) const;
+            result = self.currentTerrain.terrainManager.getTerrainInfo().rayIntersects(self.currentRay)
+            intersects = result[0]
+            ## update pointer's position
+            if (intersects):
+                self.updateEditingCircle()
+                self.pointerNode.setVisible(True)
+                x = result[1][0]
+                y = result[1][1]
+                z = result[1][2]
+#                print ("Intersect %f, %f, %f " % ( x, y, z) )
+                self.pointerNode.setPosition(og.Vector3(x, y, z))
+            else:
+                self.pointerNode.setVisible(False)

Modified: rl/trunk/editors/Lockenwickler/src/OgreMainWindow.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/OgreMainWindow.py	2009-05-07 18:43:07 UTC (rev 4920)
+++ rl/trunk/editors/Lockenwickler/src/OgreMainWindow.py	2009-05-09 19:18:54 UTC (rev 4921)
@@ -36,6 +36,7 @@
     def __init__(self, moduleManager,  ogreRoot, OgreMainWinSceneMgr,  parent):
         QWidget.__init__(self, parent)
         self.moduleManager = moduleManager
+
         self.ogreRoot = ogreRoot
         self.OgreMainWinSceneMgr = OgreMainWinSceneMgr
 
@@ -136,12 +137,14 @@
             self.strafeCamRight= False
 
     def eventFilter(self, obj, event):
+#        print event.type()
+        
         if event.type() == 2:
             self.ogreWidget.setFocus()
             if event.button() == 1: # left mouse button is pressed
                 self.leftMouseDown = True
-                self.moduleManager.leftMouseDown = True
-
+                self.moduleManager.setLeftMouseDown()
+                
                 if self.rightMouseDown: #if right mouse button is already pressed dolly the camera
                     self.mDollyCamera = True
                 else:
@@ -161,9 +164,9 @@
         elif event.type() == 3:
             if event.button() == 1: # left mouse button is released
                 self.leftMouseDown = False
-                self.moduleManager.leftMouseDown = False
-                self.moduleManager.leftMouseUp()
-
+                self.moduleManager.setLeftMouseUp()
+                self.moduleManager.myTerrainManager.leftMouseUp()
+                
                 if self.mDollyCamera == True: #if we dolly the camera set it to false
                     self.mDollyCamera = False
 
@@ -193,7 +196,12 @@
 
             if self.moduleManager.pivot is not None and  self.leftMouseDown and not self.middleMouseDown and not self.rightMouseDown:
                 self.moduleManager.pivot.onMouseMoved(event.globalX,  event.globalY,  incX,  incY)
-
+                
+            if self.leftMouseDown is True and not self.rightMouseDown and not self.middleMouseDown:
+                self.moduleManager.myTerrainManager.isEditing = True
+            else:
+                self.moduleManager.myTerrainManager.isEditing = False 
+            
             rotX = incX * 0.01
             rotY = incY * 0.01
 
@@ -205,6 +213,7 @@
             self.lastMousePosX = event.globalX()
             self.lastMousePosY = event.globalY()
 
+
         if event.type() == 60: #drag enter
             self.dragEnterEvent(event)
         if event.type() == 61: #drag move

Modified: rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py	2009-05-07 18:43:07 UTC (rev 4920)
+++ rl/trunk/editors/Lockenwickler/src/SelectionBuffer.py	2009-05-09 19:18:54 UTC (rev 4921)
@@ -52,7 +52,7 @@
         self.entity = entity #the selected entity
         self.isPivot = False
 
-        print self.entity.getParentNode().getName()
+#        print self.entity.getParentNode().getName()
 
     #if True this instance will show its bounding box else it will hide it
     def setSelected(self,  selected):
@@ -240,6 +240,8 @@
                     return None
                 elif key == "rayLine":
                     return None
+                elif key == "TerrainManagerEditingCircle" or  key == "TerrainManagerPointerNodeMesh":
+                    return None
                 elif key == "EditorXArrow":
                     so = SelectionObject(self.sceneMgr.getEntity(key))
                     so.isPivot = True

Modified: rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-07 18:43:07 UTC (rev 4920)
+++ rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-09 19:18:54 UTC (rev 4921)
@@ -2,7 +2,7 @@
 
 # Form implementation generated from reading ui file '/home/fusion/dev/ui files/MyTerrainManagerDock.ui'
 #
-# Created: Wed May  6 20:00:32 2009
+# Created: Sat May  9 18:10:24 2009
 #      by: PyQt4 UI code generator 4.4.4
 #
 # WARNING! All changes made in this file will be lost!
@@ -227,6 +227,8 @@
         self.gridLayout_3.setMargin(1)
         self.gridLayout_3.setSpacing(1)
         self.gridLayout_3.setObjectName("gridLayout_3")
+        spacerItem1 = QtGui.QSpacerItem(20, 451, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
+        self.gridLayout_3.addItem(spacerItem1, 4, 1, 1, 1)
         self.terrainModToolComboBox = QtGui.QComboBox(self.page_2)
         self.terrainModToolComboBox.setObjectName("terrainModToolComboBox")
         self.terrainModToolComboBox.addItem(QtCore.QString())
@@ -237,22 +239,15 @@
         self.label_12.setObjectName("label_12")
         self.gridLayout_3.addWidget(self.label_12, 1, 0, 1, 1)
         self.editIntensitySlider = QtGui.QSlider(self.page_2)
-        self.editIntensitySlider.setProperty("value", QtCore.QVariant(2))
+        self.editIntensitySlider.setMinimum(-50)
+        self.editIntensitySlider.setMaximum(50)
+        self.editIntensitySlider.setProperty("value", QtCore.QVariant(1))
         self.editIntensitySlider.setOrientation(QtCore.Qt.Horizontal)
         self.editIntensitySlider.setObjectName("editIntensitySlider")
         self.gridLayout_3.addWidget(self.editIntensitySlider, 1, 1, 1, 1)
         self.label_13 = QtGui.QLabel(self.page_2)
         self.label_13.setObjectName("label_13")
         self.gridLayout_3.addWidget(self.label_13, 1, 2, 1, 1)
-        self.label_15 = QtGui.QLabel(self.page_2)
-        self.label_15.setObjectName("label_15")
-        self.gridLayout_3.addWidget(self.label_15, 2, 0, 1, 1)
-        self.label_16 = QtGui.QLabel(self.page_2)
-        self.label_16.setObjectName("label_16")
-        self.gridLayout_3.addWidget(self.label_16, 2, 2, 1, 1)
-        self.label_14 = QtGui.QLabel(self.page_2)
-        self.label_14.setObjectName("label_14")
-        self.gridLayout_3.addWidget(self.label_14, 3, 0, 1, 1)
         self.editBrushButton = QtGui.QPushButton(self.page_2)
         sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
         sizePolicy.setHorizontalStretch(0)
@@ -262,9 +257,17 @@
         self.editBrushButton.setMinimumSize(QtCore.QSize(130, 130))
         self.editBrushButton.setObjectName("editBrushButton")
         self.gridLayout_3.addWidget(self.editBrushButton, 3, 1, 1, 1)
-        spacerItem1 = QtGui.QSpacerItem(20, 451, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
-        self.gridLayout_3.addItem(spacerItem1, 4, 1, 1, 1)
+        self.label_14 = QtGui.QLabel(self.page_2)
+        self.label_14.setObjectName("label_14")
+        self.gridLayout_3.addWidget(self.label_14, 3, 0, 1, 1)
+        self.label_15 = QtGui.QLabel(self.page_2)
+        self.label_15.setObjectName("label_15")
+        self.gridLayout_3.addWidget(self.label_15, 2, 0, 1, 1)
+        self.label_16 = QtGui.QLabel(self.page_2)
+        self.label_16.setObjectName("label_16")
+        self.gridLayout_3.addWidget(self.label_16, 2, 2, 1, 1)
         self.editBrushSizeSlider = QtGui.QSlider(self.page_2)
+        self.editBrushSizeSlider.setMaximum(50)
         self.editBrushSizeSlider.setProperty("value", QtCore.QVariant(2))
         self.editBrushSizeSlider.setOrientation(QtCore.Qt.Horizontal)
         self.editBrushSizeSlider.setObjectName("editBrushSizeSlider")
@@ -277,31 +280,27 @@
         self.gridLayout_2.setMargin(1)
         self.gridLayout_2.setSpacing(1)
         self.gridLayout_2.setObjectName("gridLayout_2")
+        self.label_21 = QtGui.QLabel(self.page_3)
+        self.label_21.setObjectName("label_21")
+        self.gridLayout_2.addWidget(self.label_21, 0, 2, 1, 1)
         self.label_18 = QtGui.QLabel(self.page_3)
         self.label_18.setObjectName("label_18")
         self.gridLayout_2.addWidget(self.label_18, 0, 0, 1, 1)
+        self.label_20 = QtGui.QLabel(self.page_3)
+        self.label_20.setObjectName("label_20")
+        self.gridLayout_2.addWidget(self.label_20, 1, 0, 1, 1)
         self.paintIntensitySlider = QtGui.QSlider(self.page_3)
         self.paintIntensitySlider.setProperty("value", QtCore.QVariant(2))
         self.paintIntensitySlider.setOrientation(QtCore.Qt.Horizontal)
         self.paintIntensitySlider.setObjectName("paintIntensitySlider")
         self.gridLayout_2.addWidget(self.paintIntensitySlider, 0, 1, 1, 1)
-        self.label_21 = QtGui.QLabel(self.page_3)
-        self.label_21.setObjectName("label_21")
-        self.gridLayout_2.addWidget(self.label_21, 0, 2, 1, 1)
-        self.label_20 = QtGui.QLabel(self.page_3)
-        self.label_20.setObjectName("label_20")
-        self.gridLayout_2.addWidget(self.label_20, 1, 0, 1, 1)
+        spacerItem2 = QtGui.QSpacerItem(20, 451, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
+        self.gridLayout_2.addItem(spacerItem2, 3, 1, 1, 1)
         self.paintBrushSizeSlider = QtGui.QSlider(self.page_3)
         self.paintBrushSizeSlider.setProperty("value", QtCore.QVariant(2))
         self.paintBrushSizeSlider.setOrientation(QtCore.Qt.Horizontal)
         self.paintBrushSizeSlider.setObjectName("paintBrushSizeSlider")
         self.gridLayout_2.addWidget(self.paintBrushSizeSlider, 1, 1, 1, 1)
-        self.label_17 = QtGui.QLabel(self.page_3)
-        self.label_17.setObjectName("label_17")
-        self.gridLayout_2.addWidget(self.label_17, 1, 2, 1, 1)
-        self.label_19 = QtGui.QLabel(self.page_3)
-        self.label_19.setObjectName("label_19")
-        self.gridLayout_2.addWidget(self.label_19, 2, 0, 1, 1)
         self.paintBrushButton = QtGui.QPushButton(self.page_3)
         sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Fixed, QtGui.QSizePolicy.Fixed)
         sizePolicy.setHorizontalStretch(0)
@@ -311,8 +310,12 @@
         self.paintBrushButton.setMinimumSize(QtCore.QSize(130, 130))
         self.paintBrushButton.setObjectName("paintBrushButton")
         self.gridLayout_2.addWidget(self.paintBrushButton, 2, 1, 1, 1)
-        spacerItem2 = QtGui.QSpacerItem(20, 451, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
-        self.gridLayout_2.addItem(spacerItem2, 3, 1, 1, 1)
+        self.label_17 = QtGui.QLabel(self.page_3)
+        self.label_17.setObjectName("label_17")
+        self.gridLayout_2.addWidget(self.label_17, 1, 2, 1, 1)
+        self.label_19 = QtGui.QLabel(self.page_3)
+        self.label_19.setObjectName("label_19")
+        self.gridLayout_2.addWidget(self.label_19, 2, 0, 1, 1)
         self.toolBox.addItem(self.page_3, "")
         self.gridLayout_4.addWidget(self.toolBox, 1, 0, 1, 4)
         self.label_6.setBuddy(self.nameLineEdit)
@@ -327,14 +330,14 @@
         self.label_8.setBuddy(self.texSizeComboBox)
         self.label_9.setBuddy(self.numTexturesComboBox)
         self.label_12.setBuddy(self.editIntensitySlider)
+        self.label_14.setBuddy(self.editBrushButton)
         self.label_15.setBuddy(self.editIntensitySlider)
-        self.label_14.setBuddy(self.editBrushButton)
         self.label_18.setBuddy(self.editIntensitySlider)
         self.label_20.setBuddy(self.editIntensitySlider)
         self.label_19.setBuddy(self.editBrushButton)
 
         self.retranslateUi(TerrainManagerUi)
-        self.toolBox.setCurrentIndex(0)
+        self.toolBox.setCurrentIndex(1)
         self.sizeComboBox.setCurrentIndex(3)
         QtCore.QObject.connect(self.editIntensitySlider, QtCore.SIGNAL("sliderMoved(int)"), self.label_13.setNum)
         QtCore.QObject.connect(self.editBrushSizeSlider, QtCore.SIGNAL("valueChanged(int)"), self.label_16.setNum)
@@ -453,28 +456,28 @@
         self.editIntensitySlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_13.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_13.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
+        self.editBrushButton.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The brush that is applied", None, QtGui.QApplication.UnicodeUTF8))
+        self.editBrushButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "PushButton", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_14.setText(QtGui.QApplication.translate("TerrainManagerUi", "Brush Type  ", None, QtGui.QApplication.UnicodeUTF8))
         self.label_15.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_15.setText(QtGui.QApplication.translate("TerrainManagerUi", "Brush Size", None, QtGui.QApplication.UnicodeUTF8))
         self.label_16.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_16.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_14.setText(QtGui.QApplication.translate("TerrainManagerUi", "Brush Type  ", None, QtGui.QApplication.UnicodeUTF8))
-        self.editBrushButton.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The brush that is applied", None, QtGui.QApplication.UnicodeUTF8))
-        self.editBrushButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "PushButton", None, QtGui.QApplication.UnicodeUTF8))
         self.editBrushSizeSlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), QtGui.QApplication.translate("TerrainManagerUi", "ModifyTerrain", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_21.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_21.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
         self.label_18.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_18.setText(QtGui.QApplication.translate("TerrainManagerUi", "Intensity", None, QtGui.QApplication.UnicodeUTF8))
-        self.paintIntensitySlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_21.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_21.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
         self.label_20.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_20.setText(QtGui.QApplication.translate("TerrainManagerUi", "Brush Size", None, QtGui.QApplication.UnicodeUTF8))
+        self.paintIntensitySlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.paintBrushSizeSlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.paintBrushButton.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The brush that is applied", None, QtGui.QApplication.UnicodeUTF8))
+        self.paintBrushButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "PushButton", None, QtGui.QApplication.UnicodeUTF8))
         self.label_17.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_17.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
         self.label_19.setText(QtGui.QApplication.translate("TerrainManagerUi", "Brush Type  ", None, QtGui.QApplication.UnicodeUTF8))
-        self.paintBrushButton.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The brush that is applied", None, QtGui.QApplication.UnicodeUTF8))
-        self.paintBrushButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "PushButton", None, QtGui.QApplication.UnicodeUTF8))
         self.toolBox.setItemText(self.toolBox.indexOf(self.page_3), QtGui.QApplication.translate("TerrainManagerUi", "PaintTerrain", None, QtGui.QApplication.UnicodeUTF8))
 
 import help_rc

Modified: rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
===================================================================
--- rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-07 18:43:07 UTC (rev 4920)
+++ rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-09 19:18:54 UTC (rev 4921)
@@ -86,7 +86,7 @@
       <enum>QFrame::Sunken</enum>
      </property>
      <property name="currentIndex" >
-      <number>2</number>
+      <number>1</number>
      </property>
      <property name="tabSpacing" >
       <number>1</number>
@@ -706,8 +706,14 @@
          <property name="toolTip" >
           <string>The intensity wich is applied to the tool</string>
          </property>
+         <property name="minimum" >
+          <number>-50</number>
+         </property>
+         <property name="maximum" >
+          <number>50</number>
+         </property>
          <property name="value" >
-          <number>2</number>
+          <number>1</number>
          </property>
          <property name="orientation" >
           <enum>Qt::Horizontal</enum>
@@ -784,6 +790,9 @@
          <property name="toolTip" >
           <string>The diameter of the tool</string>
          </property>
+         <property name="maximum" >
+          <number>50</number>
+         </property>
          <property name="value" >
           <number>2</number>
          </property>
@@ -793,15 +802,6 @@
         </widget>
        </item>
       </layout>
-      <zorder>terrainModToolComboBox</zorder>
-      <zorder>label_12</zorder>
-      <zorder>editIntensitySlider</zorder>
-      <zorder>label_13</zorder>
-      <zorder>editBrushButton</zorder>
-      <zorder>label_14</zorder>
-      <zorder>label_15</zorder>
-      <zorder>label_16</zorder>
-      <zorder>editBrushSizeSlider</zorder>
      </widget>
      <widget class="QWidget" name="page_3" >
       <property name="geometry" >



From fusion2 at mail.berlios.de  Sun May 10 13:57:05 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Sun, 10 May 2009 13:57:05 +0200
Subject: [Dsa-hl-svn] r4922 - in rl/trunk/editors/Lockenwickler: src ui files
Message-ID: <200905101157.n4ABv5fF019689@sheep.berlios.de>

Author: fusion2
Date: 2009-05-10 13:57:03 +0200 (Sun, 10 May 2009)
New Revision: 4922

Modified:
   rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
   rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
   rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
Log:
- added an incomplete terrain smoothing tool

Modified: rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-09 19:18:54 UTC (rev 4921)
+++ rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-10 11:57:03 UTC (rev 4922)
@@ -16,6 +16,7 @@
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
 #################################################
+import ctypes
 
 from PyQt4.QtCore import *
 from PyQt4.QtGui import *
@@ -86,6 +87,8 @@
         QWidget.connect(self.editIntensitySlider, SIGNAL("valueChanged( int )"), self.terrainManager.onEditBrushIntensityChanged)
         QWidget.connect(self.paintBrushSizeSlider, SIGNAL("valueChanged( int )"), self.terrainManager.onPaintBrushSizeChanged)
         QWidget.connect(self.paintIntensitySlider, SIGNAL("valueChanged( int )"), self.terrainManager.onPaintBrushIntensityChanged)
+        QWidget.connect(self.setHeightButton, SIGNAL("toggled( bool )"), self.onToggleSetHeight)
+        QWidget.connect(self.editSmoothButton, SIGNAL("toggled( bool )"), self.onEditSmoothToolToggled)
         
         self.lastTerrain = None
         
@@ -140,6 +143,9 @@
     
     def onModeChanged(self, mode):
         self.terrainManager.setEditMode(mode)
+    
+    def onEditSmoothToolToggled(self, ison):
+        self.terrainManager.setSmoothMode(ison)
         
     def onTerrainChanged(self, text):
         self.terrainManager.setCurrentTerrain(text)
@@ -165,6 +171,14 @@
         for terrain in terrainList:
             self.terrainListComboBox.addItem(terrain.name)
         
+    def onToggleSetHeight(self, setHeights):
+        if setHeights:
+            box = QMessageBox.information(QApplication.focusWidget(), "", "Pick the height", QMessageBox.Ok)
+          
+            self.terrainManager.setTerrainHeightMode(True)
+        else:
+            self.terrainManager.setTerrainHeightMode(False)
+            
 class Terrain():
     def __init__(self, sceneManager):
         self.sceneManager = sceneManager
@@ -271,28 +285,98 @@
             print e
             
     def deform(self, brush, pos, brushIntensity):
-        ## translate our cursor position to vertex indexes
-        x = int( self.terrainManager.getTerrainInfo().posToVertexX(pos.x) )
-        z = int( self.terrainManager.getTerrainInfo().posToVertexZ(pos.z) )
-
-        ## choose a brush intensity, this determines
-        ## how extreme our brush works on the terrain
-        ## and tell the ETM to deform the terrain
-        #brushIntensity = float(evt.timeSinceLastFrame * 0.4 * dr)
+        ## translate our cursor position to vertex indexes
+        x = int( self.terrainManager.getTerrainInfo().posToVertexX(pos.x) )
+        z = int( self.terrainManager.getTerrainInfo().posToVertexZ(pos.z) )
+
+        ## choose a brush intensity, this determines
+        ## how extreme our brush works on the terrain
+        ## and tell the ETM to deform the terrain
         self.terrainManager.deform(x, z, brush, brushIntensity * 0.0004)
 
+    def setHeights(self, brush, pos):
+        ## translate our cursor position to vertex indexes
+        x = int( self.terrainManager.getTerrainInfo().posToVertexX(pos.x) )
+        z = int( self.terrainManager.getTerrainInfo().posToVertexZ(pos.z) )
+
+        self.terrainManager.setHeights(x, z, brush)
+    def getHeights(self, brush, pos):
+        ## translate our cursor position to vertex indexes
+        x = int( self.terrainManager.getTerrainInfo().posToVertexX(pos.x) )
+        z = int( self.terrainManager.getTerrainInfo().posToVertexZ(pos.z) )
+
+        self.terrainManager.getHeights(x, z, brush)
+        
+    def smooth(self, brush, pos, intensity):
+        x = int( self.terrainManager.getTerrainInfo().posToVertexX(pos.x) )
+        z = int( self.terrainManager.getTerrainInfo().posToVertexZ(pos.z) )
+        
+        smooth = self.averageFilter(x, z, brush, intensity)
+        self.terrainManager.setHeights(x, z, smooth)
+        
+    def averageFilter(self, x, z, brush, intensity):
+        #When you're doing a loop possibly thousands of times, it's worth setting these
+        #aside rather than calling a function every iteration.
+        iWidth = brush.getWidth()
+        iHeight = brush.getHeight()
+
+        storageclass = ctypes.c_float * (iWidth * iHeight)
+        vecReturnBuffer =  storageclass()
+        vecHeightBuffer = storageclass()
+       
+        ptr = ctypes.pointer(vecReturnBuffer)
+       
+        brushReturn = ET.Brush(ctypes.pointer(vecReturnBuffer), iWidth, iHeight)
+        brushHeights = ET.Brush(ctypes.pointer(vecHeightBuffer), iWidth, iHeight)
+
+        self.terrainManager.getHeights(x, z, brushHeights)
+
+        fSumHeights = 0.0
+        iNumHeights = iWidth * iHeight
+
+        # Find the sum of all the heights within the sample
+        i = 0
+        j = 0
+        while i < iWidth:
+            while j < iHeight:
+                fSumHeights += brushHeights.at(i, j)
+                j += 1
+            i += 1
+       
+
+        #Find the average height within the sample
+        fAvgHeight = fSumHeights / iNumHeights
+
+        i = 0
+        j = 0
+        while i < iWidth:
+            while j < iHeight:
+                fHeight = brushHeights.at(i, j)
+                fDelta = fHeight - fAvgHeight
+                fShapeMask = shape.at(i, j)
+
+                fDelta = fDelta * fShapeMask * fIntensity
+
+                val = brushReturn.at(i, j) 
+                val = fHeight - fDelta
+                
+                j += 1
+            i += 1
+        return brushReturn
+
+        
     def updateLightMap(self):
-        lightmap = og.Image()
-        ET.createTerrainLightmap(
-                             self.terrainManager.getTerrainInfo() ,
-                             lightmap, 128, 128 ,
-                             og.Vector3(1, -1, 1) ,
-                             og.ColourValue(1 ,1, 1) ,      
-                             og.ColourValue(0.3, 0.3,  0.3) )
-
-        ## get our dynamic texture and update its contents
-        tex = og.TextureManager.getSingleton().getByName("ETLightmap")
-        l = lightmap.getPixelBox(0, 0)
+        lightmap = og.Image()
+        ET.createTerrainLightmap(
+                             self.terrainManager.getTerrainInfo() ,
+                             lightmap, 128, 128 ,
+                             og.Vector3(1, -1, 1) ,
+                             og.ColourValue(1 ,1, 1) ,      
+                             og.ColourValue(0.3, 0.3,  0.3) )
+
+        ## get our dynamic texture and update its contents
+        tex = og.TextureManager.getSingleton().getByName("ETLightmap")
+        l = lightmap.getPixelBox(0, 0)
         tex.getBuffer(0, 0).blitFromMemory(lightmap.getPixelBox(0, 0))
         
         
@@ -312,14 +396,14 @@
         self.currentEditBrush = None
         self.currentEditBrushName = None
         self.editBrushes = {}        
-        self.editBrushSize = 32    
-        self.editBrushIntensity = 32
+        self.editBrushSize = 2    
+        self.editBrushIntensity = 2
         
         self.currentPaintBrush = None
         self.currentPaintBrushName = None
         self.paintBrushes = {}
-        self.paintBrushSize = 32
-        self.paintBrushIntensity = 32
+        self.paintBrushSize = 2
+        self.paintBrushIntensity = 2
     
         self.leftMouseDown = False
         
@@ -327,14 +411,18 @@
         self.mainTimer.start(5)
     
         self.setupFinished = False
-    
+        
+        self.setHeigthMode = False
+        self.setHeigthPickMode = False
+        self.editSmoothMode = False
+        
         self.ogreMainWindow = None
 
         
     def createEditingCircle(self):
         self.editingCircle = self.sceneManager.createManualObject("TerrainManagerEditingCircle")
         self.editingCircle.setDynamic(True)
-        self.editingCircleAccuracy = 6
+        self.editingCircleAccuracy = 20
         
         self.editingCircle.begin("BaseWhiteNoLighting", og.RenderOperation.OT_LINE_STRIP)
         
@@ -469,15 +557,37 @@
             self.mainTimer.connect(self.mainTimer, SIGNAL("timeout()"), self.update)
         elif self.editMode == 2:
             self.mainTimer.connect(self.mainTimer, SIGNAL("timeout()"), self.update)
+    
+    def setSmoothMode(self, ison):
+        self.editSmoothMode = ison
         
+        if not ison:
+            self.updateEditBrush()
+            
+    def setTerrainHeightMode(self, setHeight):
+        self.setHeigthMode = setHeight
+        self.setHeigthPickMode = setHeight
+        
+        if not setHeight:
+            self.updateEditBrush()
+        
     def update(self):
         self.currentRay = self.ogreMainWindow.getCameraToViewportRay()
         
         self.updatePointer()
-            
+        
+        if self.setHeigthPickMode and self.leftMouseDown:
+            self.currentTerrain.getHeights(self.currentEditBrush, self.pointerNode.getPosition())
+            self.setHeigthPickMode = False
+            return
+        
         if self.editMode == 1 and self.isEditing:
-            if self.currentEditBrushName is not None and self.editBrushIntensity is not 0 and self.leftMouseDown:
+            if self.currentEditBrushName is not None and self.editBrushIntensity is not 0 and self.leftMouseDown and not self.setHeigthMode and not self.editSmoothMode:
                 self.currentTerrain.deform(self.currentEditBrush, self.pointerNode.getPosition(), self.editBrushIntensity)
+            elif self.leftMouseDown and self.setHeigthMode:
+                self.currentTerrain.setHeights(self.currentEditBrush, self.pointerNode.getPosition())  
+            elif self.leftMouseDown and self.editSmoothMode:
+                self.currentTerrain.smooth(self.currentEditBrush, self.pointerNode.getPosition(), self.editBrushIntensity)  
         elif self.editMode == 2 and self.isEditing:
             if self.currentPaintBrushName is not None :
                 print self.currentPaintBrushName + " " + str(self.paintBrushSize) + " " + str(self.paintBrushIntensity)
@@ -488,12 +598,12 @@
         point_index = 0
         theta = 0
         while theta < 2 * og.Math.PI:
-            x = og.Math.Abs(self.pointerNode.getPosition().x) * og.Math.Cos(theta)
-            z = og.Math.Abs(self.pointerNode.getPosition().z) * og.Math.Sin(theta)
+            x = self.editBrushSize * og.Math.Cos(theta)
+            z = self.editBrushSize * og.Math.Sin(theta)
             
-            y = self.currentTerrain.terrainManager.getTerrainInfo().getHeightAt(x, z)
+            y = self.currentTerrain.terrainManager.getTerrainInfo().getHeightAt(self.pointerNode.getPosition().x + x, self.pointerNode.getPosition().z +  z)
             
-            self.editingCircle.position(x, y + 0.3, z)
+            self.editingCircle.position(x, (y - self.pointerNode.getPosition().y) + 0.15, z)
             self.editingCircle.index(point_index)
             point_index += 1
             theta += og.Math.PI / self.editingCircleAccuracy
@@ -504,16 +614,16 @@
 
     def updatePointer(self):
         if self.currentTerrain is not None:    #float getHeightAt(float x, float z) const;
-            result = self.currentTerrain.terrainManager.getTerrainInfo().rayIntersects(self.currentRay)
-            intersects = result[0]
-            ## update pointer's position
+            result = self.currentTerrain.terrainManager.getTerrainInfo().rayIntersects(self.currentRay)
+            intersects = result[0]
+            ## update pointer's position
             if (intersects):
+                self.pointerNode.setVisible(True)
+                x = result[1][0]
+                y = result[1][1]
+                z = result[1][2]
+#                print ("Intersect %f, %f, %f " % ( x, y, z) )
+                self.pointerNode.setPosition(og.Vector3(x, y, z))
                 self.updateEditingCircle()
-                self.pointerNode.setVisible(True)
-                x = result[1][0]
-                y = result[1][1]
-                z = result[1][2]
-#                print ("Intersect %f, %f, %f " % ( x, y, z) )
-                self.pointerNode.setPosition(og.Vector3(x, y, z))
             else:
                 self.pointerNode.setVisible(False)

Modified: rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-09 19:18:54 UTC (rev 4921)
+++ rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-10 11:57:03 UTC (rev 4922)
@@ -2,7 +2,7 @@
 
 # Form implementation generated from reading ui file '/home/fusion/dev/ui files/MyTerrainManagerDock.ui'
 #
-# Created: Sat May  9 18:10:24 2009
+# Created: Sun May 10 12:51:42 2009
 #      by: PyQt4 UI code generator 4.4.4
 #
 # WARNING! All changes made in this file will be lost!
@@ -12,7 +12,7 @@
 class Ui_TerrainManagerUi(object):
     def setupUi(self, TerrainManagerUi):
         TerrainManagerUi.setObjectName("TerrainManagerUi")
-        TerrainManagerUi.resize(266, 748)
+        TerrainManagerUi.resize(380, 769)
         self.gridLayout_4 = QtGui.QGridLayout(TerrainManagerUi)
         self.gridLayout_4.setMargin(1)
         self.gridLayout_4.setSpacing(1)
@@ -48,7 +48,7 @@
 #        self.toolBox.setTabSpacing(1)
         self.toolBox.setObjectName("toolBox")
         self.page = QtGui.QWidget()
-        self.page.setGeometry(QtCore.QRect(0, 0, 264, 634))
+        self.page.setGeometry(QtCore.QRect(0, 0, 378, 655))
         self.page.setObjectName("page")
         self.gridLayout = QtGui.QGridLayout(self.page)
         self.gridLayout.setMargin(1)
@@ -221,20 +221,14 @@
         self.gridLayout.addItem(spacerItem, 16, 0, 1, 1)
         self.toolBox.addItem(self.page, "")
         self.page_2 = QtGui.QWidget()
-        self.page_2.setGeometry(QtCore.QRect(0, 0, 264, 634))
+        self.page_2.setGeometry(QtCore.QRect(0, 0, 378, 655))
         self.page_2.setObjectName("page_2")
         self.gridLayout_3 = QtGui.QGridLayout(self.page_2)
         self.gridLayout_3.setMargin(1)
         self.gridLayout_3.setSpacing(1)
         self.gridLayout_3.setObjectName("gridLayout_3")
         spacerItem1 = QtGui.QSpacerItem(20, 451, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
-        self.gridLayout_3.addItem(spacerItem1, 4, 1, 1, 1)
-        self.terrainModToolComboBox = QtGui.QComboBox(self.page_2)
-        self.terrainModToolComboBox.setObjectName("terrainModToolComboBox")
-        self.terrainModToolComboBox.addItem(QtCore.QString())
-        self.terrainModToolComboBox.addItem(QtCore.QString())
-        self.terrainModToolComboBox.addItem(QtCore.QString())
-        self.gridLayout_3.addWidget(self.terrainModToolComboBox, 0, 0, 1, 3)
+        self.gridLayout_3.addItem(spacerItem1, 6, 1, 1, 1)
         self.label_12 = QtGui.QLabel(self.page_2)
         self.label_12.setObjectName("label_12")
         self.gridLayout_3.addWidget(self.label_12, 1, 0, 1, 1)
@@ -267,14 +261,23 @@
         self.label_16.setObjectName("label_16")
         self.gridLayout_3.addWidget(self.label_16, 2, 2, 1, 1)
         self.editBrushSizeSlider = QtGui.QSlider(self.page_2)
+        self.editBrushSizeSlider.setMinimum(1)
         self.editBrushSizeSlider.setMaximum(50)
         self.editBrushSizeSlider.setProperty("value", QtCore.QVariant(2))
         self.editBrushSizeSlider.setOrientation(QtCore.Qt.Horizontal)
         self.editBrushSizeSlider.setObjectName("editBrushSizeSlider")
         self.gridLayout_3.addWidget(self.editBrushSizeSlider, 2, 1, 1, 1)
+        self.setHeightButton = QtGui.QPushButton(self.page_2)
+        self.setHeightButton.setCheckable(True)
+        self.setHeightButton.setObjectName("setHeightButton")
+        self.gridLayout_3.addWidget(self.setHeightButton, 4, 0, 1, 3)
+        self.editSmoothButton = QtGui.QPushButton(self.page_2)
+        self.editSmoothButton.setCheckable(True)
+        self.editSmoothButton.setObjectName("editSmoothButton")
+        self.gridLayout_3.addWidget(self.editSmoothButton, 5, 0, 1, 3)
         self.toolBox.addItem(self.page_2, "")
         self.page_3 = QtGui.QWidget()
-        self.page_3.setGeometry(QtCore.QRect(0, 0, 264, 634))
+        self.page_3.setGeometry(QtCore.QRect(0, 0, 378, 655))
         self.page_3.setObjectName("page_3")
         self.gridLayout_2 = QtGui.QGridLayout(self.page_3)
         self.gridLayout_2.setMargin(1)
@@ -343,8 +346,12 @@
         QtCore.QObject.connect(self.editBrushSizeSlider, QtCore.SIGNAL("valueChanged(int)"), self.label_16.setNum)
         QtCore.QObject.connect(self.paintBrushSizeSlider, QtCore.SIGNAL("valueChanged(int)"), self.label_17.setNum)
         QtCore.QObject.connect(self.paintIntensitySlider, QtCore.SIGNAL("valueChanged(int)"), self.label_21.setNum)
+        QtCore.QObject.connect(self.setHeightButton, QtCore.SIGNAL("toggled(bool)"), self.editIntensitySlider.setDisabled)
+        QtCore.QObject.connect(self.setHeightButton, QtCore.SIGNAL("toggled(bool)"), self.editBrushButton.setDisabled)
+        QtCore.QObject.connect(self.setHeightButton, QtCore.SIGNAL("toggled(bool)"), self.editBrushSizeSlider.setDisabled)
+        QtCore.QObject.connect(self.setHeightButton, QtCore.SIGNAL("toggled(bool)"), self.editSmoothButton.setDisabled)
+        QtCore.QObject.connect(self.editSmoothButton, QtCore.SIGNAL("toggled(bool)"), self.setHeightButton.setDisabled)
         QtCore.QMetaObject.connectSlotsByName(TerrainManagerUi)
-        TerrainManagerUi.setTabOrder(self.terrainModToolComboBox, self.editIntensitySlider)
         TerrainManagerUi.setTabOrder(self.editIntensitySlider, self.editBrushButton)
         TerrainManagerUi.setTabOrder(self.editBrushButton, self.extendsSpinBoxZ)
         TerrainManagerUi.setTabOrder(self.extendsSpinBoxZ, self.baseNameLineEdit)
@@ -447,10 +454,6 @@
         self.numTexturesComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "6", None, QtGui.QApplication.UnicodeUTF8))
         self.createTerrainButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
         self.toolBox.setItemText(self.toolBox.indexOf(self.page), QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
-        self.terrainModToolComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Terrain tools", None, QtGui.QApplication.UnicodeUTF8))
-        self.terrainModToolComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "Flatten", None, QtGui.QApplication.UnicodeUTF8))
-        self.terrainModToolComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "Lower", None, QtGui.QApplication.UnicodeUTF8))
-        self.terrainModToolComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "Raise", None, QtGui.QApplication.UnicodeUTF8))
         self.label_12.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_12.setText(QtGui.QApplication.translate("TerrainManagerUi", "Intensity", None, QtGui.QApplication.UnicodeUTF8))
         self.editIntensitySlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
@@ -464,6 +467,8 @@
         self.label_16.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_16.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
         self.editBrushSizeSlider.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The diameter of the tool", None, QtGui.QApplication.UnicodeUTF8))
+        self.setHeightButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "Set Height", None, QtGui.QApplication.UnicodeUTF8))
+        self.editSmoothButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "Smooth", None, QtGui.QApplication.UnicodeUTF8))
         self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), QtGui.QApplication.translate("TerrainManagerUi", "ModifyTerrain", None, QtGui.QApplication.UnicodeUTF8))
         self.label_21.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))
         self.label_21.setText(QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))

Modified: rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
===================================================================
--- rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-09 19:18:54 UTC (rev 4921)
+++ rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-10 11:57:03 UTC (rev 4922)
@@ -5,8 +5,8 @@
    <rect>
     <x>0</x>
     <y>0</y>
-    <width>266</width>
-    <height>748</height>
+    <width>380</width>
+    <height>769</height>
    </rect>
   </property>
   <property name="windowTitle" >
@@ -96,8 +96,8 @@
        <rect>
         <x>0</x>
         <y>0</y>
-        <width>264</width>
-        <height>634</height>
+        <width>378</width>
+        <height>655</height>
        </rect>
       </property>
       <attribute name="label" >
@@ -639,8 +639,8 @@
        <rect>
         <x>0</x>
         <y>0</y>
-        <width>264</width>
-        <height>634</height>
+        <width>378</width>
+        <height>655</height>
        </rect>
       </property>
       <attribute name="label" >
@@ -653,7 +653,7 @@
        <property name="spacing" >
         <number>1</number>
        </property>
-       <item row="4" column="1" >
+       <item row="6" column="1" >
         <spacer name="verticalSpacer" >
          <property name="orientation" >
           <enum>Qt::Vertical</enum>
@@ -666,28 +666,6 @@
          </property>
         </spacer>
        </item>
-       <item row="0" column="0" colspan="3" >
-        <widget class="QComboBox" name="terrainModToolComboBox" >
-         <property name="toolTip" >
-          <string>Terrain tools</string>
-         </property>
-         <item>
-          <property name="text" >
-           <string>Flatten</string>
-          </property>
-         </item>
-         <item>
-          <property name="text" >
-           <string>Lower</string>
-          </property>
-         </item>
-         <item>
-          <property name="text" >
-           <string>Raise</string>
-          </property>
-         </item>
-        </widget>
-       </item>
        <item row="1" column="0" >
         <widget class="QLabel" name="label_12" >
          <property name="toolTip" >
@@ -790,6 +768,9 @@
          <property name="toolTip" >
           <string>The diameter of the tool</string>
          </property>
+         <property name="minimum" >
+          <number>1</number>
+         </property>
          <property name="maximum" >
           <number>50</number>
          </property>
@@ -801,6 +782,26 @@
          </property>
         </widget>
        </item>
+       <item row="4" column="0" colspan="3" >
+        <widget class="QPushButton" name="setHeightButton" >
+         <property name="text" >
+          <string>Set Height</string>
+         </property>
+         <property name="checkable" >
+          <bool>true</bool>
+         </property>
+        </widget>
+       </item>
+       <item row="5" column="0" colspan="3" >
+        <widget class="QPushButton" name="editSmoothButton" >
+         <property name="text" >
+          <string>Smooth</string>
+         </property>
+         <property name="checkable" >
+          <bool>true</bool>
+         </property>
+        </widget>
+       </item>
       </layout>
      </widget>
      <widget class="QWidget" name="page_3" >
@@ -808,8 +809,8 @@
        <rect>
         <x>0</x>
         <y>0</y>
-        <width>264</width>
-        <height>634</height>
+        <width>378</width>
+        <height>655</height>
        </rect>
       </property>
       <attribute name="label" >
@@ -953,9 +954,13 @@
     </widget>
    </item>
   </layout>
+  <zorder>terrainListComboBox</zorder>
+  <zorder>toggleTerrainVisibilityButton</zorder>
+  <zorder>editTerrainButton</zorder>
+  <zorder>deleteTerrainButton</zorder>
+  <zorder>toolBox</zorder>
  </widget>
  <tabstops>
-  <tabstop>terrainModToolComboBox</tabstop>
   <tabstop>editIntensitySlider</tabstop>
   <tabstop>editBrushButton</tabstop>
   <tabstop>extendsSpinBoxZ</tabstop>
@@ -987,11 +992,11 @@
    <hints>
     <hint type="sourcelabel" >
      <x>162</x>
-     <y>130</y>
+     <y>101</y>
     </hint>
     <hint type="destinationlabel" >
-     <x>257</x>
-     <y>132</y>
+     <x>377</x>
+     <y>103</y>
     </hint>
    </hints>
   </connection>
@@ -1003,11 +1008,11 @@
    <hints>
     <hint type="sourcelabel" >
      <x>160</x>
-     <y>141</y>
+     <y>112</y>
     </hint>
     <hint type="destinationlabel" >
-     <x>258</x>
-     <y>143</y>
+     <x>377</x>
+     <y>114</y>
     </hint>
    </hints>
   </connection>
@@ -1018,12 +1023,12 @@
    <slot>setNum(int)</slot>
    <hints>
     <hint type="sourcelabel" >
-     <x>140</x>
-     <y>67</y>
+     <x>139</x>
+     <y>148</y>
     </hint>
     <hint type="destinationlabel" >
-     <x>258</x>
-     <y>69</y>
+     <x>371</x>
+     <y>150</y>
     </hint>
    </hints>
   </connection>
@@ -1034,14 +1039,94 @@
    <slot>setNum(int)</slot>
    <hints>
     <hint type="sourcelabel" >
-     <x>172</x>
-     <y>48</y>
+     <x>171</x>
+     <y>129</y>
     </hint>
     <hint type="destinationlabel" >
-     <x>258</x>
-     <y>50</y>
+     <x>371</x>
+     <y>131</y>
     </hint>
    </hints>
   </connection>
+  <connection>
+   <sender>setHeightButton</sender>
+   <signal>toggled(bool)</signal>
+   <receiver>editIntensitySlider</receiver>
+   <slot>setDisabled(bool)</slot>
+   <hints>
+    <hint type="sourcelabel" >
+     <x>65</x>
+     <y>274</y>
+    </hint>
+    <hint type="destinationlabel" >
+     <x>85</x>
+     <y>94</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>setHeightButton</sender>
+   <signal>toggled(bool)</signal>
+   <receiver>editBrushButton</receiver>
+   <slot>setDisabled(bool)</slot>
+   <hints>
+    <hint type="sourcelabel" >
+     <x>109</x>
+     <y>274</y>
+    </hint>
+    <hint type="destinationlabel" >
+     <x>131</x>
+     <y>210</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>setHeightButton</sender>
+   <signal>toggled(bool)</signal>
+   <receiver>editBrushSizeSlider</receiver>
+   <slot>setDisabled(bool)</slot>
+   <hints>
+    <hint type="sourcelabel" >
+     <x>222</x>
+     <y>271</y>
+    </hint>
+    <hint type="destinationlabel" >
+     <x>143</x>
+     <y>113</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>setHeightButton</sender>
+   <signal>toggled(bool)</signal>
+   <receiver>editSmoothButton</receiver>
+   <slot>setDisabled(bool)</slot>
+   <hints>
+    <hint type="sourcelabel" >
+     <x>42</x>
+     <y>271</y>
+    </hint>
+    <hint type="destinationlabel" >
+     <x>39</x>
+     <y>299</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>editSmoothButton</sender>
+   <signal>toggled(bool)</signal>
+   <receiver>setHeightButton</receiver>
+   <slot>setDisabled(bool)</slot>
+   <hints>
+    <hint type="sourcelabel" >
+     <x>101</x>
+     <y>301</y>
+    </hint>
+    <hint type="destinationlabel" >
+     <x>100</x>
+     <y>274</y>
+    </hint>
+   </hints>
+  </connection>
  </connections>
 </ui>



From fusion2 at mail.berlios.de  Wed May 13 17:45:11 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Wed, 13 May 2009 17:45:11 +0200
Subject: [Dsa-hl-svn] r4923 - rl/trunk/editors/Lockenwickler/src
Message-ID: <200905131545.n4DFjB3g030513@sheep.berlios.de>

Author: fusion2
Date: 2009-05-13 17:45:09 +0200 (Wed, 13 May 2009)
New Revision: 4923

Modified:
   rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
Log:
- terrain fixes

Modified: rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-10 11:57:03 UTC (rev 4922)
+++ rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-13 15:45:09 UTC (rev 4923)
@@ -321,13 +321,13 @@
         iHeight = brush.getHeight()
 
         storageclass = ctypes.c_float * (iWidth * iHeight)
-        vecReturnBuffer =  storageclass()
-        vecHeightBuffer = storageclass()
+        vecReturnBuffer =  og.LodDistanceList()
+        vecHeightBuffer = og.LodDistanceList()
        
         ptr = ctypes.pointer(vecReturnBuffer)
        
-        brushReturn = ET.Brush(ctypes.pointer(vecReturnBuffer), iWidth, iHeight)
-        brushHeights = ET.Brush(ctypes.pointer(vecHeightBuffer), iWidth, iHeight)
+        brushReturn = ET.Brush(vecReturnBuffer, iWidth, iHeight)
+        brushHeights = ET.Brush(vecHeightBuffer, iWidth, iHeight)
 
         self.terrainManager.getHeights(x, z, brushHeights)
 
@@ -408,7 +408,7 @@
         self.leftMouseDown = False
         
         self.mainTimer = QTimer(None)
-        self.mainTimer.start(5)
+        self.mainTimer.start(15)
     
         self.setupFinished = False
         
@@ -598,8 +598,8 @@
         point_index = 0
         theta = 0
         while theta < 2 * og.Math.PI:
-            x = self.editBrushSize * og.Math.Cos(theta)
-            z = self.editBrushSize * og.Math.Sin(theta)
+            x = (self.editBrushSize / 2) * og.Math.Cos(theta)
+            z = (self.editBrushSize / 2)* og.Math.Sin(theta)
             
             y = self.currentTerrain.terrainManager.getTerrainInfo().getHeightAt(self.pointerNode.getPosition().x + x, self.pointerNode.getPosition().z +  z)
             



From fusion2 at mail.berlios.de  Sun May 17 16:49:50 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Sun, 17 May 2009 16:49:50 +0200
Subject: [Dsa-hl-svn] r4924 - rl/trunk/editors/Lockenwickler/src
Message-ID: <200905171449.n4HEnoUV013423@sheep.berlios.de>

Author: fusion2
Date: 2009-05-17 16:49:49 +0200 (Sun, 17 May 2009)
New Revision: 4924

Modified:
   rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
Log:
- fix when starting the editor the first time

Modified: rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-05-13 15:45:09 UTC (rev 4923)
+++ rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-05-17 14:49:49 UTC (rev 4924)
@@ -1,594 +1,597 @@
-#################################################
-# This source file is part of Rastullahs Lockenwickler.
-# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-#  but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
-#################################################
-
-import os
-import sys
-import platform
-import subprocess
-
-sys.path.insert(0,'..')
-import PythonOgreConfig
-
-from random import randint
-
-from PyQt4 import QtGui, QtCore
-from PreferencesDialog import *
-from ObjectPropertyWin import *
-from ModelSelectionDialog import *
-from MaterialSelectionDialog import *
-from GameObjectClassView import *
-from ConsoleWindow import *
-from ModuleManager import ModuleManager
-from ModuleExplorer import *
-from NewModuleWizard import *
-from MovePivot import *
-from PivotRenderQueueListener import *
-from ModuleDirectoryView import *
-from TriggerManager import *
-from MyTerrainManager import MyTerrainManager
-
-import OgreMainWindow
-import ogre.renderer.OGRE as og
-
-class Lockenwickler(QtGui.QMainWindow):
-    def __init__(self, parent=None):
-        QtGui.QWidget.__init__(self, parent)
-
-#        pixmap = QPixmap("media/icons/lockenwickler_provisorium.png")
-#        splash = QSplashScreen(pixmap, Qt.WindowStaysOnTopHint)
-#        splash.setMask(pixmap.mask())
-#        splash.showMessage("Starting...")
-#        splash.show() 
-
-        self.setupUi()
-
-        self.consoleWindow = ConsoleWindow(False,  self)
-
-        self.setupOgre()
-
-        self.prefDialog = PreferencesDialog(self)
-        self.objectPropertyWin = ObjectPropertyWin(self.OgreMainWinSceneMgr, self.gocManager, self)
-        self.moduleExplorerWin = ModuleExplorer(self)
-        self.modelSelectionDialog = ModelSelectionDialog(self.ogreRoot, self)
-        self.materialSelectionDialog = MaterialSelectionDialog(self.ogreRoot, self)
-        self.moduleManager.modelSelectionDialog = self.modelSelectionDialog
-        self.moduleManager.materialSelectionDialog = self.materialSelectionDialog
-        self.moduleDirectoryViewWin = ModuleDirectoryView(self)
-        
-        triggerManager = TriggerManager()
-        
-        self.gameObjectClassView = GameObjectClassView(self.moduleManager.gocManager)
-
-        self.createDockWindows()
-
-        self.mainTimer = QtCore.QTimer(self)
-        self.mainTimer.connect(self.mainTimer, QtCore.SIGNAL("timeout()"), self.update)
-        self.mainTimer.start(5)
-
-        settings = QtCore.QSettings()
-        self.restoreGeometry(settings.value("MainWindow/Geometry").toByteArray())
-        self.restoreState(settings.value("MainWindow/DockWindows").toByteArray())
-        if not self.prefDialog.setCfgPath(settings.value("Preferences/moduleCfgPath").toString()):
-            self.prefDialog.show()
-            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
-        else:
-            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
-            
-        self.prefDialog.setExternalEditorPath(str(settings.value("Preferences/externalEditorPath").toString()))
-        
-        self.moduleDirectoryViewWin.modulesPath = self.prefDialog.moduleCfgPath.replace("modules.cfg", "")
-        
-        self.moduleManager.setModuleExplorer(self.moduleExplorerWin)
-        self.moduleManager.setModuleDirView(self.moduleDirectoryViewWin)
-        self.moduleManager.setPropertyWindow(self.objectPropertyWin)
-        self.moduleManager.setContextMenuCallback(self.onContextMenuCallback)
-        
-        self.setWindowIcon(QIcon("media/icons/lockenwickler_provisorium_small.png"))
-        self.setWindowTitle("Rastullahs Lockenwickler")
-        
-        self.editorSetupFinished = False
-        
-#        splash.finish(self)
-
-    def createAction(self, text, slot=None, shortcut=None, icon=None, tip=None, checkable=False, signal="triggered()"):
-        action = QtGui.QAction(text, self)
-        if icon is not None:
-            action.setIcon(QtGui.QIcon("media/icons/%s" % icon))
-        if shortcut is not None:
-            action.setShortcut(shortcut)
-        if tip is not None:
-            action.setToolTip(tip)
-            action.setStatusTip(tip)
-        if slot is not None:
-            self.connect(action, QtCore.SIGNAL(signal), slot)
-
-        action.setCheckable(checkable)
-
-        return action
-
-    def addActions(self, target, actions):
-        for act in actions:
-            if act is None:
-               target.addSeparator()
-            else:
-                target.addAction(act)
-
-    def setupUi(self):
-        self.setObjectName("MainWindow")
-
-        self.centralwidget = QtGui.QWidget(self)
-        self.centralwidget.setObjectName("centralwidget")
-
-        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
-        self.hboxlayout.setContentsMargins(0, 0, 0, 0)
-        self.hboxlayout.setObjectName("hboxlayout")
-
-        self.gridlayout = QtGui.QGridLayout()
-        self.gridlayout.setObjectName("gridlayout")
-        self.gridlayout.setContentsMargins(0, 0, 0, 0)
-        
-        self.menubar = QtGui.QMenuBar(self)
-        self.menubar.setObjectName("menubar")
-
-        self.menuFile = QtGui.QMenu(self.menubar)
-        self.menuFile.setObjectName("menuFile")
-
-        self.menuEdit = QtGui.QMenu(self.menubar)
-        self.menuEdit.setObjectName("menuEdit")
-
-        self.menuView = QtGui.QMenu(self.menubar)
-        self.menuView.setObjectName("menuView")
-        self.setMenuBar(self.menubar)
-
-
-        self.statusbar = QtGui.QStatusBar(self)
-        self.statusbar.setObjectName("statusbar")
-        self.setStatusBar(self.statusbar)
-
-#####################################
-        self.actionNeu =self.createAction("&New Module",  self.actionNewSlot,  QKeySequence.New,  "filenew.png",  "New Module")
-        self.actionNeu.setObjectName("actionNeu")
-
-        self.actionOpen = self.createAction("&Open Module",  self.actionOpenSlot,  QKeySequence.Open,  "fileopen.png",  "Open Module")
-        self.actionOpen.setObjectName("actionOpen")
-        
-        self.actionSave = self.createAction("&Save",  self.actionSaveSlot,  QKeySequence.Save,  "filesave.png",  "Save Module")
-        self.actionSave.setObjectName("actionSave")
-        
-        self.actionRunModule = self.createAction("&Save and Run",  self.actionRunModuleSlot,  "Alt+R",  "fileexport.png",  "Save And Run Module")
-        self.actionRunModule.setObjectName("actionRunModule")
-
-        self.actionClose = self.createAction("Quit",  self.actionQuitSlot,  "Alt+Q",  "exit.png",  "Quit")
-        self.actionClose.setObjectName("actionQuit")
-#####################################
-
-
-#####################################
-        self.actionDelete = self.createAction("Delete",  self.actionDeleteSlot,  QKeySequence.Delete,  "editdelete.png",  "Delete")
-        self.actionDelete.setObjectName("actionDelete")
-
-        self.actionCopy = self.createAction("Copy",  self.actionCopySlot,  QKeySequence.Copy,  "editcopy.png",  "Copy")
-        self.actionCopy.setObjectName("actionCopy")
-
-        self.actionCut = self.createAction("Cut",  self.actionCutSlot,  QKeySequence.Cut,  "editcut.png",  "Cut")
-        self.actionCut.setObjectName("actionCut")
-
-        self.actionPaste = self.createAction("Paste",  self.actionPasteSlot,  QKeySequence.Paste,  "editpaste.png",  "Paste")
-        self.actionPaste.setObjectName("actionPaste")
-
-        self.actionSelect = self.createAction("&Select",  self.actionSelectSlot,  "Space",  "cursor.png",  "Move selected object")
-        self.actionSelect.setObjectName("actionSelect")
-
-        self.actionMove = self.createAction("&Move",  self.actionMoveSlot,  "g",  "move.png",  "Move selected object")
-        self.actionMove.setObjectName("actionMove")
-
-        self.actionRotate = self.createAction("&Rotate",  self.actionRotateSlot,  "r",  "rotate.png",  "Rotate selected object")
-        self.actionRotate.setObjectName("actionRotate")
-
-        self.actionScale = self.createAction("&Scale",  self.actionScaleSlot,  "x",  "resizecol.png",  "Scale selected object")
-        self.actionScale.setObjectName("actionScale")
-
-        self.actionOneClickEntityPlacement = self.createAction("&OneClickEntityPlacement",  self.actionOneClickEntityPlacementSlot,  "",  "resizecol.png",  "Add an Entity just by a click")
-        self.actionOneClickEntityPlacement.setObjectName("actionOneClickEntityPlacement")
-        self.actionOneClickEntityPlacement.setCheckable(True)
-
-#####################################
-#####################################
-        self.actionSceneExplorer = self.createAction("&Scene Exlporer",  self.toggleModuleExplorer,  "Alt+E",  "view_tree.png",  "Module Explorer",  False)
-        self.actionSceneExplorer.setObjectName("actionSceneExplorer")
-        
-        self.actionModuleDirView = self.createAction("&Directory Explorer",  self.toggleModuleDirView,  "Alt+D",  "view_tree.png",  "Module Directory Explorer",  False)
-        self.actionModuleDirView.setObjectName("actionDirectoryExplorer")
-        
-        self.actionPreferences = self.createAction("&Preferences",  self.togglePreferencesWindow,  None,  "configure.png",  "Lockenwickler Preferences",  False)
-        self.actionPreferences.setObjectName("actionPreferences")
-
-        self.actionProperty_Window = self.createAction("Pr&operty Window",  self.togglePropertyWindow,  "Alt+P",  "unsortedlist1.png",  "Property Window")
-        self.actionProperty_Window.setObjectName("actionProperty_Window")
-
-        self.actionObject_Selection = self.createAction("&Model Preview Window",  self.toggleModelPreviewWindow,  "Alt+O",  "tux.png",  "Model Preview")
-        self.actionObject_Selection.setObjectName("actionObject_Selection")
-        
-        self.actionMaterial_Selection = self.createAction("Material &Preview Window",  self.toggleMaterialPreviewWindow,  "Alt+M",  "colors.png",  "Material Preview")
-        self.actionMaterial_Selection.setObjectName("actionMaterial_Selection")
-
-        self.actionGameObjectClass_Selection = self.createAction("&Game Object Class Preview Window",  self.toggleGameObjectViewWindow,  "Ctrl+G",  "multirow.png",  "GameObjectClass Preview")
-        self.actionGameObjectClass_Selection.setObjectName("actionObject_Selection")
-
-        self.actionConsole_Window = self.createAction("&Console Window",  self.toggleConsoleWindow,  "Alt+C",  "console.png",  "Console Window")
-        self.actionConsole_Window.setObjectName("actionConsole_Window")
-        
-        self.actionTerrainTools_Window = self.createAction("&Terrain Tools",  self.toggleTerrainToolsWindow,  "Alt+T",  "terrain_small.png",  "Console Window")
-        self.actionTerrainTools_Window.setObjectName("actionTerrainTools_Window")
-        
-        self.actionToggleViewportGrid = self.createAction("&Toggle Grid",  self.toggleViewportGrid,  "Alt+G",  "console.png",  "Toggle Viewport Grid")
-        self.actionToggleViewportGrid.setObjectName("actionToggleViewportGrid")
-
-#####################################
-#####################################
-
-
-        self.menuFile.addAction(self.actionNeu)
-        self.menuFile.addAction(self.actionOpen)
-        self.menuFile.addAction(self.actionSave)
-        self.menuFile.addAction(self.actionRunModule)
-        self.menuFile.addAction(self.actionClose)
-
-        self.menuEdit.addAction(self.actionSelect)
-        self.menuEdit.addAction(self.actionMove)
-        self.menuEdit.addAction(self.actionRotate)
-        self.menuEdit.addAction(self.actionScale)
-        self.menuEdit.addSeparator()
-        self.menuEdit.addAction(self.actionDelete)
-        self.menuEdit.addAction(self.actionCopy)
-        self.menuEdit.addAction(self.actionCut)
-        self.menuEdit.addAction(self.actionPaste)
-        self.menuEdit.addSeparator()
-        self.menuEdit.addAction(self.actionOneClickEntityPlacement)
-        
-
-        self.menuView.addAction(self.actionSceneExplorer)
-        self.menuView.addAction(self.actionModuleDirView)
-        self.menuView.addAction(self.actionPreferences)
-        self.menuView.addAction(self.actionProperty_Window)
-        self.menuView.addAction(self.actionObject_Selection)
-        self.menuView.addAction(self.actionMaterial_Selection)
-        self.menuView.addAction(self.actionGameObjectClass_Selection)
-        self.menuView.addAction(self.actionConsole_Window)
-        self.menuView.addAction(self.actionTerrainTools_Window)
-        self.menuView.addAction(self.actionToggleViewportGrid)
-        
-        self.menubar.addAction(self.menuFile.menuAction())
-        self.menubar.addAction(self.menuEdit.menuAction())
-        self.menubar.addAction(self.menuView.menuAction())
-
-        self.retranslateUi()
-        QtCore.QMetaObject.connectSlotsByName(self)
-
-    def retranslateUi(self):
-        self.setWindowTitle(QtGui.QApplication.translate("MainWindow", "MainWindow", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuFile.setTitle(QtGui.QApplication.translate("MainWindow", "File", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuEdit.setTitle(QtGui.QApplication.translate("MainWindow", "Edit", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuView.setTitle(QtGui.QApplication.translate("MainWindow", "View", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionNeu.setText(QtGui.QApplication.translate("MainWindow", "New Module", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionMove.setText(QtGui.QApplication.translate("MainWindow", "Move", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionRotate.setText(QtGui.QApplication.translate("MainWindow", "Rotate", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionSceneExplorer.setText(QtGui.QApplication.translate("MainWindow", "Module Explorer", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionPreferences.setText(QtGui.QApplication.translate("MainWindow", "Preferences", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionProperty_Window.setText(QtGui.QApplication.translate("MainWindow", "Property Window", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionObject_Selection.setText(QtGui.QApplication.translate("MainWindow", "Object Selection", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionClose.setText(QtGui.QApplication.translate("MainWindow", "Quit", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionConsole_Window.setText(QtGui.QApplication.translate("MainWindow", "Console Window", None, QtGui.QApplication.UnicodeUTF8))
-
-    def setupOgre(self, pluginCfgPath="./Plugins.cfg", ogreCfgPath="./ogre.cfg", logPath="./ogre.log"):
-        if platform.system() == "Windows":
-            pluginCfgPath="./Plugins-windows.cfg"
-        else:
-            pluginCfgPath="./Plugins-linux.cfg"
-
-        root = og.Root(pluginCfgPath, ogreCfgPath, logPath)
-        self.ogreRoot = root
-
-        if  not self.ogreRoot.restoreConfig() and not self.ogreRoot.showConfigDialog():
-            sys.exit('Quit from Config Dialog')
-
-        root.initialise(False)
-
-        self.pivotRenderQueueListener = PivotRenderQueueListener()
-        self.OgreMainWinSceneMgr = self.ogreRoot.createSceneManager(og.ST_GENERIC, "OgreMainWinSceneMgr")
-        self.OgreMainWinSceneMgr.ambientLight = og.ColourValue(4, 4, 4)
-        self.OgreMainWinSceneMgr.addRenderQueueListener(self.pivotRenderQueueListener)
-        
-        self.moduleName = ""
-        self.myTerrainManager = MyTerrainManager(self.OgreMainWinSceneMgr)
-        self.moduleManager = ModuleManager(self.ogreRoot,  self.OgreMainWinSceneMgr)
-        self.moduleManager.myTerrainManager = self.myTerrainManager
-        self.gocManager = self.moduleManager.gocManager
-        
-        self.ogreMainWindow = OgreMainWindow.OgreMainWindow(self.moduleManager,  root,  self.OgreMainWinSceneMgr,  self)
-        self.gridlayout.addWidget(self.ogreMainWindow,0,0,1,1)
-        self.hboxlayout.addLayout(self.gridlayout)
-        self.setCentralWidget(self.centralwidget)
-        
-        self.myTerrainManager.ogreMainWindow = self.ogreMainWindow
-        
-        oglog = og.LogManager.getSingleton().getDefaultLog()
-        oglog.addListener(self.consoleWindow.lockenLog)
-
-    def finishEditorSetup(self):
-        if not self.editorSetupFinished:
-            og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
-            og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
-
-            self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)
-            self.moduleManager.pivot.hide()
-            self.editorSetupFinished = True
-        
-    def update(self):
-        self.ogreRoot.renderOneFrame()
-        if platform.system() == "Linux":
-            self.ogreMainWindow.updateRenderWindow()
-            self.modelSelectionDialog.updateRenderWindow()
-            self.materialSelectionDialog.updateRenderWindow()
-
-    def actionOpenSlot(self):
-        self.finishEditorSetup()
-        self.moduleManager.openLoadModuleDialog()
-
-    def actionNewSlot(self):
-        newModuleWiz = NewModuleWizard(self.moduleManager, self)
-        newModuleWiz.exec_()
-        return
-        
-    def actionSaveSlot(self):
-        self.moduleManager.save()
-        
-    def actionRunModuleSlot(self):
-        self.moduleManager.save()
-        if platform.system() == "Windows":
-            workingDir = self.prefDialog.moduleCfgPath.replace("/modules/modules.cfg", "")
-            executable = os.path.join(workingDir, "Rastullah.exe")
-            executable = executable.replace("/",  "\\")
-            if os.path.isfile(executable):
-                subprocess.Popen([executable, "--module", self.moduleManager.mainModule.name], 0, None, None, None, None, None, False, False, workingDir)
-
-        
-    def actionQuitSlot(self):
-        self.close()
-
-    def actionDeleteSlot(self):
-        self.moduleManager.deleteObjects()
-
-    def actionCopySlot(self):
-        self.moduleManager.copyObjects()
-
-    def actionCutSlot(self):
-        self.moduleManager.cutObjects()
-
-    def actionPasteSlot(self):
-        self.moduleManager.pasteObjects(self.ogreMainWindow.getCameraToViewportRay())
-
-    def actionSelectSlot(self):
-        self.moduleManager.pivot.hide()
-
-    def actionMoveSlot(self):
-        self.moduleManager.pivot.setMoveMode()
-
-    def actionRotateSlot(self):
-        self.moduleManager.pivot.setRotateMode()
-
-    def actionScaleSlot(self):
-        self.moduleManager.pivot.setScaleMode()
-
-    def actionOneClickEntityPlacementSlot(self):
-        self.moduleManager.setOneClickEntityPlacement(self.actionOneClickEntityPlacement.isChecked())
-
-    def togglePreferencesWindow(self):
-        if self.prefDialog.isHidden():
-            self.prefDialog.show()
-        else:
-            self.prefDialog.hide()
-
-    def toggleModelPreviewWindow(self):
-        if self.modelSelectionDock.isHidden():
-            self.modelSelectionDock.show()
-        else:
-            self.modelSelectionDock.hide()
-    
-    def toggleMaterialPreviewWindow(self):
-        if self.materialSelectionDock.isHidden():
-            self.materialSelectionDock.show()
-        else:
-            self.materialSelectionDock.hide()
-
-    def toggleGameObjectViewWindow(self):
-        if self.gameObjectClassViewDock.isHidden():
-            self.gameObjectClassViewDock.show()
-        else:
-            self.gameObjectClassViewDock.hide()
-
-    def toggleModuleExplorer(self):
-        if self.moduleExplorerDock.isHidden():
-            self.moduleExplorerDock.show()
-        else:
-            self.moduleExplorerDock.hide()
-            
-    def toggleModuleDirView(self):
-        if self.moduleDirectoryViewDock.isHidden():
-            self.moduleDirectoryViewDock.show()
-        else:
-            self.moduleDirectoryViewDock.hide()
-
-    def togglePropertyWindow(self):
-        if self.propertyDock.isHidden():
-            self.propertyDock.show()
-        else:
-            self.propertyDock.hide()
-
-    def toggleConsoleWindow(self):
-        if self.consoleDock.isHidden():
-            self.consoleDock.show()
-        else:
-            self.consoleDock.hide()
-            
-    def toggleTerrainToolsWindow(self):
-        if self.myTerrainManagerDock.isHidden():
-            self.myTerrainManagerDock.show()
-        else:
-            self.myTerrainManagerDock.hide()
-
-    def toggleViewportGrid(self):
-        self.ogreMainWindow.toggleViewportGrid()
-
-    def createDockWindows(self):
-        self.modelSelectionDock = QtGui.QDockWidget(self.tr("Models"), self)
-        self.modelSelectionDock.setObjectName("ModelSelectionDockWindow")
-        self.modelSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.modelSelectionDock.setWidget(self.modelSelectionDialog)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.modelSelectionDock)
-        
-        self.materialSelectionDock = QtGui.QDockWidget(self.tr("Materials"), self)
-        self.materialSelectionDock.setObjectName("MaterialSelectionDockWindow")
-        self.materialSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.materialSelectionDock.setWidget(self.materialSelectionDialog)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.materialSelectionDock)
-        self.tabifyDockWidget(self.modelSelectionDock, self.materialSelectionDock)
-        
-        self.gameObjectClassViewDock = QtGui.QDockWidget(self.tr("GameObjectClasses"), self)
-        self.gameObjectClassViewDock.setObjectName("GameObjectClassView")
-        self.gameObjectClassViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.gameObjectClassViewDock.setWidget(self.gameObjectClassView)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.gameObjectClassViewDock)        
-        self.tabifyDockWidget(self.modelSelectionDock, self.gameObjectClassViewDock)
-        
-        self.propertyDock = QtGui.QDockWidget(self.tr("Properties"), self)
-        self.propertyDock.setObjectName("PropertyDockWindow")
-        self.propertyDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.propertyDock.setWidget(self.objectPropertyWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.propertyDock)
-
-        self.moduleExplorerDock = QtGui.QDockWidget(self.tr("Module Explorer"), self)
-        self.moduleExplorerDock.setObjectName("ModuleExplorerDockWindow")
-        self.moduleExplorerDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.moduleExplorerDock.setWidget(self.moduleExplorerWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleExplorerDock)
-        self.tabifyDockWidget(self.moduleExplorerDock, self.propertyDock)
-        
-        self.moduleDirectoryViewDock = QtGui.QDockWidget(self.tr("Module Directory View"), self)
-        self.moduleDirectoryViewDock.setObjectName("ModuleDirectoryViewDockWindow")
-        self.moduleDirectoryViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea | QtCore.Qt.TopDockWidgetArea | QtCore.Qt.BottomDockWidgetArea)
-        self.moduleDirectoryViewDock.setWidget(self.moduleDirectoryViewWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleDirectoryViewDock)
-        
-        self.myTerrainManagerDock = self.myTerrainManager.getDockWidget(self)
-        
-        self.consoleDock = QtGui.QDockWidget(self.tr("Console"), self)
-        self.consoleDock.setObjectName("ConsoleDockWindow")
-        self.consoleDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea | QtCore.Qt.TopDockWidgetArea)
-        self.consoleDock.setWidget(self.consoleWindow)
-        self.addDockWidget(QtCore.Qt.BottomDockWidgetArea, self.consoleDock)
-
-        self.fileToolBar = self.addToolBar("File Toolbar")
-        self.fileToolBar.setObjectName("FileToolBar")
-        self.fileToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
-        self.fileToolBar.addAction(self.actionNeu)
-        self.fileToolBar.addAction(self.actionOpen)
-        self.fileToolBar.addAction(self.actionSave)
-        self.fileToolBar.addAction(self.actionRunModule)
-        self.fileToolBar.addAction(self.actionClose)
-        self.addToolBar(QtCore.Qt.TopToolBarArea, self.fileToolBar)
-
-        self.moveToolBar = self.addToolBar("Transformation Bar")
-        self.moveToolBar.setObjectName("TransformationBar")
-        self.moveToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
-        self.moveToolBar.addAction(self.actionSelect)
-        self.moveToolBar.addAction(self.actionMove)
-        self.moveToolBar.addAction(self.actionRotate)
-        self.moveToolBar.addAction(self.actionScale)
-        self.addToolBar(QtCore.Qt.TopToolBarArea, self.moveToolBar)
-
-    def keyPressEvent(self,  event):
-        if not event.isAutoRepeat():
-            self.ogreMainWindow.keyPressEvent(event)
-
-    def keyReleaseEvent(self,  event):
-        if not event.isAutoRepeat():
-            self.ogreMainWindow.keyReleaseEvent(event)
-        pass
-
-    def onContextMenuCallback(self, actions, menus):
-        menu = QMenu("My Menu!!")
-        menu.addAction(self.actionDelete)
-        menu.addAction(self.actionCopy)
-        menu.addAction(self.actionCut)
-        menu.addAction(self.actionPaste)
-        menu.addSeparator()
-        
-        for m in menus:
-            menu.addMenu(m)
-        for a in actions:
-            menu.addAction(a)
-
-        menu.exec_(QCursor.pos())
-
-    def connectActionButtons(self):
-        pass
-
-    def saveOnClose(self):
-#        reply = QtGui.QMessageBox.question(self,  "Rastullahs Lockenwickler - Unsaved Chages",  "Save unsaved changes?",  QtGui.QMessageBox.Yes|QtGui.QMessageBox.No|QtGui.QMessageBox.Cancel)
-#        if reply == QtGui.QMessageBox.Cancel:
-#            return False
-#        if reply == QtGui.QMessageBox.Yes:
-#            print""
-#            #TODO: implement save here
-        return True
-
-    def closeEvent(self,  event):
-        if self.saveOnClose():
-            settings = QtCore.QSettings()
-            settings.setValue("Preferences/moduleCfgPath", QtCore.QVariant(self.prefDialog.lineEdit.text()))
-            settings.setValue("MainWindow/Geometry",  QtCore.QVariant(self.saveGeometry()))
-            settings.setValue("MainWIndow/DockWindows",  QtCore.QVariant(self.saveState()))
-            settings.setValue("Preferences/externalEditorPath",  QtCore.QVariant(self.prefDialog.externalTextAppLineEdit.text()))
-            #self.ogreRoot.shutdown()
-        else:
-            event.ignore()
-
-if __name__ == "__main__":
-#    # Import Psyco if available
-#    try:
-#        import psyco
-#        psyco.full(0.02)
-#        #psyco.log()
-#        #psyco.profile()
-#    except ImportError:
-#        pass
-    
-    app = QtGui.QApplication(sys.argv)
-    app.setOrganizationName("Team Pantheon")
-    app.setOrganizationDomain("rastullahs-lockenpracht.de/team")
-    app.setApplicationName("Lockenwickler")
-
-    form = Lockenwickler()
-    form.show()
-
-    app.exec_()
-    
-    sys.exit(0)
-
+#################################################
+# This source file is part of Rastullahs Lockenwickler.
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+#  but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
+#################################################
+
+import os
+import sys
+import platform
+import subprocess
+
+sys.path.insert(0,'..')
+import PythonOgreConfig
+
+from random import randint
+
+from PyQt4 import QtGui, QtCore
+from PreferencesDialog import *
+from ObjectPropertyWin import *
+from ModelSelectionDialog import *
+from MaterialSelectionDialog import *
+from GameObjectClassView import *
+from ConsoleWindow import *
+from ModuleManager import ModuleManager
+from ModuleExplorer import *
+from NewModuleWizard import *
+from MovePivot import *
+from PivotRenderQueueListener import *
+from ModuleDirectoryView import *
+from TriggerManager import *
+from MyTerrainManager import MyTerrainManager
+
+import OgreMainWindow
+import ogre.renderer.OGRE as og
+
+class Lockenwickler(QtGui.QMainWindow):
+    def __init__(self, parent=None):
+        QtGui.QWidget.__init__(self, parent)
+
+#        pixmap = QPixmap("media/icons/lockenwickler_provisorium.png")
+#        splash = QSplashScreen(pixmap, Qt.WindowStaysOnTopHint)
+#        splash.setMask(pixmap.mask())
+#        splash.showMessage("Starting...")
+#        splash.show() 
+
+        self.setupUi()
+
+        self.consoleWindow = ConsoleWindow(False,  self)
+
+        self.setupOgre()
+
+        self.prefDialog = PreferencesDialog(self)
+        self.objectPropertyWin = ObjectPropertyWin(self.OgreMainWinSceneMgr, self.gocManager, self)
+        self.moduleExplorerWin = ModuleExplorer(self)
+        self.modelSelectionDialog = ModelSelectionDialog(self.ogreRoot, self)
+        self.materialSelectionDialog = MaterialSelectionDialog(self.ogreRoot, self)
+        self.moduleManager.modelSelectionDialog = self.modelSelectionDialog
+        self.moduleManager.materialSelectionDialog = self.materialSelectionDialog
+        self.moduleDirectoryViewWin = ModuleDirectoryView(self)
+        
+        triggerManager = TriggerManager()
+        
+        self.gameObjectClassView = GameObjectClassView(self.moduleManager.gocManager)
+
+        self.createDockWindows()
+
+        self.mainTimer = QtCore.QTimer(self)
+        self.mainTimer.connect(self.mainTimer, QtCore.SIGNAL("timeout()"), self.update)
+        self.mainTimer.start(5)
+
+        settings = QtCore.QSettings()
+        self.restoreGeometry(settings.value("MainWindow/Geometry").toByteArray())
+        self.restoreState(settings.value("MainWindow/DockWindows").toByteArray())
+        if not self.prefDialog.setCfgPath(settings.value("Preferences/moduleCfgPath").toString()):
+            self.prefDialog.show()
+            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
+
+        else:
+            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
+            
+        self.prefDialog.setExternalEditorPath(str(settings.value("Preferences/externalEditorPath").toString()))
+        
+        if self.prefDialog.moduleCfgPath is not None:
+            self.moduleDirectoryViewWin.modulesPath = self.prefDialog.moduleCfgPath.replace("modules.cfg", "")
+
+        
+        self.moduleManager.setModuleExplorer(self.moduleExplorerWin)
+        self.moduleManager.setModuleDirView(self.moduleDirectoryViewWin)
+        self.moduleManager.setPropertyWindow(self.objectPropertyWin)
+        self.moduleManager.setContextMenuCallback(self.onContextMenuCallback)
+        
+        self.setWindowIcon(QIcon("media/icons/lockenwickler_provisorium_small.png"))
+        self.setWindowTitle("Rastullahs Lockenwickler")
+        
+        self.editorSetupFinished = False
+        
+#        splash.finish(self)
+
+    def createAction(self, text, slot=None, shortcut=None, icon=None, tip=None, checkable=False, signal="triggered()"):
+        action = QtGui.QAction(text, self)
+        if icon is not None:
+            action.setIcon(QtGui.QIcon("media/icons/%s" % icon))
+        if shortcut is not None:
+            action.setShortcut(shortcut)
+        if tip is not None:
+            action.setToolTip(tip)
+            action.setStatusTip(tip)
+        if slot is not None:
+            self.connect(action, QtCore.SIGNAL(signal), slot)
+
+        action.setCheckable(checkable)
+
+        return action
+
+    def addActions(self, target, actions):
+        for act in actions:
+            if act is None:
+               target.addSeparator()
+            else:
+                target.addAction(act)
+
+    def setupUi(self):
+        self.setObjectName("MainWindow")
+
+        self.centralwidget = QtGui.QWidget(self)
+        self.centralwidget.setObjectName("centralwidget")
+
+        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
+        self.hboxlayout.setContentsMargins(0, 0, 0, 0)
+        self.hboxlayout.setObjectName("hboxlayout")
+
+        self.gridlayout = QtGui.QGridLayout()
+        self.gridlayout.setObjectName("gridlayout")
+        self.gridlayout.setContentsMargins(0, 0, 0, 0)
+        
+        self.menubar = QtGui.QMenuBar(self)
+        self.menubar.setObjectName("menubar")
+
+        self.menuFile = QtGui.QMenu(self.menubar)
+        self.menuFile.setObjectName("menuFile")
+
+        self.menuEdit = QtGui.QMenu(self.menubar)
+        self.menuEdit.setObjectName("menuEdit")
+
+        self.menuView = QtGui.QMenu(self.menubar)
+        self.menuView.setObjectName("menuView")
+        self.setMenuBar(self.menubar)
+
+
+        self.statusbar = QtGui.QStatusBar(self)
+        self.statusbar.setObjectName("statusbar")
+        self.setStatusBar(self.statusbar)
+
+#####################################
+        self.actionNeu =self.createAction("&New Module",  self.actionNewSlot,  QKeySequence.New,  "filenew.png",  "New Module")
+        self.actionNeu.setObjectName("actionNeu")
+
+        self.actionOpen = self.createAction("&Open Module",  self.actionOpenSlot,  QKeySequence.Open,  "fileopen.png",  "Open Module")
+        self.actionOpen.setObjectName("actionOpen")
+        
+        self.actionSave = self.createAction("&Save",  self.actionSaveSlot,  QKeySequence.Save,  "filesave.png",  "Save Module")
+        self.actionSave.setObjectName("actionSave")
+        
+        self.actionRunModule = self.createAction("&Save and Run",  self.actionRunModuleSlot,  "Alt+R",  "fileexport.png",  "Save And Run Module")
+        self.actionRunModule.setObjectName("actionRunModule")
+
+        self.actionClose = self.createAction("Quit",  self.actionQuitSlot,  "Alt+Q",  "exit.png",  "Quit")
+        self.actionClose.setObjectName("actionQuit")
+#####################################
+
+
+#####################################
+        self.actionDelete = self.createAction("Delete",  self.actionDeleteSlot,  QKeySequence.Delete,  "editdelete.png",  "Delete")
+        self.actionDelete.setObjectName("actionDelete")
+
+        self.actionCopy = self.createAction("Copy",  self.actionCopySlot,  QKeySequence.Copy,  "editcopy.png",  "Copy")
+        self.actionCopy.setObjectName("actionCopy")
+
+        self.actionCut = self.createAction("Cut",  self.actionCutSlot,  QKeySequence.Cut,  "editcut.png",  "Cut")
+        self.actionCut.setObjectName("actionCut")
+
+        self.actionPaste = self.createAction("Paste",  self.actionPasteSlot,  QKeySequence.Paste,  "editpaste.png",  "Paste")
+        self.actionPaste.setObjectName("actionPaste")
+
+        self.actionSelect = self.createAction("&Select",  self.actionSelectSlot,  "Space",  "cursor.png",  "Move selected object")
+        self.actionSelect.setObjectName("actionSelect")
+
+        self.actionMove = self.createAction("&Move",  self.actionMoveSlot,  "g",  "move.png",  "Move selected object")
+        self.actionMove.setObjectName("actionMove")
+
+        self.actionRotate = self.createAction("&Rotate",  self.actionRotateSlot,  "r",  "rotate.png",  "Rotate selected object")
+        self.actionRotate.setObjectName("actionRotate")
+
+        self.actionScale = self.createAction("&Scale",  self.actionScaleSlot,  "x",  "resizecol.png",  "Scale selected object")
+        self.actionScale.setObjectName("actionScale")
+
+        self.actionOneClickEntityPlacement = self.createAction("&OneClickEntityPlacement",  self.actionOneClickEntityPlacementSlot,  "",  "resizecol.png",  "Add an Entity just by a click")
+        self.actionOneClickEntityPlacement.setObjectName("actionOneClickEntityPlacement")
+        self.actionOneClickEntityPlacement.setCheckable(True)
+
+#####################################
+#####################################
+        self.actionSceneExplorer = self.createAction("&Scene Exlporer",  self.toggleModuleExplorer,  "Alt+E",  "view_tree.png",  "Module Explorer",  False)
+        self.actionSceneExplorer.setObjectName("actionSceneExplorer")
+        
+        self.actionModuleDirView = self.createAction("&Directory Explorer",  self.toggleModuleDirView,  "Alt+D",  "view_tree.png",  "Module Directory Explorer",  False)
+        self.actionModuleDirView.setObjectName("actionDirectoryExplorer")
+        
+        self.actionPreferences = self.createAction("&Preferences",  self.togglePreferencesWindow,  None,  "configure.png",  "Lockenwickler Preferences",  False)
+        self.actionPreferences.setObjectName("actionPreferences")
+
+        self.actionProperty_Window = self.createAction("Pr&operty Window",  self.togglePropertyWindow,  "Alt+P",  "unsortedlist1.png",  "Property Window")
+        self.actionProperty_Window.setObjectName("actionProperty_Window")
+
+        self.actionObject_Selection = self.createAction("&Model Preview Window",  self.toggleModelPreviewWindow,  "Alt+O",  "tux.png",  "Model Preview")
+        self.actionObject_Selection.setObjectName("actionObject_Selection")
+        
+        self.actionMaterial_Selection = self.createAction("Material &Preview Window",  self.toggleMaterialPreviewWindow,  "Alt+M",  "colors.png",  "Material Preview")
+        self.actionMaterial_Selection.setObjectName("actionMaterial_Selection")
+
+        self.actionGameObjectClass_Selection = self.createAction("&Game Object Class Preview Window",  self.toggleGameObjectViewWindow,  "Ctrl+G",  "multirow.png",  "GameObjectClass Preview")
+        self.actionGameObjectClass_Selection.setObjectName("actionObject_Selection")
+
+        self.actionConsole_Window = self.createAction("&Console Window",  self.toggleConsoleWindow,  "Alt+C",  "console.png",  "Console Window")
+        self.actionConsole_Window.setObjectName("actionConsole_Window")
+        
+        self.actionTerrainTools_Window = self.createAction("&Terrain Tools",  self.toggleTerrainToolsWindow,  "Alt+T",  "terrain_small.png",  "Console Window")
+        self.actionTerrainTools_Window.setObjectName("actionTerrainTools_Window")
+        
+        self.actionToggleViewportGrid = self.createAction("&Toggle Grid",  self.toggleViewportGrid,  "Alt+G",  "console.png",  "Toggle Viewport Grid")
+        self.actionToggleViewportGrid.setObjectName("actionToggleViewportGrid")
+
+#####################################
+#####################################
+
+
+        self.menuFile.addAction(self.actionNeu)
+        self.menuFile.addAction(self.actionOpen)
+        self.menuFile.addAction(self.actionSave)
+        self.menuFile.addAction(self.actionRunModule)
+        self.menuFile.addAction(self.actionClose)
+
+        self.menuEdit.addAction(self.actionSelect)
+        self.menuEdit.addAction(self.actionMove)
+        self.menuEdit.addAction(self.actionRotate)
+        self.menuEdit.addAction(self.actionScale)
+        self.menuEdit.addSeparator()
+        self.menuEdit.addAction(self.actionDelete)
+        self.menuEdit.addAction(self.actionCopy)
+        self.menuEdit.addAction(self.actionCut)
+        self.menuEdit.addAction(self.actionPaste)
+        self.menuEdit.addSeparator()
+        self.menuEdit.addAction(self.actionOneClickEntityPlacement)
+        
+
+        self.menuView.addAction(self.actionSceneExplorer)
+        self.menuView.addAction(self.actionModuleDirView)
+        self.menuView.addAction(self.actionPreferences)
+        self.menuView.addAction(self.actionProperty_Window)
+        self.menuView.addAction(self.actionObject_Selection)
+        self.menuView.addAction(self.actionMaterial_Selection)
+        self.menuView.addAction(self.actionGameObjectClass_Selection)
+        self.menuView.addAction(self.actionConsole_Window)
+        self.menuView.addAction(self.actionTerrainTools_Window)
+        self.menuView.addAction(self.actionToggleViewportGrid)
+        
+        self.menubar.addAction(self.menuFile.menuAction())
+        self.menubar.addAction(self.menuEdit.menuAction())
+        self.menubar.addAction(self.menuView.menuAction())
+
+        self.retranslateUi()
+        QtCore.QMetaObject.connectSlotsByName(self)
+
+    def retranslateUi(self):
+        self.setWindowTitle(QtGui.QApplication.translate("MainWindow", "MainWindow", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuFile.setTitle(QtGui.QApplication.translate("MainWindow", "File", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuEdit.setTitle(QtGui.QApplication.translate("MainWindow", "Edit", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuView.setTitle(QtGui.QApplication.translate("MainWindow", "View", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionNeu.setText(QtGui.QApplication.translate("MainWindow", "New Module", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionMove.setText(QtGui.QApplication.translate("MainWindow", "Move", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionRotate.setText(QtGui.QApplication.translate("MainWindow", "Rotate", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionSceneExplorer.setText(QtGui.QApplication.translate("MainWindow", "Module Explorer", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionPreferences.setText(QtGui.QApplication.translate("MainWindow", "Preferences", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionProperty_Window.setText(QtGui.QApplication.translate("MainWindow", "Property Window", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionObject_Selection.setText(QtGui.QApplication.translate("MainWindow", "Object Selection", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionClose.setText(QtGui.QApplication.translate("MainWindow", "Quit", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionConsole_Window.setText(QtGui.QApplication.translate("MainWindow", "Console Window", None, QtGui.QApplication.UnicodeUTF8))
+
+    def setupOgre(self, pluginCfgPath="./Plugins.cfg", ogreCfgPath="./ogre.cfg", logPath="./ogre.log"):
+        if platform.system() == "Windows":
+            pluginCfgPath="./Plugins-windows.cfg"
+        else:
+            pluginCfgPath="./Plugins-linux.cfg"
+
+        root = og.Root(pluginCfgPath, ogreCfgPath, logPath)
+        self.ogreRoot = root
+
+        if  not self.ogreRoot.restoreConfig() and not self.ogreRoot.showConfigDialog():
+            sys.exit('Quit from Config Dialog')
+
+        root.initialise(False)
+
+        self.pivotRenderQueueListener = PivotRenderQueueListener()
+        self.OgreMainWinSceneMgr = self.ogreRoot.createSceneManager(og.ST_GENERIC, "OgreMainWinSceneMgr")
+        self.OgreMainWinSceneMgr.ambientLight = og.ColourValue(4, 4, 4)
+        self.OgreMainWinSceneMgr.addRenderQueueListener(self.pivotRenderQueueListener)
+        
+        self.moduleName = ""
+        self.myTerrainManager = MyTerrainManager(self.OgreMainWinSceneMgr)
+        self.moduleManager = ModuleManager(self.ogreRoot,  self.OgreMainWinSceneMgr)
+        self.moduleManager.myTerrainManager = self.myTerrainManager
+        self.gocManager = self.moduleManager.gocManager
+        
+        self.ogreMainWindow = OgreMainWindow.OgreMainWindow(self.moduleManager,  root,  self.OgreMainWinSceneMgr,  self)
+        self.gridlayout.addWidget(self.ogreMainWindow,0,0,1,1)
+        self.hboxlayout.addLayout(self.gridlayout)
+        self.setCentralWidget(self.centralwidget)
+        
+        self.myTerrainManager.ogreMainWindow = self.ogreMainWindow
+        
+        oglog = og.LogManager.getSingleton().getDefaultLog()
+        oglog.addListener(self.consoleWindow.lockenLog)
+
+    def finishEditorSetup(self):
+        if not self.editorSetupFinished:
+            og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
+            og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
+
+            self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)
+            self.moduleManager.pivot.hide()
+            self.editorSetupFinished = True
+        
+    def update(self):
+        self.ogreRoot.renderOneFrame()
+        if platform.system() == "Linux":
+            self.ogreMainWindow.updateRenderWindow()
+            self.modelSelectionDialog.updateRenderWindow()
+            self.materialSelectionDialog.updateRenderWindow()
+
+    def actionOpenSlot(self):
+        self.finishEditorSetup()
+        self.moduleManager.openLoadModuleDialog()
+
+    def actionNewSlot(self):
+        newModuleWiz = NewModuleWizard(self.moduleManager, self)
+        newModuleWiz.exec_()
+        return
+        
+    def actionSaveSlot(self):
+        self.moduleManager.save()
+        
+    def actionRunModuleSlot(self):
+        self.moduleManager.save()
+        if platform.system() == "Windows":
+            workingDir = self.prefDialog.moduleCfgPath.replace("/modules/modules.cfg", "")
+            executable = os.path.join(workingDir, "Rastullah.exe")
+            executable = executable.replace("/",  "\\")
+            if os.path.isfile(executable):
+                subprocess.Popen([executable, "--module", self.moduleManager.mainModule.name], 0, None, None, None, None, None, False, False, workingDir)
+
+        
+    def actionQuitSlot(self):
+        self.close()
+
+    def actionDeleteSlot(self):
+        self.moduleManager.deleteObjects()
+
+    def actionCopySlot(self):
+        self.moduleManager.copyObjects()
+
+    def actionCutSlot(self):
+        self.moduleManager.cutObjects()
+
+    def actionPasteSlot(self):
+        self.moduleManager.pasteObjects(self.ogreMainWindow.getCameraToViewportRay())
+
+    def actionSelectSlot(self):
+        self.moduleManager.pivot.hide()
+
+    def actionMoveSlot(self):
+        self.moduleManager.pivot.setMoveMode()
+
+    def actionRotateSlot(self):
+        self.moduleManager.pivot.setRotateMode()
+
+    def actionScaleSlot(self):
+        self.moduleManager.pivot.setScaleMode()
+
+    def actionOneClickEntityPlacementSlot(self):
+        self.moduleManager.setOneClickEntityPlacement(self.actionOneClickEntityPlacement.isChecked())
+
+    def togglePreferencesWindow(self):
+        if self.prefDialog.isHidden():
+            self.prefDialog.show()
+        else:
+            self.prefDialog.hide()
+
+    def toggleModelPreviewWindow(self):
+        if self.modelSelectionDock.isHidden():
+            self.modelSelectionDock.show()
+        else:
+            self.modelSelectionDock.hide()
+    
+    def toggleMaterialPreviewWindow(self):
+        if self.materialSelectionDock.isHidden():
+            self.materialSelectionDock.show()
+        else:
+            self.materialSelectionDock.hide()
+
+    def toggleGameObjectViewWindow(self):
+        if self.gameObjectClassViewDock.isHidden():
+            self.gameObjectClassViewDock.show()
+        else:
+            self.gameObjectClassViewDock.hide()
+
+    def toggleModuleExplorer(self):
+        if self.moduleExplorerDock.isHidden():
+            self.moduleExplorerDock.show()
+        else:
+            self.moduleExplorerDock.hide()
+            
+    def toggleModuleDirView(self):
+        if self.moduleDirectoryViewDock.isHidden():
+            self.moduleDirectoryViewDock.show()
+        else:
+            self.moduleDirectoryViewDock.hide()
+
+    def togglePropertyWindow(self):
+        if self.propertyDock.isHidden():
+            self.propertyDock.show()
+        else:
+            self.propertyDock.hide()
+
+    def toggleConsoleWindow(self):
+        if self.consoleDock.isHidden():
+            self.consoleDock.show()
+        else:
+            self.consoleDock.hide()
+            
+    def toggleTerrainToolsWindow(self):
+        if self.myTerrainManagerDock.isHidden():
+            self.myTerrainManagerDock.show()
+        else:
+            self.myTerrainManagerDock.hide()
+
+    def toggleViewportGrid(self):
+        self.ogreMainWindow.toggleViewportGrid()
+
+    def createDockWindows(self):
+        self.modelSelectionDock = QtGui.QDockWidget(self.tr("Models"), self)
+        self.modelSelectionDock.setObjectName("ModelSelectionDockWindow")
+        self.modelSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.modelSelectionDock.setWidget(self.modelSelectionDialog)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.modelSelectionDock)
+        
+        self.materialSelectionDock = QtGui.QDockWidget(self.tr("Materials"), self)
+        self.materialSelectionDock.setObjectName("MaterialSelectionDockWindow")
+        self.materialSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.materialSelectionDock.setWidget(self.materialSelectionDialog)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.materialSelectionDock)
+        self.tabifyDockWidget(self.modelSelectionDock, self.materialSelectionDock)
+        
+        self.gameObjectClassViewDock = QtGui.QDockWidget(self.tr("GameObjectClasses"), self)
+        self.gameObjectClassViewDock.setObjectName("GameObjectClassView")
+        self.gameObjectClassViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.gameObjectClassViewDock.setWidget(self.gameObjectClassView)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.gameObjectClassViewDock)        
+        self.tabifyDockWidget(self.modelSelectionDock, self.gameObjectClassViewDock)
+        
+        self.propertyDock = QtGui.QDockWidget(self.tr("Properties"), self)
+        self.propertyDock.setObjectName("PropertyDockWindow")
+        self.propertyDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.propertyDock.setWidget(self.objectPropertyWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.propertyDock)
+
+        self.moduleExplorerDock = QtGui.QDockWidget(self.tr("Module Explorer"), self)
+        self.moduleExplorerDock.setObjectName("ModuleExplorerDockWindow")
+        self.moduleExplorerDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.moduleExplorerDock.setWidget(self.moduleExplorerWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleExplorerDock)
+        self.tabifyDockWidget(self.moduleExplorerDock, self.propertyDock)
+        
+        self.moduleDirectoryViewDock = QtGui.QDockWidget(self.tr("Module Directory View"), self)
+        self.moduleDirectoryViewDock.setObjectName("ModuleDirectoryViewDockWindow")
+        self.moduleDirectoryViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea | QtCore.Qt.TopDockWidgetArea | QtCore.Qt.BottomDockWidgetArea)
+        self.moduleDirectoryViewDock.setWidget(self.moduleDirectoryViewWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleDirectoryViewDock)
+        
+        self.myTerrainManagerDock = self.myTerrainManager.getDockWidget(self)
+        
+        self.consoleDock = QtGui.QDockWidget(self.tr("Console"), self)
+        self.consoleDock.setObjectName("ConsoleDockWindow")
+        self.consoleDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea | QtCore.Qt.TopDockWidgetArea)
+        self.consoleDock.setWidget(self.consoleWindow)
+        self.addDockWidget(QtCore.Qt.BottomDockWidgetArea, self.consoleDock)
+
+        self.fileToolBar = self.addToolBar("File Toolbar")
+        self.fileToolBar.setObjectName("FileToolBar")
+        self.fileToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
+        self.fileToolBar.addAction(self.actionNeu)
+        self.fileToolBar.addAction(self.actionOpen)
+        self.fileToolBar.addAction(self.actionSave)
+        self.fileToolBar.addAction(self.actionRunModule)
+        self.fileToolBar.addAction(self.actionClose)
+        self.addToolBar(QtCore.Qt.TopToolBarArea, self.fileToolBar)
+
+        self.moveToolBar = self.addToolBar("Transformation Bar")
+        self.moveToolBar.setObjectName("TransformationBar")
+        self.moveToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
+        self.moveToolBar.addAction(self.actionSelect)
+        self.moveToolBar.addAction(self.actionMove)
+        self.moveToolBar.addAction(self.actionRotate)
+        self.moveToolBar.addAction(self.actionScale)
+        self.addToolBar(QtCore.Qt.TopToolBarArea, self.moveToolBar)
+
+    def keyPressEvent(self,  event):
+        if not event.isAutoRepeat():
+            self.ogreMainWindow.keyPressEvent(event)
+
+    def keyReleaseEvent(self,  event):
+        if not event.isAutoRepeat():
+            self.ogreMainWindow.keyReleaseEvent(event)
+        pass
+
+    def onContextMenuCallback(self, actions, menus):
+        menu = QMenu("My Menu!!")
+        menu.addAction(self.actionDelete)
+        menu.addAction(self.actionCopy)
+        menu.addAction(self.actionCut)
+        menu.addAction(self.actionPaste)
+        menu.addSeparator()
+        
+        for m in menus:
+            menu.addMenu(m)
+        for a in actions:
+            menu.addAction(a)
+
+        menu.exec_(QCursor.pos())
+
+    def connectActionButtons(self):
+        pass
+
+    def saveOnClose(self):
+#        reply = QtGui.QMessageBox.question(self,  "Rastullahs Lockenwickler - Unsaved Chages",  "Save unsaved changes?",  QtGui.QMessageBox.Yes|QtGui.QMessageBox.No|QtGui.QMessageBox.Cancel)
+#        if reply == QtGui.QMessageBox.Cancel:
+#            return False
+#        if reply == QtGui.QMessageBox.Yes:
+#            print""
+#            #TODO: implement save here
+        return True
+
+    def closeEvent(self,  event):
+        if self.saveOnClose():
+            settings = QtCore.QSettings()
+            settings.setValue("Preferences/moduleCfgPath", QtCore.QVariant(self.prefDialog.lineEdit.text()))
+            settings.setValue("MainWindow/Geometry",  QtCore.QVariant(self.saveGeometry()))
+            settings.setValue("MainWIndow/DockWindows",  QtCore.QVariant(self.saveState()))
+            settings.setValue("Preferences/externalEditorPath",  QtCore.QVariant(self.prefDialog.externalTextAppLineEdit.text()))
+            #self.ogreRoot.shutdown()
+        else:
+            event.ignore()
+
+if __name__ == "__main__":
+#    # Import Psyco if available
+#    try:
+#        import psyco
+#        psyco.full(0.02)
+#        #psyco.log()
+#        #psyco.profile()
+#    except ImportError:
+#        pass
+    
+    app = QtGui.QApplication(sys.argv)
+    app.setOrganizationName("Team Pantheon")
+    app.setOrganizationDomain("rastullahs-lockenpracht.de/team")
+    app.setApplicationName("Lockenwickler")
+
+    form = Lockenwickler()
+    form.show()
+
+    app.exec_()
+    
+    sys.exit(0)
+



From melven at mail.berlios.de  Sun May 17 20:19:37 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Sun, 17 May 2009 20:19:37 +0200
Subject: [Dsa-hl-svn] r4925 - rl/trunk/engine/ui/src
Message-ID: <200905171819.n4HIJbX6009483@sheep.berlios.de>

Author: melven
Date: 2009-05-17 20:19:36 +0200 (Sun, 17 May 2009)
New Revision: 4925

Modified:
   rl/trunk/engine/ui/src/ItemDragContainer.cpp
Log:
fixed bug (remove WindowFadeJob when window is destroyed)


Modified: rl/trunk/engine/ui/src/ItemDragContainer.cpp
===================================================================
--- rl/trunk/engine/ui/src/ItemDragContainer.cpp	2009-05-17 14:49:49 UTC (rev 4924)
+++ rl/trunk/engine/ui/src/ItemDragContainer.cpp	2009-05-17 18:19:36 UTC (rev 4925)
@@ -55,6 +55,8 @@
             if(mDestroyListener)
                 mDestroyListener->notifyItemDragContainerDestroyed(this);
             setDestroyListener(NULL);
+
+            stopFadeOut();
         }
 
 	void ItemDragContainer::destroy()
@@ -62,21 +64,25 @@
             if(mDestroyListener)
                 mDestroyListener->notifyItemDragContainerDestroyed(this);
             setDestroyListener(NULL);
+            stopFadeOut();
 
             CEGUI::DragContainer::destroy();
-/*        
-        stopFadeOut();
 
-        hide();
-		if (getParent())
-		{
-			getParent()->removeChildWindow(this);
-		}
-		removeAllEvents();
-		mContentWindow->removeAllEvents();
-		removeChildWindow(mContentWindow);
-		CEGUI::WindowManager::getSingleton().destroyWindow(mContentWindow);
-        CEGUI::WindowManager::getSingleton().destroyWindow(this);
+
+/*
+            hide();
+		
+            if (getParent())
+            {
+                getParent()->removeChildWindow(this);
+            }
+
+            removeAllEvents();
+            if( mContentWindow )
+            mContentWindow->removeAllEvents();
+            removeChildWindow(mContentWindow);
+            CEGUI::WindowManager::getSingleton().destroyWindow(mContentWindow);
+            CEGUI::WindowManager::getSingleton().destroyWindow(this);
 */
 	}
 /*



From melven at mail.berlios.de  Mon May 18 18:42:08 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Mon, 18 May 2009 18:42:08 +0200
Subject: [Dsa-hl-svn] r4926 - in dependencies/OgreNewt:
	demos/Demo01_TheBasics demos/Demo02_Joints
	demos/Demo03_CollisionCallbacks demos/Demo04_Raycasting
	demos/Demo06_SimpleBuoyancy demos/Demo07_CustomJoints
	demos/Demo08_RagdollExample inc src
Message-ID: <200905181642.n4IGg8i9008734@sheep.berlios.de>

Author: melven
Date: 2009-05-18 18:41:56 +0200 (Mon, 18 May 2009)
New Revision: 4926

Modified:
   dependencies/OgreNewt/demos/Demo01_TheBasics/OgreNewtonApplication.cpp
   dependencies/OgreNewt/demos/Demo01_TheBasics/OgreNewtonFrameListener.cpp
   dependencies/OgreNewt/demos/Demo02_Joints/OgreNewtonApplication.cpp
   dependencies/OgreNewt/demos/Demo02_Joints/OgreNewtonFrameListener.cpp
   dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/ConveyorBelt.cpp
   dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/ConveyorMatCallback.cpp
   dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/OgreNewtonApplication.cpp
   dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/OgreNewtonFrameListener.cpp
   dependencies/OgreNewt/demos/Demo04_Raycasting/OgreNewtonApplication.cpp
   dependencies/OgreNewt/demos/Demo04_Raycasting/OgreNewtonFrameListener.cpp
   dependencies/OgreNewt/demos/Demo06_SimpleBuoyancy/OgreNewtonApplication.cpp
   dependencies/OgreNewt/demos/Demo06_SimpleBuoyancy/OgreNewtonFrameListener.cpp
   dependencies/OgreNewt/demos/Demo07_CustomJoints/OgreNewtonApplication.cpp
   dependencies/OgreNewt/demos/Demo07_CustomJoints/OgreNewtonFrameListener.cpp
   dependencies/OgreNewt/demos/Demo08_RagdollExample/OgreNewtonApplication.cpp
   dependencies/OgreNewt/demos/Demo08_RagdollExample/OgreNewtonFrameListener.cpp
   dependencies/OgreNewt/demos/Demo08_RagdollExample/Ragdoll.cpp
   dependencies/OgreNewt/inc/OgreNewt.h
   dependencies/OgreNewt/inc/OgreNewt_Body.h
   dependencies/OgreNewt/inc/OgreNewt_Collision.h
   dependencies/OgreNewt/inc/OgreNewt_CollisionPrimitives.h
   dependencies/OgreNewt/inc/OgreNewt_Debugger.h
   dependencies/OgreNewt/inc/OgreNewt_Joint.h
   dependencies/OgreNewt/inc/OgreNewt_MaterialID.h
   dependencies/OgreNewt/inc/OgreNewt_Prerequisites.h
   dependencies/OgreNewt/inc/OgreNewt_Tools.h
   dependencies/OgreNewt/src/OgreNewt_Body.cpp
   dependencies/OgreNewt/src/OgreNewt_Collision.cpp
   dependencies/OgreNewt/src/OgreNewt_PlayerController.cpp
Log:
-use sharedptrs for collision as default
-use Ogre::Any for userdata values as default
-set position and orientation of a node attached to a body correctly, when the the node derives position/orientation from its parent
-make OgreNewt export the (internally used) MovableText-class
-updated the demos


Modified: dependencies/OgreNewt/demos/Demo01_TheBasics/OgreNewtonApplication.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo01_TheBasics/OgreNewtonApplication.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo01_TheBasics/OgreNewtonApplication.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -60,7 +60,7 @@
 	// now we make a new rigid body based on this collision shape.
 	OgreNewt::Body* bod = new OgreNewt::Body( m_World, col );
 
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	// we`re done with the collision shape, we can delete it now.
 	delete col;
 #endif

Modified: dependencies/OgreNewt/demos/Demo01_TheBasics/OgreNewtonFrameListener.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo01_TheBasics/OgreNewtonFrameListener.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo01_TheBasics/OgreNewtonFrameListener.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -87,7 +87,7 @@
 
 			Ogre::Vector3 inertia, offset;
             col->calculateInertialMatrix(inertia, offset);
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 			//no longer need the collision shape object
 			delete col;
 #endif

Modified: dependencies/OgreNewt/demos/Demo02_Joints/OgreNewtonApplication.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo02_Joints/OgreNewtonApplication.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo02_Joints/OgreNewtonApplication.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -75,7 +75,7 @@
 	OgreNewt::CollisionPrimitives::TreeCollisionSceneParser* stat_col = new OgreNewt::CollisionPrimitives::TreeCollisionSceneParser( m_World );
 	stat_col->parseScene( floornode, true );
 	OgreNewt::Body* bod = new OgreNewt::Body( m_World, OgreNewt::CollisionPtr(stat_col) );
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	delete stat_col;
 #endif
 	
@@ -173,7 +173,7 @@
 	Ogre::Vector3 inertia, offset;
     col->calculateInertialMatrix(inertia, offset);
 
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	delete col;
 #endif
 				

Modified: dependencies/OgreNewt/demos/Demo02_Joints/OgreNewtonFrameListener.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo02_Joints/OgreNewtonFrameListener.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo02_Joints/OgreNewtonFrameListener.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -77,7 +77,7 @@
 			OgreNewt::ConvexCollisionPtr col = OgreNewt::ConvexCollisionPtr(new OgreNewt::CollisionPrimitives::Ellipsoid( m_World, Ogre::Vector3(1,1,1) ));
 			OgreNewt::Body* body = new OgreNewt::Body( m_World, col );
 
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
             delete col;
 #endif
 

Modified: dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/ConveyorBelt.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/ConveyorBelt.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/ConveyorBelt.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -16,7 +16,7 @@
 {
 	// build a conveyor belt object.  first create the basic visual object.
 	mSceneMgr = mgr;
-	mDir = dir;
+	mDir = dir.normalisedCopy();
 	mSpeed = speed;
 
 	mNode = mgr->getRootSceneNode()->createChildSceneNode();
@@ -29,7 +29,7 @@
 	// create the collision object for the conveyor belt.
 	OgreNewt::CollisionPtr col = OgreNewt::CollisionPtr(new OgreNewt::CollisionPrimitives::Box( world, size ));
 	mBody = new OgreNewt::Body( world, col, conveyorType );
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	delete col;
 #endif
 
@@ -37,7 +37,7 @@
 	mBody->attachNode( mNode );
 	mBody->setMaterialGroupID( conveyorMat );
 
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
 	mBody->setUserData( Ogre::Any(this) );
 #else
 	mBody->setUserData( this );

Modified: dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/ConveyorMatCallback.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/ConveyorMatCallback.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/ConveyorMatCallback.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -29,7 +29,7 @@
 
 	if (body0->getType() == mConveyorID)
 	{
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
 		belt = Ogre::any_cast<ConveyorBelt*>(body0->getUserData());
 #else
 		belt = (ConveyorBelt*)body0->getUserData();
@@ -39,7 +39,7 @@
 
 	if (body1->getType() == mConveyorID)
 	{
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
 		belt = Ogre::any_cast<ConveyorBelt*>(body1->getUserData());
 #else
 		belt = (ConveyorBelt*)body1->getUserData();
@@ -55,8 +55,15 @@
         for( OgreNewt::Contact contact = contactJoint.getFirstContact(); contact; contact = contact.getNext() )
         {
 	        contact.rotateTangentDirections( thedir );
-    	    Ogre::Vector3 result_accel = (thedir * belt->getSpeed()) - object->getVelocity();
-	        contact.setTangentAcceleration( result_accel.length(), 0 );
+            Ogre::Vector3 contactPos, contactNorm;
+            contact.getPositionAndNormal(contactPos, contactNorm);
+            Ogre::Vector3 objectPos;
+            Ogre::Quaternion objectOri;
+            object->getPositionOrientation(objectPos, objectOri);
+            Ogre::Vector3 objectContactPointVel = object->getVelocity() + (contactPos - objectPos)*object->getOmega();
+    	    Ogre::Real result_accel = belt->getSpeed() - thedir.dotProduct(objectContactPointVel);
+            result_accel *= 10; // looks nicer
+	        contact.setTangentAcceleration( result_accel, 0 );
         }
     }
 }

Modified: dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/OgreNewtonApplication.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/OgreNewtonApplication.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/OgreNewtonApplication.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -82,7 +82,7 @@
 	OgreNewt::CollisionPtr col = OgreNewt::CollisionPtr(new OgreNewt::CollisionPrimitives::TreeCollision( m_World, floor, true ));
 	OgreNewt::Body* bod = new OgreNewt::Body( m_World, col );
 	
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
     delete col;
 #endif
 
@@ -113,7 +113,9 @@
 	mMatPairDefaultConveyor = new OgreNewt::MaterialPair( m_World, mMatDefault, mMatConveyor );
 	mConveyorCallback = new ConveyorMatCallback( BT_CONVEYOR );
 	mMatPairDefaultConveyor->setContactCallback( mConveyorCallback );
-	mMatPairDefaultConveyor->setDefaultFriction( 1.5, 1.4 );
+	mMatPairDefaultConveyor->setDefaultSoftness( 0.8 );
+    mMatPairDefaultConveyor->setDefaultElasticity( 0.05 );
+    mMatPairDefaultConveyor->setDefaultFriction( 0.9, 0.8 );
 
 }
 

Modified: dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/OgreNewtonFrameListener.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/OgreNewtonFrameListener.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo03_CollisionCallbacks/OgreNewtonFrameListener.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -74,7 +74,7 @@
         Ogre::Vector3 inertia, offset;
         col->calculateInertialMatrix(inertia, offset);
 
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 		delete col;
 #endif
 

Modified: dependencies/OgreNewt/demos/Demo04_Raycasting/OgreNewtonApplication.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo04_Raycasting/OgreNewtonApplication.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo04_Raycasting/OgreNewtonApplication.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -77,7 +77,7 @@
 	//Ogre::Vector3 siz(100.0, 10.0, 100.0);
 	OgreNewt::CollisionPtr col = OgreNewt::CollisionPtr(new OgreNewt::CollisionPrimitives::TreeCollision( m_World, floor, true ));
 	OgreNewt::Body* bod = new OgreNewt::Body( m_World, col );
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	delete col;
 #endif
 	
@@ -186,7 +186,7 @@
 	Ogre::Vector3 inertia, offset;
     col->calculateInertialMatrix(inertia, offset);
 
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	delete col;
 #endif
 				

Modified: dependencies/OgreNewt/demos/Demo04_Raycasting/OgreNewtonFrameListener.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo04_Raycasting/OgreNewtonFrameListener.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo04_Raycasting/OgreNewtonFrameListener.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -115,7 +115,7 @@
 
 				// now we need to save this point to apply the spring force, I'm using the userData of the bodies in this example.
                 // (where is it used? probably not needed here...)
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
                 info.mBody->setUserData( Ogre::Any(this) );
 #else
 				info.mBody->setUserData( this );

Modified: dependencies/OgreNewt/demos/Demo06_SimpleBuoyancy/OgreNewtonApplication.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo06_SimpleBuoyancy/OgreNewtonApplication.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo06_SimpleBuoyancy/OgreNewtonApplication.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -77,7 +77,7 @@
 	//Ogre::Vector3 siz(100.0, 10.0, 100.0);
 	OgreNewt::CollisionPtr col = OgreNewt::CollisionPtr(new OgreNewt::CollisionPrimitives::TreeCollision( m_World, floor, true ));
 	OgreNewt::Body* bod = new OgreNewt::Body( m_World, col );
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	delete col;
 #endif
 	
@@ -202,7 +202,7 @@
 	// calculate the inertia based on box formula and mass
 	Ogre::Vector3 inertia, offset;
     col->calculateInertialMatrix(inertia, offset);
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	delete col;
 #endif
 				

Modified: dependencies/OgreNewt/demos/Demo06_SimpleBuoyancy/OgreNewtonFrameListener.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo06_SimpleBuoyancy/OgreNewtonFrameListener.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo06_SimpleBuoyancy/OgreNewtonFrameListener.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -115,7 +115,7 @@
 
 				// now we need to save this point to apply the spring force, I'm using the userData of the bodies in this example.
                 // (where is it used? probably not needed here...)
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
                 info.mBody->setUserData( Ogre::Any(this) );
 #else
 				info.mBody->setUserData( this );

Modified: dependencies/OgreNewt/demos/Demo07_CustomJoints/OgreNewtonApplication.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo07_CustomJoints/OgreNewtonApplication.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo07_CustomJoints/OgreNewtonApplication.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -76,7 +76,7 @@
 	OgreNewt::CollisionPrimitives::TreeCollisionSceneParser* stat_col = new OgreNewt::CollisionPrimitives::TreeCollisionSceneParser( m_World );
 	stat_col->parseScene( floornode, true );
 	OgreNewt::Body* bod = new OgreNewt::Body( m_World, OgreNewt::CollisionPtr(stat_col) );
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	delete stat_col;
 #endif
 	
@@ -172,7 +172,7 @@
 	// calculate the inertia based on box formula and mass
 	Ogre::Vector3 inertia, offset;
     col->calculateInertialMatrix(inertia, offset);
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	delete col;
 #endif
 				

Modified: dependencies/OgreNewt/demos/Demo07_CustomJoints/OgreNewtonFrameListener.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo07_CustomJoints/OgreNewtonFrameListener.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo07_CustomJoints/OgreNewtonFrameListener.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -87,7 +87,7 @@
 
 			timer = 0.2;
 
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
             delete col;
 #endif
 		}

Modified: dependencies/OgreNewt/demos/Demo08_RagdollExample/OgreNewtonApplication.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo08_RagdollExample/OgreNewtonApplication.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo08_RagdollExample/OgreNewtonApplication.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -51,7 +51,7 @@
 	//Ogre::Vector3 siz(100.0, 10.0, 100.0);
 	OgreNewt::CollisionPtr col = OgreNewt::CollisionPtr(new OgreNewt::CollisionPrimitives::TreeCollision( m_World, floor, true ));
 	OgreNewt::Body* bod = new OgreNewt::Body( m_World, col );
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	delete col;
 #endif
 	
@@ -110,7 +110,7 @@
 	Ogre::Vector3 inertia, offset;
     col->calculateInertialMatrix(inertia, offset);
 
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
 	delete col;
 #endif
 				

Modified: dependencies/OgreNewt/demos/Demo08_RagdollExample/OgreNewtonFrameListener.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo08_RagdollExample/OgreNewtonFrameListener.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo08_RagdollExample/OgreNewtonFrameListener.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -101,7 +101,7 @@
 
 			timer = 0.2;
 
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
             delete col;
 #endif
 		}

Modified: dependencies/OgreNewt/demos/Demo08_RagdollExample/Ragdoll.cpp
===================================================================
--- dependencies/OgreNewt/demos/Demo08_RagdollExample/Ragdoll.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/demos/Demo08_RagdollExample/Ragdoll.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -8,7 +8,7 @@
 	mParent = parent;
 	mOgreBone = ogreBone;
 
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifndef OGRENEWT_NO_COLLISION_SHAREDPTR
 	OgreNewt::ConvexCollisionPtr col;
 #else
 	OgreNewt::ConvexCollisionPtr col = NULL;
@@ -65,7 +65,7 @@
 	}
 
 	mBody = new OgreNewt::Body( world, col );
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
 	mBody->setUserData( Ogre::Any(this) );
 #else
     mBody->setUserData( this );
@@ -82,7 +82,7 @@
 	mBody->setCustomTransformCallback( RagDoll::_placementCallback );
 
 
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
     delete col;
 #endif
 }
@@ -97,7 +97,7 @@
 
 void RagDoll::RagBone::_hingeCallback( OgreNewt::BasicJoints::Hinge* me )
 {
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
 	RagDoll::RagBone* bone = Ogre::any_cast<RagDoll::RagBone*>(me->getUserData());
 #else
 	RagDoll::RagBone* bone = (RagDoll::RagBone*)me->getUserData();
@@ -405,7 +405,7 @@
 	case RagDoll::JT_HINGE:
 		joint = new OgreNewt::BasicJoints::Hinge( child->getBody()->getWorld(), child->getBody(), parent->getBody(), pos, pin );
 		((OgreNewt::BasicJoints::Hinge*)joint)->setCallback( RagBone::_hingeCallback );
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
 	joint->setUserData( Ogre::Any(child) );
 #else
 	joint->setUserData( child );
@@ -419,7 +419,7 @@
 
 void RagDoll::_placementCallback( OgreNewt::Body* me, const Ogre::Quaternion& orient, const Ogre::Vector3& pos, int threadindex )
 {
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
 	RagDoll::RagBone* bone = Ogre::any_cast<RagDoll::RagBone*>(me->getUserData());
 #else
 	RagDoll::RagBone* bone = (RagDoll::RagBone*)me->getUserData();

Modified: dependencies/OgreNewt/inc/OgreNewt.h
===================================================================
--- dependencies/OgreNewt/inc/OgreNewt.h	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/inc/OgreNewt.h	2009-05-18 16:41:56 UTC (rev 4926)
@@ -70,8 +70,8 @@
 
     New in this version
         - this version uses cmake > 2.6.2!
-        - shared pointers for collisions, in order to use shared pointers define OGRENEWT_COLLISION_USE_SHAREDPTR
-        - support for Ogre::Any instead of void* as userdata, in order to use it, define OGRENEWT_USE_OGRE_ANY
+        - shared pointers for collisions, if you don't want to use shared pointers define OGRENEWT_NO_COLLISION_SHAREDPTR
+        - uses Ogre::Any instead of void* as userdata, if you want to use void* define OGRENEWT_NO_OGRE_ANY
         - several interface-breaking changes:
             - the ContactCallback passes a ContactJoint as argument that can be used to iterate through all contacts
               (the callback is not called for each contact any more, but for each pair of colliding bodies!)

Modified: dependencies/OgreNewt/inc/OgreNewt_Body.h
===================================================================
--- dependencies/OgreNewt/inc/OgreNewt_Body.h	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/inc/OgreNewt_Body.h	2009-05-18 16:41:56 UTC (rev 4926)
@@ -87,14 +87,14 @@
         you can use this to store a pointer to a parent class, etc.  then inside one of the many callbacks, you can get the pointer
         using this "userData" system.
     */
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
     void setUserData( const Ogre::Any& data ) { m_userdata = data; }
 #else
     void setUserData( void* data ) { m_userdata = data; }
 #endif
 
     //! retrieve pointer to previously set user data.
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
     const Ogre::Any& getUserData() const { return m_userdata; }
 #else
     void* getUserData() const { return m_userdata; }
@@ -416,7 +416,7 @@
     const MaterialID*               m_matid;
     const World*                    m_world;
     
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
     Ogre::Any                       m_userdata;
 #else
     void*                           m_userdata;

Modified: dependencies/OgreNewt/inc/OgreNewt_Collision.h
===================================================================
--- dependencies/OgreNewt/inc/OgreNewt_Collision.h	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/inc/OgreNewt_Collision.h	2009-05-18 16:41:56 UTC (rev 4926)
@@ -133,12 +133,12 @@
 };
 
 
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
+typedef Collision* CollisionPtr;
+typedef ConvexCollision* ConvexCollisionPtr;
+#else
 typedef boost::shared_ptr<Collision> CollisionPtr;
 typedef boost::shared_ptr<ConvexCollision> ConvexCollisionPtr;
-#else
-typedef Collision* CollisionPtr;
-typedef ConvexCollision* ConvexCollisionPtr;
 #endif
 
 

Modified: dependencies/OgreNewt/inc/OgreNewt_CollisionPrimitives.h
===================================================================
--- dependencies/OgreNewt/inc/OgreNewt_CollisionPrimitives.h	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/inc/OgreNewt_CollisionPrimitives.h	2009-05-18 16:41:56 UTC (rev 4926)
@@ -264,7 +264,7 @@
             /*!
                 Create a tree collision object.
                 \param world pointer to the OgreNewt::World
-                \param node pointer to an Ogre::SceneNode with a single entity attached.
+                \param ent pointer to an Ogre::Entitiy, if it is attached to a node, the scale of the parent node is used
                 \param optimize bool whether you want to optimize the collision or not.
             */
             TreeCollision( const World* world, Ogre::Entity* ent, bool optimize, FaceWinding fw = FW_DEFAULT );

Modified: dependencies/OgreNewt/inc/OgreNewt_Debugger.h
===================================================================
--- dependencies/OgreNewt/inc/OgreNewt_Debugger.h	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/inc/OgreNewt_Debugger.h	2009-05-18 16:41:56 UTC (rev 4926)
@@ -114,7 +114,7 @@
         struct BodyDebugData
         {
             BodyDebugData() :
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
                 m_lastcol(NULL),
 #endif
                 m_node(NULL), m_lines(NULL), m_text(NULL), m_updated(false) {}

Modified: dependencies/OgreNewt/inc/OgreNewt_Joint.h
===================================================================
--- dependencies/OgreNewt/inc/OgreNewt_Joint.h	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/inc/OgreNewt_Joint.h	2009-05-18 16:41:56 UTC (rev 4926)
@@ -69,7 +69,7 @@
     /*!
         user data can be used to connect this class to other user classes through the use of this general pointer.
     */
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
     void setUserData( const Ogre::Any& data ) { m_userdata = data; }
 #else
     void setUserData( void* data ) { m_userdata = data; }
@@ -79,7 +79,7 @@
     /*!
         user data can be used to connect this class to other user classes through the use of this general pointer.
     */
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
     const Ogre::Any& getUserData() const { return m_userdata; }
 #else
     void* getUserData() const { return m_userdata; }
@@ -92,7 +92,7 @@
     const OgreNewt::World* m_world;
 
 
-#ifdef OGRENEWT_USE_OGRE_ANY
+#ifndef OGRENEWT_NO_OGRE_ANY
     Ogre::Any                       m_userdata;
 #else
     void*                           m_userdata;

Modified: dependencies/OgreNewt/inc/OgreNewt_MaterialID.h
===================================================================
--- dependencies/OgreNewt/inc/OgreNewt_MaterialID.h	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/inc/OgreNewt_MaterialID.h	2009-05-18 16:41:56 UTC (rev 4926)
@@ -31,11 +31,6 @@
     */
     MaterialID( const World* world );
 
-    /*!
-        Overloaded constructor, sets the internal ID manually.  should not be used by the end-user.
-    */
-    MaterialID( const World* world, int ID );
-
     //! destructor
     ~MaterialID();
 
@@ -44,6 +39,14 @@
 
 protected:
 
+    friend class OgreNewt::World;
+
+    /*!
+        Overloaded constructor, sets the internal ID manually.  should not be used by the end-user.
+    */
+    MaterialID( const World* world, int ID );
+
+private:
     int id;
     const OgreNewt::World* m_world;
 

Modified: dependencies/OgreNewt/inc/OgreNewt_Prerequisites.h
===================================================================
--- dependencies/OgreNewt/inc/OgreNewt_Prerequisites.h	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/inc/OgreNewt_Prerequisites.h	2009-05-18 16:41:56 UTC (rev 4926)
@@ -22,10 +22,7 @@
 #   include <Ogre/OgreRenderable.h>
 #   include <Ogre/OgreNode.h>
 #   include <Ogre/OgreFrameListener.h>
-#   ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
-//#       include <Ogre/OgreSharedPtr.h>
-#   endif
-#   ifdef OGRENEWT_USE_OGRE_ANY
+#   ifndef OGRENEWT_NO_OGRE_ANY
 #       include <Ogre/OgreAny.h>
 #   endif
 #else
@@ -35,10 +32,7 @@
 #include <OgreRenderable.h>
 #include <OgreNode.h>
 #include <OgreFrameListener.h>
-#   ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
-//#       include <OgreSharedPtr.h>
-#   endif
-#   ifdef OGRENEWT_USE_OGRE_ANY
+#   ifndef OGRENEWT_NO_OGRE_ANY
 #       include <OgreAny.h>
 #   endif
 #endif
@@ -46,7 +40,7 @@
 #include <Newton.h>
 #include <boost/function.hpp>
 #include <boost/bind.hpp>
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifndef OGRENEWT_NO_COLLISION_SHAREDPTR
 #   include <boost/shared_ptr.hpp>
 #endif
 
@@ -65,12 +59,12 @@
 #endif
 
 
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
-#warning "the option OGRENEWT_COLLISION_USE_SHAREDPTR is set"
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
+#warning "the option OGRENEWT_NO_COLLISION_SHAREDPTR is set"
 #endif
 
-#ifdef OGRENEWT_USE_OGRE_ANY
-#warning "the option OGRENEWT_USE_OGRE_ANY is set"
+#ifdef OGRENEWT_NO_OGRE_ANY
+#warning "the option OGRENEWT_NO_OGRE_ANY is set"
 #endif
 
 namespace OgreNewt

Modified: dependencies/OgreNewt/inc/OgreNewt_Tools.h
===================================================================
--- dependencies/OgreNewt/inc/OgreNewt_Tools.h	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/inc/OgreNewt_Tools.h	2009-05-18 16:41:56 UTC (rev 4926)
@@ -187,9 +187,7 @@
             */
 
 
-            using namespace Ogre;
-
-            class MovableText : public MovableObject, public Renderable
+            class _OgreNewtExport MovableText : public Ogre::MovableObject, public Ogre::Renderable
             {
                 /******************************** MovableText data ****************************/
             public:
@@ -197,64 +195,64 @@
                 enum VerticalAlignment      {V_BELOW, V_ABOVE, V_CENTER};
             
             protected:
-                String          mFontName;
-                String          mType;
-                String          mName;
-                String          mCaption;
+                Ogre::String          mFontName;
+                Ogre::String          mType;
+                Ogre::String          mName;
+                Ogre::String          mCaption;
                 HorizontalAlignment mHorizontalAlignment;
                 VerticalAlignment   mVerticalAlignment;
             
-                ColourValue     mColor;
-                RenderOperation mRenderOp;
-                AxisAlignedBox  mAABB;
-                LightList       mLList;
+                Ogre::ColourValue     mColor;
+                Ogre::RenderOperation mRenderOp;
+                Ogre::AxisAlignedBox  mAABB;
+                Ogre::LightList       mLList;
             
-                Real            mCharHeight;
-                Real            mSpaceWidth;
+                Ogre::Real            mCharHeight;
+                Ogre::Real            mSpaceWidth;
             
                 bool            mNeedUpdate;
                 bool            mUpdateColors;
                 bool            mOnTop;
             
-                Real            mTimeUntilNextToggle;
-                Real            mRadius;
+                Ogre::Real            mTimeUntilNextToggle;
+                Ogre::Real            mRadius;
             
-                Vector3            mGlobalTranslation;
-                Vector3            mLocalTranslation;
+                Ogre::Vector3            mGlobalTranslation;
+                Ogre::Vector3            mLocalTranslation;
             
-                Camera          *mpCam;
-                RenderWindow    *mpWin;
-                Font            *mpFont;
-                MaterialPtr     mpMaterial;
-                MaterialPtr     mpBackgroundMaterial;
+                Ogre::Camera          *mpCam;
+                Ogre::RenderWindow    *mpWin;
+                Ogre::Font            *mpFont;
+                Ogre::MaterialPtr     mpMaterial;
+                Ogre::MaterialPtr     mpBackgroundMaterial;
             
                 /******************************** public methods ******************************/
             public:
-                MovableText(const String &name, const String &caption, const String &fontName, Real charHeight, const ColourValue &color = ColourValue::White);
+                MovableText(const Ogre::String &name, const Ogre::String &caption, const Ogre::String &fontName, Ogre::Real charHeight, const Ogre::ColourValue &color = Ogre::ColourValue::White);
                 virtual ~MovableText();
             
                 // Set settings
-                void    setFontName(const String &fontName);
-                void    setCaption(const String &caption);
-                void    setColor(const ColourValue &color);
-                void    setCharacterHeight(Real height);
-                void    setSpaceWidth(Real width);
+                void    setFontName(const Ogre::String &fontName);
+                void    setCaption(const Ogre::String &caption);
+                void    setColor(const Ogre::ColourValue &color);
+                void    setCharacterHeight(Ogre::Real height);
+                void    setSpaceWidth(Ogre::Real width);
                 void    setTextAlignment(const HorizontalAlignment& horizontalAlignment, const VerticalAlignment& verticalAlignment);
-                void    setGlobalTranslation( Vector3 trans );
-                void    setLocalTranslation( Vector3 trans );
+                void    setGlobalTranslation( Ogre::Vector3 trans );
+                void    setLocalTranslation( Ogre::Vector3 trans );
                 void    showOnTop(bool show=true);
             
                 // Get settings
-                const   String          &getFontName() const {return mFontName;}
-                const   String          &getCaption() const {return mCaption;}
-                const   ColourValue     &getColor() const {return mColor;}
+                const   Ogre::String          &getFontName() const {return mFontName;}
+                const   Ogre::String          &getCaption() const {return mCaption;}
+                const   Ogre::ColourValue     &getColor() const {return mColor;}
                 
-                Real    getCharacterHeight() const {return mCharHeight;}
-                Real    getSpaceWidth() const {return mSpaceWidth;}
-                Vector3    getGlobalTranslation() const {return mGlobalTranslation;}
-                Vector3    getLocalTranslation() const {return mLocalTranslation;}
+                Ogre::Real    getCharacterHeight() const {return mCharHeight;}
+                Ogre::Real    getSpaceWidth() const {return mSpaceWidth;}
+                Ogre::Vector3    getGlobalTranslation() const {return mGlobalTranslation;}
+                Ogre::Vector3    getLocalTranslation() const {return mLocalTranslation;}
                 bool    getShowOnTop() const {return mOnTop;}
-                AxisAlignedBox          GetAABB(void) { return mAABB; }
+                Ogre::AxisAlignedBox          GetAABB(void) { return mAABB; }
             
                 /******************************** protected methods and overload **************/
             protected:
@@ -264,23 +262,23 @@
                 void    _updateColors();
             
                 // from MovableObject
-                void    getWorldTransforms(Matrix4 *xform) const;
-                Real    getBoundingRadius(void) const {return mRadius;};
-                Real    getSquaredViewDepth(const Camera *cam) const {return 0;};
+                void    getWorldTransforms(Ogre::Matrix4 *xform) const;
+                Ogre::Real    getBoundingRadius(void) const {return mRadius;};
+                Ogre::Real    getSquaredViewDepth(const Ogre::Camera *cam) const {return 0;};
                 void visitRenderables(Ogre::Renderable::Visitor* visitor,  bool debugRenderables = false);
-                const   Quaternion        &getWorldOrientation(void) const;
-                const   Vector3           &getWorldPosition(void) const;
-                const   AxisAlignedBox    &getBoundingBox(void) const {return mAABB;};
-                const   String            &getName(void) const {return mName;};
-                const   String            &getMovableType(void) const {static Ogre::String movType = "MovableText"; return movType;};
+                const   Ogre::Quaternion        &getWorldOrientation(void) const;
+                const   Ogre::Vector3           &getWorldPosition(void) const;
+                const   Ogre::AxisAlignedBox    &getBoundingBox(void) const {return mAABB;};
+                const   Ogre::String            &getName(void) const {return mName;};
+                const   Ogre::String            &getMovableType(void) const {static Ogre::String movType = "MovableText"; return movType;};
             
-                void    _notifyCurrentCamera(Camera *cam);
-                void    _updateRenderQueue(RenderQueue* queue);
+                void    _notifyCurrentCamera(Ogre::Camera *cam);
+                void    _updateRenderQueue(Ogre::RenderQueue* queue);
             
                 // from renderable
-                void    getRenderOperation(RenderOperation &op);
-                const   MaterialPtr       &getMaterial(void) const {assert(!mpMaterial.isNull());return mpMaterial;};
-                const   LightList         &getLights(void) const {return mLList;};
+                void    getRenderOperation(Ogre::RenderOperation &op);
+                const   Ogre::MaterialPtr       &getMaterial(void) const {assert(!mpMaterial.isNull());return mpMaterial;};
+                const   Ogre::LightList         &getLights(void) const {return mLList;};
             };
 
         }

Modified: dependencies/OgreNewt/src/OgreNewt_Body.cpp
===================================================================
--- dependencies/OgreNewt/src/OgreNewt_Body.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/src/OgreNewt_Body.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -4,6 +4,7 @@
 #include "OgreNewt_Tools.h"
 
 
+
 namespace OgreNewt
 {
 
@@ -99,8 +100,19 @@
 
 void Body::standardTransformCallback( OgreNewt::Body* me, const Ogre::Quaternion& orient, const Ogre::Vector3& pos, int threadIndex )
 {
-    me->m_node->setOrientation( orient );
-    me->m_node->setPosition( pos );
+    if( me->m_node->getParent() )
+    {
+        Ogre::Quaternion invParentOri = me->m_node->getParent()->_getDerivedOrientation().Inverse();
+        Ogre::Vector3 parentPos = me->m_node->getParent()->_getDerivedPosition();
+
+        me->m_node->setOrientation( invParentOri*orient );
+        me->m_node->setPosition( invParentOri*(pos - parentPos) );
+    }
+    else
+    {
+        me->m_node->setOrientation( orient );
+        me->m_node->setPosition( pos );
+    }
 }
 
 
@@ -154,8 +166,19 @@
 
         if (m_node)
         {
-            m_node->setOrientation( orient );
-            m_node->setPosition( pos );
+            if( me->m_node->getParent() )
+            {
+                Ogre::Quaternion invParentOri = me->m_node->getParent()->_getDerivedOrientation().Inverse();
+                Ogre::Vector3 parentPos = me->m_node->getParent()->_getDerivedPosition();
+
+                me->m_node->setOrientation( invParentOri*orient );
+                me->m_node->setPosition( invParentOri*(pos - parentPos) );
+            }
+            else
+            {
+                me->m_node->setOrientation( orient );
+                me->m_node->setPosition( pos );
+            }
         }
     }
 }

Modified: dependencies/OgreNewt/src/OgreNewt_Collision.cpp
===================================================================
--- dependencies/OgreNewt/src/OgreNewt_Collision.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/src/OgreNewt_Collision.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -3,6 +3,7 @@
 #include "OgreNewt_Tools.h"
 
 
+
 namespace OgreNewt
 {
 
@@ -14,8 +15,10 @@
 
 Collision::~Collision()
 {
-    if (m_world->getNewtonWorld())
+    if (m_world->getNewtonWorld() && m_col)
+    {
         NewtonReleaseCollision( m_world->getNewtonWorld(), m_col );
+    }
 }
 
 

Modified: dependencies/OgreNewt/src/OgreNewt_PlayerController.cpp
===================================================================
--- dependencies/OgreNewt/src/OgreNewt_PlayerController.cpp	2009-05-17 18:19:36 UTC (rev 4925)
+++ dependencies/OgreNewt/src/OgreNewt_PlayerController.cpp	2009-05-18 16:41:56 UTC (rev 4926)
@@ -40,7 +40,7 @@
     m_floorFinderRadiusFactor = 1.0f;
     m_maxPlayerHeightPaddFactor = 0.01f;
     m_sensorShapeSegments = 32;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
     m_verticalSensorShape = NULL;
     m_horizontalSensorShape = NULL;
     m_dynamicsSensorShape = NULL;
@@ -52,7 +52,7 @@
 
 PlayerController::~PlayerController()
 {
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
     if( m_verticalSensorShape )
         delete m_verticalSensorShape;
     if( m_horizontalSensorShape )
@@ -86,7 +86,7 @@
         abs( newSensorHeight - m_lastSensorHeight ) > 0.04f ||
         abs( newPlayerRadius - m_lastPlayerRadius ) > 0.04f )
     {
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
+#ifdef OGRENEWT_NO_COLLISION_SHAREDPTR
         // delete old ones
         if( m_verticalSensorShape )
             delete m_verticalSensorShape;



From melven at mail.berlios.de  Mon May 18 18:44:17 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Mon, 18 May 2009 18:44:17 +0200
Subject: [Dsa-hl-svn] r4927 - in rl/trunk/engine: core/include core/src
	rules/src ui/src
Message-ID: <200905181644.n4IGiHlh010845@sheep.berlios.de>

Author: melven
Date: 2009-05-18 18:44:06 +0200 (Mon, 18 May 2009)
New Revision: 4927

Modified:
   rl/trunk/engine/core/include/PhysicsCollisionFactory.h
   rl/trunk/engine/core/src/GameAreaTypes.cpp
   rl/trunk/engine/core/src/GameEventManager.cpp
   rl/trunk/engine/core/src/PhysicalThing.cpp
   rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp
   rl/trunk/engine/core/src/PhysicsGenericContactCallback.cpp
   rl/trunk/engine/core/src/PhysicsManager.cpp
   rl/trunk/engine/core/src/PhysicsRagDoll.cpp
   rl/trunk/engine/core/src/SceneQuery.cpp
   rl/trunk/engine/rules/src/CreatureControllerManager.cpp
   rl/trunk/engine/rules/src/SelectionHelper.cpp
   rl/trunk/engine/ui/src/MovementControlState.cpp
Log:
-updated because of changes in OgreNewt


Modified: rl/trunk/engine/core/include/PhysicsCollisionFactory.h
===================================================================
--- rl/trunk/engine/core/include/PhysicsCollisionFactory.h	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/core/include/PhysicsCollisionFactory.h	2009-05-18 16:44:06 UTC (rev 4927)
@@ -215,9 +215,6 @@
         {
             public:
                 ConvexCollisionCacheObject() :
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-                    col(NULL),
-#endif
                     scale(Ogre::Vector3::ZERO),
                     offset(Ogre::Vector3::ZERO),
                     orientation(Ogre::Quaternion::IDENTITY),
@@ -262,9 +259,6 @@
         {
             public:
                 MeshCollisionCacheObject()
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-                    : col(NULL)
-#endif
                     {}
                 OgreNewt::CollisionPtr col;
         };

Modified: rl/trunk/engine/core/src/GameAreaTypes.cpp
===================================================================
--- rl/trunk/engine/core/src/GameAreaTypes.cpp	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/core/src/GameAreaTypes.cpp	2009-05-18 16:44:06 UTC (rev 4927)
@@ -244,15 +244,8 @@
             col);
         mBody->setMaterialGroupID(
             PhysicsManager::getSingleton().getMaterialID("gamearea"));
-#ifndef OGRENEWT_USE_OGRE_ANY
-        mBody->setUserData(NULL);
-#endif
 
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
         boost::dynamic_pointer_cast<OgreNewt::ConvexCollision>(col)->setAsTriggerVolume(true);
-#else
-        dynamic_cast<OgreNewt::ConvexCollisionPtr>(col)->setAsTriggerVolume(true);
-#endif
     }
 
     GameSimpleCollisionAreaType::GameSimpleCollisionAreaType(
@@ -269,15 +262,8 @@
             col);
         mBody->setMaterialGroupID(
             PhysicsManager::getSingleton().getMaterialID("gamearea"));
-#ifndef OGRENEWT_USE_OGRE_ANY
-        mBody->setUserData(NULL);
-#endif
 
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
         boost::dynamic_pointer_cast<OgreNewt::ConvexCollision>(col)->setAsTriggerVolume(true);
-#else
-        dynamic_cast<OgreNewt::ConvexCollisionPtr>(col)->setAsTriggerVolume(true);
-#endif
     }
 
 }

Modified: rl/trunk/engine/core/src/GameEventManager.cpp
===================================================================
--- rl/trunk/engine/core/src/GameEventManager.cpp	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/core/src/GameEventManager.cpp	2009-05-18 16:44:06 UTC (rev 4927)
@@ -308,13 +308,9 @@
 
     Actor* GameEventManager::bodyToActor(OgreNewt::Body* body)
     {
-#ifdef OGRENEWT_USE_OGRE_ANY
         if( body->getUserData().getType() == typeid(Actor*) )
             return Ogre::any_cast<Actor*>(body->getUserData());
         else
             return NULL;
-#else
-        return static_cast<Actor*>(body->getUserData());
-#endif
     }
 }

Modified: rl/trunk/engine/core/src/PhysicalThing.cpp
===================================================================
--- rl/trunk/engine/core/src/PhysicalThing.cpp	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/core/src/PhysicalThing.cpp	2009-05-18 16:44:06 UTC (rev 4927)
@@ -127,11 +127,7 @@
 	void PhysicalThing::setBody(OgreNewt::Body* body)
     {
         mBody = body;
-#ifdef OGRENEWT_USE_OGRE_ANY
 		mBody->setUserData( Ogre::Any(mActor) );
-#else
-        mBody->setUserData( mActor );
-#endif
     }
 
     void PhysicalThing::_update()
@@ -159,11 +155,7 @@
         mActor = actor;
 		if (mBody != NULL)
         {
-#ifdef OGRENEWT_USE_OGRE_ANY
     		mBody->setUserData( Ogre::Any(mActor) );
-#else
-            mBody->setUserData( mActor );
-#endif
         }
     }
 

Modified: rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp
===================================================================
--- rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp	2009-05-18 16:44:06 UTC (rev 4927)
@@ -118,9 +118,6 @@
 
         // result value
         ConvexCollisionPtr rval;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        rval = NULL;
-#endif
 
         // size check (if object is too small, it falls back to a box primitiv
         if (checkSize(aabb) == false )
@@ -298,10 +295,6 @@
         CollisionPtr rval;
         ConvexCollisionPtr rvalAsConvexCollision; // store pointer to ConvexCollision, so we don't need to cast
                                                   // this also indicates, that it is possible to calculate inertia/centerOfMass
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        rval = NULL;
-        rvalAsConvexCollision = NULL;
-#endif
 
         // size check (if object is too small, it falls back to a box primitiv
         if (checkSize(aabb) == false )
@@ -647,9 +640,6 @@
     OgreNewt::CollisionPtr PhysicsCollisionFactory::loadFromFile(const Ogre::String& filename)
     {
         OgreNewt::CollisionPtr rval;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        rval = NULL;
-#endif
         Ogre::String fullfilename = mCachePathName+filename;
         FILE* pFile = fopen(fullfilename.c_str(), "r" );
         if( pFile )
@@ -678,9 +668,6 @@
     OgreNewt::CollisionPtr PhysicsCollisionFactory::createMesh( Ogre::Entity* entity, const Ogre::String& animName, bool nocache )
     {
         OgreNewt::CollisionPtr rval;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        rval = NULL;
-#endif
         Ogre::String filename;
 
         if( !nocache )

Modified: rl/trunk/engine/core/src/PhysicsGenericContactCallback.cpp
===================================================================
--- rl/trunk/engine/core/src/PhysicsGenericContactCallback.cpp	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/core/src/PhysicsGenericContactCallback.cpp	2009-05-18 16:44:06 UTC (rev 4927)
@@ -32,7 +32,6 @@
         Actor* a1 = NULL;
         Actor* a2 = NULL;
 
-#ifdef OGRENEWT_USE_OGRE_ANY
         try
         {
             a1 = Ogre::any_cast<Actor*>(contactJoint.getBody0()->getUserData());
@@ -49,10 +48,7 @@
         {
             LOG_WARNING(Logger::CORE, "Found collision with a OgreNewt::Body that doesn't have an Actor as UserData in PhysicsGenericContactCallback::contactsProcess");
         }
-#else
-        a1 = static_cast<Actor*>(contactJoint.getBody0()->getUserData());
-        a2 = static_cast<Actor*>(contactJoint.getBody1()->getUserData());
-#endif
+
         if (a1 && a1->getPhysicalThing()->getContactListener())
         {
             a1->getPhysicalThing()->getContactListener()->

Modified: rl/trunk/engine/core/src/PhysicsManager.cpp
===================================================================
--- rl/trunk/engine/core/src/PhysicsManager.cpp	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/core/src/PhysicsManager.cpp	2009-05-18 16:44:06 UTC (rev 4927)
@@ -335,9 +335,6 @@
 
         // try one compound collision for the entity if there are several collisions
         OgreNewt::CollisionPtr collision;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        collision = NULL;
-#endif
         switch( collisions.size() )
         {
             case 0:
@@ -416,11 +413,7 @@
         // apply saved forces in the PhysicalThing
         PhysicalThing* thing;
 
-#ifdef OGRENEWT_USE_OGRE_ANY
         thing = Ogre::any_cast<Actor*>(body->getUserData())->getPhysicalThing();
-#else
-        thing = static_cast<Actor*>(body->getUserData())->getPhysicalThing();
-#endif
 
         thing->onApplyForceAndTorque(timestep);
     }
@@ -429,11 +422,7 @@
     {
         PhysicalThing* thing;
 
-#ifdef OGRENEWT_USE_OGRE_ANY
         thing = Ogre::any_cast<Actor*>(body->getUserData())->getPhysicalThing();
-#else
-        thing = static_cast<Actor*>(body->getUserData())->getPhysicalThing();
-#endif
 
 
         if (thing->getPhysicsController())
@@ -542,9 +531,6 @@
 
         // result value
         CollisionPtr rval;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        rval = NULL;
-#endif
 
         // check if there is a collision primitiv for the specified mesh object
         CollisionInUse &usedcol (mCollisionPrimitives[collisionName]);
@@ -591,9 +577,6 @@
 /*
         // result value
         CollisionPtr rval;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        rval = NULL;
-#endif
 
         // check if there is a collision primitiv for the specified mesh object
         CollisionInUse &usedcol (mCollisionPrimitives[name]);

Modified: rl/trunk/engine/core/src/PhysicsRagDoll.cpp
===================================================================
--- rl/trunk/engine/core/src/PhysicsRagDoll.cpp	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/core/src/PhysicsRagDoll.cpp	2009-05-18 16:44:06 UTC (rev 4927)
@@ -35,11 +35,7 @@
 	mParent = parent;
 	mOgreBone = ogreBone;
 
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
 	OgreNewt::ConvexCollisionPtr col;
-#else
-	OgreNewt::ConvexCollisionPtr col = NULL;
-#endif
 
 	// in the case of the cylindrical primitives, they need to be rotated to align the main axis with the direction vector.
 	Ogre::Quaternion orient = Ogre::Quaternion::IDENTITY;
@@ -95,12 +91,7 @@
     {
         if( col->getNewtonCollision() == NULL )
         {
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
             col.reset();
-#else
-            delete col;
-            col = NULL;
-#endif
         }
     }
 
@@ -112,11 +103,7 @@
     else
     {
     	mBody = new OgreNewt::Body( world, col );
-#ifdef OGRENEWT_USE_OGRE_ANY
         mBody->setUserData( Ogre::Any(parentActor) );
-#else
-	    mBody->setUserData( parentActor );
-#endif
     	mBody->setStandardForceCallback();
         const OgreNewt::MaterialID* ragdollMat = PhysicsManager::getSingleton().createMaterialID("default");
         mBody->setMaterialGroupID(ragdollMat);
@@ -146,11 +133,7 @@
 
 void PhysicsRagDoll::RagBone::_hingeCallback( OgreNewt::BasicJoints::Hinge* me )
 {
-#ifdef OGRENEWT_USE_OGRE_ANY
     PhysicsRagDoll::RagBone* bone = Ogre::any_cast<PhysicsRagDoll::RagBone*>(me->getUserData());
-#else
-    PhysicsRagDoll::RagBone* bone = static_cast<PhysicsRagDoll::RagBone*>(me->getUserData());
-#endif
 
 	Ogre::Degree angle = me->getJointAngle();
 	Ogre::Degree lim1( bone->getLimit1() );
@@ -261,11 +244,7 @@
 	}
 
 	//////////////////////////////////////////////////////////////////////////////////
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
     OgreNewt::ConvexCollisionPtr col;
-#else
-    OgreNewt::ConvexCollisionPtr col = NULL;
-#endif
     if( numVerts > 0 )
     	col = OgreNewt::ConvexCollisionPtr(new OgreNewt::CollisionPrimitives::ConvexHull( world, verts, numVerts ));
 
@@ -464,11 +443,7 @@
 	case PhysicsRagDoll::JT_HINGE:
 		joint = new OgreNewt::BasicJoints::Hinge( world, child->getBody(), parent->getBody(), pos, pin );
 		((OgreNewt::BasicJoints::Hinge*)joint)->setCallback( RagBone::_hingeCallback );
-#ifdef OGRENEWT_USE_OGRE_ANY
 		joint->setUserData( Ogre::Any(child) );
-#else
-		joint->setUserData( child );
-#endif
 		child->setLimits( limit1, limit2 );
 		break;
 	}
@@ -478,11 +453,7 @@
 
 void PhysicsRagDoll::_placementCallback( OgreNewt::Body* me, const Ogre::Quaternion& orient, const Ogre::Vector3& pos, int threadindex )
 {
-#ifdef OGRENEWT_USE_OGRE_ANY
     Actor* parentActor = Ogre::any_cast<Actor*>(me->getUserData());
-#else
-    Actor* parentActor = static_cast<Actor*>(me->getUserData());
-#endif
 	PhysicsRagDoll* doll = parentActor->getPhysicalThing()->getRagDoll();
     PhysicsRagDoll::RagBoneMapIterator it = doll->mRagBonesMap.find(me);
     if( it == doll->mRagBonesMap.end() )

Modified: rl/trunk/engine/core/src/SceneQuery.cpp
===================================================================
--- rl/trunk/engine/core/src/SceneQuery.cpp	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/core/src/SceneQuery.cpp	2009-05-18 16:44:06 UTC (rev 4927)
@@ -116,15 +116,11 @@
                 if (mLevelOcclusion && (body->getMaterialGroupID() == levelId)) break;
 
                 // Add actor to this body to the result
-#ifdef OGRENEWT_USE_OGRE_ANY
                 Actor* actor = NULL;
                 if( body->getUserData().getType() == typeid(Actor*) )
                 {
                     actor = Ogre::any_cast<Actor*>(body->getUserData());
                 }
-#else
-                Actor* actor = static_cast<Actor*>(body->getUserData());
-#endif
                 if (actor != NULL) mResult.push_back(actor);
             }
         }

Modified: rl/trunk/engine/rules/src/CreatureControllerManager.cpp
===================================================================
--- rl/trunk/engine/rules/src/CreatureControllerManager.cpp	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/rules/src/CreatureControllerManager.cpp	2009-05-18 16:44:06 UTC (rev 4927)
@@ -166,13 +166,9 @@
 
     void CreatureControllerManager::userProcess(OgreNewt::ContactJoint &contactJoint, Real timestep, int threadid)
     {
-#ifdef OGRENEWT_USE_OGRE_ANY
         Actor *actor = NULL;
         if( contactJoint.getBody0()->getUserData().getType() == typeid(Actor*) )
             actor = Ogre::any_cast<Actor*>(contactJoint.getBody0()->getUserData());
-#else
-        Actor *actor = static_cast<Actor*>(contactJoint.getBody0()->getUserData());
-#endif
         if( actor != NULL )
         {
             ControllerMap::const_iterator it = mControllers.find(static_cast<Creature*>(actor->getGameObject()));
@@ -184,12 +180,8 @@
         }
 
         // if the controlled body is the second body...
-#ifdef OGRENEWT_USE_OGRE_ANY
         if( contactJoint.getBody1()->getUserData().getType() == typeid(Actor*) )
             actor = Ogre::any_cast<Actor*>(contactJoint.getBody1()->getUserData());
-#else
-        actor = static_cast<Actor*>(contactJoint.getBody1()->getUserData());
-#endif
         if( actor != NULL )
         {
             ControllerMap::const_iterator it = mControllers.find(static_cast<Creature*>(actor->getGameObject()));

Modified: rl/trunk/engine/rules/src/SelectionHelper.cpp
===================================================================
--- rl/trunk/engine/rules/src/SelectionHelper.cpp	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/rules/src/SelectionHelper.cpp	2009-05-18 16:44:06 UTC (rev 4927)
@@ -84,13 +84,9 @@
             OgreNewt::Body* body = info.mBody;
             if (body != NULL)
             {
-#ifdef OGRENEWT_USE_OGRE_ANY
                 Actor* hitActor = NULL;
                 if( body->getUserData().getType() == typeid(Actor*) )
                     hitActor = Ogre::any_cast<Actor*>(body->getUserData());
-#else
-                Actor* hitActor = static_cast<Actor*>(body->getUserData());
-#endif
                 isVisible = hitActor == actor2 || hitActor == actor1;
                 if (!isVisible) break;
             }

Modified: rl/trunk/engine/ui/src/MovementControlState.cpp
===================================================================
--- rl/trunk/engine/ui/src/MovementControlState.cpp	2009-05-18 16:41:56 UTC (rev 4926)
+++ rl/trunk/engine/ui/src/MovementControlState.cpp	2009-05-18 16:44:06 UTC (rev 4927)
@@ -87,9 +87,6 @@
         mViewMode(VM_THIRD_PERSON),
         mRaycast(new PhysicsMaterialRaycast()),
         mConvexcast(new PhysicsMaterialConvexcast()),
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        mCameraCastCollision(NULL),
-#endif
         mSelector(CoreSubsystem::getSingleton().getWorld()->getSceneManager()),
         mCombatSelector(CoreSubsystem::getSingleton().getWorld()->getSceneManager(),
             QUERYFLAG_CREATURE),
@@ -174,9 +171,6 @@
         mSelector.setFilter(NULL);
         delete mRaycast;
         delete mConvexcast;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        delete mCameraCastCollision;
-#endif
 
         if (DebugWindow::getSingletonPtr())
         {



From melven at mail.berlios.de  Tue May 19 02:41:42 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Tue, 19 May 2009 02:41:42 +0200
Subject: [Dsa-hl-svn] r4928 - dependencies/OgreNewt/src
Message-ID: <200905190041.n4J0fg8i012877@sheep.berlios.de>

Author: melven
Date: 2009-05-19 02:41:39 +0200 (Tue, 19 May 2009)
New Revision: 4928

Modified:
   dependencies/OgreNewt/src/OgreNewt_Body.cpp
Log:
fixed error from previous commit


Modified: dependencies/OgreNewt/src/OgreNewt_Body.cpp
===================================================================
--- dependencies/OgreNewt/src/OgreNewt_Body.cpp	2009-05-18 16:44:06 UTC (rev 4927)
+++ dependencies/OgreNewt/src/OgreNewt_Body.cpp	2009-05-19 00:41:39 UTC (rev 4928)
@@ -166,18 +166,18 @@
 
         if (m_node)
         {
-            if( me->m_node->getParent() )
+            if( m_node->getParent() )
             {
-                Ogre::Quaternion invParentOri = me->m_node->getParent()->_getDerivedOrientation().Inverse();
-                Ogre::Vector3 parentPos = me->m_node->getParent()->_getDerivedPosition();
+                Ogre::Quaternion invParentOri = m_node->getParent()->_getDerivedOrientation().Inverse();
+                Ogre::Vector3 parentPos = m_node->getParent()->_getDerivedPosition();
 
-                me->m_node->setOrientation( invParentOri*orient );
-                me->m_node->setPosition( invParentOri*(pos - parentPos) );
+                m_node->setOrientation( invParentOri*orient );
+                m_node->setPosition( invParentOri*(pos - parentPos) );
             }
             else
             {
-                me->m_node->setOrientation( orient );
-                me->m_node->setPosition( pos );
+                m_node->setOrientation( orient );
+                m_node->setPosition( pos );
             }
         }
     }



From melven at mail.berlios.de  Tue May 19 15:59:27 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Tue, 19 May 2009 15:59:27 +0200
Subject: [Dsa-hl-svn] r4929 - dependencies/OgreNewt/src
Message-ID: <200905191359.n4JDxR6F000858@sheep.berlios.de>

Author: melven
Date: 2009-05-19 15:59:25 +0200 (Tue, 19 May 2009)
New Revision: 4929

Modified:
   dependencies/OgreNewt/src/OgreNewt_Body.cpp
Log:
removed code for including parents node orientation/position, this won't always work as expected, so it's just not possible
to use node-hirarchies with bodies in my opinion...


Modified: dependencies/OgreNewt/src/OgreNewt_Body.cpp
===================================================================
--- dependencies/OgreNewt/src/OgreNewt_Body.cpp	2009-05-19 00:41:39 UTC (rev 4928)
+++ dependencies/OgreNewt/src/OgreNewt_Body.cpp	2009-05-19 13:59:25 UTC (rev 4929)
@@ -100,19 +100,8 @@
 
 void Body::standardTransformCallback( OgreNewt::Body* me, const Ogre::Quaternion& orient, const Ogre::Vector3& pos, int threadIndex )
 {
-    if( me->m_node->getParent() )
-    {
-        Ogre::Quaternion invParentOri = me->m_node->getParent()->_getDerivedOrientation().Inverse();
-        Ogre::Vector3 parentPos = me->m_node->getParent()->_getDerivedPosition();
-
-        me->m_node->setOrientation( invParentOri*orient );
-        me->m_node->setPosition( invParentOri*(pos - parentPos) );
-    }
-    else
-    {
-        me->m_node->setOrientation( orient );
-        me->m_node->setPosition( pos );
-    }
+    me->m_node->setOrientation( orient );
+    me->m_node->setPosition( pos );
 }
 
 
@@ -166,19 +155,8 @@
 
         if (m_node)
         {
-            if( m_node->getParent() )
-            {
-                Ogre::Quaternion invParentOri = m_node->getParent()->_getDerivedOrientation().Inverse();
-                Ogre::Vector3 parentPos = m_node->getParent()->_getDerivedPosition();
-
-                m_node->setOrientation( invParentOri*orient );
-                m_node->setPosition( invParentOri*(pos - parentPos) );
-            }
-            else
-            {
-                m_node->setOrientation( orient );
-                m_node->setPosition( pos );
-            }
+            m_node->setOrientation( orient );
+            m_node->setPosition( pos );
         }
     }
 }



From melven at mail.berlios.de  Wed May 20 00:57:47 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Wed, 20 May 2009 00:57:47 +0200
Subject: [Dsa-hl-svn] r4930 - in rl/trunk/engine: rules/include rules/src
	script/swig
Message-ID: <200905192257.n4JMvltr020479@sheep.berlios.de>

Author: melven
Date: 2009-05-20 00:57:43 +0200 (Wed, 20 May 2009)
New Revision: 4930

Modified:
   rl/trunk/engine/rules/include/GoToJob.h
   rl/trunk/engine/rules/src/GoToJob.cpp
   rl/trunk/engine/script/swig/RlAi.swig
   rl/trunk/engine/script/swig/RlRules.swig
Log:
improved GoToJob and fixed some errors in swig


Modified: rl/trunk/engine/rules/include/GoToJob.h
===================================================================
--- rl/trunk/engine/rules/include/GoToJob.h	2009-05-19 13:59:25 UTC (rev 4929)
+++ rl/trunk/engine/rules/include/GoToJob.h	2009-05-19 22:57:43 UTC (rev 4930)
@@ -37,6 +37,7 @@
             CreatureController::MovementType movementType_moving = CreatureController::MT_RENNEN,
             CreatureController::MovementType movementType_idle = CreatureController::MT_STEHEN);
 		GoToJob(Creature* actor, GameObject* target, Ogre::Real maxDistance, Ogre::Real duration,
+            bool followTarget = false,
             CreatureController::MovementType movementType_moving = CreatureController::MT_RENNEN,
             CreatureController::MovementType movementType_idle = CreatureController::MT_STEHEN);
         virtual ~GoToJob();
@@ -46,6 +47,7 @@
     private:
 		CreatureController* mActor;
 		GameObject* mTarget;
+        bool mFollowTarget;
 		Ogre::Vector3 mTargetPos;
 		Ogre::Real mMaxDistance;
 		Ogre::Real mTimeLeft;

Modified: rl/trunk/engine/rules/src/GoToJob.cpp
===================================================================
--- rl/trunk/engine/rules/src/GoToJob.cpp	2009-05-19 13:59:25 UTC (rev 4929)
+++ rl/trunk/engine/rules/src/GoToJob.cpp	2009-05-19 22:57:43 UTC (rev 4930)
@@ -26,11 +26,12 @@
 
 namespace rl
 {
-	GoToJob::GoToJob(Creature* actor, const Vector3& targetPos, Real maxDistance, Real duration, CreatureController::MovementType movementType_moving,
-            CreatureController::MovementType movementType_idle)
+	GoToJob::GoToJob(Creature* actor, const Vector3& targetPos, Real maxDistance, Real duration,
+            CreatureController::MovementType movementType_moving, CreatureController::MovementType movementType_idle)
 		: Job(false, true, TimeSource::REALTIME_INTERRUPTABLE),
 		  mActor(NULL),
 		  mTarget(NULL),
+          mFollowTarget(false),
 		  mTargetPos(targetPos),
 		  mMaxDistance(maxDistance),
 		  mTimeLeft(duration),
@@ -40,11 +41,12 @@
 		mActor = CreatureControllerManager::getSingleton().getCreatureController(actor);
 	}
 
-	GoToJob::GoToJob(Creature* actor, GameObject* target, Real maxDistance, Real duration, CreatureController::MovementType movementType_moving,
-            CreatureController::MovementType movementType_idle)
+	GoToJob::GoToJob(Creature* actor, GameObject* target, Real maxDistance, Real duration, bool followTarget,
+            CreatureController::MovementType movementType_moving, CreatureController::MovementType movementType_idle)
 		: Job(false, true, TimeSource::REALTIME_INTERRUPTABLE),
 		  mActor(NULL),
 		  mTarget(target),
+          mFollowTarget(followTarget),
 		  mTargetPos(Vector3::ZERO),
 		  mMaxDistance(maxDistance),
 		  mTimeLeft(duration),
@@ -83,34 +85,43 @@
         }
         
 		// Are we there now?
-		if (distance < mMaxDistance)
-		{
-			// Stay put where ever we are.
-			mActor->setMovement(mMovementType_idle, Vector3::ZERO, Vector3::ZERO);
-			return true;
-		}
-
-
-		Vector3 pos = mActor->getCreature()->getPosition();
-		pos.y = 0;
-		Vector3 targetPos = mTargetPos;
-		targetPos.y = 0;
+        Vector3 pos = mActor->getCreature()->getPosition();
+        pos.y = 0;
+        Vector3 targetPos = mTargetPos;
+        targetPos.y = 0;
         Degree realYawDiff = (mActor->getCreature()->getOrientation()*Vector3::NEGATIVE_UNIT_Z).getRotationTo(targetPos - pos).getYaw();
         Vector3 rotation = Vector3::ZERO;
         Quaternion currentOri(mActor->getYaw(), Vector3::UNIT_Y);
         rotation.y = (currentOri*Vector3::NEGATIVE_UNIT_Z).getRotationTo(targetPos - pos).getYaw().valueRadians();
 
         // old code for rotation:
-		//mActor->getCreature()->setOrientation(Vector3::NEGATIVE_UNIT_Z.getRotationTo(targetPos - pos));
-        
-        // first rotate, then move, is this the "desired" behaviour?
-        if( realYawDiff > Degree(5) || realYawDiff < Degree(-5) )
+        //mActor->getCreature()->setOrientation(Vector3::NEGATIVE_UNIT_Z.getRotationTo(targetPos - pos));
+
+        // in order to prevent fast switching between moving and idle, use a larger maxDistance if idle
+        Real maxDistance = mMaxDistance;
+        if( mFollowTarget && mActor->getMovementId() == mMovementType_idle)
+            maxDistance += 0.5;
+
+        if( distance < maxDistance )
+        {
+            // turn to object
             mActor->setMovement(mMovementType_idle, Vector3::ZERO, rotation);
+        }
         else
-    		mActor->setMovement(mMovementType_moving, Vector3::NEGATIVE_UNIT_Z, rotation);
+        {
+            // first rotate, then move, is this the "desired" behaviour?
+            if( realYawDiff > Degree(5) || realYawDiff < Degree(-5) )
+                mActor->setMovement(mMovementType_idle, Vector3::ZERO, rotation);
+            else
+                mActor->setMovement(mMovementType_moving, Vector3::NEGATIVE_UNIT_Z, rotation);
+        }
 
-		mTimeLeft  -= time;
-		return false;
+        mTimeLeft  -= time;
+
+        if( !mFollowTarget && distance < mMaxDistance )
+            return true;
+        else
+            return false;
 	}
 }
 

Modified: rl/trunk/engine/script/swig/RlAi.swig
===================================================================
--- rl/trunk/engine/script/swig/RlAi.swig	2009-05-19 13:59:25 UTC (rev 4929)
+++ rl/trunk/engine/script/swig/RlAi.swig	2009-05-19 22:57:43 UTC (rev 4930)
@@ -302,7 +302,7 @@
     public:
         static rl::DialogManager& getSingleton();
         rl::Dialog* createDialog(const Ogre::String& name, rl::Creature* npc);
-        rl::Dialog* createDialog(const Ogre::String& name, rl::CreatureList& npcs);
+        rl::Dialog* createDialog(const Ogre::String& name, const std::list<rl::Creature*>& npcs);
     private:
         DialogManager();
     };

Modified: rl/trunk/engine/script/swig/RlRules.swig
===================================================================
--- rl/trunk/engine/script/swig/RlRules.swig	2009-05-19 13:59:25 UTC (rev 4929)
+++ rl/trunk/engine/script/swig/RlRules.swig	2009-05-19 22:57:43 UTC (rev 4930)
@@ -451,9 +451,12 @@
     public:
 
 		GoToJob(rl::Creature* actor, const Ogre::Vector3& targetPos,
-			Ogre::Real maxDistance, Ogre::Real duration);
-		// Unclear what version is called from ruby, so uncomment second ctor.
-		//GoToJob(rl::Creature* actor, rl::GameObject* target, Ogre::Real maxDistance, Ogre::Real duration);
+			Ogre::Real maxDistance, Ogre::Real duration,
+            rl::CreatureController::MovementType movementType_moving = rl::CreatureController::MT_RENNEN,
+            rl::CreatureController::MovementType movementType_idle = rl::CreatureController::MT_STEHEN);
+		GoToJob(rl::Creature* actor, rl::GameObject* target, Ogre::Real maxDistance, Ogre::Real duration, bool followTarget = false,
+            rl::CreatureController::MovementType movementType_moving = rl::CreatureController::MT_RENNEN,
+            rl::CreatureController::MovementType movementType_idle = rl::CreatureController::MT_STEHEN);
     };
     
     /// A rl#Job to fetch an item



From melven at mail.berlios.de  Wed May 20 00:59:32 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Wed, 20 May 2009 00:59:32 +0200
Subject: [Dsa-hl-svn] r4931 - in modules/regressiontest: maps scripts
	scripts/maps
Message-ID: <200905192259.n4JMxWkp021728@sheep.berlios.de>

Author: melven
Date: 2009-05-20 00:59:28 +0200 (Wed, 20 May 2009)
New Revision: 4931

Added:
   modules/regressiontest/scripts/GoToJobTest.rb
Modified:
   modules/regressiontest/maps/collisionscachetest.rlmap
   modules/regressiontest/scripts/maps/regressiontest.rb
Log:
added some tests for scaling and caching of collisions
added a nice GoToJob test (npc follows player some time)


Modified: modules/regressiontest/maps/collisionscachetest.rlmap
===================================================================
--- modules/regressiontest/maps/collisionscachetest.rlmap	2009-05-19 22:57:43 UTC (rev 4930)
+++ modules/regressiontest/maps/collisionscachetest.rlmap	2009-05-19 22:59:28 UTC (rev 4931)
@@ -1,6 +1,7 @@
 <?xml version="1.0" encoding="UTF-8" standalone="no" ?>
 <rastullahmap formatVersion="0.4.0">
   <nodes>
+    <!-- tests for level geometry -->
     <entity name="zaun2" meshfile="zaun.mesh">
       <position x="-62" y="0" z="-10"/>
       <scale x="0.1" y="0.1" z="0.1"/>
@@ -21,5 +22,31 @@
       <position x="-62" y="7" z="-10"/>
       <scale x="0.1" y="0.1" z="0.1"/>
     </entity>
+    <!-- tests for convex collisions -->
+    <entity name="zaun7" meshfile="zaun.mesh">
+      <position x="-62" y="0" z="-50"/>
+      <scale x="0.1" y="0.1" z="0.1"/>
+      <physicsproxy type="convexhull" />
+    </entity>
+    <entity name="zaun8" meshfile="zaun.mesh">
+      <position x="-62" y="1" z="-50"/>
+      <scale x="0.1" y="0.1" z="0.1"/>
+      <physicsproxy type="box" />
+    </entity>
+    <entity name="zaun9" meshfile="zaun.mesh">
+      <position x="-62" y="2" z="-50"/>
+      <scale x="0.1" y="0.1" z="0.1"/>
+      <physicsproxy type="convexhull" />
+    </entity>
+    <entity name="zaun10" meshfile="zaun.mesh">
+      <position x="-62" y="3" z="-50"/>
+      <scale x="0.5" y="0.5" z="0.5"/>
+      <physicsproxy type="convexhull" />
+    </entity>
+    <entity name="zaun11" meshfile="zaun.mesh">
+      <position x="-62" y="5" z="-50"/>
+      <scale x="0.1" y="0.1" z="0.1"/>
+      <physicsproxy type="convexhull" />
+    </entity>
   </nodes>
 </rastullahmap>

Added: modules/regressiontest/scripts/GoToJobTest.rb
===================================================================
--- modules/regressiontest/scripts/GoToJobTest.rb	2009-05-19 22:57:43 UTC (rev 4930)
+++ modules/regressiontest/scripts/GoToJobTest.rb	2009-05-19 22:59:28 UTC (rev 4931)
@@ -0,0 +1,26 @@
+require 'testcase.rb'
+
+class GoToJobTest < TestCase
+  def execute()
+    followingCreature = $GOM.createGameObject("TestPerson");
+	followingCreature.placeIntoScene();
+	followingCreature.setPosition(getCenter());
+	followingCreature.modifyAu(1000);
+
+    job = GoToJob.new(
+        followingCreature,
+        $hero,
+        5,
+        59,
+        true);
+    job2 = GoToJob.new(
+        followingCreature,
+        getCenter(),
+        0.5,
+        10000000);
+	$JS.addJob(job);
+    $JS.addJob(job2, JobScheduler::JP_NORMAL, 60);
+	
+	$SCRIPT.log("GoToJobTest initialisiert")
+  end
+end

Modified: modules/regressiontest/scripts/maps/regressiontest.rb
===================================================================
--- modules/regressiontest/scripts/maps/regressiontest.rb	2009-05-19 22:57:43 UTC (rev 4930)
+++ modules/regressiontest/scripts/maps/regressiontest.rb	2009-05-19 22:59:28 UTC (rev 4931)
@@ -39,6 +39,7 @@
 require 'TimeTest.rb'
 require 'CombatTest.rb'
 require 'WalkJobTest.rb'
+require 'GoToJobTest.rb'
 require 'CharacterSelectionTest.rb'
 require 'CollisionsCacheTest.rb'
 
@@ -77,6 +78,7 @@
 		runTest(SoundTest, [ 10, 0, 10])
 		runTest(TimeTest, [ -5, 0, -5])
 		runTest(WalkJobTest, [  0, 0, -3])
+        runTest(GoToJobTest, [ 0, 0, -30])
 		runTest(CombatTest, [15, 0, 15])
   	runTest(FetchItemJobTest, [-15, 0, 15])
    runTest(CharacterSelectionTest, [-15, 0, -15])



From melven at mail.berlios.de  Wed May 20 02:09:32 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Wed, 20 May 2009 02:09:32 +0200
Subject: [Dsa-hl-svn] r4932 - in rl/trunk/engine: core/src ui/include ui/src
Message-ID: <200905200009.n4K09WSl011576@sheep.berlios.de>

Author: melven
Date: 2009-05-20 02:09:27 +0200 (Wed, 20 May 2009)
New Revision: 4932

Modified:
   rl/trunk/engine/core/src/ConfigurationManager.cpp
   rl/trunk/engine/ui/include/CommandMapper.h
   rl/trunk/engine/ui/include/MovementControlState.h
   rl/trunk/engine/ui/src/CommandMapper.cpp
   rl/trunk/engine/ui/src/MovementControlState.cpp
Log:
implemented a rear view ("ueber die Schulter nach hinten gucken um eventuelle Verfolger zu sehen")


Modified: rl/trunk/engine/core/src/ConfigurationManager.cpp
===================================================================
--- rl/trunk/engine/core/src/ConfigurationManager.cpp	2009-05-19 22:59:28 UTC (rev 4931)
+++ rl/trunk/engine/core/src/ConfigurationManager.cpp	2009-05-20 00:09:27 UTC (rev 4932)
@@ -97,6 +97,7 @@
         addSetting("Movement keys", "run", "Umschalt links");
         addSetting("Movement keys", "sneak", "Strg links");
         addSetting("Movement keys", "run_lock", "< | >");
+        addSetting("Movement keys", "rear_view", "T");
 
         addSetting("Action keys", "quitgame", "Ctrl+X");
         addSetting("Action keys", "closecurrentwindow", "Escape");

Modified: rl/trunk/engine/ui/include/CommandMapper.h
===================================================================
--- rl/trunk/engine/ui/include/CommandMapper.h	2009-05-19 22:59:28 UTC (rev 4931)
+++ rl/trunk/engine/ui/include/CommandMapper.h	2009-05-20 00:09:27 UTC (rev 4932)
@@ -35,7 +35,8 @@
         MOVE_RUN = 1<<6,
         MOVE_SNEAK = 1<<7,
         MOVE_JUMP = 1<<8,
-        MOVE_RUN_LOCK = 1<<9
+        MOVE_RUN_LOCK = 1<<9,
+        REAR_VIEW = 1<<10
     };
 
     const int CMDMAP_NO_MAPPING = -9999999;

Modified: rl/trunk/engine/ui/include/MovementControlState.h
===================================================================
--- rl/trunk/engine/ui/include/MovementControlState.h	2009-05-19 22:59:28 UTC (rev 4931)
+++ rl/trunk/engine/ui/include/MovementControlState.h	2009-05-20 00:09:27 UTC (rev 4932)
@@ -112,6 +112,7 @@
         std::pair<Ogre::Real, Ogre::Real> mDistanceRange;
         Ogre::Degree mCamYaw; // f?r VM_FREE_CAMERA
         Ogre::Degree mCamVirtualYaw; // helps to simulate strafe+forward/backward movement
+        Ogre::Degree mCamRearViewYaw; // helps to create smooth rear view effect
         Ogre::Degree mNewCamVirtualYaw; // s.o.
         Ogre::Degree mPitch;
         Ogre::Degree mRoll;

Modified: rl/trunk/engine/ui/src/CommandMapper.cpp
===================================================================
--- rl/trunk/engine/ui/src/CommandMapper.cpp	2009-05-19 22:59:28 UTC (rev 4931)
+++ rl/trunk/engine/ui/src/CommandMapper.cpp	2009-05-20 00:09:27 UTC (rev 4932)
@@ -252,6 +252,10 @@
         {
             return MOVE_RUN_LOCK;
         }
+        else if (movementDescription == "rear_view")
+        {
+            return REAR_VIEW;
+        }
 
         return MOVE_NONE;
     }

Modified: rl/trunk/engine/ui/src/MovementControlState.cpp
===================================================================
--- rl/trunk/engine/ui/src/MovementControlState.cpp	2009-05-19 22:59:28 UTC (rev 4931)
+++ rl/trunk/engine/ui/src/MovementControlState.cpp	2009-05-20 00:09:27 UTC (rev 4932)
@@ -73,6 +73,7 @@
         mCamYaw(0),
         mCamVirtualYaw(0),
         mNewCamVirtualYaw(0),
+        mCamRearViewYaw(0),
         mPitch(20),
         mRoll(0),
         mPitchRange(Degree(-75), Degree(85)),
@@ -307,9 +308,9 @@
     void MovementControlState::updateCharacter(Ogre::Real elapsedTime)
     {
         InputManager* im = InputManager::getSingletonPtr();
+        int movement = mCharacterState.mCurrentMovementState;
         if( mController != NULL )
         {
-            int movement = mCharacterState.mCurrentMovementState;
             Degree rotation(0);
 
             AbstractMovement *drehen = mController->getMovementFromId(CreatureController::MT_DREHEN);
@@ -341,7 +342,7 @@
                 }
 
 
-                if( mViewMode != VM_PNYX_MODE  && mViewMode != VM_FIRST_PERSON )
+                if( mViewMode != VM_PNYX_MODE  )//&& mViewMode != VM_FIRST_PERSON )
                 {
                     // virtual yaw
                     if( mCamVirtualYaw != mNewCamVirtualYaw )
@@ -360,14 +361,14 @@
                     }
                     else
                     {
-                        mNewCamVirtualYaw =Degree(0);
+                        mNewCamVirtualYaw = Degree(0);
                     }
                     if( mCamVirtualYaw != mNewCamVirtualYaw )
                     {
                         rotation += mCamVirtualYaw - mNewCamVirtualYaw;
                     }
                 }
-
+/*
                 if( mViewMode == VM_FIRST_PERSON )
                 {
                     if( ((movement & MOVE_FORWARD) && (movement & MOVE_RIGHT) && !(movement & MOVE_LEFT)) ||
@@ -400,6 +401,7 @@
                         }
                     }
                 }
+*/
             }
 
 
@@ -583,6 +585,23 @@
                 }
             }
         }
+
+
+        if ( movement & REAR_VIEW )
+        {
+            if( mCamRearViewYaw < Degree(180) )
+                mCamRearViewYaw += elapsedTime*Degree(2*360);
+            if( mCamRearViewYaw > Degree(180) )
+                mCamRearViewYaw = Degree(180);
+        }
+        else
+        {
+            if( mCamRearViewYaw > Degree(0) )
+                mCamRearViewYaw -= elapsedTime*Degree(2*360);
+            if( mCamRearViewYaw < Degree(0) )
+                mCamRearViewYaw = Degree(0);
+        }
+
     }
 
     // ------------------------------------------------------------------------
@@ -618,7 +637,7 @@
         charPos = mCharacter->getActor()->getWorldPosition();
         Quaternion charOri = mCharacter->getActor()->getWorldOrientation();
         Quaternion virtualCamOri;
-        virtualCamOri.FromAngleAxis(mCamVirtualYaw, Vector3::UNIT_Y);
+        virtualCamOri.FromAngleAxis(mCamVirtualYaw+mCamRearViewYaw, Vector3::UNIT_Y);
 
 
         // Kamera-Gr???e beziehen
@@ -643,8 +662,8 @@
         {
            cameraNode->lookAt(
                 charPos
-                + charOri * /* virtualCamOri * */  mLookAtOffset
-                + charOri * /* virtualCamOri * */ (-Vector3::UNIT_Z*radius),   // doesn't work smoothly with strafe+forward
+                + charOri * virtualCamOri *  mLookAtOffset
+                + charOri * virtualCamOri *  (-Vector3::UNIT_Z*radius),   // doesn't work smoothly with strafe+forward
                 Node::TS_WORLD);
 
         }
@@ -750,7 +769,7 @@
         Vector3 charPos = mCharacter->getActor()->getWorldPosition();
         Quaternion charOri = mCharacter->getActor()->getWorldOrientation();
         Quaternion virtualCamOri;
-        virtualCamOri.FromAngleAxis(mCamVirtualYaw, Vector3::UNIT_Y);
+        virtualCamOri.FromAngleAxis(mCamVirtualYaw+mCamRearViewYaw, Vector3::UNIT_Y);
 
 
         Vector3 camPos;
@@ -979,7 +998,7 @@
         //Quaternion charOri = mCharacter->getActor()->getWorldOrientation();
         Quaternion charOri (mController->getYaw(), Vector3::UNIT_Y);
         Quaternion virtualCamOri;
-        virtualCamOri.FromAngleAxis(mCamVirtualYaw, Vector3::UNIT_Y);
+        virtualCamOri.FromAngleAxis(mCamVirtualYaw+mCamRearViewYaw, Vector3::UNIT_Y);
         // get camera size
         CameraObject* ogreCam = static_cast<CameraObject*>(
                 mCameraActor->getControlledObject());
@@ -1305,6 +1324,7 @@
         mCamBody->setPositionOrientation(calculateOptimalCameraPosition(false, 0.0f), camOri);
         mCamVirtualYaw = Degree(0);
         mNewCamVirtualYaw = Degree(0);
+        mCamRearViewYaw = Degree(0);
         mLastCameraCollision = 0;
         if(mViewMode == VM_FIRST_PERSON)
             mCharacterActor->setVisible(false);



From melven at mail.berlios.de  Wed May 20 22:04:02 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Wed, 20 May 2009 22:04:02 +0200
Subject: [Dsa-hl-svn] r4933 - in rl/trunk/engine: ai/include ai/src
	script/swig ui/include ui/src
Message-ID: <200905202004.n4KK42kQ016387@sheep.berlios.de>

Author: melven
Date: 2009-05-20 22:03:56 +0200 (Wed, 20 May 2009)
New Revision: 4933

Modified:
   rl/trunk/engine/ai/include/Dialog.h
   rl/trunk/engine/ai/include/DialogLoader.h
   rl/trunk/engine/ai/include/DialogLoaderImpl.h
   rl/trunk/engine/ai/include/DialogManager.h
   rl/trunk/engine/ai/include/DialogParagraph.h
   rl/trunk/engine/ai/src/Dialog.cpp
   rl/trunk/engine/ai/src/DialogLoader.cpp
   rl/trunk/engine/ai/src/DialogLoaderImpl.cpp
   rl/trunk/engine/ai/src/DialogManager.cpp
   rl/trunk/engine/ai/src/DialogParagraph.cpp
   rl/trunk/engine/script/swig/RlAi.swig
   rl/trunk/engine/script/swig/RlCore.swig
   rl/trunk/engine/ui/include/DialogControlState.h
   rl/trunk/engine/ui/include/DialogController.h
   rl/trunk/engine/ui/src/DialogControlState.cpp
Log:
-using the typedef CreatureList instead of std::list<Creature*>
-some fixes in swig


Modified: rl/trunk/engine/ai/include/Dialog.h
===================================================================
--- rl/trunk/engine/ai/include/Dialog.h	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ai/include/Dialog.h	2009-05-20 20:03:56 UTC (rev 4933)
@@ -19,10 +19,10 @@
 #include "AiPrerequisites.h"
 
 #include "Properties.h"
+#include "Creature.h"
 
 namespace rl
 {
-    class Creature;
     class DialogOption;
     class DialogResponse;
     class DialogVariable;
@@ -47,12 +47,12 @@
         virtual PropertyKeys getAllPropertyKeys() const;
 
         void addParticipant(const CeGuiString& personId, Creature* person);
-        std::list<Creature*> getParticipants() const;
+        const CreatureList& getParticipants() const;
         Creature* getParticipant(const CeGuiString& id) const;
 
     private:
         DialogResponse* mDialogStart;
-        std::list<Creature*> mAllParticipants;
+        CreatureList mAllParticipants;
         std::map<CeGuiString, Creature*> mParticipantMap;
         std::map<Ogre::String, DialogVariable*> mVariables;
         PropertyRecord mPropertyVariables;

Modified: rl/trunk/engine/ai/include/DialogLoader.h
===================================================================
--- rl/trunk/engine/ai/include/DialogLoader.h	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ai/include/DialogLoader.h	2009-05-20 20:03:56 UTC (rev 4933)
@@ -17,12 +17,11 @@
 #define __DialogLoader_H__
 
 #include "AiPrerequisites.h"
+#include "Creature.h"
 
-#include <list>
 
 namespace rl
 {
-	class Creature;
     class Dialog;
     class DialogLoaderImpl;
 
@@ -36,7 +35,7 @@
         virtual void parseScript(Ogre::DataStreamPtr& stream, const Ogre::String& groupName);
 		virtual Ogre::Real getLoadingOrder() const;
 
-		Dialog* createDialog(const Ogre::String& name, const std::list<Creature*>& participants) const;
+		Dialog* createDialog(const Ogre::String& name, const CreatureList& participants) const;
 
 	private:
         Ogre::StringVector mScriptPatterns;

Modified: rl/trunk/engine/ai/include/DialogLoaderImpl.h
===================================================================
--- rl/trunk/engine/ai/include/DialogLoaderImpl.h	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ai/include/DialogLoaderImpl.h	2009-05-20 20:03:56 UTC (rev 4933)
@@ -19,10 +19,10 @@
 
 #include "Properties.h"
 #include "XmlProcessor.h"
+#include "Creature.h"
 
 namespace rl
 {
-    class Creature;
     class Dialog;
     class DialogCondition;
     class DialogElement;
@@ -39,7 +39,7 @@
         DialogLoaderImpl();
         ~DialogLoaderImpl();
 
-        Dialog* createDialog(const Ogre::String& name, const std::list<Creature*>& participants) const;
+        Dialog* createDialog(const Ogre::String& name, const CreatureList& participants) const;
         void parseDialog(Ogre::DataStreamPtr& stream, const Ogre::String& groupName);
 
     private:
@@ -70,7 +70,7 @@
             DialogResponse* getResponse(const CeGuiString& id) const;
 
             void setStartResponse(DialogResponse* response);
-            Dialog* createDialog(const std::list<Creature*>& participants);
+            Dialog* createDialog(const CreatureList& participants);
             void setProperty(const CeGuiString& key, const Property& value);
 
             void addParticipant(DialogParticipant* participant);

Modified: rl/trunk/engine/ai/include/DialogManager.h
===================================================================
--- rl/trunk/engine/ai/include/DialogManager.h	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ai/include/DialogManager.h	2009-05-20 20:03:56 UTC (rev 4933)
@@ -21,12 +21,12 @@
 #include <list>
 
 #include "Properties.h"
+#include "Creature.h"
 #include "SaveGameData.h"
 #include "XmlProcessor.h"
 
 namespace rl
 {
-    class Creature;
 	class Dialog;
 	class DialogLoader;
 
@@ -45,7 +45,7 @@
         ~DialogManager();
 
         Dialog* createDialog(const Ogre::String& name, Creature* npc);
-        Dialog* createDialog(const Ogre::String& name, const std::list<Creature*>& npcs);
+        Dialog* createDialog(const Ogre::String& name, const CreatureList& npcs);
 
         virtual const Property getProperty(const CeGuiString& key) const;
         virtual void setProperty(const CeGuiString& key, const Property& value);
@@ -60,16 +60,16 @@
         class DialogConfiguration
         {
         public:
-            DialogConfiguration(const Ogre::String& name, const std::list<Creature*>& participants);
+            DialogConfiguration(const Ogre::String& name, const CreatureList& participants);
 
             const Ogre::String& getName() const;
-            const std::list<Creature*>& getParticipants() const;
+            const CreatureList& getParticipants() const;
 
             bool operator==(const DialogConfiguration&) const;
             bool operator<(const DialogConfiguration&) const;
         private:
             Ogre::String mDialogName;
-            std::list<Creature*> mParticipants;
+            CreatureList mParticipants;
         };
 
 

Modified: rl/trunk/engine/ai/include/DialogParagraph.h
===================================================================
--- rl/trunk/engine/ai/include/DialogParagraph.h	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ai/include/DialogParagraph.h	2009-05-20 20:03:56 UTC (rev 4933)
@@ -18,10 +18,10 @@
 #define __DialogParagraph_H__
 
 #include "AiPrerequisites.h"
+#include "Creature.h"
 
 namespace rl
 {
-    class Creature;
     class Dialog;
     class DialogElement;
     class DialogResponse;
@@ -39,7 +39,7 @@
         void _setParent(DialogElement* parent);
         virtual DialogResponse* getResponse() const;
         Creature* getSpeaker(Dialog* dialog) const;
-        std::list<Creature*> getListeners(Dialog* dialog) const;
+        CreatureList getListeners(Dialog* dialog) const;
 
     private:
         CeGuiString mText;

Modified: rl/trunk/engine/ai/src/Dialog.cpp
===================================================================
--- rl/trunk/engine/ai/src/Dialog.cpp	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ai/src/Dialog.cpp	2009-05-20 20:03:56 UTC (rev 4933)
@@ -100,7 +100,7 @@
         mAllParticipants.push_back(person);
     }
 
-    list<Creature*> Dialog::getParticipants() const
+    const CreatureList& Dialog::getParticipants() const
     {
         return mAllParticipants;
     }

Modified: rl/trunk/engine/ai/src/DialogLoader.cpp
===================================================================
--- rl/trunk/engine/ai/src/DialogLoader.cpp	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ai/src/DialogLoader.cpp	2009-05-20 20:03:56 UTC (rev 4933)
@@ -50,7 +50,7 @@
         mLoaderImplementation->parseDialog(stream, groupName);
     }
 
-    Dialog* DialogLoader::createDialog(const Ogre::String& name, const std::list<Creature*>& participants) const
+    Dialog* DialogLoader::createDialog(const Ogre::String& name, const CreatureList& participants) const
     {
         return mLoaderImplementation->createDialog(name, participants);
     }

Modified: rl/trunk/engine/ai/src/DialogLoaderImpl.cpp
===================================================================
--- rl/trunk/engine/ai/src/DialogLoaderImpl.cpp	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ai/src/DialogLoaderImpl.cpp	2009-05-20 20:03:56 UTC (rev 4933)
@@ -81,7 +81,7 @@
         shutdownXml();
     }
 
-    Dialog* DialogLoaderImpl::createDialog(const String& name, const std::list<Creature*>& participants) const
+    Dialog* DialogLoaderImpl::createDialog(const String& name, const CreatureList& participants) const
     {
         std::map<Ogre::String, DialogPrototype*>::const_iterator it =
         mDialogs.find(name);
@@ -607,7 +607,7 @@
         return it->second;
     }
 
-    Dialog* DialogLoaderImpl::DialogPrototype::createDialog(const list<Creature*>& participants)
+    Dialog* DialogLoaderImpl::DialogPrototype::createDialog(const CreatureList& participants)
     {
         Dialog* dialog = new Dialog();
 
@@ -618,7 +618,7 @@
         bool found1stNpc = false;
         Party playerChars = PartyManager::getSingleton().getCharacters();
 
-        for (list<Creature*>::const_iterator itPart = participants.begin(); itPart != participants.end(); ++itPart)
+        for (CreatureList::const_iterator itPart = participants.begin(); itPart != participants.end(); ++itPart)
         {
             Creature* curCr = *itPart;
 

Modified: rl/trunk/engine/ai/src/DialogManager.cpp
===================================================================
--- rl/trunk/engine/ai/src/DialogManager.cpp	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ai/src/DialogManager.cpp	2009-05-20 20:03:56 UTC (rev 4933)
@@ -78,7 +78,7 @@
 
                 PropertyArray npcs;
 
-                for (list<Creature*>::const_iterator itNpc = it->first.getParticipants().begin();
+                for (CreatureList::const_iterator itNpc = it->first.getParticipants().begin();
                     itNpc != it->first.getParticipants().end(); ++itNpc)
                 {
                     npcs.push_back(GameObjectManager::getSingleton().toProperty(*itNpc));
@@ -133,15 +133,15 @@
 
     Dialog* DialogManager::createDialog(const Ogre::String& name, Creature* npc)
     {
-        list<Creature*> npcs;
+        CreatureList npcs;
         npcs.push_back(npc);
 
         return createDialog(name, npcs);
     }
 
-    Dialog* DialogManager::createDialog(const Ogre::String& name, const list<Creature*>& npcs)
+    Dialog* DialogManager::createDialog(const Ogre::String& name, const CreatureList& npcs)
     {
-        list<Creature*> participants;
+        CreatureList participants;
 
         Party party = PartyManager::getSingleton().getCharacters();
         for (Party::const_iterator it = party.begin(); it != party.end(); ++it)
@@ -149,7 +149,7 @@
             participants.push_back(*it);
         }
 
-        for (list<Creature*>::const_iterator it = npcs.begin(); it != npcs.end(); ++it)
+        for (CreatureList::const_iterator it = npcs.begin(); it != npcs.end(); ++it)
         {
             participants.push_back(*it);
         }
@@ -178,7 +178,7 @@
     }
 
     DialogManager::DialogConfiguration::DialogConfiguration(const Ogre::String& name,
-            const list<Creature*>& participants)
+            const CreatureList& participants)
         : mDialogName(name), mParticipants(participants)
     {
     }
@@ -188,7 +188,7 @@
         return mDialogName;
     }
 
-    const list<Creature*>& DialogManager::DialogConfiguration::getParticipants() const
+    const CreatureList& DialogManager::DialogConfiguration::getParticipants() const
     {
         return mParticipants;
     }

Modified: rl/trunk/engine/ai/src/DialogParagraph.cpp
===================================================================
--- rl/trunk/engine/ai/src/DialogParagraph.cpp	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ai/src/DialogParagraph.cpp	2009-05-20 20:03:56 UTC (rev 4933)
@@ -76,14 +76,14 @@
         return dialog->getParticipant(getPerson());
     }
 
-    list<Creature*> DialogParagraph::getListeners(Dialog* dialog) const
+    CreatureList DialogParagraph::getListeners(Dialog* dialog) const
     {
         Creature* speaker = getSpeaker(dialog);
 
-        list<Creature*> listeners;
+        CreatureList listeners;
 
-        list<Creature*> participants = dialog->getParticipants();
-        for (list<Creature*>::iterator it = participants.begin(), end = participants.end(); it != end; ++it)
+        CreatureList participants = dialog->getParticipants();
+        for (CreatureList::iterator it = participants.begin(), end = participants.end(); it != end; ++it)
         {
             if (*it != speaker)
             {

Modified: rl/trunk/engine/script/swig/RlAi.swig
===================================================================
--- rl/trunk/engine/script/swig/RlAi.swig	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/script/swig/RlAi.swig	2009-05-20 20:03:56 UTC (rev 4933)
@@ -301,8 +301,8 @@
     {
     public:
         static rl::DialogManager& getSingleton();
-        rl::Dialog* createDialog(const Ogre::String& name, rl::Creature* npc);
-        rl::Dialog* createDialog(const Ogre::String& name, const std::list<rl::Creature*>& npcs);
+        // rl::Dialog* createDialog(const Ogre::String& name, rl::Creature* npc); // function overloading is not working correctly here in swig
+        rl::Dialog* createDialog(const Ogre::String& name, const rl::CreatureList& npcs);
     private:
         DialogManager();
     };

Modified: rl/trunk/engine/script/swig/RlCore.swig
===================================================================
--- rl/trunk/engine/script/swig/RlCore.swig	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/script/swig/RlCore.swig	2009-05-20 20:03:56 UTC (rev 4933)
@@ -1,461 +1,469 @@
-/* This source file is part of Rastullahs Lockenpracht.
- * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
- * 
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the Clarified Artistic License.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  Clarified Artistic License for more details.
- *
- *  You should have received a copy of the Clarified Artistic License
- *  along with this program; if not you can get it here
- *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
- */
-
-
-namespace rl {
-/*
-%{
-static swig_type_info *GameAreaType_dynamic_cast(void **ptr) {
-    rl::GameAreaType *pGameAreaType = static_cast<rl::GameAreaType *>(*ptr);
-    
-    rl::GameSphereAreaType *pGameSphereAreaType = dynamic_cast<rl::GameSphereAreaType*>(pGameAreaType);
-    if (pGameSphereAreaType){
-      *ptr=pGameSphereAreaType;
-      return SWIGTYPE_p_rl__GameSphereAreaType;
-    }    
-    
-    return 0;
-}
-%}
-DYNAMIC_CAST(SWIGTYPE_p_rl__GameAreaType, GameAreaType_dynamic_cast);
-*/
-
-
-%{
-static swig_type_info *BaseAnimation_dynamic_cast(void **ptr) {
-    rl::BaseAnimation *pBaseAnimation = static_cast<rl::BaseAnimation *>(*ptr);
-    
-    rl::FadeAnimation *pFadeAnimation = dynamic_cast<rl::FadeAnimation*>(pBaseAnimation);
-    if (pFadeAnimation){
-      *ptr=pFadeAnimation;
-      return SWIGTYPE_p_rl__FadeAnimation;
-    }    
-    rl::MeshAnimation *pMeshAnimation = dynamic_cast<rl::MeshAnimation*>(pBaseAnimation);
-    if (pMeshAnimation){
-      *ptr=pMeshAnimation;
-      return SWIGTYPE_p_rl__MeshAnimation;
-    }    
-    rl::TrackAnimation *pTrackAnimation = dynamic_cast<rl::TrackAnimation*>(pBaseAnimation);
-    if (pTrackAnimation){
-      *ptr=pTrackAnimation;
-      return SWIGTYPE_p_rl__TrackAnimation;
-    }  
-    
-    return 0;
-}
-%}
-DYNAMIC_CAST(SWIGTYPE_p_rl__BaseAnimation, BaseAnimation_dynamic_cast);
-
-
-%{
-static swig_type_info *ActorControlledObject_dynamic_cast(void **ptr)
-{
-    rl::ActorControlledObject *pActorControlledObject =
-        static_cast<rl::ActorControlledObject*>(*ptr);
-
-    rl::MergeableMeshObject *pMergeableMeshObject=dynamic_cast<rl::MergeableMeshObject*>(pActorControlledObject);
-    if (pMergeableMeshObject) {
-        *ptr=pMergeableMeshObject;
-        return SWIGTYPE_p_rl__MergeableMeshObject;
-    }
-    rl::MeshObject *pMeshObject=dynamic_cast<rl::MeshObject*>(pActorControlledObject);
-    if (pMeshObject) {
-        *ptr=pMeshObject;
-        return SWIGTYPE_p_rl__MeshObject;
-    }
-    rl::CameraObject *pCameraObject=dynamic_cast<rl::CameraObject*>(pActorControlledObject);
-    if (pCameraObject) {
-        *ptr=pCameraObject;
-        return SWIGTYPE_p_rl__CameraObject;
-    }
-    rl::LightObject *pLightObject=dynamic_cast<rl::LightObject*>(pActorControlledObject);
-    if (pLightObject) {
-        *ptr=pLightObject;
-        return SWIGTYPE_p_rl__LightObject;
-    }
-    rl::ParticleSystemObject *pParticleSystemObject=dynamic_cast<rl::ParticleSystemObject*>(pActorControlledObject);
-    if (pParticleSystemObject) {
-        *ptr=pParticleSystemObject;
-        return SWIGTYPE_p_rl__ParticleSystemObject;
-    }
-    rl::SoundObject *pSoundObject=dynamic_cast<rl::SoundObject*>(pActorControlledObject);
-    if (pSoundObject) {
-        *ptr=pSoundObject;
-        return SWIGTYPE_p_rl__SoundObject;
-    }
-    return 0;
-}
-%}
-DYNAMIC_CAST(SWIGTYPE_p_rl__ActorControlledObject, ActorControlledObject_dynamic_cast);
-
-%{
-static swig_type_info *Job_dynamic_cast(void **ptr) {
-    rl::Job *ppJob = static_cast<rl::Job*>(*ptr);
-      
-    
-    rl::PlayAnimationJob *pPlayAnimationJob = dynamic_cast<rl::PlayAnimationJob*>(ppJob);
-    if (pPlayAnimationJob){
-      *ptr=pPlayAnimationJob;
-      return SWIGTYPE_p_rl__PlayAnimationJob;
-    }    
-    rl::StartAnimationJob *pStartAnimationJob = dynamic_cast<rl::StartAnimationJob*>(ppJob);
-    if (pStartAnimationJob){
-      *ptr=pPlayAnimationJob;
-      return SWIGTYPE_p_rl__StartAnimationJob;
-    }    
-    rl::PlaySound3dJob *pPlaySound3dJob = dynamic_cast<rl::PlaySound3dJob*>(ppJob);
-    if (pPlaySound3dJob){
-      *ptr=pPlaySound3dJob;
-      return SWIGTYPE_p_rl__PlaySound3dJob;
-    }    
-    rl::PlaySound2dJob *pPlaySound2dJob = dynamic_cast<rl::PlaySound2dJob*>(ppJob);
-    if (pPlaySound2dJob){
-      *ptr=pPlaySound2dJob;
-      return SWIGTYPE_p_rl__PlaySound2dJob;
-    }
-    rl::JobQueue *pJobQueue = dynamic_cast<rl::JobQueue*>(ppJob);
-    if (pJobQueue) {
-      *ptr=pJobQueue;
-      return SWIGTYPE_p_rl__JobQueue;
-    }
-    rl::JobSet *pJobSet = dynamic_cast<rl::JobSet*>(ppJob);
-    if (pJobSet) {
-      *ptr=pJobSet;
-      return SWIGTYPE_p_rl__JobSet;
-    }
-    
-    return 0;
-}
-%}
-DYNAMIC_CAST(SWIGTYPE_p_rl__Job, Job_dynamic_cast)
-
-class ActorManager {
-private:
-	ActorManager();
-public:
-	static ActorManager& getSingleton(void);
-
-	rl::Actor* createParticleSystemActor(const Ogre::String& name, const Ogre::String& soundfile);
-    rl::Actor* createSoundStreamActor(const Ogre::String& name, const Ogre::String& soundfile);
-    rl::Actor* createSoundSampleActor(const Ogre::String& name, const Ogre::String& soundfile);
-    rl::Actor* createEmptyActor(const Ogre::String& name);
-    rl::Actor* createLightActor(const Ogre::String& name, rl::LightObject::LightTypes type );
-	rl::Actor* createMeshActor(const Ogre::String& name, const Ogre::String& meshname,
-		    rl::GeometryType geom = rl::GT_NONE,
-		    Ogre::Real mass = 0.0,
-		    bool mergeable = false);
-	rl::Actor* createBoxPrimitiveActor(const Ogre::String& name,
-            const Ogre::Vector3& minCorner, const Ogre::Vector3& maxCorner,
-            const Ogre::String& materialName = "", Ogre::Real mass = 0.0);
-		    
-	//void createDebugActors();
-	    
-	rl::Actor* getActor(const Ogre::String& name);
-	void destroyActor(rl::Actor* actor);
-    void destroyAllActors();
-};
-
-class World {
-public:	
-	enum FogMode { FOG_NONE, FOG_EXP, FOG_EXP2, FOG_LINEAR  };
-
-    virtual void setSkyBox (bool enable, const Ogre::String& materialName, Ogre::Real distance=2500, bool drawFirst=true );
-    virtual void setSkyDome (bool enable, const Ogre::String& materialName, Ogre::Real curvature=10, Ogre::Real tiling=8, Ogre::Real distance=4000, bool drawFirst=true );
-    virtual void setFog ( FogMode mode=FOG_NONE, const Ogre::ColourValue &colour=Ogre::ColourValue::White, Ogre::Real expDensity=0.001, Ogre::Real linearStart=0.0, Ogre::Real linearEnd=1.0);
-    virtual FogMode getFogMode (void) const;
-    virtual const Ogre::ColourValue & getFogColour (void) const;
-    virtual Ogre::Real getFogStart (void) const;
-    virtual Ogre::Real getFogEnd (void) const;	
-    virtual void setAmbientLight(Ogre::Real r, Ogre::Real g, Ogre::Real b);
-    virtual Ogre::Vector3 getStartPoint() const;
-    virtual void setCastShadows(bool);
+/* This source file is part of Rastullahs Lockenpracht.
+ * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+ * 
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the Clarified Artistic License.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  Clarified Artistic License for more details.
+ *
+ *  You should have received a copy of the Clarified Artistic License
+ *  along with this program; if not you can get it here
+ *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+ */
+
+
+namespace rl {
+/*
+%{
+static swig_type_info *GameAreaType_dynamic_cast(void **ptr) {
+    rl::GameAreaType *pGameAreaType = static_cast<rl::GameAreaType *>(*ptr);
+    
+    rl::GameSphereAreaType *pGameSphereAreaType = dynamic_cast<rl::GameSphereAreaType*>(pGameAreaType);
+    if (pGameSphereAreaType){
+      *ptr=pGameSphereAreaType;
+      return SWIGTYPE_p_rl__GameSphereAreaType;
+    }    
+    
+    return 0;
+}
+%}
+DYNAMIC_CAST(SWIGTYPE_p_rl__GameAreaType, GameAreaType_dynamic_cast);
+*/
+
+
+%{
+static swig_type_info *BaseAnimation_dynamic_cast(void **ptr) {
+    rl::BaseAnimation *pBaseAnimation = static_cast<rl::BaseAnimation *>(*ptr);
+    
+    rl::FadeAnimation *pFadeAnimation = dynamic_cast<rl::FadeAnimation*>(pBaseAnimation);
+    if (pFadeAnimation){
+      *ptr=pFadeAnimation;
+      return SWIGTYPE_p_rl__FadeAnimation;
+    }    
+    rl::MeshAnimation *pMeshAnimation = dynamic_cast<rl::MeshAnimation*>(pBaseAnimation);
+    if (pMeshAnimation){
+      *ptr=pMeshAnimation;
+      return SWIGTYPE_p_rl__MeshAnimation;
+    }    
+    rl::TrackAnimation *pTrackAnimation = dynamic_cast<rl::TrackAnimation*>(pBaseAnimation);
+    if (pTrackAnimation){
+      *ptr=pTrackAnimation;
+      return SWIGTYPE_p_rl__TrackAnimation;
+    }  
+    
+    return 0;
+}
+%}
+DYNAMIC_CAST(SWIGTYPE_p_rl__BaseAnimation, BaseAnimation_dynamic_cast);
+
+
+%{
+static swig_type_info *ActorControlledObject_dynamic_cast(void **ptr)
+{
+    rl::ActorControlledObject *pActorControlledObject =
+        static_cast<rl::ActorControlledObject*>(*ptr);
+
+    rl::MergeableMeshObject *pMergeableMeshObject=dynamic_cast<rl::MergeableMeshObject*>(pActorControlledObject);
+    if (pMergeableMeshObject) {
+        *ptr=pMergeableMeshObject;
+        return SWIGTYPE_p_rl__MergeableMeshObject;
+    }
+    rl::MeshObject *pMeshObject=dynamic_cast<rl::MeshObject*>(pActorControlledObject);
+    if (pMeshObject) {
+        *ptr=pMeshObject;
+        return SWIGTYPE_p_rl__MeshObject;
+    }
+    rl::CameraObject *pCameraObject=dynamic_cast<rl::CameraObject*>(pActorControlledObject);
+    if (pCameraObject) {
+        *ptr=pCameraObject;
+        return SWIGTYPE_p_rl__CameraObject;
+    }
+    rl::LightObject *pLightObject=dynamic_cast<rl::LightObject*>(pActorControlledObject);
+    if (pLightObject) {
+        *ptr=pLightObject;
+        return SWIGTYPE_p_rl__LightObject;
+    }
+    rl::ParticleSystemObject *pParticleSystemObject=dynamic_cast<rl::ParticleSystemObject*>(pActorControlledObject);
+    if (pParticleSystemObject) {
+        *ptr=pParticleSystemObject;
+        return SWIGTYPE_p_rl__ParticleSystemObject;
+    }
+    rl::SoundObject *pSoundObject=dynamic_cast<rl::SoundObject*>(pActorControlledObject);
+    if (pSoundObject) {
+        *ptr=pSoundObject;
+        return SWIGTYPE_p_rl__SoundObject;
+    }
+    return 0;
+}
+%}
+DYNAMIC_CAST(SWIGTYPE_p_rl__ActorControlledObject, ActorControlledObject_dynamic_cast);
+
+%{
+static swig_type_info *Job_dynamic_cast(void **ptr) {
+    rl::Job *ppJob = static_cast<rl::Job*>(*ptr);
+      
+    
+    rl::PlayAnimationJob *pPlayAnimationJob = dynamic_cast<rl::PlayAnimationJob*>(ppJob);
+    if (pPlayAnimationJob){
+      *ptr=pPlayAnimationJob;
+      return SWIGTYPE_p_rl__PlayAnimationJob;
+    }    
+    rl::StartAnimationJob *pStartAnimationJob = dynamic_cast<rl::StartAnimationJob*>(ppJob);
+    if (pStartAnimationJob){
+      *ptr=pPlayAnimationJob;
+      return SWIGTYPE_p_rl__StartAnimationJob;
+    }    
+    rl::PlaySound3dJob *pPlaySound3dJob = dynamic_cast<rl::PlaySound3dJob*>(ppJob);
+    if (pPlaySound3dJob){
+      *ptr=pPlaySound3dJob;
+      return SWIGTYPE_p_rl__PlaySound3dJob;
+    }    
+    rl::PlaySound2dJob *pPlaySound2dJob = dynamic_cast<rl::PlaySound2dJob*>(ppJob);
+    if (pPlaySound2dJob){
+      *ptr=pPlaySound2dJob;
+      return SWIGTYPE_p_rl__PlaySound2dJob;
+    }
+    rl::JobQueue *pJobQueue = dynamic_cast<rl::JobQueue*>(ppJob);
+    if (pJobQueue) {
+      *ptr=pJobQueue;
+      return SWIGTYPE_p_rl__JobQueue;
+    }
+    rl::JobSet *pJobSet = dynamic_cast<rl::JobSet*>(ppJob);
+    if (pJobSet) {
+      *ptr=pJobSet;
+      return SWIGTYPE_p_rl__JobSet;
+    }
+    
+    return 0;
+}
+%}
+DYNAMIC_CAST(SWIGTYPE_p_rl__Job, Job_dynamic_cast)
+
+class ActorManager {
+private:
+	ActorManager();
+public:
+	static ActorManager& getSingleton(void);
+
+	rl::Actor* createParticleSystemActor(const Ogre::String& name, const Ogre::String& soundfile);
+    rl::Actor* createSoundStreamActor(const Ogre::String& name, const Ogre::String& soundfile);
+    rl::Actor* createSoundSampleActor(const Ogre::String& name, const Ogre::String& soundfile);
+    rl::Actor* createEmptyActor(const Ogre::String& name);
+    rl::Actor* createLightActor(const Ogre::String& name, rl::LightObject::LightTypes type );
+	rl::Actor* createMeshActor(const Ogre::String& name, const Ogre::String& meshname,
+		    rl::GeometryType geom = rl::GT_NONE,
+		    Ogre::Real mass = 0.0,
+		    bool mergeable = false);
+	rl::Actor* createBoxPrimitiveActor(const Ogre::String& name,
+            const Ogre::Vector3& minCorner, const Ogre::Vector3& maxCorner,
+            const Ogre::String& materialName = "", Ogre::Real mass = 0.0);
+		    
+	//void createDebugActors();
+	    
+	rl::Actor* getActor(const Ogre::String& name);
+	void destroyActor(rl::Actor* actor);
+    void destroyAllActors();
+};
+
+class World {
+public:	
+	enum FogMode { FOG_NONE, FOG_EXP, FOG_EXP2, FOG_LINEAR  };
+
+    virtual void setSkyBox (bool enable, const Ogre::String& materialName, Ogre::Real distance=2500, bool drawFirst=true );
+    virtual void setSkyDome (bool enable, const Ogre::String& materialName, Ogre::Real curvature=10, Ogre::Real tiling=8, Ogre::Real distance=4000, bool drawFirst=true );
+    virtual void setFog ( FogMode mode=FOG_NONE, const Ogre::ColourValue &colour=Ogre::ColourValue::White, Ogre::Real expDensity=0.001, Ogre::Real linearStart=0.0, Ogre::Real linearEnd=1.0);
+    virtual FogMode getFogMode (void) const;
+    virtual const Ogre::ColourValue & getFogColour (void) const;
+    virtual Ogre::Real getFogStart (void) const;
+    virtual Ogre::Real getFogEnd (void) const;	
+    virtual void setAmbientLight(Ogre::Real r, Ogre::Real g, Ogre::Real b);
+    virtual Ogre::Vector3 getStartPoint() const;
+    virtual void setCastShadows(bool);
     virtual void clearScene() = 0;
     virtual void initializeDefaultCamera() = 0;
-
-    void setShowBoundingBoxes( bool dis );
-};
-
-/// Alles was mit AreaKrams zu tun hat
-%apply SWIGTYPE *DYNAMIC { GameAreaType * };
-
-%feature("director") GameAreaListener; 
-class GameAreaListener
-{
-public:
-	virtual ~GameAreaListener();
-    virtual void areaLeft(rl::GameAreaEvent *anEvent) = 0;
-    virtual void areaEntered(rl::GameAreaEvent *anEvent) = 0;
-};
-
-class GameAreaType
-{
-private:
-	GameAreaType();
-public:
-	unsigned long getQueryMask() const;
-    void setQueryMask( unsigned long mask );
-    void addQueryFlag( unsigned long flag  );
-    void removeQueryFlag( unsigned long flag );
-    const Ogre::Vector3& getQueryPosition() const;
-};
-
-/*
-class GameSphereAreaType : public GameAreaType
-{
-private:
-	GameSphereAreaType( Ogre::Vector3, Ogre::Real, unsigned long mask = 0xFFFFFFFF );
-public:
-};
-*/
-class GameAreaEventSource
-{
-private: 
-	GameAreaEventSource( rl::GameAreaType* areaType, rl::Actor* act );
-public:   
-    void addAreaListener( rl::GameAreaListener*  list );
-    void removeAreaListener( rl::GameAreaListener* list );
-    bool hasListeners( ) const;
-
-    rl::GameAreaType* getGameAreaType();
-    // const ActorMap& getInsideAreaList() const;
-    rl::Actor* getActor() const;
-};
-
-class GameAreaEvent
-{
-private:
-	GameAreaEvent( rl::GameAreaEventSource* src, const unsigned int reason );
-public:
-    rl::Actor* getProvokingActor() const;
-    rl::GameAreaEventSource* getSource() const;
-};
-
-class GameEventManager
-{
-private:
-    GameEventManager( );
-public:
-    void addSphereAreaListener( rl::Actor* actor, Ogre::Real radius, 
-		rl::GameAreaListener* list, unsigned long queryMask = 0xFFFFFFFF );
-	void addMeshAreaListener( rl::Actor* actor, Ogre::Entity* ent, rl::GeometryType geom, 
-	    rl::GameAreaListener* list, unsigned long queryMask = 0xFFFFFFFF );
-	void addMeshAreaListener( rl::Actor* actor, rl::GeometryType geom, 
-	    rl::GameAreaListener* list, unsigned long queryMask = 0xFFFFFFFF );
-	
-    void removeAreaListener( rl::GameAreaListener* list );
-    void removeAllAreas( rl::Actor* actor );
-
-    static rl::GameEventManager & getSingleton(void);
-};
-
-/// Alles was mit Animationen zu tun hat
-%apply SWIGTYPE *DYNAMIC { BaseAnimation * };
-
-class BaseAnimation {
-public:
-	bool isPaused() const;
-    void setPaused( bool isPaused );
-
-	bool isIgnoringGlobalSpeed() const;
-	void setIgnoringGlobalSpeed( bool isIgnoringGlobalSpeed );
-
-	Ogre::Real getSpeed() const;
-	void setSpeed( Ogre::Real speed );
-	void reverseAnimation();
-
-	void setTimesToPlay(unsigned int timesToPlay);
-	unsigned int getTimesPlayed() const;
-	void resetTimesPlayed();
-	unsigned int getTimesToPlay() const;
-	unsigned int getTimesToPlayLeft() const;
-	Ogre::Real getTimePlayed() const;
-
-	Ogre::Real getDelay(void) const;
-    void setDelay(Ogre::Real delay);
-    
-private:
-	BaseAnimation(  );
-};
-
-class FadeAnimation : public BaseAnimation {
-private:
-	FadeAnimation(  ); 
-public:
-	bool isDeleteOnFinish() const;
-	void setDeleteOnFinish( bool deleteOnFinish );
-};
-
-class MeshAnimation : public BaseAnimation {
-public:
-    rl::MeshObject* getMeshObject( );
-    
-	Ogre::Real getWeight(void) const;
-    void setWeight(Ogre::Real weight);
-private:
-	MeshAnimation(  ); 
-};
-
-class TrackAnimation : public BaseAnimation {
-public:
-	void addKeyFrame( Ogre::Real timePos );
-    void setKeyFrameTranslation( Ogre::Real timePos, Ogre::Real xPos, Ogre::Real yPos, Ogre::Real zPos );
-    void setKeyFrameRotation( Ogre::Real timePos, Ogre::Real xRotAxis, Ogre::Real yRotAxis, Ogre::Real zRotAxis, Ogre::Real angleUnits );
-    void setKeyFrameRotationQuaternion( Ogre::Real timePos, Ogre::Real w, Ogre::Real x, Ogre::Real y, Ogre::Real z );
-    void setKeyFrameScale( Ogre::Real timePos, Ogre::Real xScale, Ogre::Real yScale, Ogre::Real zScale );
-
-	void setInterpolationMode( rl::AnimationManager::InterpolationMode im );
-	rl::AnimationManager::InterpolationMode getInterpolationMode() const;
-
-	void setRotationInterpolationMode( rl::AnimationManager::RotationInterpolationMode im );
-	rl::AnimationManager::RotationInterpolationMode getRotationInterpolationMode() const;
-
-	void setUseShortestRotationPath ( bool useShortestPath );
-	bool getUseShortestRotationPath () const;
-private:
-	TrackAnimation(  ); 
-};
-
-class AnimationManager {
-private:
-	AnimationManager();
-public:
-	static AnimationManager& getSingleton(void);
-	
-	enum InterpolationMode { IM_LINEAR, IM_SPLINE };
-	enum RotationInterpolationMode { RIM_LINEAR, RIM_SPHERICAL };
-	
-	rl::TrackAnimation* createTrackAnimation(rl::Actor* actor, const Ogre::String& name, Ogre::Real length );
-	void removeAnimation( rl::MeshAnimation* anim );
-    void removeAnimation( rl::TrackAnimation* anim );
-    void removeAnimation( rl::FadeAnimation* anim );
-	void removeTrackAnimation( rl::Actor* act, const Ogre::String& name );
-	void removeAllTrackAnimations( rl::Actor* act );
-	
-	void setGlobalAnimationSpeed( Ogre::Real speed );
-	Ogre::Real getGlobalAnimationSpeed( ) const;
-
-    rl::FadeAnimation* fadeAnimation( rl::MeshAnimation* from, rl::MeshAnimation* to, Ogre::Real time );
-    rl::FadeAnimation* fadeAnimation( rl::MeshAnimation* fromLoop, rl::MeshAnimation* blendAnim, 
-        rl::MeshAnimation* toLoop, Ogre::Real loopDuration = 0.0);
-	
-	void setDefaultInterpolationMode( rl::AnimationManager::InterpolationMode im );
-	rl::AnimationManager::InterpolationMode getDefaultInterpolationMode() const;
-
-	void setDefaultRotationInterpolationMode( rl::AnimationManager::RotationInterpolationMode rim );
-	rl::AnimationManager::RotationInterpolationMode getDefaultRotationInterpolationMode() const;
-};
-
-%apply SWIGTYPE *DYNAMIC { ActorControlledObject * };
-class ActorControlledObject {
-private:
-    ActorControlledObject();
-public:
-    rl::Actor* getActor();
-    virtual void setActive(bool active);
-};
-
-class PhysicalObject : public rl::ActorControlledObject
-{
-};
-
-class MeshObject : public rl::PhysicalObject
-{
-private:
-    MeshObject(const Ogre::String& name, const Ogre::String& meshname);
-public:
-    
-    /// Groesse der Boundingbox
-    Ogre::AxisAlignedBox getDefaultSize() const;
-        
-	rl::BaseAnimation* getAnimation(const Ogre::String& animName);
-	rl::BaseAnimation* replaceAnimation(const Ogre::String& oldAnimName, 
-	    const Ogre::String& newAnimName, float speed=1.0, unsigned int timesToPlay=0);
-	rl::BaseAnimation* startAnimation(const Ogre::String& animName, 
-		float speed=1.0, unsigned int timesToPlay=0);
-    void stopAnimation(const Ogre::String&);
-    void stopAllAnimations();
-    
-    void setCastShadows (bool enabled);
-    bool getCastShadows (void) const;    
-};
-
-class MergeableMeshObject : public rl::MeshObject
-{
-private:
-    MergeableMeshObject(const Ogre::String& name, const Ogre::String& meshname);
-public:
-	void addSubmesh(const Ogre::String& meshname, const Ogre::String& meshfile);
-	void removeSubmesh(const Ogre::String& submeshToRemove);
-	void replaceSubmesh(const Ogre::String& submeshToReplace, const Ogre::String& substituteMeshname);
-	void setBaseMeshPart(const Ogre::String& partname);
-};
-
-class LightObject : public rl::ActorControlledObject
-{
-private:
-    LightObject(const Ogre::String& name, rl::LightObject::LightTypes type);
-public:
-	enum LightTypes { LT_POINT, LT_DIRECTIONAL, LT_SPOTLIGHT };
-
-    void setAttenuation(float range, float constant,
-        float linear, float quadric);
-    void setDiffuseColour(float red, float green, float blue);
-    void setDiffuseColour(const Ogre::ColourValue& colour);
-    void setDirection(float x, float y, float z);
-    void setSpecularColour(float red, float green, float blue);
-    void setSpecularColour(const Ogre::ColourValue& colour);
-    void setSpotlightRange(float innerangle, float outerangle,
-        float falloff);
-    void setCastShadows( bool cast );
-};
-
-
-class SoundObject : public rl::ActorControlledObject
-{
-public:
-    SoundObject(rl::Sound *sound, const Ogre::String &name);
-    virtual ~SoundObject();
-    
-  	void play(bool destroyWhenDone=false);
-
-	void load();
-	void unload();
-	bool is3d() const;
-	void set3d( bool is3d );
-
-    /// Gibt zurck ob der Sound geloopt werden soll 
-    bool isLooping() const;
-    /// Setzt ob der Sound geloopt werden soll 
-    void setLooping( bool looping );
-    /// Pausiert den Sound.
-    void pause(bool pausing);
-    /// Ist der Sound pausiert?
-    bool isPaused();
-    /// Stoppt den Sound.
-    void stop();
-	/// Setzt die Lautstaerke (1.0 = volle Lautstrke)
-	void setVolume(float volume = 1.0);
-    // Sets the priority of this sound
-    void setPriority(const int priority);
-    // Gets the priority of this sound
-    const int getPriority() const;
-	
-	rl::Sound* getSound();
-};
-
+
+    void setShowBoundingBoxes( bool dis );
+};
+
+/// Alles was mit AreaKrams zu tun hat
+%apply SWIGTYPE *DYNAMIC { GameAreaType * };
+
+%feature("director") GameAreaListener; 
+class GameAreaListener
+{
+public:
+	virtual ~GameAreaListener();
+    virtual void areaLeft(rl::GameAreaEvent *anEvent) = 0;
+    virtual void areaEntered(rl::GameAreaEvent *anEvent) = 0;
+};
+
+class GameAreaType
+{
+private:
+	GameAreaType();
+public:
+	virtual unsigned long getQueryMask() const = 0;
+    virtual void setQueryMask( unsigned long mask = 0xFFFFFFFF ) = 0;
+    void addQueryFlag( unsigned long flag  );
+    void removeQueryFlag( unsigned long flag );
+    virtual void setQueryPosition( const Ogre::Vector3& vec ) = 0;
+    virtual Ogre::Vector3 getQueryPosition() const = 0;
+    virtual void setQueryOrientation( const Ogre::Quaternion& ori ) = 0;
+    virtual Ogre::Quaternion getQueryOrientation() const = 0;
+    virtual OgreNewt::Body* getBody() { return NULL;}
+    virtual Ogre::Real getDistance(rl::Actor* actor) = 0;
+    virtual Ogre::Real getTransitionDistance() const = 0;
+    virtual void setTransitionDistance(Ogre::Real dist) = 0;
+    virtual bool isInside(rl::Actor *actor) = 0;
+};
+
+/*
+class GameSphereAreaType : public GameAreaType
+{
+private:
+	GameSphereAreaType( Ogre::Vector3, Ogre::Real, unsigned long mask = 0xFFFFFFFF );
+public:
+};
+*/
+class GameAreaEventSource
+{
+private: 
+	GameAreaEventSource( rl::GameAreaType* areaType, rl::Actor* act );
+public:   
+    void addAreaListener( rl::GameAreaListener*  list );
+    void removeAreaListener( rl::GameAreaListener* list );
+    bool hasListeners( ) const;
+
+    rl::GameAreaType* getGameAreaType();
+    // const ActorMap& getInsideAreaList() const;
+    rl::Actor* getActor() const;
+};
+
+class GameAreaEvent
+{
+private:
+	GameAreaEvent( rl::GameAreaEventSource* src, const unsigned int reason );
+public:
+    rl::Actor* getProvokingActor() const;
+    rl::GameAreaEventSource* getSource() const;
+};
+
+class GameEventManager
+{
+private:
+    GameEventManager( );
+public:
+    void addSphereAreaListener( rl::Actor* actor, Ogre::Real radius, 
+		rl::GameAreaListener* list, unsigned long queryMask = 0xFFFFFFFF );
+	void addMeshAreaListener( rl::Actor* actor, Ogre::Entity* ent, rl::GeometryType geom, 
+	    rl::GameAreaListener* list, unsigned long queryMask = 0xFFFFFFFF );
+	void addMeshAreaListener( rl::Actor* actor, rl::GeometryType geom, 
+	    rl::GameAreaListener* list, unsigned long queryMask = 0xFFFFFFFF );
+	
+    void removeAreaListener( rl::GameAreaListener* list );
+    void removeAllAreas( rl::Actor* actor );
+
+    static rl::GameEventManager & getSingleton(void);
+};
+
+/// Alles was mit Animationen zu tun hat
+%apply SWIGTYPE *DYNAMIC { BaseAnimation * };
+
+class BaseAnimation {
+public:
+	bool isPaused() const;
+    void setPaused( bool isPaused );
+
+	bool isIgnoringGlobalSpeed() const;
+	void setIgnoringGlobalSpeed( bool isIgnoringGlobalSpeed );
+
+	Ogre::Real getSpeed() const;
+	void setSpeed( Ogre::Real speed );
+	void reverseAnimation();
+
+	void setTimesToPlay(unsigned int timesToPlay);
+	unsigned int getTimesPlayed() const;
+	void resetTimesPlayed();
+	unsigned int getTimesToPlay() const;
+	unsigned int getTimesToPlayLeft() const;
+	Ogre::Real getTimePlayed() const;
+
+	Ogre::Real getDelay(void) const;
+    void setDelay(Ogre::Real delay);
+    
+private:
+	BaseAnimation(  );
+};
+
+class FadeAnimation : public BaseAnimation {
+private:
+	FadeAnimation(  ); 
+public:
+	bool isDeleteOnFinish() const;
+	void setDeleteOnFinish( bool deleteOnFinish );
+};
+
+class MeshAnimation : public BaseAnimation {
+public:
+    rl::MeshObject* getMeshObject( );
+    
+	Ogre::Real getWeight(void) const;
+    void setWeight(Ogre::Real weight);
+private:
+	MeshAnimation(  ); 
+};
+
+class TrackAnimation : public BaseAnimation {
+public:
+	void addKeyFrame( Ogre::Real timePos );
+    void setKeyFrameTranslation( Ogre::Real timePos, Ogre::Real xPos, Ogre::Real yPos, Ogre::Real zPos );
+    void setKeyFrameRotation( Ogre::Real timePos, Ogre::Real xRotAxis, Ogre::Real yRotAxis, Ogre::Real zRotAxis, Ogre::Real angleUnits );
+    void setKeyFrameRotationQuaternion( Ogre::Real timePos, Ogre::Real w, Ogre::Real x, Ogre::Real y, Ogre::Real z );
+    void setKeyFrameScale( Ogre::Real timePos, Ogre::Real xScale, Ogre::Real yScale, Ogre::Real zScale );
+
+	void setInterpolationMode( rl::AnimationManager::InterpolationMode im );
+	rl::AnimationManager::InterpolationMode getInterpolationMode() const;
+
+	void setRotationInterpolationMode( rl::AnimationManager::RotationInterpolationMode im );
+	rl::AnimationManager::RotationInterpolationMode getRotationInterpolationMode() const;
+
+	void setUseShortestRotationPath ( bool useShortestPath );
+	bool getUseShortestRotationPath () const;
+private:
+	TrackAnimation(  ); 
+};
+
+class AnimationManager {
+private:
+	AnimationManager();
+public:
+	static AnimationManager& getSingleton(void);
+	
+	enum InterpolationMode { IM_LINEAR, IM_SPLINE };
+	enum RotationInterpolationMode { RIM_LINEAR, RIM_SPHERICAL };
+	
+	rl::TrackAnimation* createTrackAnimation(rl::Actor* actor, const Ogre::String& name, Ogre::Real length );
+	void removeAnimation( rl::MeshAnimation* anim );
+    void removeAnimation( rl::TrackAnimation* anim );
+    void removeAnimation( rl::FadeAnimation* anim );
+	void removeTrackAnimation( rl::Actor* act, const Ogre::String& name );
+	void removeAllTrackAnimations( rl::Actor* act );
+	
+	void setGlobalAnimationSpeed( Ogre::Real speed );
+	Ogre::Real getGlobalAnimationSpeed( ) const;
+
+    rl::FadeAnimation* fadeAnimation( rl::MeshAnimation* from, rl::MeshAnimation* to, Ogre::Real time );
+    rl::FadeAnimation* fadeAnimation( rl::MeshAnimation* fromLoop, rl::MeshAnimation* blendAnim, 
+        rl::MeshAnimation* toLoop, Ogre::Real loopDuration = 0.0);
+	
+	void setDefaultInterpolationMode( rl::AnimationManager::InterpolationMode im );
+	rl::AnimationManager::InterpolationMode getDefaultInterpolationMode() const;
+
+	void setDefaultRotationInterpolationMode( rl::AnimationManager::RotationInterpolationMode rim );
+	rl::AnimationManager::RotationInterpolationMode getDefaultRotationInterpolationMode() const;
+};
+
+%apply SWIGTYPE *DYNAMIC { ActorControlledObject * };
+class ActorControlledObject {
+private:
+    ActorControlledObject();
+public:
+    rl::Actor* getActor();
+    virtual void setActive(bool active);
+};
+
+class PhysicalObject : public rl::ActorControlledObject
+{
+};
+
+class MeshObject : public rl::PhysicalObject
+{
+private:
+    MeshObject(const Ogre::String& name, const Ogre::String& meshname);
+public:
+    
+    /// Groesse der Boundingbox
+    Ogre::AxisAlignedBox getDefaultSize() const;
+        
+	rl::BaseAnimation* getAnimation(const Ogre::String& animName);
+	rl::BaseAnimation* replaceAnimation(const Ogre::String& oldAnimName, 
+	    const Ogre::String& newAnimName, float speed=1.0, unsigned int timesToPlay=0);
+	rl::BaseAnimation* startAnimation(const Ogre::String& animName, 
+		float speed=1.0, unsigned int timesToPlay=0);
+    void stopAnimation(const Ogre::String&);
+    void stopAllAnimations();
+    
+    void setCastShadows (bool enabled);
+    bool getCastShadows (void) const;    
+};
+
+class MergeableMeshObject : public rl::MeshObject
+{
+private:
+    MergeableMeshObject(const Ogre::String& name, const Ogre::String& meshname);
+public:
+	void addSubmesh(const Ogre::String& meshname, const Ogre::String& meshfile);
+	void removeSubmesh(const Ogre::String& submeshToRemove);
+	void replaceSubmesh(const Ogre::String& submeshToReplace, const Ogre::String& substituteMeshname);
+	void setBaseMeshPart(const Ogre::String& partname);
+};
+
+class LightObject : public rl::ActorControlledObject
+{
+private:
+    LightObject(const Ogre::String& name, rl::LightObject::LightTypes type);
+public:
+	enum LightTypes { LT_POINT, LT_DIRECTIONAL, LT_SPOTLIGHT };
+
+    void setAttenuation(float range, float constant,
+        float linear, float quadric);
+    void setDiffuseColour(float red, float green, float blue);
+    void setDiffuseColour(const Ogre::ColourValue& colour);
+    void setDirection(float x, float y, float z);
+    void setSpecularColour(float red, float green, float blue);
+    void setSpecularColour(const Ogre::ColourValue& colour);
+    void setSpotlightRange(float innerangle, float outerangle,
+        float falloff);
+    void setCastShadows( bool cast );
+};
+
+
+class SoundObject : public rl::ActorControlledObject
+{
+public:
+    SoundObject(rl::Sound *sound, const Ogre::String &name);
+    virtual ~SoundObject();
+    
+  	void play(bool destroyWhenDone=false);
+
+	void load();
+	void unload();
+	bool is3d() const;
+	void set3d( bool is3d );
+
+    /// Gibt zurck ob der Sound geloopt werden soll 
+    bool isLooping() const;
+    /// Setzt ob der Sound geloopt werden soll 
+    void setLooping( bool looping );
+    /// Pausiert den Sound.
+    void pause(bool pausing);
+    /// Ist der Sound pausiert?
+    bool isPaused();
+    /// Stoppt den Sound.
+    void stop();
+	/// Setzt die Lautstaerke (1.0 = volle Lautstrke)
+	void setVolume(float volume = 1.0);
+    // Sets the priority of this sound
+    void setPriority(const int priority);
+    // Gets the priority of this sound
+    const int getPriority() const;
+	
+	rl::Sound* getSound();
+};
+
 class SoundStitchingObject : public rl::ActorControlledObject
 {
 public:
@@ -464,20 +472,20 @@
     /// Destruktor
     virtual ~SoundStitchingObject();
       
-    /**
-     * Interne Methode. Wird vom Aktor aufgerufen, wenn sich dessen
-     * Status gendert hat. (Position, Orientierung, etc)
-     * Die Standardimplementierung macht nichts, kann aber
-     * von abgeleiteten Klassen berschrieben werden.
-     */
-    virtual void _update();
-    
-    /// Wie ActorControlledObject::getMovableObject()
-    /// Nur schon gebrauchsfertig gecastet.
-    rl::SoundStitching* getSoundStitching() const;
-    
-    
-    virtual Ogre::String getObjectType() const;
+    /**
+     * Interne Methode. Wird vom Aktor aufgerufen, wenn sich dessen
+     * Status gendert hat. (Position, Orientierung, etc)
+     * Die Standardimplementierung macht nichts, kann aber
+     * von abgeleiteten Klassen berschrieben werden.
+     */
+    virtual void _update();
+    
+    /// Wie ActorControlledObject::getMovableObject()
+    /// Nur schon gebrauchsfertig gecastet.
+    rl::SoundStitching* getSoundStitching() const;
+    
+    
+    virtual Ogre::String getObjectType() const;
 
     // Wollen wir 3D?
     bool is3d() const;
@@ -490,8 +498,8 @@
     void setLooping(bool looping);
     float getLength() const;
     /// Pausiert den Sound.
-    void pause();
-    /// Pausiert den Sound.
+    void pause();
+    /// Pausiert den Sound.
     void pause(bool pausing);
     /// Ist der Sound pausiert?
     bool isPaused();
@@ -505,12 +513,12 @@
     void setPriority(const int priority);
     // Gets the priority of this sound
     const int getPriority() const;
-	/// L?dt den Ton
-	void load();
-    /// Entl?dt den Sound.
-    void unload();
-    /// Aktivieren
-    virtual void setActive(bool active);
+	/// L?dt den Ton
+	void load();
+    /// Entl?dt den Sound.
+    void unload();
+    /// Aktivieren
+    virtual void setActive(bool active);
 
     /// Start sound sequence
     void start();
@@ -530,717 +538,717 @@
     virtual unsigned int getPlayingSlot() = 0;
 }; 
 
-
-class ParticleSystemObject : public rl::ActorControlledObject
-{
-public:
-     void setActive(bool active);
-private:
-	 ParticleSystemObject(const Ogre::String& name, const Ogre::String& partSys );
-};
-
-class CameraObject : public rl::PhysicalObject
-{
-private:
-    CameraObject(const Ogre::String& name);
-public:
-};
-
-class Actor {
-private:
-	Actor(const Ogre::String& name);
-public:	
-	static const Ogre::String DEFAULT_SLOT_NAME;
-
-	const const Ogre::String& getName() const;
-	const Ogre::Vector3& getPosition(void);
-	const Ogre::Quaternion& getOrientation(void);
-	const Ogre::Vector3& getWorldPosition(void);
-	const Ogre::Quaternion& getWorldOrientation(void);
-
-    void setPosition(Ogre::Real x, Ogre::Real y, Ogre::Real z);
-    void setPosition( const Ogre::Vector3& );
-    void setOrientation( const Ogre::Quaternion& );
-    
-    rl::ActorControlledObject* getControlledObject();
-    Ogre::UserDefinedObject* getGameObject() const;
-    rl::PhysicalThing* getPhysicalThing() const;
-
-    void setScale( Ogre::Real sx, Ogre::Real sy, Ogre::Real sz );
-    void placeIntoScene(
-            const Ogre::Vector3& position = Ogre::Vector3::ZERO,
-            const Ogre::Quaternion& orientation = Ogre::Quaternion::IDENTITY,
-            const Ogre::String& physicsBone = "");  
-    void placeIntoScene(
-        Ogre::Real px, Ogre::Real py, Ogre::Real pz,
-        Ogre::Real ow, Ogre::Real ox, Ogre::Real oy, Ogre::Real oz, 
-        const Ogre::String& physicsBone = "");
-    void removeFromScene();
-           
-    void attach( 
-            Actor* actor,
-            const Ogre::String& childSlot = "SLOT_DEFAULT",
-            const Ogre::Vector3& offsetPosition=Ogre::Vector3::ZERO,
-            const Ogre::Quaternion& offsetOrientation=Ogre::Quaternion::IDENTITY
-            );
-   	void attachAxisRot( 
-            rl::Actor* actor,
-            const Ogre::String& childSlot = "SLOT_DEFAULT",            
-            const Ogre::Vector3& offsetPosition=Ogre::Vector3::ZERO,
-            const Ogre::Vector3& offsetAxis=Ogre::Vector3::UNIT_X,
-            const Ogre::Radian& offsetRotation=Ogre::Radian(0) );
-    void attachToSlot( 
-            Actor* actor,
-            const Ogre::String& slot,
-            const Ogre::String& childSlot = "SLOT_DEFAULT",
-            const Ogre::Vector3& offsetPosition=Ogre::Vector3::ZERO,
-			const Ogre::Quaternion& offsetOrientation=Ogre::Quaternion::IDENTITY
-			);
-    void attachToSlotAxisRot( 
-            rl::Actor* actor,
-            const Ogre::String& slot,
-            const Ogre::String& childSlot = "SLOT_DEFAULT",            
-			const Ogre::Vector3& offsetPosition=Ogre::Vector3::ZERO,
-            const Ogre::Vector3& offsetAxis=Ogre::Vector3::UNIT_X,
-            const Ogre::Radian& offsetRotation=Ogre::Radian(0) );
-                    
-    void detach(rl::Actor* actor);
-
-    void merge(Actor* actor, const Ogre::String& slot);
-
-    rl::Actor* getChildByName(const Ogre::String& name ) const;
-    
-    void setVisible( bool vis, bool cascade = true );
-	bool isVisible() const;
-       
-	void roll(Ogre::Real angleunits);
-	void pitch(Ogre::Real angleunits);
-	void yaw(Ogre::Real angleunits);
-	
-	unsigned long getQueryFlags() const;
-    void setQueryFlags( unsigned long mask = 0xFFFFFFFF );
-    void addQueryFlag( unsigned long flag  );
-    void removeQueryFlag( unsigned long flag );
-    void setListenerOf (Ogre::SceneNode *node);
-    Ogre::Bone *_getBone() const;
-    Ogre::SceneNode* _getSceneNode() const;
-    
-};
-
-%feature("director") PhysicsContactListener; 
-class PhysicsContactListener
-{
-public:
-    PhysicsContactListener();
-    virtual ~PhysicsContactListener();
-    
-    virtual void contactOccured(rl::Actor* actor1, rl::Actor* actor2) = 0;
-};
-
-class PhysicalThing
-{
-public:
-    PhysicalThing(
-			rl::GeometryType geomType,
-			rl::PhysicalObject* po, 
-			Ogre::Real mass, 
-			bool hullModifier = false);
-
-    void setPosition(Ogre::Real x, Ogre::Real y, Ogre::Real z);
-    void setOrientation(Ogre::Real w, Ogre::Real x, Ogre::Real y, Ogre::Real z);
-    
-    void setVelocity(const Ogre::Vector3& vel);
-
-    // Sets the vector, that will always point up.
-    void setUpConstraint(const Ogre::Vector3& upVector = Ogre::Vector3::UNIT_Y);
-    Ogre::Vector3 getUpConstraint() const;
-    void clearUpConstraint();
-
-    rl::Actor* getActor() const;
-
-    void addForce(const Ogre::Vector3& force);
-
-    void freeze();
-    void unfreeze();
-        
-    void setGravityOverride(bool override,
-        Ogre::Real x = 0.0f, Ogre::Real y = 0.0f, Ogre::Real z = 0.0f);
-        
-    Ogre::Real getMass() const;
-    void setMass(Ogre::Real mass);
-    
-    void updateCollisionHull();
-
-    void setContactListener(rl::PhysicsContactListener* listener);
-    rl::PhysicsContactListener* getContactListener() const;
-
-    void fitToPose(const Ogre::String& name);
-
-};
-
-enum GeometryType {
-    GT_NONE = -1,
-    GT_BOX = 0,
-    GT_SPHERE = 1,
-    GT_CAPSULE = 2,
-    GT_MESH = 3,
-    GT_ELLIPSOID = 4,
-    GT_CONVEXHULL = 5
-};
-    
-
-
-class PhysicsManager
-{
-public:
-
-    PhysicsManager();
-	static PhysicsManager& getSingleton(void);
-    
-    rl::PhysicalThing* createPhysicalThing(rl::GeometryType geomType, rl::PhysicalObject* po,
-		Ogre::Real mass);
-
-    void removeAndDestroyPhysicalThing(PhysicalThing* thing);
-
-    void createPhysicsProxy(PhysicalThing* pt);
-
-    void createPhysicsProxy_RagDoll(PhysicalThing* pt);
-
-    void destroyPhysicsProxy(PhysicalThing* pt);
-
-    // Global Settings
-    void setGravity(Ogre::Real x, Ogre::Real y, Ogre::Real z);
-    Ogre::Vector3 getGravity() const;
-
-    bool isEnabled() const;
-    void setEnabled(bool enabled);
-	
-	void toggleDebugMode();
-    bool isDebugMode() const;
-};
-
-class DebugVisualsManager
-{
-public:
-    DebugVisualsManager();
-    static DebugVisualsManager& getSingleton(void);
-
-    void show(unsigned long flags);
-    void hide(unsigned long flags);
-    void showAll();
-    void hideAll();
-    void toggleAll();
-};
-  
-class ContentLoader;
-    
-%feature("director") ContentModule; 
-class ContentModule
-{
-public:
-	ContentModule(
-		const Ogre::String& id, 
-		const rl::CeGuiString& name, 
-		bool common, 
-		long minimumEngineVersion);
-		
-	virtual ~ContentModule();
-		
-	virtual const Ogre::StringVector& getDependencies() const = 0;
-	virtual const Ogre::StringVector& getTextureLocations() const = 0;
-	virtual const Ogre::StringVector& getSoundLocations() const = 0;
-	virtual const Ogre::StringVector& getModelLocations() const = 0;
-
-	virtual void start() = 0;
-	
-	void loadContent();
-	
-	void registerContentLoader(rl::ContentLoader* loader);
-};
-
-%feature("director") ContentLoader;
-class ContentLoader
-{
-public:
-    ContentLoader(const Ogre::String& resourceGroup);
-    virtual ~ContentLoader();
-
-    virtual void loadContent() = 0;
-    virtual void unloadContent() = 0;
-
-    virtual const CEGUI::String getClassName() const = 0;
-};
-
-class CoreSubsystem {
-private:
-	CoreSubsystem();
-public:
-    static CoreSubsystem& getSingleton(void);
-    
+
+class ParticleSystemObject : public rl::ActorControlledObject
+{
+public:
+     void setActive(bool active);
+private:
+	 ParticleSystemObject(const Ogre::String& name, const Ogre::String& partSys );
+};
+
+class CameraObject : public rl::PhysicalObject
+{
+private:
+    CameraObject(const Ogre::String& name);
+public:
+};
+
+class Actor {
+private:
+	Actor(const Ogre::String& name);
+public:	
+	static const Ogre::String DEFAULT_SLOT_NAME;
+
+	const const Ogre::String& getName() const;
+	const Ogre::Vector3& getPosition(void);
+	const Ogre::Quaternion& getOrientation(void);
+	const Ogre::Vector3& getWorldPosition(void);
+	const Ogre::Quaternion& getWorldOrientation(void);
+
+    void setPosition(Ogre::Real x, Ogre::Real y, Ogre::Real z);
+    void setPosition( const Ogre::Vector3& );
+    void setOrientation( const Ogre::Quaternion& );
+    
+    rl::ActorControlledObject* getControlledObject();
+    Ogre::UserDefinedObject* getGameObject() const;
+    rl::PhysicalThing* getPhysicalThing() const;
+
+    void setScale( Ogre::Real sx, Ogre::Real sy, Ogre::Real sz );
+    void placeIntoScene(
+            const Ogre::Vector3& position = Ogre::Vector3::ZERO,
+            const Ogre::Quaternion& orientation = Ogre::Quaternion::IDENTITY,
+            const Ogre::String& physicsBone = "");  
+    void placeIntoScene(
+        Ogre::Real px, Ogre::Real py, Ogre::Real pz,
+        Ogre::Real ow, Ogre::Real ox, Ogre::Real oy, Ogre::Real oz, 
+        const Ogre::String& physicsBone = "");
+    void removeFromScene();
+           
+    void attach( 
+            Actor* actor,
+            const Ogre::String& childSlot = "SLOT_DEFAULT",
+            const Ogre::Vector3& offsetPosition=Ogre::Vector3::ZERO,
+            const Ogre::Quaternion& offsetOrientation=Ogre::Quaternion::IDENTITY
+            );
+   	void attachAxisRot( 
+            rl::Actor* actor,
+            const Ogre::String& childSlot = "SLOT_DEFAULT",            
+            const Ogre::Vector3& offsetPosition=Ogre::Vector3::ZERO,
+            const Ogre::Vector3& offsetAxis=Ogre::Vector3::UNIT_X,
+            const Ogre::Radian& offsetRotation=Ogre::Radian(0) );
+    void attachToSlot( 
+            Actor* actor,
+            const Ogre::String& slot,
+            const Ogre::String& childSlot = "SLOT_DEFAULT",
+            const Ogre::Vector3& offsetPosition=Ogre::Vector3::ZERO,
+			const Ogre::Quaternion& offsetOrientation=Ogre::Quaternion::IDENTITY
+			);
+    void attachToSlotAxisRot( 
+            rl::Actor* actor,
+            const Ogre::String& slot,
+            const Ogre::String& childSlot = "SLOT_DEFAULT",            
+			const Ogre::Vector3& offsetPosition=Ogre::Vector3::ZERO,
+            const Ogre::Vector3& offsetAxis=Ogre::Vector3::UNIT_X,
+            const Ogre::Radian& offsetRotation=Ogre::Radian(0) );
+                    
+    void detach(rl::Actor* actor);
+
+    void merge(Actor* actor, const Ogre::String& slot);
+
+    rl::Actor* getChildByName(const Ogre::String& name ) const;
+    
+    void setVisible( bool vis, bool cascade = true );
+	bool isVisible() const;
+       
+	void roll(Ogre::Real angleunits);
+	void pitch(Ogre::Real angleunits);
+	void yaw(Ogre::Real angleunits);
+	
+	unsigned long getQueryFlags() const;
+    void setQueryFlags( unsigned long mask = 0xFFFFFFFF );
+    void addQueryFlag( unsigned long flag  );
+    void removeQueryFlag( unsigned long flag );
+    void setListenerOf (Ogre::SceneNode *node);
+    Ogre::Bone *_getBone() const;
+    Ogre::SceneNode* _getSceneNode() const;
+    
+};
+
+%feature("director") PhysicsContactListener; 
+class PhysicsContactListener
+{
+public:
+    PhysicsContactListener();
+    virtual ~PhysicsContactListener();
+    
+    virtual void contactOccured(rl::Actor* actor1, rl::Actor* actor2) = 0;
+};
+
+class PhysicalThing
+{
+public:
+    PhysicalThing(
+			rl::GeometryType geomType,
+			rl::PhysicalObject* po, 
+			Ogre::Real mass, 
+			bool hullModifier = false);
+
+    void setPosition(Ogre::Real x, Ogre::Real y, Ogre::Real z);
+    void setOrientation(Ogre::Real w, Ogre::Real x, Ogre::Real y, Ogre::Real z);
+    
+    void setVelocity(const Ogre::Vector3& vel);
+
+    // Sets the vector, that will always point up.
+    void setUpConstraint(const Ogre::Vector3& upVector = Ogre::Vector3::UNIT_Y);
+    Ogre::Vector3 getUpConstraint() const;
+    void clearUpConstraint();
+
+    rl::Actor* getActor() const;
+
+    void addForce(const Ogre::Vector3& force);
+
+    void freeze();
+    void unfreeze();
+        
+    void setGravityOverride(bool override,
+        Ogre::Real x = 0.0f, Ogre::Real y = 0.0f, Ogre::Real z = 0.0f);
+        
+    Ogre::Real getMass() const;
+    void setMass(Ogre::Real mass);
+    
+    void updateCollisionHull();
+
+    void setContactListener(rl::PhysicsContactListener* listener);
+    rl::PhysicsContactListener* getContactListener() const;
+
+    void fitToPose(const Ogre::String& name);
+
+};
+
+enum GeometryType {
+    GT_NONE = -1,
+    GT_BOX = 0,
+    GT_SPHERE = 1,
+    GT_CAPSULE = 2,
+    GT_MESH = 3,
+    GT_ELLIPSOID = 4,
+    GT_CONVEXHULL = 5
+};
+    
+
+
+class PhysicsManager
+{
+public:
+
+    PhysicsManager();
+	static PhysicsManager& getSingleton(void);
+    
+    rl::PhysicalThing* createPhysicalThing(rl::GeometryType geomType, rl::PhysicalObject* po,
+		Ogre::Real mass);
+
+    void removeAndDestroyPhysicalThing(PhysicalThing* thing);
+
+    void createPhysicsProxy(PhysicalThing* pt);
+
+    void createPhysicsProxy_RagDoll(PhysicalThing* pt);
+
+    void destroyPhysicsProxy(PhysicalThing* pt);
+
+    // Global Settings
+    void setGravity(Ogre::Real x, Ogre::Real y, Ogre::Real z);
+    Ogre::Vector3 getGravity() const;
+
+    bool isEnabled() const;
+    void setEnabled(bool enabled);
+	
+	void toggleDebugMode();
+    bool isDebugMode() const;
+};
+
+class DebugVisualsManager
+{
+public:
+    DebugVisualsManager();
+    static DebugVisualsManager& getSingleton(void);
+
+    void show(unsigned long flags);
+    void hide(unsigned long flags);
+    void showAll();
+    void hideAll();
+    void toggleAll();
+};
+  
+class ContentLoader;
+    
+%feature("director") ContentModule; 
+class ContentModule
+{
+public:
+	ContentModule(
+		const Ogre::String& id, 
+		const rl::CeGuiString& name, 
+		bool common, 
+		long minimumEngineVersion);
+		
+	virtual ~ContentModule();
+		
+	virtual const Ogre::StringVector& getDependencies() const = 0;
+	virtual const Ogre::StringVector& getTextureLocations() const = 0;
+	virtual const Ogre::StringVector& getSoundLocations() const = 0;
+	virtual const Ogre::StringVector& getModelLocations() const = 0;
+
+	virtual void start() = 0;
+	
+	void loadContent();
+	
+	void registerContentLoader(rl::ContentLoader* loader);
+};
+
+%feature("director") ContentLoader;
+class ContentLoader
+{
+public:
+    ContentLoader(const Ogre::String& resourceGroup);
+    virtual ~ContentLoader();
+
+    virtual void loadContent() = 0;
+    virtual void unloadContent() = 0;
+
+    virtual const CEGUI::String getClassName() const = 0;
+};
+
+class CoreSubsystem {
+private:
+	CoreSubsystem();
+public:
+    static CoreSubsystem& getSingleton(void);
+    
     // obsolete
-    // void loadMap(const Ogre::String& type, const Ogre::String& filename, const Ogre::String& resourceGroup);
-
-	void registerModule(rl::ContentModule* module);
-
-	rl::ContentModule* getActiveAdventureModule() const;
-    rl::ContentModule* getModule(const Ogre::String& moduleId) const;
-
-    rl::World* getWorld();
-    void makeScreenshot(const Ogre::String& sName);
-    bool isInitialized() const;
-    void setScheme(const Ogre::String& schemeName);
-    bool getDeveloperMode() const;
-    void setTimeFactor(const Ogre::Real& factor = 1.0F);
-    void setPaused(bool paused);
-};
-
-class Sound 
-{
-private:
-	Sound(const SoundResourcePtr& res);
-public:
-    // Einige Standardwerte fr Soundprioritten.
-    enum SOUND_PRIORITY {
-            PRIO_SPEECH = 30,
-            PRIO_MUSIC = 75,
-            PRIO_SFX_ENVIRONMENT = 128,
-            PRIO_SFX_OTHER = 175,
-            PRIO_OTHER = 220
-    };
-
-	virtual ~Sound();
-    
-    /// Name zurueckgeben
-    const Ogre::String& getName() const;
-
-    /// Gibt die eingestellte Position der Soundquelle zurueck
-    const Ogre::Vector3 getPosition() const;
-    /// Setzt die Position der Soundquelle.
-    void setPosition(const Ogre::Vector3& direction);
-    /// Gibt die eingestellte relative Lautstaerke der Soundquelle zurueck
-    const Ogre::Real getVolume() const; 
-    /// Setzt die relative Lautstaerke der Soundquelle.
-    void setVolume(const Ogre::Real gain);
-    /// Gibt die Richtung der Soundquelle zurueck.
-    const Ogre::Quaternion getDirection() const;
-    /// Gibt die Geschwindigkeit der Soundquelle zurueck.
-    const Ogre::Vector3 getVelocity() const;
-    /// Setzt die Richtung der Soundquelle.
-    void setDirection(const Ogre::Quaternion&);
-    /// Setzt die Geschwindigkeit der Soundquelle.
-    void setVelocity(const Ogre::Vector3&);
-    /// Setzt die Entfernung, ab der ein 3D-Sound leiser wird
-	void setRolloffStartDistance(const Ogre::Real dist);
-	const Ogre::Real getRolloffStartDistance() const;
-	/// Setzt die Entfernung, ab der ein 3D-Sound nicht mehr leiser wird
-	void setRolloffEndDistance(const Ogre::Real dist);
-	const Ogre::Real getRolloffEndDistance() const;
-
-    /// Spielt den Sound ab.
-    void play() ;
-    /// Pausiert den Sound.
-    void pause(bool pausing) ;
-    /// Ist der Sound pausiert?
-    bool isPaused() ;
-    /// Stoppt den Sound.
-    void stop() ;
-    /// Laeuft der Sound noch
-    const bool isPlaying() const ;
-
-    // Sets the priority of this sound
-    virtual void setPriority(const int priority);
-    // Gets the priority of this sound
-    virtual const int getPriority() const;
-
-    /// Gibt zurck ob der Sound geloopt werden soll 
-    bool isLooping() const;
-    /// Setzt ob der Sound geloopt werden soll 
-    void setLooping( bool looping );
-    
-    // Sind wir gueltig
-    bool isValid() const;
-    
-    bool is3d();
-    void set3d(bool is3d);
-};
-
-typedef std::map<CeGuiString, SoundResourcePtr> SoundCache;
-
-class SoundStitching
-{
-public:
-    // Einige Standardwerte f?r Soundpriorit?ten.
-    enum SOUND_PRIORITY {
-        PRIO_SPEECH = 30,
-        PRIO_MUSIC = 75,
-        PRIO_SFX_ENVIRONMENT = 128,
-        PRIO_SFX_OTHER = 175,
-        PRIO_OTHER = 220
-    };
-
-    /// Konstruktor
-    SoundStitching(unsigned int numSlots, rl::CeGuiString name, rl::SoundDriver* creator);
-    /// Destruktor
-    virtual ~SoundStitching();
-      
-    // SoundResource zurueckgeben.
-    const rl::SoundResourcePtr& getSoundResource() const;
-    // Wollen wir 3D?
-    bool is3d() const;
-    // Setzen des 3D-Flags.
-    void set3d(bool is3d);
-    // Sind wir gueltig
-    virtual bool isValid() const;
-    
-    // Sollen der Sound wiederholt werden?
-    bool isLooping() const;
-    // Setzen des Loop-Flags.
-    void setLooping(bool looping);
-
-    virtual float getLength() const = 0;
-
-    /// Unsere Bounding-Box
-    virtual const Ogre::AxisAlignedBox& getBoundingBox(void) const;
-    /// Bound-Radius
-    virtual Ogre::Real getBoundingRadius() const;
-    /// Rendern
-    virtual void _updateRenderQueue(Ogre::RenderQueue *queue);
-
-    /// Count of configured slots.
-    unsigned int getNumSlots();
-    /// Add a sound resource to the cache overwritting existing sound resource.
-    virtual void addSoundToCache(rl::CeGuiString label, rl::SoundResourcePtr sound);
-    /// Assign a sound recource to a slot.
-    virtual void putSoundIntoSlot(unsigned int, rl::CeGuiString label) = 0;
-    /// Get the slot of the plaing sound.
-    virtual unsigned int getPlayingSlot() = 0;
-
-    /// Gibt die eingestellte Position der Soundquelle zurueck
-    virtual const Ogre::Vector3 getPosition() const = 0;
-    /// Setzt die Position der Soundquelle.
-    virtual void setPosition(const Ogre::Vector3& direction) = 0;
-    /// Gibt die eingestellte relative Lautstaerke der Soundquelle zurueck (0.0 ... 1.0)
-    virtual const Ogre::Real getVolume() const = 0; 
-    /// Setzt die relative Lautstaerke der Soundquelle (0.0 .. 1.0).
-    virtual void setVolume(const Ogre::Real gain) = 0;
-    /// Gibt die Richtung der Soundquelle zurueck.
-    virtual const Ogre::Quaternion getDirection() const = 0;
-    /// Gibt die Geschwindigkeit der Soundquelle zurueck.
-    virtual const Ogre::Vector3 getVelocity() const = 0;
-    /// Setzt die Richtung der Soundquelle.
-    virtual void setDirection(const Ogre::Quaternion&) = 0;
-    /// Setzt die Geschwindigkeit der Soundquelle.
-    virtual void setVelocity(const Ogre::Vector3&) = 0;
-    /// Setzt die Entfernung, ab der ein 3D-Sound leiser wird
-    virtual void setRolloffStartDistance(const Ogre::Real&);
-    virtual const Ogre::Real getRolloffStartDistance() const;
-    /// Setzt die Entfernung, ab der ein 3D-Sound nicht mehr leiser wird
-    virtual void setRolloffEndDistance(const Ogre::Real&);
-    virtual const Ogre::Real getRolloffEndDistance() const;
-    // Sets the priority of this sound
-    virtual void setPriority(const int priority) = 0;
-    // Gets the priority of this sound
-    virtual const int getPriority() const = 0;
-
-    /// Spielt den Sound ab.
-    virtual void play(bool destroyWhenDone=false) = 0;
-    /// Pausiert den Sound.
-    virtual void pause(bool pausing) = 0;
-    /// Ist der Sound pausiert?
-    virtual bool isPaused() = 0;
-    /// Stoppt den Sound.
-    virtual void stop() = 0;
-    /// Laeuft der Sound noch
-    virtual const bool isPlaying() const = 0;
-   
-}; 
-
-class SoundManager
-{
-public:
-
-    SoundManager();
-    static SoundManager& getSingleton(void);
-    Sound* createSound(const Ogre::String& res, rl::SoundType type=ST_SAMPLE);
-    void destroySound(Sound*);
-};
-
-class GameLoop
-{
-private:
-	GameLoop();
-public:      
-	static GameLoop& getSingleton(void);
-	void quitGame();
-};
-
-%apply SWIGTYPE *DYNAMIC { Job * };
-
-%feature("director") Job;
-class Job
-{
-public:
-    /**
-     * Constructor.
-     *
-     *  @param isDiscardable Set this true, if the Job's goal can be reached in a single
-     *         step. For instance if a Job is supposed to slowly close a window by fading
-     *         its alpha to 0, then it is discardable, and Job#discard will just finish
-     *         the process by closing the window.
-     *
-     *  @param destroyWhenDone Set this to true, when the JobScheduler shall delete the
-     *         Job, after execution is finished. This should usually be the case, but
-     *         sometimes it is sensible to pool a number of Jobs for reuse.
-     */
-	Job( bool isDiscardable, bool destroyWhenDone );
-	virtual ~Job();
-	
-	/**
-     * This is the function in which the job is supposed to do whatever it is supposed to do.
-     * This function is called by the JobScheduler at most once per frame. The frequency depends
-     * on the Job's priority given with JobScheduler#addJob.
-     * @param time the frame-time time, since the last call of this function.
-     * @return true, when the job is done, false else. If false is returned. The Job will be
-     * rescheduled for another execution.
-     */
-	virtual bool execute(Ogre::Real time) = 0;
-    private:
-    bool execute(Ogre::Real time);
-    /// Returns whether the job can be removed from the queue by the scheduler,
-    virtual bool isDiscardable();
-
-    /// Finish whatever the Job is doing. It won't get a chance to continue.
-    /// Overloaded functions must *not* call this implementation.
-    virtual void discard();
-
-    // Returns true, if the Job shall be deleted, if the Job is finished. Returns false else.
-    virtual bool destroyWhenDone();
-};
-
-class PlaySound2dJob : public rl::Job
-{
-public:
-    PlaySound2dJob(const Ogre::String& sound, Ogre::Real volume=1.0f, int priority = Sound::PRIO_MUSIC);
-    virtual ~PlaySound2dJob();
-
-private:
-    bool execute(Ogre::Real time);
-};
-
-class PlaySound3dJob : public rl::Job
-{
-public:
-    PlaySound3dJob(const Ogre::String& sound, const Ogre::Vector3& pos, Ogre::Real volume=1.0f, int priority = Sound::PRIO_SFX_ENVIRONMENT);
-    virtual ~PlaySound3dJob();
-
-private:
-    bool execute(Ogre::Real time);
-};
-
-class PlayAnimationJob : public rl::Job
-{
-public:
-    PlayAnimationJob(Actor* actor, const Ogre::String& anim, Ogre::Real duration,
-		bool replaceAllAnims=true);
-    PlayAnimationJob(Actor* actor, const Ogre::String& anim, int loops = 1,
-		bool replaceAllAnims=true);
-    virtual ~PlayAnimationJob();
-    
-private:
-    bool execute(Ogre::Real time);
-};
-
-class StartAnimationJob : public rl::Job
-{
-public:
-    StartAnimationJob(Actor* actor, const Ogre::String& anim, bool doLoop=false,
-		bool replaceAllAnims=true);
-    virtual ~StartAnimationJob();
-    
-private:
-    bool execute(Ogre::Real time);
-};
-
-//class LightFadeJob : public rl::Job
-//{
-//public:
-//    LightFadeJob(LightObject* lightObject, const Ogre::ColourValue& targetDiffuse, 
-//        const Ogre::ColourValue& targetSpecular, Ogre::Real duration = 1.0f);
-//
-//    virtual bool execute(Ogre::Real time);
-//};
-
-class JobQueue : public rl::Job
-{
-public:
-    JobQueue();
-    virtual ~JobQueue();
-    void add(Job* job);
-    
-private:
-    bool execute(Ogre::Real time);
-};
-
-class JobSet : public rl::Job
-{
-public:
-    JobSet();
-    virtual ~JobSet();
-    void add(Job* job);
-    
-private:
-    bool execute(Ogre::Real time);
-};
-
-class JobScheduler
-{
-public:
-    typedef enum {JP_LOW = 10, JP_NORMAL = 20, JP_HIGH = 30} JobPriority;
-	static JobScheduler& getSingleton(void);
-    unsigned long addJob(rl::Job* job,
-		rl::JobScheduler::JobPriority priority = JobScheduler::JP_NORMAL,
-		Ogre::Real delay=0.0f);
-};
-
-class Zone
-{
-public:
-	void addLight(Actor* light);
-    void addSound(const Ogre::String& name);
-	void addTrigger(rl::Trigger* trigger);
-	std::list<Actor*> getLights() const;
-    std::list<Ogre::String> getSounds() const;
-	std::list<rl::Trigger*> getTriggers() const;
-    void removeLight(Actor* light);
-    void removeSound(const Ogre::String& name);
-    void removeTrigger(rl::Trigger* trigger);
-protected:
-    Zone(long id);
-private:
-    Zone();
-};
-
-
-class ZoneManager
-{
-public:
-	static const ZoneManager& getSingleton();
-    rl::Zone* createZone(const Ogre::String& name, bool needsToBeSaved);
-    void destroyZone(const Ogre::String& name);
-
-    void addAreaToZone(const Ogre::String& name, 
-        Ogre::Vector3 size, rl::GeometryType geom,
-        Ogre::Vector3 position, Ogre::Vector3 offset, Ogre::Quaternion orientation,
-        Ogre::Real transitionDistance,
-        unsigned long queryflags);
-
-    void subtractAreaFromZone(const Ogre::String& name, 
-        Ogre::Vector3 size, rl::GeometryType geom,
-        Ogre::Vector3 position, Ogre::Vector3 offset, Ogre::Quaternion orientation,
-        Ogre::Real transitionDistance,
-        unsigned long queryflags);
-
-    void addMeshAreaToZone(const Ogre::String& name,
-        const Ogre::String& meshname, rl::GeometryType geom,
-        Ogre::Vector3 position,
-        Ogre::Vector3 scale, Ogre::Vector3 offset, Ogre::Quaternion orientation,
-        Ogre::Real transitionDistance,
-        unsigned long queryflags);
-
-    void subtractMeshAreaFromZone(const Ogre::String& name,
-        const Ogre::String& meshname, rl::GeometryType geom,
-        Ogre::Vector3 position,
-        Ogre::Vector3 scale, Ogre::Vector3 offset, Ogre::Quaternion orientation,
-        Ogre::Real transitionDistance,
-        unsigned long queryflags);
-        
-	rl::Zone* getDefaultZone();
-	rl::Zone* getZone(const Ogre::String& name);
-    rl::Zone* getZone(long id);
-    bool isZoneActive(const rl::Zone *zone) const;
-    bool isInZone(Zone* zone, Actor *actor);
-};
-
-%feature("director") Trigger;
-class  Trigger
-{
-public:
-    Trigger(const Ogre::String &classname, const Ogre::String &name, bool needsToBeSaved);
-    virtual ~Trigger();
-	virtual bool activate() = 0;
-	virtual bool deactivate() = 0;
-	virtual bool deleteIfZoneDestroyed() const;
-	const Ogre::String& getName() const;
-    virtual const rl::Property getProperty(const rl::CeGuiString& key) const;
-    virtual void setProperty(const rl::CeGuiString& key, const rl::Property& value);
-    virtual rl::PropertyKeys getAllPropertyKeys() const;
-};
-
-class SoundFadeJob : public rl::Job
-{
-public:
-    SoundFadeJob(SoundObject* soundObject, rl::SoundFadeFunctor* functor, bool destroyWhenDone);
-
-    virtual bool execute(Ogre::Real time);
-    virtual void discard();
-};
-
-%rename(getVolume) rl::SoundFadeFunctor::operator();
-class SoundFadeFunctor
-{
-public:
-    SoundFadeFunctor(Ogre::Real duration);
-
-    virtual Ogre::Real operator()(Ogre::Real time) = 0;
-};
-
-%rename(getVolume) rl::LinearSoundFadeFunctor::operator();
-class LinearSoundFadeFunctor : public rl::SoundFadeFunctor
-{
-public:
-    LinearSoundFadeFunctor(Ogre::Real duration, bool up);
-
-    virtual Ogre::Real operator()(Ogre::Real time);
-};
-
-%rename(getVolume) rl::PolynomicSoundFadeFunctor::operator();
-typedef std::vector< std::pair<Ogre::Real, Ogre::Real> > InterpolationPoints;
-typedef std::vector<Ogre::Real> Parameters;
-class PolynomicSoundFadeFunctor : public rl::SoundFadeFunctor
-{
-public:
-    PolynomicSoundFadeFunctor(Ogre::Real duration, InterpolationPoints *points);
-	~PolynomicSoundFadeFunctor();
-
-    virtual Ogre::Real operator()(Ogre::Real time);
-};
-
-typedef RL_LONGLONG rl::Time;
-
-class TimeSource : public rl::GameTask
-{
-public:
-    typedef enum
-    {
-        REALTIME_CONTINUOUS,
-        REALTIME_INTERRUPTABLE,
-        GAMETIME
-    }  TimeSourceType;
-    
-    virtual rl::TimeSource::TimeSourceType getType() const = 0;
-
-    virtual rl::Time getClock() const = 0;
-    virtual void setClock(const rl::Time& time) = 0;
-    virtual void setTimeFactor(Ogre::Real factor = 1.0) = 0;
-};
-
-class TimeSourceManager
-{
-public:
-    static rl::TimeSourceManager& getSingleton();
-    void registerTimeSource(rl::TimeSource* ts);
-    rl::TimeSource* getTimeSource(const rl::TimeSource::TimeSourceType& type) const;
-};
-
-
-}
+    // void loadMap(const Ogre::String& type, const Ogre::String& filename, const Ogre::String& resourceGroup);
+
+	void registerModule(rl::ContentModule* module);
+
+	rl::ContentModule* getActiveAdventureModule() const;
+    rl::ContentModule* getModule(const Ogre::String& moduleId) const;
+
+    rl::World* getWorld();
+    void makeScreenshot(const Ogre::String& sName);
+    bool isInitialized() const;
+    void setScheme(const Ogre::String& schemeName);
+    bool getDeveloperMode() const;
+    void setTimeFactor(const Ogre::Real& factor = 1.0F);
+    void setPaused(bool paused);
+};
+
+class Sound 
+{
+private:
+	Sound(const SoundResourcePtr& res);
+public:
+    // Einige Standardwerte fr Soundprioritten.
+    enum SOUND_PRIORITY {
+            PRIO_SPEECH = 30,
+            PRIO_MUSIC = 75,
+            PRIO_SFX_ENVIRONMENT = 128,
+            PRIO_SFX_OTHER = 175,
+            PRIO_OTHER = 220
+    };
+
+	virtual ~Sound();
+    
+    /// Name zurueckgeben
+    const Ogre::String& getName() const;
+
+    /// Gibt die eingestellte Position der Soundquelle zurueck
+    const Ogre::Vector3 getPosition() const;
+    /// Setzt die Position der Soundquelle.
+    void setPosition(const Ogre::Vector3& direction);
+    /// Gibt die eingestellte relative Lautstaerke der Soundquelle zurueck
+    const Ogre::Real getVolume() const; 
+    /// Setzt die relative Lautstaerke der Soundquelle.
+    void setVolume(const Ogre::Real gain);
+    /// Gibt die Richtung der Soundquelle zurueck.
+    const Ogre::Quaternion getDirection() const;
+    /// Gibt die Geschwindigkeit der Soundquelle zurueck.
+    const Ogre::Vector3 getVelocity() const;
+    /// Setzt die Richtung der Soundquelle.
+    void setDirection(const Ogre::Quaternion&);
+    /// Setzt die Geschwindigkeit der Soundquelle.
+    void setVelocity(const Ogre::Vector3&);
+    /// Setzt die Entfernung, ab der ein 3D-Sound leiser wird
+	void setRolloffStartDistance(const Ogre::Real dist);
+	const Ogre::Real getRolloffStartDistance() const;
+	/// Setzt die Entfernung, ab der ein 3D-Sound nicht mehr leiser wird
+	void setRolloffEndDistance(const Ogre::Real dist);
+	const Ogre::Real getRolloffEndDistance() const;
+
+    /// Spielt den Sound ab.
+    void play() ;
+    /// Pausiert den Sound.
+    void pause(bool pausing) ;
+    /// Ist der Sound pausiert?
+    bool isPaused() ;
+    /// Stoppt den Sound.
+    void stop() ;
+    /// Laeuft der Sound noch
+    const bool isPlaying() const ;
+
+    // Sets the priority of this sound
+    virtual void setPriority(const int priority);
+    // Gets the priority of this sound
+    virtual const int getPriority() const;
+
+    /// Gibt zurck ob der Sound geloopt werden soll 
+    bool isLooping() const;
+    /// Setzt ob der Sound geloopt werden soll 
+    void setLooping( bool looping );
+    
+    // Sind wir gueltig
+    bool isValid() const;
+    
+    bool is3d();
+    void set3d(bool is3d);
+};
+
+typedef std::map<CeGuiString, SoundResourcePtr> SoundCache;
+
+class SoundStitching
+{
+public:
+    // Einige Standardwerte f?r Soundpriorit?ten.
+    enum SOUND_PRIORITY {
+        PRIO_SPEECH = 30,
+        PRIO_MUSIC = 75,
+        PRIO_SFX_ENVIRONMENT = 128,
+        PRIO_SFX_OTHER = 175,
+        PRIO_OTHER = 220
+    };
+
+    /// Konstruktor
+    SoundStitching(unsigned int numSlots, rl::CeGuiString name, rl::SoundDriver* creator);
+    /// Destruktor
+    virtual ~SoundStitching();
+      
+    // SoundResource zurueckgeben.
+    const rl::SoundResourcePtr& getSoundResource() const;
+    // Wollen wir 3D?
+    bool is3d() const;
+    // Setzen des 3D-Flags.
+    void set3d(bool is3d);
+    // Sind wir gueltig
+    virtual bool isValid() const;
+    
+    // Sollen der Sound wiederholt werden?
+    bool isLooping() const;
+    // Setzen des Loop-Flags.
+    void setLooping(bool looping);
+
+    virtual float getLength() const = 0;
+
+    /// Unsere Bounding-Box
+    virtual const Ogre::AxisAlignedBox& getBoundingBox(void) const;
+    /// Bound-Radius
+    virtual Ogre::Real getBoundingRadius() const;
+    /// Rendern
+    virtual void _updateRenderQueue(Ogre::RenderQueue *queue);
+
+    /// Count of configured slots.
+    unsigned int getNumSlots();
+    /// Add a sound resource to the cache overwritting existing sound resource.
+    virtual void addSoundToCache(rl::CeGuiString label, rl::SoundResourcePtr sound);
+    /// Assign a sound recource to a slot.
+    virtual void putSoundIntoSlot(unsigned int, rl::CeGuiString label) = 0;
+    /// Get the slot of the plaing sound.
+    virtual unsigned int getPlayingSlot() = 0;
+
+    /// Gibt die eingestellte Position der Soundquelle zurueck
+    virtual const Ogre::Vector3 getPosition() const = 0;
+    /// Setzt die Position der Soundquelle.
+    virtual void setPosition(const Ogre::Vector3& direction) = 0;
+    /// Gibt die eingestellte relative Lautstaerke der Soundquelle zurueck (0.0 ... 1.0)
+    virtual const Ogre::Real getVolume() const = 0; 
+    /// Setzt die relative Lautstaerke der Soundquelle (0.0 .. 1.0).
+    virtual void setVolume(const Ogre::Real gain) = 0;
+    /// Gibt die Richtung der Soundquelle zurueck.
+    virtual const Ogre::Quaternion getDirection() const = 0;
+    /// Gibt die Geschwindigkeit der Soundquelle zurueck.
+    virtual const Ogre::Vector3 getVelocity() const = 0;
+    /// Setzt die Richtung der Soundquelle.
+    virtual void setDirection(const Ogre::Quaternion&) = 0;
+    /// Setzt die Geschwindigkeit der Soundquelle.
+    virtual void setVelocity(const Ogre::Vector3&) = 0;
+    /// Setzt die Entfernung, ab der ein 3D-Sound leiser wird
+    virtual void setRolloffStartDistance(const Ogre::Real&);
+    virtual const Ogre::Real getRolloffStartDistance() const;
+    /// Setzt die Entfernung, ab der ein 3D-Sound nicht mehr leiser wird
+    virtual void setRolloffEndDistance(const Ogre::Real&);
+    virtual const Ogre::Real getRolloffEndDistance() const;
+    // Sets the priority of this sound
+    virtual void setPriority(const int priority) = 0;
+    // Gets the priority of this sound
+    virtual const int getPriority() const = 0;
+
+    /// Spielt den Sound ab.
+    virtual void play(bool destroyWhenDone=false) = 0;
+    /// Pausiert den Sound.
+    virtual void pause(bool pausing) = 0;
+    /// Ist der Sound pausiert?
+    virtual bool isPaused() = 0;
+    /// Stoppt den Sound.
+    virtual void stop() = 0;
+    /// Laeuft der Sound noch
+    virtual const bool isPlaying() const = 0;
+   
+}; 
+
+class SoundManager
+{
+public:
+
+    SoundManager();
+    static SoundManager& getSingleton(void);
+    Sound* createSound(const Ogre::String& res, rl::SoundType type=ST_SAMPLE);
+    void destroySound(Sound*);
+};
+
+class GameLoop
+{
+private:
+	GameLoop();
+public:      
+	static GameLoop& getSingleton(void);
+	void quitGame();
+};
+
+%apply SWIGTYPE *DYNAMIC { Job * };
+
+%feature("director") Job;
+class Job
+{
+public:
+    /**
+     * Constructor.
+     *
+     *  @param isDiscardable Set this true, if the Job's goal can be reached in a single
+     *         step. For instance if a Job is supposed to slowly close a window by fading
+     *         its alpha to 0, then it is discardable, and Job#discard will just finish
+     *         the process by closing the window.
+     *
+     *  @param destroyWhenDone Set this to true, when the JobScheduler shall delete the
+     *         Job, after execution is finished. This should usually be the case, but
+     *         sometimes it is sensible to pool a number of Jobs for reuse.
+     */
+	Job( bool isDiscardable, bool destroyWhenDone );
+	virtual ~Job();
+	
+	/**
+     * This is the function in which the job is supposed to do whatever it is supposed to do.
+     * This function is called by the JobScheduler at most once per frame. The frequency depends
+     * on the Job's priority given with JobScheduler#addJob.
+     * @param time the frame-time time, since the last call of this function.
+     * @return true, when the job is done, false else. If false is returned. The Job will be
+     * rescheduled for another execution.
+     */
+	virtual bool execute(Ogre::Real time) = 0;
+    private:
+    bool execute(Ogre::Real time);
+    /// Returns whether the job can be removed from the queue by the scheduler,
+    virtual bool isDiscardable();
+
+    /// Finish whatever the Job is doing. It won't get a chance to continue.
+    /// Overloaded functions must *not* call this implementation.
+    virtual void discard();
+
+    // Returns true, if the Job shall be deleted, if the Job is finished. Returns false else.
+    virtual bool destroyWhenDone();
+};
+
+class PlaySound2dJob : public rl::Job
+{
+public:
+    PlaySound2dJob(const Ogre::String& sound, Ogre::Real volume=1.0f, int priority = Sound::PRIO_MUSIC);
+    virtual ~PlaySound2dJob();
+
+private:
+    bool execute(Ogre::Real time);
+};
+
+class PlaySound3dJob : public rl::Job
+{
+public:
+    PlaySound3dJob(const Ogre::String& sound, const Ogre::Vector3& pos, Ogre::Real volume=1.0f, int priority = Sound::PRIO_SFX_ENVIRONMENT);
+    virtual ~PlaySound3dJob();
+
+private:
+    bool execute(Ogre::Real time);
+};
+
+class PlayAnimationJob : public rl::Job
+{
+public:
+    PlayAnimationJob(Actor* actor, const Ogre::String& anim, Ogre::Real duration,
+		bool replaceAllAnims=true);
+    PlayAnimationJob(Actor* actor, const Ogre::String& anim, int loops = 1,
+		bool replaceAllAnims=true);
+    virtual ~PlayAnimationJob();
+    
+private:
+    bool execute(Ogre::Real time);
+};
+
+class StartAnimationJob : public rl::Job
+{
+public:
+    StartAnimationJob(Actor* actor, const Ogre::String& anim, bool doLoop=false,
+		bool replaceAllAnims=true);
+    virtual ~StartAnimationJob();
+    
+private:
+    bool execute(Ogre::Real time);
+};
+
+//class LightFadeJob : public rl::Job
+//{
+//public:
+//    LightFadeJob(LightObject* lightObject, const Ogre::ColourValue& targetDiffuse, 
+//        const Ogre::ColourValue& targetSpecular, Ogre::Real duration = 1.0f);
+//
+//    virtual bool execute(Ogre::Real time);
+//};
+
+class JobQueue : public rl::Job
+{
+public:
+    JobQueue();
+    virtual ~JobQueue();
+    void add(Job* job);
+    
+private:
+    bool execute(Ogre::Real time);
+};
+
+class JobSet : public rl::Job
+{
+public:
+    JobSet();
+    virtual ~JobSet();
+    void add(Job* job);
+    
+private:
+    bool execute(Ogre::Real time);
+};
+
+class JobScheduler
+{
+public:
+    typedef enum {JP_LOW = 10, JP_NORMAL = 20, JP_HIGH = 30} JobPriority;
+	static JobScheduler& getSingleton(void);
+    unsigned long addJob(rl::Job* job,
+		rl::JobScheduler::JobPriority priority = JobScheduler::JP_NORMAL,
+		Ogre::Real delay=0.0f);
+};
+
+class Zone
+{
+public:
+	void addLight(Actor* light);
+    void addSound(const Ogre::String& name);
+	void addTrigger(rl::Trigger* trigger);
+	std::list<Actor*> getLights() const;
+    std::list<Ogre::String> getSounds() const;
+	std::list<rl::Trigger*> getTriggers() const;
+    void removeLight(Actor* light);
+    void removeSound(const Ogre::String& name);
+    void removeTrigger(rl::Trigger* trigger);
+protected:
+    Zone(long id);
+private:
+    Zone();
+};
+
+
+class ZoneManager
+{
+public:
+	static const ZoneManager& getSingleton();
+    rl::Zone* createZone(const Ogre::String& name, bool needsToBeSaved);
+    void destroyZone(const Ogre::String& name);
+
+    void addAreaToZone(const Ogre::String& name, 
+        Ogre::Vector3 size, rl::GeometryType geom,
+        Ogre::Vector3 position, Ogre::Vector3 offset, Ogre::Quaternion orientation,
+        Ogre::Real transitionDistance,
+        unsigned long queryflags);
+
+    void subtractAreaFromZone(const Ogre::String& name, 
+        Ogre::Vector3 size, rl::GeometryType geom,
+        Ogre::Vector3 position, Ogre::Vector3 offset, Ogre::Quaternion orientation,
+        Ogre::Real transitionDistance,
+        unsigned long queryflags);
+
+    void addMeshAreaToZone(const Ogre::String& name,
+        const Ogre::String& meshname, rl::GeometryType geom,
+        Ogre::Vector3 position,
+        Ogre::Vector3 scale, Ogre::Vector3 offset, Ogre::Quaternion orientation,
+        Ogre::Real transitionDistance,
+        unsigned long queryflags);
+
+    void subtractMeshAreaFromZone(const Ogre::String& name,
+        const Ogre::String& meshname, rl::GeometryType geom,
+        Ogre::Vector3 position,
+        Ogre::Vector3 scale, Ogre::Vector3 offset, Ogre::Quaternion orientation,
+        Ogre::Real transitionDistance,
+        unsigned long queryflags);
+        
+	rl::Zone* getDefaultZone();
+	rl::Zone* getZone(const Ogre::String& name);
+    rl::Zone* getZone(long id);
+    bool isZoneActive(const rl::Zone *zone) const;
+    bool isInZone(Zone* zone, Actor *actor);
+};
+
+%feature("director") Trigger;
+class  Trigger
+{
+public:
+    Trigger(const Ogre::String &classname, const Ogre::String &name, bool needsToBeSaved);
+    virtual ~Trigger();
+	virtual bool activate() = 0;
+	virtual bool deactivate() = 0;
+	virtual bool deleteIfZoneDestroyed() const;
+	const Ogre::String& getName() const;
+    virtual const rl::Property getProperty(const rl::CeGuiString& key) const;
+    virtual void setProperty(const rl::CeGuiString& key, const rl::Property& value);
+    virtual rl::PropertyKeys getAllPropertyKeys() const;
+};
+
+class SoundFadeJob : public rl::Job
+{
+public:
+    SoundFadeJob(SoundObject* soundObject, rl::SoundFadeFunctor* functor, bool destroyWhenDone);
+
+    virtual bool execute(Ogre::Real time);
+    virtual void discard();
+};
+
+%rename(getVolume) rl::SoundFadeFunctor::operator();
+class SoundFadeFunctor
+{
+public:
+    SoundFadeFunctor(Ogre::Real duration);
+
+    virtual Ogre::Real operator()(Ogre::Real time) = 0;
+};
+
+%rename(getVolume) rl::LinearSoundFadeFunctor::operator();
+class LinearSoundFadeFunctor : public rl::SoundFadeFunctor
+{
+public:
+    LinearSoundFadeFunctor(Ogre::Real duration, bool up);
+
+    virtual Ogre::Real operator()(Ogre::Real time);
+};
+
+%rename(getVolume) rl::PolynomicSoundFadeFunctor::operator();
+typedef std::vector< std::pair<Ogre::Real, Ogre::Real> > InterpolationPoints;
+typedef std::vector<Ogre::Real> Parameters;
+class PolynomicSoundFadeFunctor : public rl::SoundFadeFunctor
+{
+public:
+    PolynomicSoundFadeFunctor(Ogre::Real duration, InterpolationPoints *points);
+	~PolynomicSoundFadeFunctor();
+
+    virtual Ogre::Real operator()(Ogre::Real time);
+};
+
+typedef RL_LONGLONG rl::Time;
+
+class TimeSource : public rl::GameTask
+{
+public:
+    typedef enum
+    {
+        REALTIME_CONTINUOUS,
+        REALTIME_INTERRUPTABLE,
+        GAMETIME
+    }  TimeSourceType;
+    
+    virtual rl::TimeSource::TimeSourceType getType() const = 0;
+
+    virtual rl::Time getClock() const = 0;
+    virtual void setClock(const rl::Time& time) = 0;
+    virtual void setTimeFactor(Ogre::Real factor = 1.0) = 0;
+};
+
+class TimeSourceManager
+{
+public:
+    static rl::TimeSourceManager& getSingleton();
+    void registerTimeSource(rl::TimeSource* ts);
+    rl::TimeSource* getTimeSource(const rl::TimeSource::TimeSourceType& type) const;
+};
+
+
+}

Modified: rl/trunk/engine/ui/include/DialogControlState.h
===================================================================
--- rl/trunk/engine/ui/include/DialogControlState.h	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ui/include/DialogControlState.h	2009-05-20 20:03:56 UTC (rev 4933)
@@ -19,11 +19,11 @@
 
 #include "UiPrerequisites.h"
 #include "DialogController.h"
+#include "Creature.h"
 
 namespace rl {
 
 	class Actor;
-    class Creature;
 	class Dialog;
     class DialogElement;
 	class DialogWindow;
@@ -83,7 +83,7 @@
 
 		DialogWindow* mDialogWindow;
 
-        virtual void recalculateDialogCamera(Creature* speaker, std::list<Creature*> listeners);
+        virtual void recalculateDialogCamera(Creature* speaker, const CreatureList& listeners);
 
         void showOptions(const std::list<DialogOption*>& options);
 	};

Modified: rl/trunk/engine/ui/include/DialogController.h
===================================================================
--- rl/trunk/engine/ui/include/DialogController.h	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ui/include/DialogController.h	2009-05-20 20:03:56 UTC (rev 4933)
@@ -9,15 +9,12 @@
 #define DIALOGCONTROLLER_H_
 
 #include "AiPrerequisites.h"
-
-#include <list>
-
 #include "ControlState.h"
+#include "Creature.h"
 
 namespace rl
 {
     class Actor;
-    class Creature;
     class Dialog;
     class DialogOption;
     class DialogParagraph;
@@ -52,7 +49,7 @@
         void doTalk(DialogParagraph* paragraph, DialogWindow* window = NULL);
         Ogre::Vector3 getParticipantPosition(Creature* participant);
         virtual bool textFinished();
-        virtual void recalculateDialogCamera(Creature* speaker, std::list<Creature*> listeners) = 0;
+        virtual void recalculateDialogCamera(Creature* speaker, const CreatureList& listeners) = 0;
         virtual void handleDialogEnd() = 0;
         void setDialogWindow(DialogWindow* window);
         void setSubtitleWindow(SubtitleWindow* window);
@@ -68,7 +65,7 @@
         Ogre::Real mTotalFadeTextTime;
         Ogre::Real mSubtitleSpeed;
         Creature* mCurrentSpeaker;
-        std::list<Creature*> mCurrentListeners;
+        CreatureList mCurrentListeners;
         /// Der Untertitel-Text
         CeGuiString mText;
         /// Es wird gerade Text angezeigt

Modified: rl/trunk/engine/ui/src/DialogControlState.cpp
===================================================================
--- rl/trunk/engine/ui/src/DialogControlState.cpp	2009-05-20 00:09:27 UTC (rev 4932)
+++ rl/trunk/engine/ui/src/DialogControlState.cpp	2009-05-20 20:03:56 UTC (rev 4933)
@@ -196,7 +196,7 @@
                 + StringConverter::toString(mCurrFadeTextTime));
     }
 
-    void DialogControlState::recalculateDialogCamera(Creature* speaker, std::list<Creature*> listeners)
+    void DialogControlState::recalculateDialogCamera(Creature* speaker, const CreatureList& listeners)
     {
         // Position camera at position between char and dialog partner
         Vector3 speakerEyes = getParticipantPosition(speaker);
@@ -221,8 +221,8 @@
         mSubtitleWindow = NULL;
         if (mDialog != NULL)
         {
-            const list<Creature*> list = mDialog->getParticipants();
-            for (std::list<Creature*>::const_iterator it = list.begin(); it != list.end(); ++it)
+            const CreatureList list = mDialog->getParticipants();
+            for (CreatureList::const_iterator it = list.begin(); it != list.end(); ++it)
             {
                 Actor* actor = (*it)->getActor();
                 if (actor != NULL)



From melven at mail.berlios.de  Thu May 21 00:46:27 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Thu, 21 May 2009 00:46:27 +0200
Subject: [Dsa-hl-svn] r4934 - in modules: common/scripts common/scripts/jobs
	regressiontest/scripts
Message-ID: <200905202246.n4KMkR4Y019606@sheep.berlios.de>

Author: melven
Date: 2009-05-21 00:46:16 +0200 (Thu, 21 May 2009)
New Revision: 4934

Modified:
   modules/common/scripts/door.rb
   modules/common/scripts/global-actions.rb
   modules/common/scripts/jobs/animationjobs.rb
   modules/common/scripts/simpleenemy.rb
   modules/common/scripts/switch.rb
   modules/common/scripts/torch.rb
   modules/common/scripts/truhe.rb
   modules/regressiontest/scripts/ErrorHandlingTest.rb
   modules/regressiontest/scripts/JobSequenceTest.rb
   modules/regressiontest/scripts/MergeableMeshTest.rb
   modules/regressiontest/scripts/MeshAreaTest.rb
   modules/regressiontest/scripts/TimeTest.rb
   modules/regressiontest/scripts/effecttest.rb
Log:
fixed some actions (the swig defintion of the canDo function was outdated)


Modified: modules/common/scripts/door.rb
===================================================================
--- modules/common/scripts/door.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/common/scripts/door.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -10,7 +10,7 @@
   end
   
   # Die Methode pr??ft, ob die Aktion ??berhaupt angeboten wird.
-  def canDo(door, user)    
+  def canDo(door, user, target)    
     not door.isOpen
   end
   
@@ -20,7 +20,7 @@
     #p "call fitToPose for zu"
     doorActor.getPhysicalThing().fitToPose("zu");
 
-    PlayAnimation(doorActor, "auf");
+    PlayAnimation(doorActor, "auf", 1, true, true);
     PlaySound3d("doorcreak.ogg", doorActor.getPosition());
     door.setOpen(true);
   end
@@ -32,7 +32,7 @@
   end
   
   # Die Methode pr??ft, ob die Aktion ??berhaupt angeboten wird.
-  def canDo(door, user)    
+  def canDo(door, user, target)
     door.isOpen
   end
   
@@ -42,7 +42,7 @@
     #p "call fitToPose for auf"
     doorActor.getPhysicalThing().fitToPose("auf");
 
-    PlayAnimation(doorActor, "zu");
+    PlayAnimation(doorActor, "zu", 1, true, true);
     PlaySound3d("doorcreak.ogg", doorActor.getPosition());
     door.setOpen(false);
   end

Modified: modules/common/scripts/global-actions.rb
===================================================================
--- modules/common/scripts/global-actions.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/common/scripts/global-actions.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -195,7 +195,7 @@
     $WF.showGameObjectPropsWindow(object)
   end
   
-  def canDo(object, actor)
+  def canDo(object, actor, target)
     $CORE.getDeveloperMode()
   end
 end
@@ -259,7 +259,7 @@
     $WF.showContainerContent(object)
   end
   
-  def canDo(object, actor)
+  def canDo(object, actor, target)
     return object.isContainer()
   end
 end

Modified: modules/common/scripts/jobs/animationjobs.rb
===================================================================
--- modules/common/scripts/jobs/animationjobs.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/common/scripts/jobs/animationjobs.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -1,12 +1,14 @@
 require 'globals.rb'
 
-def PlayAnimation(actor, anim, loops = 1, replace=true)
+def PlayAnimation(actor, anim, loops = 1, replace=true, holdOnEnd=false)
     job = PlayAnimationJob.new(actor, anim, loops, replace)
+    job.setHoldOnEnd(holdOnEnd)
     $JS.addJob(job)
 end
 
-def PlayAnimationTime(actor, anim, duration, replace=true)
+def PlayAnimationTime(actor, anim, duration, replace=true, holdOnEnd=false)
     job = PlayAnimationJob.new(actor, anim, duration, replace)
+    job.setHoldOnEnd(holdOnEnd)
     $JS.addJob(job)
 end
 

Modified: modules/common/scripts/simpleenemy.rb
===================================================================
--- modules/common/scripts/simpleenemy.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/common/scripts/simpleenemy.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -8,7 +8,7 @@
     end
 
     # Die Methode pr??ft, ob die Aktion ??berhaupt angeboten wird.
-    def canDo(enemy, user)    
+    def canDo(enemy, user, target)
         enemy.isAlive
     end
 

Modified: modules/common/scripts/switch.rb
===================================================================
--- modules/common/scripts/switch.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/common/scripts/switch.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -12,7 +12,7 @@
   end
   
   # Die Methode pr?ft, ob die Aktion ?berhaupt angeboten wird.
-  def canDo(switch, user) 
+  def canDo(switch, user, target)
     switch.getState() != Switch3Way::STATE_OBEN;
   end
   
@@ -36,7 +36,7 @@
   end
   
   # Die Methode pr?ft, ob die Aktion ?berhaupt angeboten wird.
-  def canDo(switch, user)
+  def canDo(switch, user, target)
      switch.getState() != Switch3Way::STATE_UNTEN;
   end
   
@@ -59,7 +59,7 @@
   end
   
   # Die Methode pr?ft, ob die Aktion ?berhaupt angeboten wird.
-  def canDo(switch, user)    
+  def canDo(switch, user, target)
      switch.getState() != Switch3Way::STATE_MITTE;
   end
   

Modified: modules/common/scripts/torch.rb
===================================================================
--- modules/common/scripts/torch.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/common/scripts/torch.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -16,7 +16,7 @@
     end
     
     # Die Methode pr??ft, ob die Aktion ??berhaupt angeboten wird.
-    def canDo?(torch, user)
+    def canDo?(torch, user, target)
         # Wenn die Fackel aus ist, kann sie angemacht werden.
         not torch.lit?;
     end
@@ -33,7 +33,7 @@
     end
     
     # Die Methode pr??ft, ob die Aktion ??berhaupt angeboten wird.
-    def canDo?(torch, user)
+    def canDo?(torch, user, target)
         # Wenn die Fackel aus ist, kann sie angemacht werden.
         torch.lit?;
     end

Modified: modules/common/scripts/truhe.rb
===================================================================
--- modules/common/scripts/truhe.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/common/scripts/truhe.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -14,7 +14,7 @@
   end
 
   # Die Methode pr??ft, ob die Aktion ??berhaupt angeboten wird.
-  def canDo(container, user)
+  def canDo(container, user, target)
     not container.isOpen();
   end
 
@@ -29,7 +29,7 @@
   end
 
   # Die Methode pr??ft, ob die Aktion ??berhaupt angeboten wird.
-  def canDo(container, user)
+  def canDo(container, user, target)
     container.isOpen();
   end
 
@@ -44,7 +44,7 @@
   end
 
   # Die Methode pr??ft, ob die Aktion ??berhaupt angeboten wird.
-  def canDo(container, user)
+  def canDo(container, user, target)
     true
   end
 

Modified: modules/regressiontest/scripts/ErrorHandlingTest.rb
===================================================================
--- modules/regressiontest/scripts/ErrorHandlingTest.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/regressiontest/scripts/ErrorHandlingTest.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -7,7 +7,7 @@
     super("DirectorErrorAction", "Raises an Exception.");
   end
   
-  def canDo(go, user)
+  def canDo(go, user, target)
     true
   end
   
@@ -33,4 +33,4 @@
 
         $SCRIPT.log("TimeTest initialisiert");
     end
-end
\ No newline at end of file
+end

Modified: modules/regressiontest/scripts/JobSequenceTest.rb
===================================================================
--- modules/regressiontest/scripts/JobSequenceTest.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/regressiontest/scripts/JobSequenceTest.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -8,7 +8,7 @@
     super("sequence", "Test job sequence.");
   end
   
-  def canDo(go, user)
+  def canDo(go, user, target)
     true
   end
   
@@ -36,7 +36,7 @@
     super("queue", "Test job queue");
   end
   
-  def canDo(go, user)
+  def canDo(go, user,target)
     true
   end
   
@@ -65,7 +65,7 @@
     super("gametqueue", "Test game time job queue");
   end
   
-  def canDo(go, user)
+  def canDo(go, user, target)
     true
   end
   

Modified: modules/regressiontest/scripts/MergeableMeshTest.rb
===================================================================
--- modules/regressiontest/scripts/MergeableMeshTest.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/regressiontest/scripts/MergeableMeshTest.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -43,6 +43,7 @@
         test_item3 = $GOM.createGameObject("mesh construction kit test item 2")
         test_obj3.getInventory().hold(test_item3, "Armor")
         test_obj3.getActor().getControlledObject().startAnimation("Walk")
+        test_obj3.getActor().getPhysicalThing().updateCollisionHull()
 
         test_obj4 = $GOM.createGameObject("mesh construction kit test creature")
         test_obj4.setPosition(rel_pos([4, 0, 0]))

Modified: modules/regressiontest/scripts/MeshAreaTest.rb
===================================================================
--- modules/regressiontest/scripts/MeshAreaTest.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/regressiontest/scripts/MeshAreaTest.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -19,8 +19,9 @@
     testObj = $GOM.createGameObject("MeshAreaTestHouse")
     testObj.setPosition(@center)
     testObj.placeIntoScene()
+    testObj.getActor().setScale(0.5, 0.2, 1.0)
 
     listener = MeshAreaListener.new()
-    $GameEveMgr.addMeshAreaListener(testObj.getActor(), GT_CONVEXHULL, listener)
+    $GameEveMgr.addMeshAreaListener(testObj.getActor(), GT_BOX, listener)
   end
 end

Modified: modules/regressiontest/scripts/TimeTest.rb
===================================================================
--- modules/regressiontest/scripts/TimeTest.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/regressiontest/scripts/TimeTest.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -7,7 +7,7 @@
     super("checktime", "Zeit ansagen lassen.");
   end
   
-  def canDo(go, user)
+  def canDo(go, user, target)
     true
   end
   

Modified: modules/regressiontest/scripts/effecttest.rb
===================================================================
--- modules/regressiontest/scripts/effecttest.rb	2009-05-20 20:03:56 UTC (rev 4933)
+++ modules/regressiontest/scripts/effecttest.rb	2009-05-20 22:46:16 UTC (rev 4934)
@@ -12,7 +12,7 @@
     super("paralues", "Spontan versteinern.");
   end
   
-  def canDo(go, user)
+  def canDo(go, user, target)
     true
   end
   
@@ -28,7 +28,7 @@
     super("resistenz", "Resistenz gegen Krankheiten erweben.");
   end
   
-    def canDo(go, user)
+    def canDo(go, user, target)
     true
     end
   



From melven at mail.berlios.de  Thu May 21 00:48:08 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Thu, 21 May 2009 00:48:08 +0200
Subject: [Dsa-hl-svn] r4935 - in rl/trunk/engine: core/src script/swig
Message-ID: <200905202248.n4KMm8E4020909@sheep.berlios.de>

Author: melven
Date: 2009-05-21 00:48:05 +0200 (Thu, 21 May 2009)
New Revision: 4935

Modified:
   rl/trunk/engine/core/src/PlayAnimationJob.cpp
   rl/trunk/engine/script/swig/RlCore.swig
   rl/trunk/engine/script/swig/RlRules.swig
Log:
-fixed some outdated swig code
-fixed PlayAnimationJob (don't delete Animations directly, but use the AnimationManager or the MeshObject (for MeshAnimations))


Modified: rl/trunk/engine/core/src/PlayAnimationJob.cpp
===================================================================
--- rl/trunk/engine/core/src/PlayAnimationJob.cpp	2009-05-20 22:46:16 UTC (rev 4934)
+++ rl/trunk/engine/core/src/PlayAnimationJob.cpp	2009-05-20 22:48:05 UTC (rev 4935)
@@ -103,15 +103,22 @@
             if (mAnimationRunning && mAnimation) 
             {
                 mAnimationRunning = false;
-                if (mHoldOnEnd) 
+                    
+                mAnimation->pause();
+                
+                if (!mHoldOnEnd) 
                 {
-                    mAnimation->pause();
+                    if( mActor )
+                    {
+                        MeshObject* mo = dynamic_cast<MeshObject*>(mActor->getControlledObject());
+                        mo->stopAnimation(mAnimName);
+                    }
+                    else
+                    {
+                        //! TODO: what to do here?
+                    }
                 }
-                else
-                {
-                    mAnimation->stop();
-                    delete mAnimation;
-                }
+
                 mAnimation = NULL;
             }
             return true;

Modified: rl/trunk/engine/script/swig/RlCore.swig
===================================================================
--- rl/trunk/engine/script/swig/RlCore.swig	2009-05-20 22:46:16 UTC (rev 4934)
+++ rl/trunk/engine/script/swig/RlCore.swig	2009-05-20 22:48:05 UTC (rev 4935)
@@ -1053,6 +1053,7 @@
     PlayAnimationJob(Actor* actor, const Ogre::String& anim, int loops = 1,
 		bool replaceAllAnims=true);
     virtual ~PlayAnimationJob();
+    virtual void setHoldOnEnd(bool hold);
     
 private:
     bool execute(Ogre::Real time);

Modified: rl/trunk/engine/script/swig/RlRules.swig
===================================================================
--- rl/trunk/engine/script/swig/RlRules.swig	2009-05-20 22:46:16 UTC (rev 4934)
+++ rl/trunk/engine/script/swig/RlRules.swig	2009-05-20 22:48:05 UTC (rev 4935)
@@ -302,7 +302,7 @@
         virtual int getTargetClass() const;
         virtual void doAction(rl::GameObject *object, rl::Creature *actor,
             rl::GameObject *target);
-        virtual bool canDo(rl::GameObject* object, rl::Creature* actor) const;
+        virtual bool canDo(rl::GameObject* object, rl::Creature* actor, rl::GameObject* target = NULL) const;
             
         void setGroup(rl::ActionGroup* group);
         rl::ActionGroup* getGroup() const;



From timm at mail.berlios.de  Fri May 22 16:14:29 2009
From: timm at mail.berlios.de (timm at mail.berlios.de)
Date: Fri, 22 May 2009 16:14:29 +0200
Subject: [Dsa-hl-svn] r4936 - in rl/branches/persistence2/engine: rules/src
	script/src
Message-ID: <200905221414.n4MEETYQ028376@sheep.berlios.de>

Author: timm
Date: 2009-05-22 16:14:20 +0200 (Fri, 22 May 2009)
New Revision: 4936

Modified:
   rl/branches/persistence2/engine/rules/src/PartyManager.cpp
   rl/branches/persistence2/engine/script/src/MapLoader.cpp
   rl/branches/persistence2/engine/script/src/Scene.cpp
   rl/branches/persistence2/engine/script/src/SceneManager.cpp
Log:
minor changes

Modified: rl/branches/persistence2/engine/rules/src/PartyManager.cpp
===================================================================
--- rl/branches/persistence2/engine/rules/src/PartyManager.cpp	2009-05-20 22:48:05 UTC (rev 4935)
+++ rl/branches/persistence2/engine/rules/src/PartyManager.cpp	2009-05-22 14:14:20 UTC (rev 4936)
@@ -69,10 +69,10 @@
     void PartyManager::removeAllCharacters()
     {
         for (std::vector<Creature*>::iterator it = mParty.begin();
-             it != mParty.end(); ++it)
+             it != mParty.end();)
         {    
             MessagePump::getSingleton().sendMessage<MessageType_PlayerCharRemoved>(*it);
-            mParty.erase(it);
+            it = mParty.erase(it);
         }
         checkParty();
     }

Modified: rl/branches/persistence2/engine/script/src/MapLoader.cpp
===================================================================
--- rl/branches/persistence2/engine/script/src/MapLoader.cpp	2009-05-20 22:48:05 UTC (rev 4935)
+++ rl/branches/persistence2/engine/script/src/MapLoader.cpp	2009-05-22 14:14:20 UTC (rev 4936)
@@ -189,7 +189,7 @@
         }
         else
         {
-            LOG_ERROR(Logger::SCRIPT, "Map is already loaded!");
+            LOG_ERROR(Logger::SCRIPT, "Map '" + mapresource + "' is already loaded!");
         }
     }
 

Modified: rl/branches/persistence2/engine/script/src/Scene.cpp
===================================================================
--- rl/branches/persistence2/engine/script/src/Scene.cpp	2009-05-20 22:48:05 UTC (rev 4935)
+++ rl/branches/persistence2/engine/script/src/Scene.cpp	2009-05-22 14:14:20 UTC (rev 4936)
@@ -45,9 +45,11 @@
 
 void Scene::load(bool loadGameObjects)
 {
+    GameObjectManager::getSingleton().deleteAllGameObjects();
     CoreSubsystem::getSingleton().getWorld()->clearScene();
     MapLoader* loader = new MapLoader();
     loader->loadScene(mMaps, loadGameObjects);
+    delete loader;
 }
 
 const CeGuiString& Scene::getName() const

Modified: rl/branches/persistence2/engine/script/src/SceneManager.cpp
===================================================================
--- rl/branches/persistence2/engine/script/src/SceneManager.cpp	2009-05-20 22:48:05 UTC (rev 4935)
+++ rl/branches/persistence2/engine/script/src/SceneManager.cpp	2009-05-22 14:14:20 UTC (rev 4936)
@@ -18,9 +18,12 @@
 
 #include "SceneManager.h"
 
+#include "CoreSubsystem.h"
 #include "Creature.h"
 #include "CreatureControllerManager.h"
+#include "GameObjectManager.h"
 #include "PartyManager.h"
+#include "RulesMessages.h"
 #include "Scene.h"
 #include "SceneLoader.h"
 #include "SaveAbleManager.h"
@@ -61,28 +64,33 @@
             return;
         }
 
-        SaveAbleManager::getSingleton().saveState();
-
-        Creature* activeChar = PartyManager::getSingleton().getActiveCharacter();
-
-        if (activeChar) {
-            CreatureControllerManager::getSingleton().detachController(
-                activeChar);
-            activeChar->setState(GOS_LOADED);
-        }
-
-        if (saveCurrent && mCurrentScene) 
-        {
-            mSceneStates[mCurrentScene] = mCurrentScene->getAllProperties();
-        }
-
         std::map<CeGuiString, Scene*>::iterator itScene = mScenes.find(sceneName);
         if (itScene != mScenes.end())
-        {            
+        {  
+            Creature* activeChar = PartyManager::getSingleton().getActiveCharacter();
+            CeGuiString activeCharId = "";
+
+            if (activeChar) {
+                CreatureControllerManager::getSingleton().detachController(
+                    activeChar);
+                activeChar->setState(GOS_LOADED);
+                activeCharId = activeChar->getId();
+                //PartyManager::getSingleton().removeCharacter(activeChar); //erzeugt nur ein game over --> party manager und character window m?ssen komplett ?berarbeitet werden
+                PartyManager::getSingleton().setActiveCharacter(NULL);
+            }
+    
+            if (saveCurrent && mCurrentScene) 
+            {
+                //hier daten abspeichern
+                SaveAbleManager::getSingleton().saveState();
+                //mSceneStates[mCurrentScene] = mCurrentScene->getAllProperties();
+            }
+                  
             std::map<Scene*, PropertyRecordPtr>::iterator itState =
                 mSceneStates.end();
             if (saveCurrent) 
             {
+                //gespeicherte daten f?r die scene abrufen
                 std::map<Scene*, PropertyRecordPtr>::iterator itState 
                     = mSceneStates.find(mCurrentScene);
             }
@@ -94,17 +102,18 @@
             {
                 mCurrentScene->setProperties(itState->second);
             }
+
+            if (activeCharId != "") 
+            {
+                if(static_cast<Creature*>(GameObjectManager::getSingleton().getGameObject(activeCharId)))
+                    PartyManager::getSingleton().setActiveCharacter(static_cast<Creature*>(GameObjectManager::getSingleton().getGameObject(activeCharId)));
+            }
         }
         else
         {
             LOG_ERROR("SceneManager", 
                 "Scene '" + sceneName + "' not found. Have you forgotten to define it in a .rlscene file?");
         }
-
-        if (activeChar) 
-        {
-            PartyManager::getSingleton().setActiveCharacter(activeChar);
-        }
     }
 
     const Ogre::StringVector& SceneManager::getScriptPatterns() const



From timm at mail.berlios.de  Fri May 22 17:26:15 2009
From: timm at mail.berlios.de (timm at mail.berlios.de)
Date: Fri, 22 May 2009 17:26:15 +0200
Subject: [Dsa-hl-svn] r4937 - in rl/trunk/engine/core: . src
Message-ID: <200905221526.n4MFQFSN003732@sheep.berlios.de>

Author: timm
Date: 2009-05-22 17:26:04 +0200 (Fri, 22 May 2009)
New Revision: 4937

Modified:
   rl/trunk/engine/core/RlCore2005.vcproj
   rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp
Log:
Updated project files for Visual Studio 2005

Modified: rl/trunk/engine/core/RlCore2005.vcproj
===================================================================
--- rl/trunk/engine/core/RlCore2005.vcproj	2009-05-22 14:14:20 UTC (rev 4936)
+++ rl/trunk/engine/core/RlCore2005.vcproj	2009-05-22 15:26:04 UTC (rev 4937)
@@ -416,14 +416,6 @@
 				>
 			</File>
 			<File
-				RelativePath=".\include\DotSceneLoader.h"
-				>
-			</File>
-			<File
-				RelativePath=".\include\DotSceneOctreeWorld.h"
-				>
-			</File>
-			<File
 				RelativePath=".\include\FadeAnimation.h"
 				>
 			</File>
@@ -452,6 +444,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\include\GenericWorld.h"
+				>
+			</File>
+			<File
 				RelativePath=".\include\Job.h"
 				>
 			</File>
@@ -528,6 +524,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\include\PhysicsCollisionFactory.h"
+				>
+			</File>
+			<File
 				RelativePath=".\include\PhysicsContactListener.h"
 				>
 			</File>
@@ -781,14 +781,6 @@
 				>
 			</File>
 			<File
-				RelativePath=".\src\DotSceneLoader.cpp"
-				>
-			</File>
-			<File
-				RelativePath=".\src\DotSceneOctreeWorld.cpp"
-				>
-			</File>
-			<File
 				RelativePath=".\src\FadeAnimation.cpp"
 				>
 			</File>
@@ -817,6 +809,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\src\GenericWorld.cpp"
+				>
+			</File>
+			<File
 				RelativePath=".\src\Job.cpp"
 				>
 			</File>
@@ -877,6 +873,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\src\PhysicsCollisionFactory.cpp"
+				>
+			</File>
+			<File
 				RelativePath=".\src\PhysicsContactListener.cpp"
 				>
 			</File>

Modified: rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp
===================================================================
--- rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp	2009-05-22 14:14:20 UTC (rev 4936)
+++ rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp	2009-05-22 15:26:04 UTC (rev 4937)
@@ -18,6 +18,7 @@
 #include "Exception.h"
 #include "PhysicsCollisionFactory.h"
 #include "PhysicsManager.h"
+#include "ConfigurationManager.h"
 
 #include <boost/filesystem/operations.hpp>
 #include <boost/filesystem/exception.hpp>



From timm at mail.berlios.de  Fri May 22 19:33:22 2009
From: timm at mail.berlios.de (timm at mail.berlios.de)
Date: Fri, 22 May 2009 19:33:22 +0200
Subject: [Dsa-hl-svn] r4938 - rl/trunk/engine/core
Message-ID: <200905221733.n4MHXMTf006306@sheep.berlios.de>

Author: timm
Date: 2009-05-22 19:33:06 +0200 (Fri, 22 May 2009)
New Revision: 4938

Modified:
   rl/trunk/engine/core/RlCore2008.vcproj
Log:
updated visual studio 2008 project file

Modified: rl/trunk/engine/core/RlCore2008.vcproj
===================================================================
--- rl/trunk/engine/core/RlCore2008.vcproj	2009-05-22 15:26:04 UTC (rev 4937)
+++ rl/trunk/engine/core/RlCore2008.vcproj	2009-05-22 17:33:06 UTC (rev 4938)
@@ -414,14 +414,6 @@
 				>
 			</File>
 			<File
-				RelativePath=".\include\DotSceneLoader.h"
-				>
-			</File>
-			<File
-				RelativePath=".\include\DotSceneOctreeWorld.h"
-				>
-			</File>
-			<File
 				RelativePath=".\include\FadeAnimation.h"
 				>
 			</File>
@@ -450,6 +442,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\include\GenericWorld.h"
+				>
+			</File>
+			<File
 				RelativePath=".\include\Job.h"
 				>
 			</File>
@@ -526,6 +522,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\include\PhysicsCollisionFactory.h"
+				>
+			</File>
+			<File
 				RelativePath=".\include\PhysicsContactListener.h"
 				>
 			</File>
@@ -775,14 +775,6 @@
 				>
 			</File>
 			<File
-				RelativePath=".\src\DotSceneLoader.cpp"
-				>
-			</File>
-			<File
-				RelativePath=".\src\DotSceneOctreeWorld.cpp"
-				>
-			</File>
-			<File
 				RelativePath=".\src\FadeAnimation.cpp"
 				>
 			</File>
@@ -811,6 +803,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\src\GenericWorld.cpp"
+				>
+			</File>
+			<File
 				RelativePath=".\src\Job.cpp"
 				>
 			</File>
@@ -871,6 +867,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\src\PhysicsCollisionFactory.cpp"
+				>
+			</File>
+			<File
 				RelativePath=".\src\PhysicsContactListener.cpp"
 				>
 			</File>



From timm at mail.berlios.de  Fri May 22 22:34:54 2009
From: timm at mail.berlios.de (timm at mail.berlios.de)
Date: Fri, 22 May 2009 22:34:54 +0200
Subject: [Dsa-hl-svn] r4939 - rl/trunk/engine/core
Message-ID: <200905222034.n4MKYs5r020968@sheep.berlios.de>

Author: timm
Date: 2009-05-22 22:34:43 +0200 (Fri, 22 May 2009)
New Revision: 4939

Modified:
   rl/trunk/engine/core/RlCore2008.vcproj
Log:
updated visual studio 2008 project file


Modified: rl/trunk/engine/core/RlCore2008.vcproj
===================================================================
--- rl/trunk/engine/core/RlCore2008.vcproj	2009-05-22 17:33:06 UTC (rev 4938)
+++ rl/trunk/engine/core/RlCore2008.vcproj	2009-05-22 20:34:43 UTC (rev 4939)
@@ -546,6 +546,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\include\PhysicsRagDoll.h"
+				>
+			</File>
+			<File
 				RelativePath=".\include\PlayAnimationJob.h"
 				>
 			</File>
@@ -887,6 +891,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\src\PhysicsRagDoll.cpp"
+				>
+			</File>
+			<File
 				RelativePath=".\src\PlayAnimationJob.cpp"
 				>
 			</File>



From timm at mail.berlios.de  Sat May 23 00:19:12 2009
From: timm at mail.berlios.de (timm at mail.berlios.de)
Date: Sat, 23 May 2009 00:19:12 +0200
Subject: [Dsa-hl-svn] r4940 - in rl/branches/persistence2:
	editors/Lockenwickler editors/Lockenwickler/src
	editors/Lockenwickler/src/media editors/Lockenwickler/src/media/help
	editors/Lockenwickler/src/media/icons
	editors/Lockenwickler/src/media/terrain
	editors/Lockenwickler/src/media/terrain/brushes
	editors/Lockenwickler/ui files engine/ai/include
	engine/ai/src engine/core engine/core/include engine/core/src
	engine/rules/include engine/rules/src engine/script/src
	engine/script/swig engine/ui/include engine/ui/src
Message-ID: <200905222219.n4MMJCPq032693@sheep.berlios.de>

Author: timm
Date: 2009-05-23 00:18:33 +0200 (Sat, 23 May 2009)
New Revision: 4940

Added:
   rl/branches/persistence2/editors/Lockenwickler/src/AddTriggerDialog.py
   rl/branches/persistence2/editors/Lockenwickler/src/GlobDirectoryWalker.py
   rl/branches/persistence2/editors/Lockenwickler/src/MyTerrainManager.py
   rl/branches/persistence2/editors/Lockenwickler/src/TriggerManager.py
   rl/branches/persistence2/editors/Lockenwickler/src/Ui_AddTriggerDialog.py
   rl/branches/persistence2/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
   rl/branches/persistence2/editors/Lockenwickler/src/help_rc.py
   rl/branches/persistence2/editors/Lockenwickler/src/icons_rc.py
   rl/branches/persistence2/editors/Lockenwickler/src/media/help/
   rl/branches/persistence2/editors/Lockenwickler/src/media/help/TerrainExtends1.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/help/help.qrc
   rl/branches/persistence2/editors/Lockenwickler/src/media/help/help_rc.py
   rl/branches/persistence2/editors/Lockenwickler/src/media/icons/icons.qrc
   rl/branches/persistence2/editors/Lockenwickler/src/media/icons/terrain.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/icons/terrain_small.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETShader.program
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETTerrain.material
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETcoverage.0.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETcoverage.1.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETlightmap.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETterrain.cfg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETterrain.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSLighting.cg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSSplat.cg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSSplat2.cg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/VSLodMorph.cg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/VSLodMorph2.cg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/brushes/
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/brushes/brush.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting0.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting1.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting2.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting3.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting4.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting5.png
   rl/branches/persistence2/editors/Lockenwickler/ui files/AddTriggerDialog.ui
   rl/branches/persistence2/editors/Lockenwickler/ui files/BrushDialog.ui
   rl/branches/persistence2/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
   rl/branches/persistence2/engine/core/include/PhysicsCollisionFactory.h
   rl/branches/persistence2/engine/core/src/PhysicsCollisionFactory.cpp
Removed:
   rl/branches/persistence2/editors/Lockenwickler/src/media/help/TerrainExtends1.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/help/help.qrc
   rl/branches/persistence2/editors/Lockenwickler/src/media/help/help_rc.py
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETShader.program
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETTerrain.material
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETcoverage.0.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETcoverage.1.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETlightmap.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETterrain.cfg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETterrain.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSLighting.cg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSSplat.cg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSSplat2.cg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/VSLodMorph.cg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/VSLodMorph2.cg
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/brushes/
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/brushes/brush.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting0.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting1.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting2.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting3.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting4.png
   rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting5.png
Modified:
   rl/branches/persistence2/editors/Lockenwickler/Lockenwickler.e4p
   rl/branches/persistence2/editors/Lockenwickler/src/
   rl/branches/persistence2/editors/Lockenwickler/src/GOGenericEditor.py
   rl/branches/persistence2/editors/Lockenwickler/src/GameObjectClass.py
   rl/branches/persistence2/editors/Lockenwickler/src/Lockenwickler.py
   rl/branches/persistence2/editors/Lockenwickler/src/ModuleExplorer.py
   rl/branches/persistence2/editors/Lockenwickler/src/ModuleManager.py
   rl/branches/persistence2/editors/Lockenwickler/src/MovePivot.py
   rl/branches/persistence2/editors/Lockenwickler/src/OgreMainWindow.py
   rl/branches/persistence2/editors/Lockenwickler/src/PreferencesDialog.py
   rl/branches/persistence2/editors/Lockenwickler/src/SelectionBuffer.py
   rl/branches/persistence2/editors/Lockenwickler/src/ZoneManager.py
   rl/branches/persistence2/editors/Lockenwickler/src/media/
   rl/branches/persistence2/engine/ai/include/Dialog.h
   rl/branches/persistence2/engine/ai/include/DialogLoader.h
   rl/branches/persistence2/engine/ai/include/DialogLoaderImpl.h
   rl/branches/persistence2/engine/ai/include/DialogManager.h
   rl/branches/persistence2/engine/ai/include/DialogParagraph.h
   rl/branches/persistence2/engine/ai/src/Dialog.cpp
   rl/branches/persistence2/engine/ai/src/DialogLoader.cpp
   rl/branches/persistence2/engine/ai/src/DialogLoaderImpl.cpp
   rl/branches/persistence2/engine/ai/src/DialogManager.cpp
   rl/branches/persistence2/engine/ai/src/DialogParagraph.cpp
   rl/branches/persistence2/engine/core/CMakeLists.txt
   rl/branches/persistence2/engine/core/RlCore2005.vcproj
   rl/branches/persistence2/engine/core/RlCore2008.vcproj
   rl/branches/persistence2/engine/core/include/PhysicsManager.h
   rl/branches/persistence2/engine/core/src/ConfigurationManager.cpp
   rl/branches/persistence2/engine/core/src/GameAreaTypes.cpp
   rl/branches/persistence2/engine/core/src/GameEventManager.cpp
   rl/branches/persistence2/engine/core/src/PhysicalThing.cpp
   rl/branches/persistence2/engine/core/src/PhysicsGenericContactCallback.cpp
   rl/branches/persistence2/engine/core/src/PhysicsManager.cpp
   rl/branches/persistence2/engine/core/src/PhysicsRagDoll.cpp
   rl/branches/persistence2/engine/core/src/PlayAnimationJob.cpp
   rl/branches/persistence2/engine/core/src/SceneQuery.cpp
   rl/branches/persistence2/engine/rules/include/GoToJob.h
   rl/branches/persistence2/engine/rules/src/CreatureControllerManager.cpp
   rl/branches/persistence2/engine/rules/src/GoToJob.cpp
   rl/branches/persistence2/engine/rules/src/SelectionHelper.cpp
   rl/branches/persistence2/engine/script/src/EntityNodeProcessor.cpp
   rl/branches/persistence2/engine/script/src/PlaneNodeProcessor.cpp
   rl/branches/persistence2/engine/script/swig/RlAi.swig
   rl/branches/persistence2/engine/script/swig/RlCore.swig
   rl/branches/persistence2/engine/script/swig/RlRules.swig
   rl/branches/persistence2/engine/ui/include/CommandMapper.h
   rl/branches/persistence2/engine/ui/include/DialogControlState.h
   rl/branches/persistence2/engine/ui/include/DialogController.h
   rl/branches/persistence2/engine/ui/include/MovementControlState.h
   rl/branches/persistence2/engine/ui/src/CommandMapper.cpp
   rl/branches/persistence2/engine/ui/src/DialogControlState.cpp
   rl/branches/persistence2/engine/ui/src/ItemDragContainer.cpp
   rl/branches/persistence2/engine/ui/src/MovementControlState.cpp
Log:
merged from trunk and made it compile

Modified: rl/branches/persistence2/editors/Lockenwickler/Lockenwickler.e4p
===================================================================
--- rl/branches/persistence2/editors/Lockenwickler/Lockenwickler.e4p	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/Lockenwickler.e4p	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE Project SYSTEM "Project-4.6.dtd">
 <!-- eric4 project file for project Lockenwickler -->
-<!-- Saved: 2009-04-10, 16:03:00 -->
+<!-- Saved: 2009-05-09, 21:08:47 -->
 <!-- Copyright (C) 2009 Stefan Stammberger, sstammberger at web.de -->
 <Project version="4.6">
   <Language>en</Language>
@@ -41,15 +41,33 @@
     <Source>src/DepthBuffer.py</Source>
     <Source>src/ZoneManager.py</Source>
     <Source>src/GOGenericEditor.py</Source>
+    <Source>src/ModuleDirectoryView.py</Source>
+    <Source>src/TriggerManager.py</Source>
+    <Source>src/GlobDirectoryWalker.py</Source>
+    <Source>ui files/Ui_GOPropertyEditorDialogINT.py</Source>
+    <Source>ui files/Ui_GOPropertyEditorDialogSTRING.py</Source>
+    <Source>ui files/Ui_NewModuleWizard.py</Source>
+    <Source>src/AddTriggerDialog.py</Source>
+    <Source>src/Ui_AddTriggerDialog.py</Source>
+    <Source>src/MyTerrainManager.py</Source>
+    <Source>src/Ui_MyTerrainManagerDock.py</Source>
+    <Source>src/media/help/help_rc.py</Source>
+    <Source>ui files/Ui_BrushDialog.py</Source>
+    <Source>ui files/Ui_MyTerrainManagerDock.py</Source>
   </Sources>
   <Forms>
     <Form>ui files/GOPropertyEditorDialogINT.ui</Form>
     <Form>ui files/GOPropertyEditorDialogSTRING.ui</Form>
     <Form>ui files/NewModuleWizard.ui</Form>
+    <Form>ui files/AddTriggerDialog.ui</Form>
+    <Form>ui files/MyTerrainManagerDock.ui</Form>
+    <Form>ui files/BrushDialog.ui</Form>
   </Forms>
   <Translations>
   </Translations>
   <Resources>
+    <Resource>src/media/help/help.qrc</Resource>
+    <Resource>src/media/icons/icons.qrc</Resource>
   </Resources>
   <Interfaces>
   </Interfaces>


Property changes on: rl/branches/persistence2/editors/Lockenwickler/src
___________________________________________________________________
Name: svn:ignore
   - ogre.cfg
SelectionBuffer - Kopie.py

   + ogre.cfg
SelectionBuffer - Kopie.py
ogre.log
depthbuffer.png


Copied: rl/branches/persistence2/editors/Lockenwickler/src/AddTriggerDialog.py (from rev 4939, rl/trunk/editors/Lockenwickler/src/AddTriggerDialog.py)

Modified: rl/branches/persistence2/editors/Lockenwickler/src/GOGenericEditor.py
===================================================================
--- rl/branches/persistence2/editors/Lockenwickler/src/GOGenericEditor.py	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/GOGenericEditor.py	2009-05-22 22:18:33 UTC (rev 4940)
@@ -84,7 +84,7 @@
             
         self.layout.addWidget(self.typeDropBox)
         
-        self.connect(self, SIGNAL("currentIndexChanged ( const QString & text )"), self.onTypeChanged)
+        self.connect(self, SIGNAL("currentIndexChanged ( const QString &)"), self.onTypeChanged)
 
     def onTypeChanged(self, type):
         print str(type)

Modified: rl/branches/persistence2/editors/Lockenwickler/src/GameObjectClass.py
===================================================================
--- rl/branches/persistence2/editors/Lockenwickler/src/GameObjectClass.py	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/GameObjectClass.py	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,4 +1,4 @@
- #################################################
+#################################################
 # This source file is part of Rastullahs Lockenwickler.
 # Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
 #
@@ -15,7 +15,7 @@
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
- #################################################
+#################################################
 
 #from elementtree.ElementTree import *
 from xml.etree.cElementTree import *
@@ -147,9 +147,44 @@
             rep.name = str(self.editor.nameEditBox.text())
             rep.type = str(self.editor.typeDropBox.currentText())
             
-            if rep.type == "STRING" or rep.type == "BOOL" or rep.type == "REAL" or rep.type == "INT":
+            if rep.type == "STRING":
                 rep.data = str(self.editor.dataEditBox.text())
-            
+            elif rep.type == "BOOL":
+                text = str(self.editor.dataEditBox.text())
+                if text == "True" or text == "1" or text == "true":
+                    rep.data = "True"
+                elif text == "False" or text == "0" or text == "false":
+                    rep.data = "False"
+                else:
+                    reply = QMessageBox.question(QApplication.focusWidget(), "Try again?", "Data is not a BOOL" , QMessageBox.Yes|QMessageBox.No)
+                    if reply == QMessageBox.Yes:
+                        self.addProperty(True)
+                        return
+                    elif reply == QMessageBox.No:
+                        return
+            elif rep.type == "REAL":
+                try:
+                     rep.data = str(float(self.editor.dataEditBox.text()))
+                except ValueError, e:
+                    reply = QMessageBox.question(QApplication.focusWidget(), "Try again?", "Data is not a REAL" , QMessageBox.Yes|QMessageBox.No)
+                    if reply == QMessageBox.Yes:
+                        self.addProperty(True)
+                        print "ValueError: " + str(e)
+                        return
+                    elif reply == QMessageBox.No:
+                        return
+            elif rep.type == "INT":
+                try:
+                     rep.data = str(int(self.editor.dataEditBox.text()))
+                except ValueError, e:
+                    reply = QMessageBox.question(QApplication.focusWidget(), "Try again?", "Data is not a INT" , QMessageBox.Yes|QMessageBox.No)
+                    if reply == QMessageBox.Yes:
+                        self.addProperty(True)
+                        print "ValueError: " + str(e)
+                        return
+                    elif reply == QMessageBox.No:
+                        return
+                
             if rep.name in self.propertieDict:
                 reply = QMessageBox.question(QApplication.focusWidget(), "Warning...", "Replace the existing property?" , QMessageBox.Yes|QMessageBox.No|QMessageBox.Cancel)
                 if reply == QMessageBox.Cancel:

Copied: rl/branches/persistence2/editors/Lockenwickler/src/GlobDirectoryWalker.py (from rev 4939, rl/trunk/editors/Lockenwickler/src/GlobDirectoryWalker.py)

Modified: rl/branches/persistence2/editors/Lockenwickler/src/Lockenwickler.py
===================================================================
--- rl/branches/persistence2/editors/Lockenwickler/src/Lockenwickler.py	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/Lockenwickler.py	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,551 +1,597 @@
-#################################################
-# This source file is part of Rastullahs Lockenwickler.
-# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-#  but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
- #################################################
-
-import os
-import sys
-import platform
-import subprocess
-
-sys.path.insert(0,'..')
-import PythonOgreConfig
-
-from random import randint
-
-from PyQt4 import QtGui, QtCore
-from PreferencesDialog import *
-from ObjectPropertyWin import *
-from ModelSelectionDialog import *
-from MaterialSelectionDialog import *
-from GameObjectClassView import *
-from ConsoleWindow import *
-from ModuleManager import ModuleManager
-from ModuleExplorer import *
-from NewModuleWizard import *
-from MovePivot import *
-from PivotRenderQueueListener import *
-
-import OgreMainWindow
-import ogre.renderer.OGRE as og
-
-class Lockenwickler(QtGui.QMainWindow):
-    def __init__(self, parent=None):
-        QtGui.QWidget.__init__(self, parent)
-
-#        pixmap = QPixmap("media/icons/lockenwickler_provisorium.png")
-#        splash = QSplashScreen(pixmap, Qt.WindowStaysOnTopHint)
-#        splash.setMask(pixmap.mask())
-#        splash.showMessage("Starting...")
-#        splash.show() 
-
-        self.setupUi()
-
-        self.consoleWindow = ConsoleWindow(False,  self)
-
-        self.setupOgre()
-
-        self.prefDialog = PreferencesDialog(self)
-        self.objectPropertyWin = ObjectPropertyWin(self.OgreMainWinSceneMgr, self.gocManager, self)
-        self.moduleExplorerWin = ModuleExplorer(self)
-        self.modelSelectionDialog = ModelSelectionDialog(self.ogreRoot, self)
-        self.materialSelectionDialog = MaterialSelectionDialog(self.ogreRoot, self)
-        self.moduleManager.modelSelectionDialog = self.modelSelectionDialog
-        self.moduleManager.materialSelectionDialog = self.materialSelectionDialog
-
-        self.gameObjectClassView = GameObjectClassView(self.moduleManager.gocManager)
-
-        self.createDockWindows()
-
-        self.mainTimer = QtCore.QTimer(self)
-        self.mainTimer.connect(self.mainTimer, QtCore.SIGNAL("timeout()"), self.update)
-        self.mainTimer.start(5)
-
-        settings = QtCore.QSettings()
-        self.restoreGeometry(settings.value("MainWindow/Geometry").toByteArray())
-        self.restoreState(settings.value("MainWindow/DockWindows").toByteArray())
-        if not self.prefDialog.setCfgPath(settings.value("Preferences/moduleCfgPath").toString()):
-            self.prefDialog.show()
-            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
-        else:
-            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
-        
-        self.moduleManager.setModuleExplorer(self.moduleExplorerWin)
-        self.moduleManager.setPropertyWindow(self.objectPropertyWin)
-        self.moduleManager.setContextMenuCallback(self.onContextMenuCallback)
-        
-        self.setWindowIcon(QIcon("media/icons/lockenwickler_provisorium_small.png"))
-        self.setWindowTitle("Rastullahs Lockenwickler")
-        
-        self.editorSetupFinished = False
-        
-#        splash.finish(self)
-
-    def createAction(self, text, slot=None, shortcut=None, icon=None, tip=None, checkable=False, signal="triggered()"):
-        action = QtGui.QAction(text, self)
-        if icon is not None:
-            action.setIcon(QtGui.QIcon("media/icons/%s" % icon))
-        if shortcut is not None:
-            action.setShortcut(shortcut)
-        if tip is not None:
-            action.setToolTip(tip)
-            action.setStatusTip(tip)
-        if slot is not None:
-            self.connect(action, QtCore.SIGNAL(signal), slot)
-
-        action.setCheckable(checkable)
-
-        return action
-
-    def addActions(self, target, actions):
-        for act in actions:
-            if act is None:
-               target.addSeparator()
-            else:
-                target.addAction(act)
-
-    def setupUi(self):
-        self.setObjectName("MainWindow")
-
-        self.centralwidget = QtGui.QWidget(self)
-        self.centralwidget.setObjectName("centralwidget")
-
-        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
-        self.hboxlayout.setContentsMargins(0, 0, 0, 0)
-        self.hboxlayout.setObjectName("hboxlayout")
-
-        self.gridlayout = QtGui.QGridLayout()
-        self.gridlayout.setObjectName("gridlayout")
-        self.gridlayout.setContentsMargins(0, 0, 0, 0)
-        
-        self.menubar = QtGui.QMenuBar(self)
-        self.menubar.setObjectName("menubar")
-
-        self.menuFile = QtGui.QMenu(self.menubar)
-        self.menuFile.setObjectName("menuFile")
-
-        self.menuEdit = QtGui.QMenu(self.menubar)
-        self.menuEdit.setObjectName("menuEdit")
-
-        self.menuView = QtGui.QMenu(self.menubar)
-        self.menuView.setObjectName("menuView")
-        self.setMenuBar(self.menubar)
-
-
-        self.statusbar = QtGui.QStatusBar(self)
-        self.statusbar.setObjectName("statusbar")
-        self.setStatusBar(self.statusbar)
-
-#####################################
-        self.actionNeu =self.createAction("&New Module",  self.actionNewSlot,  QKeySequence.New,  "filenew.png",  "New Module")
-        self.actionNeu.setObjectName("actionNeu")
-
-        self.actionOpen = self.createAction("&Open Module",  self.actionOpenSlot,  QKeySequence.Open,  "fileopen.png",  "Open Module")
-        self.actionOpen.setObjectName("actionOpen")
-        
-        self.actionSave = self.createAction("&Save",  self.actionSaveSlot,  QKeySequence.Save,  "filesave.png",  "Save Module")
-        self.actionSave.setObjectName("actionSave")
-        
-        self.actionRunModule = self.createAction("&Save and Run",  self.actionRunModuleSlot,  "Alt+R",  "fileexport.png",  "Save And Run Module")
-        self.actionRunModule.setObjectName("actionRunModule")
-
-        self.actionClose = self.createAction("Quit",  self.actionQuitSlot,  "Alt+Q",  "exit.png",  "Quit")
-        self.actionClose.setObjectName("actionQuit")
-#####################################
-
-
-#####################################
-        self.actionDelete = self.createAction("Delete",  self.actionDeleteSlot,  QKeySequence.Delete,  "editdelete.png",  "Delete")
-        self.actionDelete.setObjectName("actionDelete")
-
-        self.actionCopy = self.createAction("Copy",  self.actionCopySlot,  QKeySequence.Copy,  "editcopy.png",  "Copy")
-        self.actionCopy.setObjectName("actionCopy")
-
-        self.actionCut = self.createAction("Cut",  self.actionCutSlot,  QKeySequence.Cut,  "editcut.png",  "Cut")
-        self.actionCut.setObjectName("actionCut")
-
-        self.actionPaste = self.createAction("Paste",  self.actionPasteSlot,  QKeySequence.Paste,  "editpaste.png",  "Paste")
-        self.actionPaste.setObjectName("actionPaste")
-
-        self.actionSelect = self.createAction("&Select",  self.actionSelectSlot,  "Space",  "cursor.png",  "Move selected object")
-        self.actionSelect.setObjectName("actionSelect")
-
-        self.actionMove = self.createAction("&Move",  self.actionMoveSlot,  "g",  "move.png",  "Move selected object")
-        self.actionMove.setObjectName("actionMove")
-
-        self.actionRotate = self.createAction("&Rotate",  self.actionRotateSlot,  "r",  "rotate.png",  "Rotate selected object")
-        self.actionRotate.setObjectName("actionRotate")
-
-        self.actionScale = self.createAction("&Scale",  self.actionScaleSlot,  "x",  "resizecol.png",  "Scale selected object")
-        self.actionScale.setObjectName("actionScale")
-
-        self.actionOneClickEntityPlacement = self.createAction("&OneClickEntityPlacement",  self.actionOneClickEntityPlacementSlot,  "",  "resizecol.png",  "Add an Entity just by a click")
-        self.actionOneClickEntityPlacement.setObjectName("actionOneClickEntityPlacement")
-        self.actionOneClickEntityPlacement.setCheckable(True)
-
-#####################################
-#####################################
-        self.actionSceneExplorer = self.createAction("&Scene Exlporer",  self.toggleModuleExplorer,  "Alt+E",  "view_tree.png",  "Module Explorer",  False)
-        self.actionSceneExplorer.setObjectName("actionSceneExplorer")
-        
-        self.actionPreferences = self.createAction("&Preferences",  self.togglePreferencesWindow,  "Alt+P",  "configure.png",  "Lockenwickler Preferences",  False)
-        self.actionPreferences.setObjectName("actionPreferences")
-
-        self.actionProperty_Window = self.createAction("Pr&operty Window",  self.togglePropertyWindow,  "Alt+P",  "unsortedlist1.png",  "Property Window")
-        self.actionProperty_Window.setObjectName("actionProperty_Window")
-
-        self.actionObject_Selection = self.createAction("&Model Preview Window",  self.toggleModelPreviewWindow,  "Alt+O",  "tux.png",  "Model Preview")
-        self.actionObject_Selection.setObjectName("actionObject_Selection")
-        
-        self.actionMaterial_Selection = self.createAction("Material &Preview Window",  self.toggleMaterialPreviewWindow,  "Alt+M",  "colors.png",  "Material Preview")
-        self.actionMaterial_Selection.setObjectName("actionMaterial_Selection")
-
-        self.actionGameObjectClass_Selection = self.createAction("&Game Object Class Preview Window",  self.toggleGameObjectViewWindow,  "Ctrl+G",  "multirow.png",  "GameObjectClass Preview")
-        self.actionGameObjectClass_Selection.setObjectName("actionObject_Selection")
-
-        self.actionConsole_Window = self.createAction("&Console Window",  self.toggleConsoleWindow,  "Alt+C",  "console.png",  "Console Window")
-        self.actionConsole_Window.setObjectName("actionConsole_Window")
-        
-        self.actionToggleViewportGrid = self.createAction("&Toggle Grid",  self.toggleViewportGrid,  "Alt+G",  "console.png",  "Toggle Viewport Grid")
-        self.actionToggleViewportGrid.setObjectName("actionToggleViewportGrid")
-
-#####################################
-#####################################
-
-
-        self.menuFile.addAction(self.actionNeu)
-        self.menuFile.addAction(self.actionOpen)
-        self.menuFile.addAction(self.actionSave)
-        self.menuFile.addAction(self.actionRunModule)
-        self.menuFile.addAction(self.actionClose)
-
-        self.menuEdit.addAction(self.actionSelect)
-        self.menuEdit.addAction(self.actionMove)
-        self.menuEdit.addAction(self.actionRotate)
-        self.menuEdit.addAction(self.actionScale)
-        self.menuEdit.addSeparator()
-        self.menuEdit.addAction(self.actionDelete)
-        self.menuEdit.addAction(self.actionCopy)
-        self.menuEdit.addAction(self.actionCut)
-        self.menuEdit.addAction(self.actionPaste)
-        self.menuEdit.addSeparator()
-        self.menuEdit.addAction(self.actionOneClickEntityPlacement)
-        
-
-        self.menuView.addAction(self.actionSceneExplorer)
-        self.menuView.addAction(self.actionPreferences)
-        self.menuView.addAction(self.actionProperty_Window)
-        self.menuView.addAction(self.actionObject_Selection)
-        self.menuView.addAction(self.actionMaterial_Selection)
-        self.menuView.addAction(self.actionGameObjectClass_Selection)
-        self.menuView.addAction(self.actionConsole_Window)
-        self.menuView.addAction(self.actionToggleViewportGrid)
-        
-        self.menubar.addAction(self.menuFile.menuAction())
-        self.menubar.addAction(self.menuEdit.menuAction())
-        self.menubar.addAction(self.menuView.menuAction())
-
-        self.retranslateUi()
-        QtCore.QMetaObject.connectSlotsByName(self)
-
-    def retranslateUi(self):
-        self.setWindowTitle(QtGui.QApplication.translate("MainWindow", "MainWindow", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuFile.setTitle(QtGui.QApplication.translate("MainWindow", "File", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuEdit.setTitle(QtGui.QApplication.translate("MainWindow", "Edit", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuView.setTitle(QtGui.QApplication.translate("MainWindow", "View", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionNeu.setText(QtGui.QApplication.translate("MainWindow", "New Module", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionMove.setText(QtGui.QApplication.translate("MainWindow", "Move", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionRotate.setText(QtGui.QApplication.translate("MainWindow", "Rotate", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionSceneExplorer.setText(QtGui.QApplication.translate("MainWindow", "Module Explorer", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionPreferences.setText(QtGui.QApplication.translate("MainWindow", "Preferences", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionProperty_Window.setText(QtGui.QApplication.translate("MainWindow", "Property Window", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionObject_Selection.setText(QtGui.QApplication.translate("MainWindow", "Object Selection", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionClose.setText(QtGui.QApplication.translate("MainWindow", "Quit", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionConsole_Window.setText(QtGui.QApplication.translate("MainWindow", "Console Window", None, QtGui.QApplication.UnicodeUTF8))
-
-    def setupOgre(self, pluginCfgPath="./Plugins.cfg", ogreCfgPath="./ogre.cfg", logPath="./ogre.log"):
-        if platform.system() == "Windows":
-            pluginCfgPath="./Plugins-windows.cfg"
-        else:
-            pluginCfgPath="./Plugins-linux.cfg"
-
-        root = og.Root(pluginCfgPath, ogreCfgPath, logPath)
-        self.ogreRoot = root
-
-        if  not self.ogreRoot.restoreConfig() and not self.ogreRoot.showConfigDialog():
-            sys.exit('Quit from Config Dialog')
-
-        root.initialise(False)
-
-        self.pivotRenderQueueListener = PivotRenderQueueListener()
-        self.OgreMainWinSceneMgr = self.ogreRoot.createSceneManager(og.ST_GENERIC, "OgreMainWinSceneMgr")
-        self.OgreMainWinSceneMgr.ambientLight = og.ColourValue(4, 4, 4)
-        self.OgreMainWinSceneMgr.addRenderQueueListener(self.pivotRenderQueueListener)
-        
-        self.moduleName = ""
-        self.moduleManager = ModuleManager(self.ogreRoot,  self.OgreMainWinSceneMgr)
-        self.gocManager = self.moduleManager.gocManager
-        
-        self.ogreMainWindow = OgreMainWindow.OgreMainWindow(self.moduleManager,  root,  self.OgreMainWinSceneMgr,  self)
-        self.gridlayout.addWidget(self.ogreMainWindow,0,0,1,1)
-        self.hboxlayout.addLayout(self.gridlayout)
-        self.setCentralWidget(self.centralwidget)
-        
-        oglog = og.LogManager.getSingleton().getDefaultLog()
-        oglog.addListener(self.consoleWindow.lockenLog)
-
-    def finishEditorSetup(self):
-        if not self.editorSetupFinished:
-            og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
-            og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
-
-            self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)
-            self.moduleManager.pivot.hide()
-            self.editorSetupFinished = True
-        
-    def update(self):
-        self.ogreRoot.renderOneFrame()
-        if platform.system() == "Linux":
-            self.ogreMainWindow.updateRenderWindow()
-            self.modelSelectionDialog.updateRenderWindow()
-            self.materialSelectionDialog.updateRenderWindow()
-
-    def actionOpenSlot(self):
-        self.finishEditorSetup()
-        self.moduleManager.openLoadModuleDialog()
-
-    def actionNewSlot(self):
-        newModuleWiz = NewModuleWizard(self.moduleManager, self)
-        newModuleWiz.exec_()
-        return
-        
-    def actionSaveSlot(self):
-        self.moduleManager.save()
-        
-    def actionRunModuleSlot(self):
-        self.moduleManager.save()
-        if platform.system() == "Windows":
-            workingDir = self.prefDialog.moduleCfgPath.replace("/modules/modules.cfg", "")
-            executable = os.path.join(workingDir, "Rastullah.exe")
-            executable = executable.replace("/",  "\\")
-            if os.path.isfile(executable):
-                subprocess.Popen([executable, "--module", self.moduleManager.mainModule.name], 0, None, None, None, None, None, False, False, workingDir)
-
-        
-    def actionQuitSlot(self):
-        self.close()
-
-    def actionDeleteSlot(self):
-        self.moduleManager.deleteObjects()
-
-    def actionCopySlot(self):
-        self.moduleManager.copyObjects()
-
-    def actionCutSlot(self):
-        self.moduleManager.cutObjects()
-
-    def actionPasteSlot(self):
-        self.moduleManager.pasteObjects(self.ogreMainWindow.getCameraToViewportRay())
-
-    def actionSelectSlot(self):
-        self.moduleManager.pivot.hide()
-
-    def actionMoveSlot(self):
-        self.moduleManager.pivot.setMoveMode()
-
-    def actionRotateSlot(self):
-        self.moduleManager.pivot.setRotateMode()
-
-    def actionScaleSlot(self):
-        self.moduleManager.pivot.setScaleMode()
-
-    def actionOneClickEntityPlacementSlot(self):
-        self.moduleManager.setOneClickEntityPlacement(self.actionOneClickEntityPlacement.isChecked())
-
-    def togglePreferencesWindow(self):
-        if self.prefDialog.isHidden():
-            self.prefDialog.show()
-        else:
-            self.prefDialog.hide()
-
-    def toggleModelPreviewWindow(self):
-        if self.modelSelectionDock.isHidden():
-            self.modelSelectionDock.show()
-        else:
-            self.modelSelectionDock.hide()
-    
-    def toggleMaterialPreviewWindow(self):
-        if self.materialSelectionDock.isHidden():
-            self.materialSelectionDock.show()
-        else:
-            self.materialSelectionDock.hide()
-
-    def toggleGameObjectViewWindow(self):
-        if self.gameObjectClassViewDock.isHidden():
-            self.gameObjectClassViewDock.show()
-        else:
-            self.gameObjectClassViewDock.hide()
-
-    def toggleModuleExplorer(self):
-        if self.moduleExplorerDock.isHidden():
-            self.moduleExplorerDock.show()
-        else:
-            self.moduleExplorerDock.hide()
-
-    def togglePropertyWindow(self):
-        if self.propertyDock.isHidden():
-            self.propertyDock.show()
-        else:
-            self.propertyDock.hide()
-
-    def toggleConsoleWindow(self):
-        if self.consoleDock.isHidden():
-            self.consoleDock.show()
-        else:
-            self.consoleDock.hide()
-
-    def toggleViewportGrid(self):
-        self.ogreMainWindow.toggleViewportGrid()
-
-    def createDockWindows(self):
-        self.modelSelectionDock = QtGui.QDockWidget(self.tr("Models"), self)
-        self.modelSelectionDock.setObjectName("ModelSelectionDockWindow")
-        self.modelSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.modelSelectionDock.setWidget(self.modelSelectionDialog)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.modelSelectionDock)
-        
-        self.materialSelectionDock = QtGui.QDockWidget(self.tr("Materials"), self)
-        self.materialSelectionDock.setObjectName("MaterialSelectionDockWindow")
-        self.materialSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.materialSelectionDock.setWidget(self.materialSelectionDialog)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.materialSelectionDock)
-        self.tabifyDockWidget(self.modelSelectionDock, self.materialSelectionDock)
-        
-        self.gameObjectClassViewDock = QtGui.QDockWidget(self.tr("GameObjectClasses"), self)
-        self.gameObjectClassViewDock.setObjectName("GameObjectClassView")
-        self.gameObjectClassViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.gameObjectClassViewDock.setWidget(self.gameObjectClassView)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.gameObjectClassViewDock)        
-        self.tabifyDockWidget(self.modelSelectionDock, self.gameObjectClassViewDock)
-        
-        self.propertyDock = QtGui.QDockWidget(self.tr("Properties"), self)
-        self.propertyDock.setObjectName("PropertyDockWindow")
-        self.propertyDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.propertyDock.setWidget(self.objectPropertyWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.propertyDock)
-
-        self.moduleExplorerDock = QtGui.QDockWidget(self.tr("Module Explorer"), self)
-        self.moduleExplorerDock.setObjectName("ModuleExplorerDockWindow")
-        self.moduleExplorerDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.moduleExplorerDock.setWidget(self.moduleExplorerWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleExplorerDock)
-        self.tabifyDockWidget(self.moduleExplorerDock, self.propertyDock)
-        
-        self.consoleDock = QtGui.QDockWidget(self.tr("Console"), self)
-        self.consoleDock.setObjectName("ConsoleDockWindow")
-        self.consoleDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea | QtCore.Qt.TopDockWidgetArea)
-        self.consoleDock.setWidget(self.consoleWindow)
-        self.addDockWidget(QtCore.Qt.BottomDockWidgetArea, self.consoleDock)
-
-        self.fileToolBar = self.addToolBar("File Toolbar")
-        self.fileToolBar.setObjectName("FileToolBar")
-        self.fileToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
-        self.fileToolBar.addAction(self.actionNeu)
-        self.fileToolBar.addAction(self.actionOpen)
-        self.fileToolBar.addAction(self.actionSave)
-        self.fileToolBar.addAction(self.actionRunModule)
-        self.fileToolBar.addAction(self.actionClose)
-        self.addToolBar(QtCore.Qt.TopToolBarArea, self.fileToolBar)
-
-        self.moveToolBar = self.addToolBar("Transformation Bar")
-        self.moveToolBar.setObjectName("TransformationBar")
-        self.moveToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
-        self.moveToolBar.addAction(self.actionSelect)
-        self.moveToolBar.addAction(self.actionMove)
-        self.moveToolBar.addAction(self.actionRotate)
-        self.moveToolBar.addAction(self.actionScale)
-        self.addToolBar(QtCore.Qt.TopToolBarArea, self.moveToolBar)
-
-    def keyPressEvent(self,  event):
-        if not event.isAutoRepeat():
-            self.ogreMainWindow.keyPressEvent(event)
-
-    def keyReleaseEvent(self,  event):
-        if not event.isAutoRepeat():
-            self.ogreMainWindow.keyReleaseEvent(event)
-        pass
-
-    def onContextMenuCallback(self, actions, menus):
-        menu = QMenu("My Menu!!")
-        menu.addAction(self.actionDelete)
-        menu.addAction(self.actionCopy)
-        menu.addAction(self.actionCut)
-        menu.addAction(self.actionPaste)
-        menu.addSeparator()
-        
-        for m in menus:
-            menu.addMenu(m)
-        for a in actions:
-            menu.addAction(a)
-
-        menu.exec_(QCursor.pos())
-
-    def connectActionButtons(self):
-        pass
-
-    def saveOnClose(self):
-#        reply = QtGui.QMessageBox.question(self,  "Rastullahs Lockenwickler - Unsaved Chages",  "Save unsaved changes?",  QtGui.QMessageBox.Yes|QtGui.QMessageBox.No|QtGui.QMessageBox.Cancel)
-#        if reply == QtGui.QMessageBox.Cancel:
-#            return False
-#        if reply == QtGui.QMessageBox.Yes:
-#            print""
-#            #TODO: implement save here
-        return True
-
-    def closeEvent(self,  event):
-        if self.saveOnClose():
-            settings = QtCore.QSettings()
-            settings.setValue("Preferences/moduleCfgPath", QtCore.QVariant(self.prefDialog.lineEdit.text()))
-            settings.setValue("MainWindow/Geometry",  QtCore.QVariant(self.saveGeometry()))
-            settings.setValue("MainWIndow/DockWindows",  QtCore.QVariant(self.saveState()))
-            
-            #self.ogreRoot.shutdown()
-        else:
-            event.ignore()
-
-if __name__ == "__main__":
-#    # Import Psyco if available
-#    try:
-#        import psyco
-#        psyco.full(0.02)
-#        #psyco.log()
-#        #psyco.profile()
-#    except ImportError:
-#        pass
-    
-    app = QtGui.QApplication(sys.argv)
-    app.setOrganizationName("Team Pantheon")
-    app.setOrganizationDomain("rastullahs-lockenpracht.de/team")
-    app.setApplicationName("Lockenwickler")
-
-    form = Lockenwickler()
-    form.show()
-
-    app.exec_()
-    
-    sys.exit(0)
-
+#################################################
+# This source file is part of Rastullahs Lockenwickler.
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+#  but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
+#################################################
+
+import os
+import sys
+import platform
+import subprocess
+
+sys.path.insert(0,'..')
+import PythonOgreConfig
+
+from random import randint
+
+from PyQt4 import QtGui, QtCore
+from PreferencesDialog import *
+from ObjectPropertyWin import *
+from ModelSelectionDialog import *
+from MaterialSelectionDialog import *
+from GameObjectClassView import *
+from ConsoleWindow import *
+from ModuleManager import ModuleManager
+from ModuleExplorer import *
+from NewModuleWizard import *
+from MovePivot import *
+from PivotRenderQueueListener import *
+from ModuleDirectoryView import *
+from TriggerManager import *
+from MyTerrainManager import MyTerrainManager
+
+import OgreMainWindow
+import ogre.renderer.OGRE as og
+
+class Lockenwickler(QtGui.QMainWindow):
+    def __init__(self, parent=None):
+        QtGui.QWidget.__init__(self, parent)
+
+#        pixmap = QPixmap("media/icons/lockenwickler_provisorium.png")
+#        splash = QSplashScreen(pixmap, Qt.WindowStaysOnTopHint)
+#        splash.setMask(pixmap.mask())
+#        splash.showMessage("Starting...")
+#        splash.show() 
+
+        self.setupUi()
+
+        self.consoleWindow = ConsoleWindow(False,  self)
+
+        self.setupOgre()
+
+        self.prefDialog = PreferencesDialog(self)
+        self.objectPropertyWin = ObjectPropertyWin(self.OgreMainWinSceneMgr, self.gocManager, self)
+        self.moduleExplorerWin = ModuleExplorer(self)
+        self.modelSelectionDialog = ModelSelectionDialog(self.ogreRoot, self)
+        self.materialSelectionDialog = MaterialSelectionDialog(self.ogreRoot, self)
+        self.moduleManager.modelSelectionDialog = self.modelSelectionDialog
+        self.moduleManager.materialSelectionDialog = self.materialSelectionDialog
+        self.moduleDirectoryViewWin = ModuleDirectoryView(self)
+        
+        triggerManager = TriggerManager()
+        
+        self.gameObjectClassView = GameObjectClassView(self.moduleManager.gocManager)
+
+        self.createDockWindows()
+
+        self.mainTimer = QtCore.QTimer(self)
+        self.mainTimer.connect(self.mainTimer, QtCore.SIGNAL("timeout()"), self.update)
+        self.mainTimer.start(5)
+
+        settings = QtCore.QSettings()
+        self.restoreGeometry(settings.value("MainWindow/Geometry").toByteArray())
+        self.restoreState(settings.value("MainWindow/DockWindows").toByteArray())
+        if not self.prefDialog.setCfgPath(settings.value("Preferences/moduleCfgPath").toString()):
+            self.prefDialog.show()
+            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
+
+        else:
+            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
+            
+        self.prefDialog.setExternalEditorPath(str(settings.value("Preferences/externalEditorPath").toString()))
+        
+        if self.prefDialog.moduleCfgPath is not None:
+            self.moduleDirectoryViewWin.modulesPath = self.prefDialog.moduleCfgPath.replace("modules.cfg", "")
+
+        
+        self.moduleManager.setModuleExplorer(self.moduleExplorerWin)
+        self.moduleManager.setModuleDirView(self.moduleDirectoryViewWin)
+        self.moduleManager.setPropertyWindow(self.objectPropertyWin)
+        self.moduleManager.setContextMenuCallback(self.onContextMenuCallback)
+        
+        self.setWindowIcon(QIcon("media/icons/lockenwickler_provisorium_small.png"))
+        self.setWindowTitle("Rastullahs Lockenwickler")
+        
+        self.editorSetupFinished = False
+        
+#        splash.finish(self)
+
+    def createAction(self, text, slot=None, shortcut=None, icon=None, tip=None, checkable=False, signal="triggered()"):
+        action = QtGui.QAction(text, self)
+        if icon is not None:
+            action.setIcon(QtGui.QIcon("media/icons/%s" % icon))
+        if shortcut is not None:
+            action.setShortcut(shortcut)
+        if tip is not None:
+            action.setToolTip(tip)
+            action.setStatusTip(tip)
+        if slot is not None:
+            self.connect(action, QtCore.SIGNAL(signal), slot)
+
+        action.setCheckable(checkable)
+
+        return action
+
+    def addActions(self, target, actions):
+        for act in actions:
+            if act is None:
+               target.addSeparator()
+            else:
+                target.addAction(act)
+
+    def setupUi(self):
+        self.setObjectName("MainWindow")
+
+        self.centralwidget = QtGui.QWidget(self)
+        self.centralwidget.setObjectName("centralwidget")
+
+        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
+        self.hboxlayout.setContentsMargins(0, 0, 0, 0)
+        self.hboxlayout.setObjectName("hboxlayout")
+
+        self.gridlayout = QtGui.QGridLayout()
+        self.gridlayout.setObjectName("gridlayout")
+        self.gridlayout.setContentsMargins(0, 0, 0, 0)
+        
+        self.menubar = QtGui.QMenuBar(self)
+        self.menubar.setObjectName("menubar")
+
+        self.menuFile = QtGui.QMenu(self.menubar)
+        self.menuFile.setObjectName("menuFile")
+
+        self.menuEdit = QtGui.QMenu(self.menubar)
+        self.menuEdit.setObjectName("menuEdit")
+
+        self.menuView = QtGui.QMenu(self.menubar)
+        self.menuView.setObjectName("menuView")
+        self.setMenuBar(self.menubar)
+
+
+        self.statusbar = QtGui.QStatusBar(self)
+        self.statusbar.setObjectName("statusbar")
+        self.setStatusBar(self.statusbar)
+
+#####################################
+        self.actionNeu =self.createAction("&New Module",  self.actionNewSlot,  QKeySequence.New,  "filenew.png",  "New Module")
+        self.actionNeu.setObjectName("actionNeu")
+
+        self.actionOpen = self.createAction("&Open Module",  self.actionOpenSlot,  QKeySequence.Open,  "fileopen.png",  "Open Module")
+        self.actionOpen.setObjectName("actionOpen")
+        
+        self.actionSave = self.createAction("&Save",  self.actionSaveSlot,  QKeySequence.Save,  "filesave.png",  "Save Module")
+        self.actionSave.setObjectName("actionSave")
+        
+        self.actionRunModule = self.createAction("&Save and Run",  self.actionRunModuleSlot,  "Alt+R",  "fileexport.png",  "Save And Run Module")
+        self.actionRunModule.setObjectName("actionRunModule")
+
+        self.actionClose = self.createAction("Quit",  self.actionQuitSlot,  "Alt+Q",  "exit.png",  "Quit")
+        self.actionClose.setObjectName("actionQuit")
+#####################################
+
+
+#####################################
+        self.actionDelete = self.createAction("Delete",  self.actionDeleteSlot,  QKeySequence.Delete,  "editdelete.png",  "Delete")
+        self.actionDelete.setObjectName("actionDelete")
+
+        self.actionCopy = self.createAction("Copy",  self.actionCopySlot,  QKeySequence.Copy,  "editcopy.png",  "Copy")
+        self.actionCopy.setObjectName("actionCopy")
+
+        self.actionCut = self.createAction("Cut",  self.actionCutSlot,  QKeySequence.Cut,  "editcut.png",  "Cut")
+        self.actionCut.setObjectName("actionCut")
+
+        self.actionPaste = self.createAction("Paste",  self.actionPasteSlot,  QKeySequence.Paste,  "editpaste.png",  "Paste")
+        self.actionPaste.setObjectName("actionPaste")
+
+        self.actionSelect = self.createAction("&Select",  self.actionSelectSlot,  "Space",  "cursor.png",  "Move selected object")
+        self.actionSelect.setObjectName("actionSelect")
+
+        self.actionMove = self.createAction("&Move",  self.actionMoveSlot,  "g",  "move.png",  "Move selected object")
+        self.actionMove.setObjectName("actionMove")
+
+        self.actionRotate = self.createAction("&Rotate",  self.actionRotateSlot,  "r",  "rotate.png",  "Rotate selected object")
+        self.actionRotate.setObjectName("actionRotate")
+
+        self.actionScale = self.createAction("&Scale",  self.actionScaleSlot,  "x",  "resizecol.png",  "Scale selected object")
+        self.actionScale.setObjectName("actionScale")
+
+        self.actionOneClickEntityPlacement = self.createAction("&OneClickEntityPlacement",  self.actionOneClickEntityPlacementSlot,  "",  "resizecol.png",  "Add an Entity just by a click")
+        self.actionOneClickEntityPlacement.setObjectName("actionOneClickEntityPlacement")
+        self.actionOneClickEntityPlacement.setCheckable(True)
+
+#####################################
+#####################################
+        self.actionSceneExplorer = self.createAction("&Scene Exlporer",  self.toggleModuleExplorer,  "Alt+E",  "view_tree.png",  "Module Explorer",  False)
+        self.actionSceneExplorer.setObjectName("actionSceneExplorer")
+        
+        self.actionModuleDirView = self.createAction("&Directory Explorer",  self.toggleModuleDirView,  "Alt+D",  "view_tree.png",  "Module Directory Explorer",  False)
+        self.actionModuleDirView.setObjectName("actionDirectoryExplorer")
+        
+        self.actionPreferences = self.createAction("&Preferences",  self.togglePreferencesWindow,  None,  "configure.png",  "Lockenwickler Preferences",  False)
+        self.actionPreferences.setObjectName("actionPreferences")
+
+        self.actionProperty_Window = self.createAction("Pr&operty Window",  self.togglePropertyWindow,  "Alt+P",  "unsortedlist1.png",  "Property Window")
+        self.actionProperty_Window.setObjectName("actionProperty_Window")
+
+        self.actionObject_Selection = self.createAction("&Model Preview Window",  self.toggleModelPreviewWindow,  "Alt+O",  "tux.png",  "Model Preview")
+        self.actionObject_Selection.setObjectName("actionObject_Selection")
+        
+        self.actionMaterial_Selection = self.createAction("Material &Preview Window",  self.toggleMaterialPreviewWindow,  "Alt+M",  "colors.png",  "Material Preview")
+        self.actionMaterial_Selection.setObjectName("actionMaterial_Selection")
+
+        self.actionGameObjectClass_Selection = self.createAction("&Game Object Class Preview Window",  self.toggleGameObjectViewWindow,  "Ctrl+G",  "multirow.png",  "GameObjectClass Preview")
+        self.actionGameObjectClass_Selection.setObjectName("actionObject_Selection")
+
+        self.actionConsole_Window = self.createAction("&Console Window",  self.toggleConsoleWindow,  "Alt+C",  "console.png",  "Console Window")
+        self.actionConsole_Window.setObjectName("actionConsole_Window")
+        
+        self.actionTerrainTools_Window = self.createAction("&Terrain Tools",  self.toggleTerrainToolsWindow,  "Alt+T",  "terrain_small.png",  "Console Window")
+        self.actionTerrainTools_Window.setObjectName("actionTerrainTools_Window")
+        
+        self.actionToggleViewportGrid = self.createAction("&Toggle Grid",  self.toggleViewportGrid,  "Alt+G",  "console.png",  "Toggle Viewport Grid")
+        self.actionToggleViewportGrid.setObjectName("actionToggleViewportGrid")
+
+#####################################
+#####################################
+
+
+        self.menuFile.addAction(self.actionNeu)
+        self.menuFile.addAction(self.actionOpen)
+        self.menuFile.addAction(self.actionSave)
+        self.menuFile.addAction(self.actionRunModule)
+        self.menuFile.addAction(self.actionClose)
+
+        self.menuEdit.addAction(self.actionSelect)
+        self.menuEdit.addAction(self.actionMove)
+        self.menuEdit.addAction(self.actionRotate)
+        self.menuEdit.addAction(self.actionScale)
+        self.menuEdit.addSeparator()
+        self.menuEdit.addAction(self.actionDelete)
+        self.menuEdit.addAction(self.actionCopy)
+        self.menuEdit.addAction(self.actionCut)
+        self.menuEdit.addAction(self.actionPaste)
+        self.menuEdit.addSeparator()
+        self.menuEdit.addAction(self.actionOneClickEntityPlacement)
+        
+
+        self.menuView.addAction(self.actionSceneExplorer)
+        self.menuView.addAction(self.actionModuleDirView)
+        self.menuView.addAction(self.actionPreferences)
+        self.menuView.addAction(self.actionProperty_Window)
+        self.menuView.addAction(self.actionObject_Selection)
+        self.menuView.addAction(self.actionMaterial_Selection)
+        self.menuView.addAction(self.actionGameObjectClass_Selection)
+        self.menuView.addAction(self.actionConsole_Window)
+        self.menuView.addAction(self.actionTerrainTools_Window)
+        self.menuView.addAction(self.actionToggleViewportGrid)
+        
+        self.menubar.addAction(self.menuFile.menuAction())
+        self.menubar.addAction(self.menuEdit.menuAction())
+        self.menubar.addAction(self.menuView.menuAction())
+
+        self.retranslateUi()
+        QtCore.QMetaObject.connectSlotsByName(self)
+
+    def retranslateUi(self):
+        self.setWindowTitle(QtGui.QApplication.translate("MainWindow", "MainWindow", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuFile.setTitle(QtGui.QApplication.translate("MainWindow", "File", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuEdit.setTitle(QtGui.QApplication.translate("MainWindow", "Edit", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuView.setTitle(QtGui.QApplication.translate("MainWindow", "View", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionNeu.setText(QtGui.QApplication.translate("MainWindow", "New Module", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionMove.setText(QtGui.QApplication.translate("MainWindow", "Move", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionRotate.setText(QtGui.QApplication.translate("MainWindow", "Rotate", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionSceneExplorer.setText(QtGui.QApplication.translate("MainWindow", "Module Explorer", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionPreferences.setText(QtGui.QApplication.translate("MainWindow", "Preferences", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionProperty_Window.setText(QtGui.QApplication.translate("MainWindow", "Property Window", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionObject_Selection.setText(QtGui.QApplication.translate("MainWindow", "Object Selection", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionClose.setText(QtGui.QApplication.translate("MainWindow", "Quit", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionConsole_Window.setText(QtGui.QApplication.translate("MainWindow", "Console Window", None, QtGui.QApplication.UnicodeUTF8))
+
+    def setupOgre(self, pluginCfgPath="./Plugins.cfg", ogreCfgPath="./ogre.cfg", logPath="./ogre.log"):
+        if platform.system() == "Windows":
+            pluginCfgPath="./Plugins-windows.cfg"
+        else:
+            pluginCfgPath="./Plugins-linux.cfg"
+
+        root = og.Root(pluginCfgPath, ogreCfgPath, logPath)
+        self.ogreRoot = root
+
+        if  not self.ogreRoot.restoreConfig() and not self.ogreRoot.showConfigDialog():
+            sys.exit('Quit from Config Dialog')
+
+        root.initialise(False)
+
+        self.pivotRenderQueueListener = PivotRenderQueueListener()
+        self.OgreMainWinSceneMgr = self.ogreRoot.createSceneManager(og.ST_GENERIC, "OgreMainWinSceneMgr")
+        self.OgreMainWinSceneMgr.ambientLight = og.ColourValue(4, 4, 4)
+        self.OgreMainWinSceneMgr.addRenderQueueListener(self.pivotRenderQueueListener)
+        
+        self.moduleName = ""
+        self.myTerrainManager = MyTerrainManager(self.OgreMainWinSceneMgr)
+        self.moduleManager = ModuleManager(self.ogreRoot,  self.OgreMainWinSceneMgr)
+        self.moduleManager.myTerrainManager = self.myTerrainManager
+        self.gocManager = self.moduleManager.gocManager
+        
+        self.ogreMainWindow = OgreMainWindow.OgreMainWindow(self.moduleManager,  root,  self.OgreMainWinSceneMgr,  self)
+        self.gridlayout.addWidget(self.ogreMainWindow,0,0,1,1)
+        self.hboxlayout.addLayout(self.gridlayout)
+        self.setCentralWidget(self.centralwidget)
+        
+        self.myTerrainManager.ogreMainWindow = self.ogreMainWindow
+        
+        oglog = og.LogManager.getSingleton().getDefaultLog()
+        oglog.addListener(self.consoleWindow.lockenLog)
+
+    def finishEditorSetup(self):
+        if not self.editorSetupFinished:
+            og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
+            og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
+
+            self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)
+            self.moduleManager.pivot.hide()
+            self.editorSetupFinished = True
+        
+    def update(self):
+        self.ogreRoot.renderOneFrame()
+        if platform.system() == "Linux":
+            self.ogreMainWindow.updateRenderWindow()
+            self.modelSelectionDialog.updateRenderWindow()
+            self.materialSelectionDialog.updateRenderWindow()
+
+    def actionOpenSlot(self):
+        self.finishEditorSetup()
+        self.moduleManager.openLoadModuleDialog()
+
+    def actionNewSlot(self):
+        newModuleWiz = NewModuleWizard(self.moduleManager, self)
+        newModuleWiz.exec_()
+        return
+        
+    def actionSaveSlot(self):
+        self.moduleManager.save()
+        
+    def actionRunModuleSlot(self):
+        self.moduleManager.save()
+        if platform.system() == "Windows":
+            workingDir = self.prefDialog.moduleCfgPath.replace("/modules/modules.cfg", "")
+            executable = os.path.join(workingDir, "Rastullah.exe")
+            executable = executable.replace("/",  "\\")
+            if os.path.isfile(executable):
+                subprocess.Popen([executable, "--module", self.moduleManager.mainModule.name], 0, None, None, None, None, None, False, False, workingDir)
+
+        
+    def actionQuitSlot(self):
+        self.close()
+
+    def actionDeleteSlot(self):
+        self.moduleManager.deleteObjects()
+
+    def actionCopySlot(self):
+        self.moduleManager.copyObjects()
+
+    def actionCutSlot(self):
+        self.moduleManager.cutObjects()
+
+    def actionPasteSlot(self):
+        self.moduleManager.pasteObjects(self.ogreMainWindow.getCameraToViewportRay())
+
+    def actionSelectSlot(self):
+        self.moduleManager.pivot.hide()
+
+    def actionMoveSlot(self):
+        self.moduleManager.pivot.setMoveMode()
+
+    def actionRotateSlot(self):
+        self.moduleManager.pivot.setRotateMode()
+
+    def actionScaleSlot(self):
+        self.moduleManager.pivot.setScaleMode()
+
+    def actionOneClickEntityPlacementSlot(self):
+        self.moduleManager.setOneClickEntityPlacement(self.actionOneClickEntityPlacement.isChecked())
+
+    def togglePreferencesWindow(self):
+        if self.prefDialog.isHidden():
+            self.prefDialog.show()
+        else:
+            self.prefDialog.hide()
+
+    def toggleModelPreviewWindow(self):
+        if self.modelSelectionDock.isHidden():
+            self.modelSelectionDock.show()
+        else:
+            self.modelSelectionDock.hide()
+    
+    def toggleMaterialPreviewWindow(self):
+        if self.materialSelectionDock.isHidden():
+            self.materialSelectionDock.show()
+        else:
+            self.materialSelectionDock.hide()
+
+    def toggleGameObjectViewWindow(self):
+        if self.gameObjectClassViewDock.isHidden():
+            self.gameObjectClassViewDock.show()
+        else:
+            self.gameObjectClassViewDock.hide()
+
+    def toggleModuleExplorer(self):
+        if self.moduleExplorerDock.isHidden():
+            self.moduleExplorerDock.show()
+        else:
+            self.moduleExplorerDock.hide()
+            
+    def toggleModuleDirView(self):
+        if self.moduleDirectoryViewDock.isHidden():
+            self.moduleDirectoryViewDock.show()
+        else:
+            self.moduleDirectoryViewDock.hide()
+
+    def togglePropertyWindow(self):
+        if self.propertyDock.isHidden():
+            self.propertyDock.show()
+        else:
+            self.propertyDock.hide()
+
+    def toggleConsoleWindow(self):
+        if self.consoleDock.isHidden():
+            self.consoleDock.show()
+        else:
+            self.consoleDock.hide()
+            
+    def toggleTerrainToolsWindow(self):
+        if self.myTerrainManagerDock.isHidden():
+            self.myTerrainManagerDock.show()
+        else:
+            self.myTerrainManagerDock.hide()
+
+    def toggleViewportGrid(self):
+        self.ogreMainWindow.toggleViewportGrid()
+
+    def createDockWindows(self):
+        self.modelSelectionDock = QtGui.QDockWidget(self.tr("Models"), self)
+        self.modelSelectionDock.setObjectName("ModelSelectionDockWindow")
+        self.modelSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.modelSelectionDock.setWidget(self.modelSelectionDialog)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.modelSelectionDock)
+        
+        self.materialSelectionDock = QtGui.QDockWidget(self.tr("Materials"), self)
+        self.materialSelectionDock.setObjectName("MaterialSelectionDockWindow")
+        self.materialSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.materialSelectionDock.setWidget(self.materialSelectionDialog)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.materialSelectionDock)
+        self.tabifyDockWidget(self.modelSelectionDock, self.materialSelectionDock)
+        
+        self.gameObjectClassViewDock = QtGui.QDockWidget(self.tr("GameObjectClasses"), self)
+        self.gameObjectClassViewDock.setObjectName("GameObjectClassView")
+        self.gameObjectClassViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.gameObjectClassViewDock.setWidget(self.gameObjectClassView)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.gameObjectClassViewDock)        
+        self.tabifyDockWidget(self.modelSelectionDock, self.gameObjectClassViewDock)
+        
+        self.propertyDock = QtGui.QDockWidget(self.tr("Properties"), self)
+        self.propertyDock.setObjectName("PropertyDockWindow")
+        self.propertyDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.propertyDock.setWidget(self.objectPropertyWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.propertyDock)
+
+        self.moduleExplorerDock = QtGui.QDockWidget(self.tr("Module Explorer"), self)
+        self.moduleExplorerDock.setObjectName("ModuleExplorerDockWindow")
+        self.moduleExplorerDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.moduleExplorerDock.setWidget(self.moduleExplorerWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleExplorerDock)
+        self.tabifyDockWidget(self.moduleExplorerDock, self.propertyDock)
+        
+        self.moduleDirectoryViewDock = QtGui.QDockWidget(self.tr("Module Directory View"), self)
+        self.moduleDirectoryViewDock.setObjectName("ModuleDirectoryViewDockWindow")
+        self.moduleDirectoryViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea | QtCore.Qt.TopDockWidgetArea | QtCore.Qt.BottomDockWidgetArea)
+        self.moduleDirectoryViewDock.setWidget(self.moduleDirectoryViewWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleDirectoryViewDock)
+        
+        self.myTerrainManagerDock = self.myTerrainManager.getDockWidget(self)
+        
+        self.consoleDock = QtGui.QDockWidget(self.tr("Console"), self)
+        self.consoleDock.setObjectName("ConsoleDockWindow")
+        self.consoleDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea | QtCore.Qt.TopDockWidgetArea)
+        self.consoleDock.setWidget(self.consoleWindow)
+        self.addDockWidget(QtCore.Qt.BottomDockWidgetArea, self.consoleDock)
+
+        self.fileToolBar = self.addToolBar("File Toolbar")
+        self.fileToolBar.setObjectName("FileToolBar")
+        self.fileToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
+        self.fileToolBar.addAction(self.actionNeu)
+        self.fileToolBar.addAction(self.actionOpen)
+        self.fileToolBar.addAction(self.actionSave)
+        self.fileToolBar.addAction(self.actionRunModule)
+        self.fileToolBar.addAction(self.actionClose)
+        self.addToolBar(QtCore.Qt.TopToolBarArea, self.fileToolBar)
+
+        self.moveToolBar = self.addToolBar("Transformation Bar")
+        self.moveToolBar.setObjectName("TransformationBar")
+        self.moveToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
+        self.moveToolBar.addAction(self.actionSelect)
+        self.moveToolBar.addAction(self.actionMove)
+        self.moveToolBar.addAction(self.actionRotate)
+        self.moveToolBar.addAction(self.actionScale)
+        self.addToolBar(QtCore.Qt.TopToolBarArea, self.moveToolBar)
+
+    def keyPressEvent(self,  event):
+        if not event.isAutoRepeat():
+            self.ogreMainWindow.keyPressEvent(event)
+
+    def keyReleaseEvent(self,  event):
+        if not event.isAutoRepeat():
+            self.ogreMainWindow.keyReleaseEvent(event)
+        pass
+
+    def onContextMenuCallback(self, actions, menus):
+        menu = QMenu("My Menu!!")
+        menu.addAction(self.actionDelete)
+        menu.addAction(self.actionCopy)
+        menu.addAction(self.actionCut)
+        menu.addAction(self.actionPaste)
+        menu.addSeparator()
+        
+        for m in menus:
+            menu.addMenu(m)
+        for a in actions:
+            menu.addAction(a)
+
+        menu.exec_(QCursor.pos())
+
+    def connectActionButtons(self):
+        pass
+
+    def saveOnClose(self):
+#        reply = QtGui.QMessageBox.question(self,  "Rastullahs Lockenwickler - Unsaved Chages",  "Save unsaved changes?",  QtGui.QMessageBox.Yes|QtGui.QMessageBox.No|QtGui.QMessageBox.Cancel)
+#        if reply == QtGui.QMessageBox.Cancel:
+#            return False
+#        if reply == QtGui.QMessageBox.Yes:
+#            print""
+#            #TODO: implement save here
+        return True
+
+    def closeEvent(self,  event):
+        if self.saveOnClose():
+            settings = QtCore.QSettings()
+            settings.setValue("Preferences/moduleCfgPath", QtCore.QVariant(self.prefDialog.lineEdit.text()))
+            settings.setValue("MainWindow/Geometry",  QtCore.QVariant(self.saveGeometry()))
+            settings.setValue("MainWIndow/DockWindows",  QtCore.QVariant(self.saveState()))
+            settings.setValue("Preferences/externalEditorPath",  QtCore.QVariant(self.prefDialog.externalTextAppLineEdit.text()))
+            #self.ogreRoot.shutdown()
+        else:
+            event.ignore()
+
+if __name__ == "__main__":
+#    # Import Psyco if available
+#    try:
+#        import psyco
+#        psyco.full(0.02)
+#        #psyco.log()
+#        #psyco.profile()
+#    except ImportError:
+#        pass
+    
+    app = QtGui.QApplication(sys.argv)
+    app.setOrganizationName("Team Pantheon")
+    app.setOrganizationDomain("rastullahs-lockenpracht.de/team")
+    app.setApplicationName("Lockenwickler")
+
+    form = Lockenwickler()
+    form.show()
+
+    app.exec_()
+    
+    sys.exit(0)
+

Modified: rl/branches/persistence2/editors/Lockenwickler/src/ModuleExplorer.py
===================================================================
--- rl/branches/persistence2/editors/Lockenwickler/src/ModuleExplorer.py	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/ModuleExplorer.py	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,4 +1,4 @@
- #################################################
+#################################################
 # This source file is part of Rastullahs Lockenwickler.
 # Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
 #
@@ -15,13 +15,15 @@
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
- #################################################
+#################################################
 
 import sys
 from PyQt4.QtCore import *
 from PyQt4.QtGui import *
 import ogre.renderer.OGRE as og
 
+from ZoneManager import *
+
 # get the light out of a light node
 def extractLight(node):
         i = 0
@@ -35,7 +37,7 @@
             i += 1
 
 class ExplorerOptionsDlg(QDialog):
-    def __init__(self, lights, gameObjects, entities, zones, zonelights, parent = None):
+    def __init__(self, lights, gameObjects, entities, zones, zonelights, zonetriggers, parent = None):
         super(ExplorerOptionsDlg, self).__init__(parent)
         
         buttonBox = QDialogButtonBox(QDialogButtonBox.Ok | QDialogButtonBox.Cancel)
@@ -61,6 +63,10 @@
         self.zoneslightsCheckBox.setChecked(zonelights)        
         layout.addWidget(self.zoneslightsCheckBox)
         
+        self.zonesTriggersCheckBox = QCheckBox("Show Zonetriggers")
+        self.zonesTriggersCheckBox.setChecked(zonetriggers)        
+        layout.addWidget(self.zonesTriggersCheckBox)
+        
         layout.addWidget(buttonBox)
         layout.setContentsMargins(2, 2, 2, 2)
         self.setLayout(layout)
@@ -122,7 +128,7 @@
         drag.start(Qt.CopyAction)
 
     def dragEnterEvent(self, event):
-        print "enter"
+#        print "enter"
         if event.mimeData().hasFormat("application/light"):
             event.accept()
             
@@ -155,7 +161,7 @@
         
             relMousePos = self.mapFromGlobal(QPoint(QCursor.pos().x(), QCursor.pos().y() - self.header().height()))
             item = self.itemAt(relMousePos)
-            str(item.data(0, Qt.UserRole).toString())
+            #str(item.data(0, Qt.UserRole).toString())
             
             items = self.findItems("Lights", Qt.MatchFixedString | Qt.MatchRecursive)
             for iitem in items:
@@ -173,10 +179,9 @@
                     child.setText(0, text)
                     child.setData(0, Qt.UserRole, QVariant(ModuleExplorer.LIGHT_IN_ZONE))
 
-
-
 class ModuleExplorer(QWidget):
     LIGHT_IN_ZONE = 99
+    TRIGGER_IN_ZONE = 100
     
     def __init__(self, parent=None):
         QWidget.__init__(self, parent)
@@ -205,6 +210,7 @@
         
         self.showLights = True
         self.showZoneLights = True
+        self.showZoneTriggers = True
         self.showGameObjects = True
         self.showEntities = True
         self.showZones = True
@@ -254,10 +260,12 @@
         if self.selectionChangedCallback is None:
             return
 
+        
+
         #get all selected items
         selItems = self.sceneTreeView.selectedItems()
         if len(selItems) == 1:
-            if str(selItems[0].parent().text(0)) == "Lights" and str(selItems[0].parent().parent().text(0)).startswith("Zone: "):
+            if str(selItems[0]).startswith("Scene: ") and str(selItems[0].parent().text(0)) == "Lights" and str(selItems[0].parent().parent().text(0)).startswith("Zone: "):
                 return
         
         
@@ -279,17 +287,32 @@
         
         #end remove all the things from the list we actually don't want to be selected
         for item in selItems:
-            if str(item.text(0)).startswith("Scene: ") or str(item.text(0)).startswith("Map: ") or str(item.text(0)).startswith("Zone: "):
+            itemText = str(item.text(0))
+            if item.parent() is None:
+                continue
+            
+            parentText = str(item.parent().text(0))
+            
+            if itemText.startswith("Map: ") or itemText.startswith("Zone: "):
                 selItems.remove(item)
+            elif item.data(0, Qt.UserRole).toInt()[0] == ModuleExplorer.LIGHT_IN_ZONE or item.data(0, Qt.UserRole).toInt()[0] == ModuleExplorer.TRIGGER_IN_ZONE:
+                selItems.remove(item)
+            elif itemText == "Lights" or itemText == "Triggers":
+                if parentText.startswith("Zone: "):
+                    selItems.remove(item)
         
         for item in selItems:
+            if item.parent() is None:
+                continue
+            
             parentName =  str(item.text(0))
                         
             name = str(item.data(0, Qt.UserRole).toString())
             if len > 0:
                 nodeNames[str(item.parent().text(0))].append(name)
                 
-        self.selectionChangedCallback(nodeNames)
+        if len(nodeNames) > 0:
+            self.selectionChangedCallback(nodeNames)
 
     def deselectAll(self):
         self.disconnect(self.sceneTreeView, SIGNAL("itemSelectionChanged ()"), self.onSelectionChanged)
@@ -352,6 +375,11 @@
                 setActiveMapAction = QAction("Set Active",  self)
                 menu.addAction(setActiveMapAction)
                 self.connect(setActiveMapAction, SIGNAL("triggered()"), self.onSetActiveMap)
+            elif self.sceneTreeView.currentItem() is not None and str(self.sceneTreeView.currentItem().text(0)).startswith("Zone:"):
+                item = self.sceneTreeView.itemAt(point)
+                addTriggerAction = QAction("Add Trigger",  self)
+                menu.addAction(addTriggerAction)
+                self.connect(addTriggerAction, SIGNAL("triggered()"), self.onAddTriggerToZone)
                 
             deleteAction= QAction("Delete",  self)
             menu.addAction(deleteAction)
@@ -371,8 +399,13 @@
             
             menu.exec_(QCursor().pos())
     
+    def onAddTriggerToZone(self):
+        zoneName = str(self.sceneTreeView.currentItem().text(0)).replace("Zone: ", "")
+        self.moduleManager.zoneManager.getZone(zoneName).manualAddTrigger()
+        self.updateView()
+        
     def onOptions(self):
-        dlg = ExplorerOptionsDlg(self.showLights, self.showGameObjects, self.showEntities, self.showZones, self.showZoneLights, self)
+        dlg = ExplorerOptionsDlg(self.showLights, self.showGameObjects, self.showEntities, self.showZones, self.showZoneLights, self.showZoneTriggers, self)
         if dlg.exec_():
             self.showLights = dlg.lightCheckBox.isChecked()
             self.showGameObjects = dlg.gameObjectsCheckBox.isChecked()
@@ -413,13 +446,34 @@
             self.updateView()
     
     def onDelete(self):
-        print "delete"
+        item = self.sceneTreeView.itemAt(self.onMenuPoint)
+        
+        if item.data(0, Qt.UserRole).toString() == str(ModuleExplorer.LIGHT_IN_ZONE):
+            zoneName = str(item.parent().parent().text(0)).replace("Zone: ",  "")
+            lightName = str(item.text(0))
+            if self.sceneTreeView.zoneManager.removeLightFromZone(zoneName, lightName):
+                item.parent().removeChild(item)     
+        elif item.data(0, Qt.UserRole).toString() == str(ModuleExplorer.TRIGGER_IN_ZONE):
+            zoneName = str(item.parent().parent().text(0)).replace("Zone: ",  "")
+            triggerNameName = str(item.text(0))
+            if self.sceneTreeView.zoneManager.removeTriggerFromZone(zoneName, triggerNameName):
+                item.parent().removeChild(item)
+        elif str(item.text(0)).startswith("Zone: "):
+            zoneName = str(item.text(0)).replace("Zone: ",  "")
+            reply = QMessageBox.warning(QApplication.focusWidget(), "Undoable Action!", "Delete zone " +  zoneName + "?", QMessageBox.Yes|QMessageBox.Cancel)
+            if reply == QMessageBox.Cancel:
+                return
+            elif reply == QMessageBox.Yes:
+                if self.sceneTreeView.zoneManager.deleteZone(zoneName):
+                    item.parent().removeChild(item)
+                    
+#        print "delete " + str(item.data(0, Qt.UserRole).toString())
 
     def keyPressEvent(self, event):
         print "key!!!!!!!!!!!!!!"
     
     def paintLastSelectedMapBlue(self):
-        print self.lastSelectedMap
+#        print self.lastSelectedMap
         for item in self.mapItems:
             if str(item.text(0)) == self.lastSelectedMap:
                 brush = item.foreground(0)
@@ -535,6 +589,15 @@
                     childItem2.setText(0, lightName)
                     childItem2.setData(0, Qt.UserRole, QVariant(ModuleExplorer.LIGHT_IN_ZONE))
                     
+            if self.showZoneTriggers:
+                triggersItem = QTreeWidgetItem(childItem)
+                triggersItem.setText(0, "Triggers")
+                
+                for trigger in zone.triggerList:
+                    childItem2 = QTreeWidgetItem(triggersItem)
+                    childItem2.setText(0, trigger.name)
+                    childItem2.setData(0, Qt.UserRole, QVariant(ModuleExplorer.TRIGGER_IN_ZONE))
+                    
     def setCurrentModule(self, module):
         self.module = module
         self.updateView()

Modified: rl/branches/persistence2/editors/Lockenwickler/src/ModuleManager.py
===================================================================
--- rl/branches/persistence2/editors/Lockenwickler/src/ModuleManager.py	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/ModuleManager.py	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,4 +1,4 @@
- #################################################
+#################################################
 # This source file is part of Rastullahs Lockenwickler.
 # Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
 #
@@ -15,7 +15,7 @@
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
- #################################################
+#################################################
 
 import sys
 import codecs
@@ -37,6 +37,7 @@
 from GameObjectClassManager import *
 from MyRaySceneQueryListener import *
 from ZoneManager import ZoneManager
+from TriggerManager import TriggerManager 
 
 
 # get the light out of a light node
@@ -764,6 +765,7 @@
         self.cutListPreviousNodes = [] # contains the nodes they where copnnected to before the cut
         self.currentMap = None
         self.moduleExplorer = None
+        self.moduleDirView = None
 
         self.lastRay = None
         self.rayLine = None
@@ -784,6 +786,7 @@
         self.moduleConfigIsParsed = False
 
         self.selectionBuffer = None
+        self.myTerrainManager = None
         self.depthBuffer = None
         self.propertyWindow = None
     
@@ -800,6 +803,7 @@
         self.raySceneQueryListener = MyRaySceneQueryListener()
         
         self.zoneManager = ZoneManager(self.sceneManager)
+
         
     def resetParsedModuleConfig(self):
         self.moduleConfigIsParsed = False
@@ -862,6 +866,8 @@
 #        self.progress = ProgressBarThread(0, 8, moduleName)
 #        self.progress.start()
         
+        directories = []
+        
         for m in self.moduleList:
             if m.name == moduleName:
                 if m.hasDependencies: # load modules on wich the main module depends before the main module is loaded
@@ -872,20 +878,27 @@
                                 m2.load()
                                 self.modelSelectionDialog.scanDirForModels(m2.moduleRoot)
                                 self.materialSelectionDialog.scanDirForMaterials(m2.moduleRoot)
+                                TriggerManager.instance.addDirectory(m2.moduleRoot)
                                 self.mainModuledependencieList.append(m2)
-
+                                directories.append(m2.moduleRoot)
 #                self.progress.setProgress(4, "Loading " + moduleName)
                 m.load()
 #                self.progress.setProgress(6, "Scan for models...")
                 self.modelSelectionDialog.scanDirForModels(m.moduleRoot)
 #                self.progress.setProgress(8, "Scan for materials")
                 self.materialSelectionDialog.scanDirForMaterials(m.moduleRoot)
+                TriggerManager.instance.addDirectory(m.moduleRoot)
+                directories.append(m.moduleRoot)
                 self.mainModule = m
                 self.moduleExplorer.setCurrentModule(m)
-
+                self.moduleDirView.parseDirectory(directories)
+        
+        TriggerManager.instance.update()
+                
         if self.selectionBuffer is None:
             self.selectionBuffer = SelectionBuffer(self.sceneManager, self.ogreRoot.getRenderTarget("OgreMainWin"), self, self.zoneManager)
 
+            
 #        if self.depthBuffer is None:
 #            self.depthBuffer = DepthBuffer(self.sceneManager, self.ogreRoot.getRenderTarget("OgreMainWin"))
 
@@ -908,6 +921,9 @@
         self.moduleExplorer.setSelectionChangedCallback(self.selectionChangedCallback)
         self.moduleExplorer.setModuleManager(self)
     
+    def setModuleDirView(self, dirView):
+        self.moduleDirView = dirView
+    
     def setPropertyWindow(self, propertyWin):
         self.propertyWindow = propertyWin
     
@@ -915,8 +931,6 @@
         self.resetSelection()
         self.userSelectionList = self.selectionBuffer.manualSelectObjects(items)
         
-        print len(self.userSelectionList)
-        
         if len(self.userSelectionList) > 1:
             self.propertyWindow.clear()
         elif len(self.userSelectionList) > 0 and len(self.userSelectionList) < 2:
@@ -963,7 +977,7 @@
                     self.updatePivots()
                 elif controlDown and not shiftDown:
                     so.setSelected(True)
-
+                    
                     for soFromList in self.userSelectionList:
                         if soFromList == so:
                             return # object already selected
@@ -1128,11 +1142,21 @@
         self.cutList = []
         self.moduleExplorer.updateView()
         
-    def leftMouseUp(self):
+    def setLeftMouseDown(self):
+        self.leftMouseDown = True
+        
+        if self.pivot is not None and not self.pivot.isTransforming:
+            self.myTerrainManager.leftMouseDown = True
+        
+    def setLeftMouseUp(self):
+        self.leftMouseDown = False
+        
         if self.pivot is not None and self.pivot.isTransforming:
             self.propertyWindow.updateProperties()
             self.pivot.stopTransforming()
-
+        else:
+            self.myTerrainManager.leftMouseDown = False
+            
     def resetSelection(self):
         if self.userSelectionList is not None:
             for so in self.userSelectionList:
@@ -1367,8 +1391,6 @@
             actions.append(self.createAction("Add Property", so.entity.getUserObject().addProperty))
             self.playerStartGameObjectId = so.entity.getUserObject().inWorldId
             
-                
-            
         if self.onContextMenuCallback is not None:
             self.onContextMenuCallback(actions,  menus)
 

Modified: rl/branches/persistence2/editors/Lockenwickler/src/MovePivot.py
===================================================================
--- rl/branches/persistence2/editors/Lockenwickler/src/MovePivot.py	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/MovePivot.py	2009-05-22 22:18:33 UTC (rev 4940)
@@ -232,7 +232,7 @@
                 if self.moveDirection == "UniScaler":
                     for so in self.selectionList:
                         val = incY / 6.0
-                        print val
+#                        print val
                         scale = so.entity.getParentNode().getScale() + og.Vector3(val * scaleFactor, val * scaleFactor, val * scaleFactor)
                         so.entity.getParentNode().setScale(scale)
         

Copied: rl/branches/persistence2/editors/Lockenwickler/src/MyTerrainManager.py (from rev 4939, rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py)

Modified: rl/branches/persistence2/editors/Lockenwickler/src/OgreMainWindow.py
===================================================================
--- rl/branches/persistence2/editors/Lockenwickler/src/OgreMainWindow.py	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/OgreMainWindow.py	2009-05-22 22:18:33 UTC (rev 4940)
@@ -36,6 +36,7 @@
     def __init__(self, moduleManager,  ogreRoot, OgreMainWinSceneMgr,  parent):
         QWidget.__init__(self, parent)
         self.moduleManager = moduleManager
+
         self.ogreRoot = ogreRoot
         self.OgreMainWinSceneMgr = OgreMainWinSceneMgr
 
@@ -136,12 +137,14 @@
             self.strafeCamRight= False
 
     def eventFilter(self, obj, event):
+#        print event.type()
+        
         if event.type() == 2:
             self.ogreWidget.setFocus()
             if event.button() == 1: # left mouse button is pressed
                 self.leftMouseDown = True
-                self.moduleManager.leftMouseDown = True
-
+                self.moduleManager.setLeftMouseDown()
+                
                 if self.rightMouseDown: #if right mouse button is already pressed dolly the camera
                     self.mDollyCamera = True
                 else:
@@ -161,9 +164,9 @@
         elif event.type() == 3:
             if event.button() == 1: # left mouse button is released
                 self.leftMouseDown = False
-                self.moduleManager.leftMouseDown = False
-                self.moduleManager.leftMouseUp()
-
+                self.moduleManager.setLeftMouseUp()
+                self.moduleManager.myTerrainManager.leftMouseUp()
+                
                 if self.mDollyCamera == True: #if we dolly the camera set it to false
                     self.mDollyCamera = False
 
@@ -193,7 +196,12 @@
 
             if self.moduleManager.pivot is not None and  self.leftMouseDown and not self.middleMouseDown and not self.rightMouseDown:
                 self.moduleManager.pivot.onMouseMoved(event.globalX,  event.globalY,  incX,  incY)
-
+                
+            if self.leftMouseDown is True and not self.rightMouseDown and not self.middleMouseDown:
+                self.moduleManager.myTerrainManager.isEditing = True
+            else:
+                self.moduleManager.myTerrainManager.isEditing = False 
+            
             rotX = incX * 0.01
             rotY = incY * 0.01
 
@@ -205,6 +213,7 @@
             self.lastMousePosX = event.globalX()
             self.lastMousePosY = event.globalY()
 
+
         if event.type() == 60: #drag enter
             self.dragEnterEvent(event)
         if event.type() == 61: #drag move

Modified: rl/branches/persistence2/editors/Lockenwickler/src/PreferencesDialog.py
===================================================================
--- rl/branches/persistence2/editors/Lockenwickler/src/PreferencesDialog.py	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/PreferencesDialog.py	2009-05-22 22:18:33 UTC (rev 4940)
@@ -26,6 +26,9 @@
 from PyQt4.QtGui import *
 
 class PreferencesDialog(QDialog):
+    pathToModuleConfig = None
+    externalTextAppCmd = None
+    
     def __init__(self, parent=None):
         QDialog.__init__(self, parent)
 
@@ -39,22 +42,50 @@
         layout.addWidget(self.label, 0, 0, 1, 2)
         layout.addWidget(self.lineEdit, 1, 0)
         layout.addWidget(self.modulConfigSelector, 1, 1)
+        QObject.connect(self.modulConfigSelector, SIGNAL("clicked()"),
+                               self.openModulConfigSelector)
 
+        self.externalTextApplabel = QLabel()
+        self.externalTextApplabel.setText("Please select the Texteditor to use.")
+        self.externalTextAppSelector = QPushButton()
+        self.externalTextAppSelector.setText("...")
+        self.externalTextAppLineEdit = QLineEdit()
+
+        layout.addWidget(self.externalTextApplabel, 2, 0, 1, 2)
+        layout.addWidget(self.externalTextAppLineEdit, 3, 0)
+        layout.addWidget(self.externalTextAppSelector, 3, 1)
+        QObject.connect(self.externalTextAppSelector, SIGNAL("clicked()"),
+                               self.openExternalTextEditorSelector)
+
+    
+
         self.setLayout(layout)
-        
+        self.setMinimumSize(600, 100)
         self.moduleCfgPath = None
-        
-        QObject.connect(self.modulConfigSelector, SIGNAL("clicked()"),
-                               self.openModulConfigSelector)
+        self.externalEditorPath = None
 
+
         self.setModal(True)
 
+        buttonBox = QDialogButtonBox(QDialogButtonBox.Ok)
+        layout.addWidget(buttonBox)
+        self.connect(buttonBox, SIGNAL("accepted()"), self.onOk)       
+        
+    def onOk(self):
+        PreferencesDialog.externalTextAppCmd = str(self.externalTextAppLineEdit.text())
+        self.accept()
+        
+    def setExternalEditorPath(self, path):
+        PreferencesDialog.externalTextAppCmd = path
+        self.externalTextAppLineEdit.setText(path)
+        
     def setCfgPath(self, inPath):
         path = str(inPath)
 
         from os.path import isfile
 
         if isfile(path):
+            PreferencesDialog.pathToModuleConfig = path
             self.moduleCfgPath = path
             self.modulePath = self.moduleCfgPath.replace("modules.cfg", "")
             self.lineEdit.setText(self.moduleCfgPath)
@@ -62,11 +93,22 @@
         else:
             return False
 
+    def openExternalTextEditorSelector(self):
+        dialog = QFileDialog(self)
+        self.externalEditorPath = str(dialog.getOpenFileName(self, "Select the executable", "/home/melven/rastullah/rl_dist/modules/"))
+
+        from os.path import isfile
+
+        if isfile(self.externalEditorPath):
+            self.externalTextAppLineEdit.setText(self.externalEditorPath)
+            PreferencesDialog.externalTextAppCmd = str(self.externalTextAppLineEdit.text())
+            
     def openModulConfigSelector(self):
         dialog = QFileDialog(self)
         self.moduleCfgPath = str(dialog.getOpenFileName(self, "Select modules.cfg", "/home/melven/rastullah/rl_dist/modules/", "modules.cfg (*.cfg)"))
         self.modulePath = self.moduleCfgPath.replace("modules.cfg", "")
-
+        PreferencesDialog.pathToModuleConfig = self.moduleCfgPath
+        
         from os.path import isfile
 
         if isfile(self.moduleCfgPath):

Modified: rl/branches/persistence2/editors/Lockenwickler/src/SelectionBuffer.py
===================================================================
--- rl/branches/persistence2/editors/Lockenwickler/src/SelectionBuffer.py	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/SelectionBuffer.py	2009-05-22 22:18:33 UTC (rev 4940)
@@ -52,8 +52,8 @@
         self.entity = entity #the selected entity
         self.isPivot = False
 
+#        print self.entity.getParentNode().getName()
 
-
     #if True this instance will show its bounding box else it will hide it
     def setSelected(self,  selected):
         if selected == True:
@@ -102,7 +102,6 @@
                 self.lastEntity = subEntity.getParent().getName()
                 self.colorDict[self.lastEntity] = self.currentColorAsVector3
                 return self.lastTechnique
-        
 
     def randomizeColor(self):
         r = random.randrange(1, 255)
@@ -187,7 +186,8 @@
 
         self.pBox = og.PixelBox(pixelBuffer.getWidth(), pixelBuffer.getHeight(),pixelBuffer.getDepth(), pixelBuffer.getFormat(), VoidPointer)
         self.renderTexture.copyContentsToMemory(self.pBox, og.RenderTarget.FrameBuffer.FB_FRONT)
-
+        
+#        self.renderTexture.writeContentsToFile("selectionbuffer.png")
 #        i = 0
 #        
 #        while i < len(self.buffer):
@@ -240,6 +240,8 @@
                     return None
                 elif key == "rayLine":
                     return None
+                elif key == "TerrainManagerEditingCircle" or  key == "TerrainManagerPointerNodeMesh":
+                    return None
                 elif key == "EditorXArrow":
                     so = SelectionObject(self.sceneMgr.getEntity(key))
                     so.isPivot = True
@@ -281,7 +283,11 @@
                     so.setSelected(True)
                     items.append(so)
             elif key.startswith("Zone: "):
-                parentNode = self.zoneManager.getZone(key.replace("Zone: ", "")).zoneNode
+                zone = self.zoneManager.getZone(key.replace("Zone: ", ""))
+                if zone is None:
+                    continue
+                    
+                parentNode = zone.zoneNode
                 for nodeName in itemNodes[key]:
                     obj = parentNode.getChild(nodeName).getAttachedObject(0)
                     so = SelectionObject(obj)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/TriggerManager.py (from rev 4939, rl/trunk/editors/Lockenwickler/src/TriggerManager.py)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/Ui_AddTriggerDialog.py (from rev 4939, rl/trunk/editors/Lockenwickler/src/Ui_AddTriggerDialog.py)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py (from rev 4939, rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py)

Modified: rl/branches/persistence2/editors/Lockenwickler/src/ZoneManager.py
===================================================================
--- rl/branches/persistence2/editors/Lockenwickler/src/ZoneManager.py	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/ZoneManager.py	2009-05-22 22:18:33 UTC (rev 4940)
@@ -15,7 +15,7 @@
 # You should have received a copy of the GNU General Public License
 # along with this program; if not, write to the Free Software
 # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
- #################################################
+#################################################
 
 import functools
 import xml.etree.cElementTree as xml
@@ -26,7 +26,9 @@
 import ogre.renderer.OGRE as og
  
 from ModuleExplorer import NameInputDlg
- 
+from TriggerManager import TriggerManager
+
+
 #                <zone name="Testzone">
 #                        <area type="sphere">
 #                                <position x="-10" y="0" z="-5"/>
@@ -49,6 +51,7 @@
 #                        </trigger>
 #                </zone>
  
+       
 class Area(og.UserDefinedObject):
     def __init__(self,sceneManager, type, parentZone, id, position, orientation, scale, meshFile = None, transitiondistance = "0.5", subtract = False):
         og.UserDefinedObject.__init__(self)
@@ -98,7 +101,8 @@
         self.areaNode.detachAllObjects()
         self.areaNode.getParent().removeAndDestroyChild(self.areaNode.getName())
         self.sceneManager.destroyEntity(self.areaEntity.getName())
-    
+        print "area" + str(self.id) + " deleted"
+        
     def getsubtract(self):
         return self.__subtract
         
@@ -125,18 +129,37 @@
         self.isHidden = False
         
         self.zoneNode =  self.sceneManager.getRootSceneNode().createChildSceneNode("zone_" + name + "_node")
+    
+    def __del__(self):
+        print "Zone " + self.name + " is garbage collected"
         
     def addArea(self, type, position, orientation, scale, meshFile = None):
         area = Area(self.sceneManager, type, self, self.areaCounter, position, orientation, scale, meshFile)
         if area is not None:
             self.areaList.append(area)
             self.areaCounter = self.areaCounter + 1
-    
+            
+    def addTrigger(self, trigger):
+        if trigger is not None:
+            self.triggerList.append(trigger)
+        
+    def deleteSelf(self):    
+        del self.areaList[:]
+        
+        self.zoneNode.detachAllObjects()
+        parent = self.zoneNode.getParent()
+        parent.removeAndDestroyChild(self.zoneNode.getName())
+        
     def deleteArea(self, area):
         for a in self.areaList:
             if a.id == area.id:
                 self.areaList.remove(a)
                 del a
+            
+    def manualAddTrigger(self):
+        trigger = TriggerManager.instance.manualCreateTrigger()
+        if trigger is not False and trigger is not None:
+            self.triggerList.append(trigger)
     
     def hide(self):
         self.sceneManager.getRootSceneNode().removeChild(self.zoneNode)
@@ -148,14 +171,21 @@
         
         
 class ZoneManager():
+    instance = None
+    
     def __init__(self, sceneManager):
-        self.currentMap = None
-        self.zoneList = []
-        self.menuList = []
-        self.entityUnderMouse = None
-        self.newAreaPosition = None
-        self.sceneManager = sceneManager
+        if ZoneManager.instance == None:
+            ZoneManager.instance = self
         
+            self.currentMap = None
+            self.zoneList = []
+            self.menuList = []
+            self.entityUnderMouse = None
+            self.newAreaPosition = None
+            self.sceneManager = sceneManager
+        
+        
+        
     def createZone(self, name):
         if self.currentMap == None:
             print "No map selected!"
@@ -166,6 +196,15 @@
         self.currentMap.zoneList.append(z)
         return z
         
+    def deleteZone(self, zoneName):
+        for zone in self.zoneList:
+            if zone.name == zoneName:
+                self.zoneList.remove(zone)
+                zone.deleteSelf()
+                del zone
+                return True
+        return False
+        
     def parseZonesFromXml(self, zoneXmlNode, map):
         if zoneXmlNode is None:
             return
@@ -225,11 +264,38 @@
                 name = light.attrib["name"]
                 z.lightList.append(name)
                 
+            triggerNodes = zone.getiterator("trigger")
+            for trigger in triggerNodes:
+                name = trigger.attrib["name"]
+                classname = trigger.attrib["classname"]
+                properties = trigger.getiterator("property")
+                
+                trigger = TriggerManager.instance.createTrigger(name, classname, properties)
+                
+                z.addTrigger(trigger)
+                
             soundNodes = zone.getiterator("sound")
             for sound in soundNodes:
                 name = sound.attrib["name"]
                 z.soundList.append(name)
-            
+    
+    def removeLightFromZone(self, zoneName, lightName):
+        for zone in self.zoneList:
+            if zone.name == zoneName:
+                for light in zone.lightList:
+                    if light == lightName:
+                        zone.lightList.remove(light)
+                        return True
+        return False
+        
+    def removeTriggerFromZone(self, zoneName, triggerName):
+        for zone in self.zoneList:
+            if zone.name == zoneName:
+                for trigger in zone.triggerList:
+                    if trigger.name == triggerName:
+                        zone.triggerList.remove(trigger)
+                        return True
+        return False
 
     def saveZonesToXml(self, root, map):
         if len(map.zoneList) == 0:
@@ -270,18 +336,29 @@
                 
             for lightName in zone.lightList:
                 lightElem = xml.SubElement(zoneElem, "light")
-                lightElem.attrib["name"] = lightName
+                lightElem.attrib["name"] = str(lightName)
+                
+            for trigger in zone.triggerList:
+                triggerElem = xml.SubElement(zoneElem, "trigger")
+                triggerElem.attrib["name"] = str(trigger.name)
+                triggerElem.attrib["classname"] = str(trigger.name)
+                
+                for prop in trigger.properties:
+                    propElem = xml.SubElement(triggerElem, "property")
+                    propElem.attrib["name"] = str(prop.name)
+                    propElem.attrib["type"] = str(prop.type)
+                    propElem.attrib["data"] = str(prop.data)
             
             for soundName in zone.soundList:
                 soundElem = xml.SubElement(zoneElem, "sound")
-                soundElem.attrib["name"] = soundName
+                soundElem.attrib["name"] = str(soundName)
                 
     def deleteArea(self, area):
         for z in self.zoneList:
             for a in z.areaList:
                 if a.id == area.id:
                     z.deleteArea(area)
-    
+
     def getZoneMenu(self):
         self.menuList = []
         menu = QMenu("Add Area")

Copied: rl/branches/persistence2/editors/Lockenwickler/src/help_rc.py (from rev 4939, rl/trunk/editors/Lockenwickler/src/help_rc.py)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/icons_rc.py (from rev 4939, rl/trunk/editors/Lockenwickler/src/icons_rc.py)


Property changes on: rl/branches/persistence2/editors/Lockenwickler/src/media
___________________________________________________________________
Name: svn:ignore
   - .Bpib
skelett.blend
skelett_merged.blend

   + .Bpib
skelett.blend
skelett_merged.blend
pivots.blend1


Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/help (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/help)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/help/TerrainExtends1.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/help/TerrainExtends1.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/help/TerrainExtends1.png)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/help/help.qrc
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/help/help.qrc	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/media/help/help.qrc	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,5 +0,0 @@
-<RCC>
-  <qresource prefix="helpPref" >
-    <file>TerrainExtends1.png</file>
-  </qresource>
-</RCC>

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/help/help.qrc (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/help/help.qrc)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/help/help_rc.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/help/help_rc.py	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/media/help/help_rc.py	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,550 +0,0 @@
-# -*- coding: utf-8 -*-
-
-# Resource object code
-#
-# Created: So Mai 3 16:15:12 2009
-#      by: The Resource Compiler for PyQt (Qt v4.4.1)
-#
-# WARNING! All changes made in this file will be lost!
-
-from PyQt4 import QtCore
-
-qt_resource_data = "\
-\x00\x00\x1f\xcf\
-\x89\
-\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\
-\x00\x01\x2c\x00\x00\x01\x2c\x08\x06\x00\x00\x00\x79\x7d\x8e\x75\
-\x00\x00\x00\x01\x73\x52\x47\x42\x00\xae\xce\x1c\xe9\x00\x00\x00\
-\x06\x62\x4b\x47\x44\x00\xff\x00\xff\x00\xff\xa0\xbd\xa7\x93\x00\
-\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\
-\x00\x9a\x9c\x18\x00\x00\x00\x07\x74\x49\x4d\x45\x07\xd9\x05\x03\
-\x0e\x07\x1d\x05\x69\x10\xcd\x00\x00\x00\x19\x74\x45\x58\x74\x43\
-\x6f\x6d\x6d\x65\x6e\x74\x00\x43\x72\x65\x61\x74\x65\x64\x20\x77\
-\x69\x74\x68\x20\x47\x49\x4d\x50\x57\x81\x0e\x17\x00\x00\x1f\x2a\
-\x49\x44\x41\x54\x78\xda\xed\xdd\x7b\x54\x54\xd5\xe2\x07\xf0\xef\
-\x9e\x07\x33\x03\x08\x08\xa2\x80\x8a\x82\x8f\x2b\x3d\x88\x04\xd3\
-\x82\x34\xd1\xf4\x8a\x21\x6a\xa9\xf9\xae\x44\xcb\x5c\xb6\x6e\x4f\
-\x5c\xf9\x08\xb3\x5c\x5e\xb3\xd2\x5b\x5e\xcb\x52\xcb\x65\xbe\x53\
-\x54\x0c\xf2\x91\x52\x5e\xee\x8f\x92\x5a\x1a\x3e\x4b\xe0\x9a\x1a\
-\x82\x0a\x2a\x8c\x03\xf3\xd8\xbf\x3f\xa6\x99\x44\x50\x87\x60\x9c\
-\x19\xfd\x7e\xd6\x9a\xe5\x30\x33\xe7\xcc\xb8\xcf\x99\xef\xec\xb3\
-\xcf\x3e\x7b\x0b\x29\x25\x88\x88\x3c\x81\x82\x45\x40\x44\x0c\x2c\
-\x22\x22\x06\x16\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\
-\x62\x60\x11\x11\x31\xb0\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\
-\x60\x11\x11\x31\xb0\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\
-\x11\x11\x03\x8b\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x06\x16\x11\
-\x11\x03\x8b\x88\x88\x81\x45\x44\x0c\x2c\x22\x22\x06\x16\x11\x11\
-\x03\x8b\x88\x18\x58\x44\x44\x0c\x2c\x22\x22\x06\x16\x11\x31\xb0\
-\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\
-\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x03\x8b\x88\x88\
-\x81\x45\x44\xc4\xc0\x22\x22\x06\x16\x11\x11\x03\x8b\x88\xe8\x56\
-\x07\x96\x94\x92\x25\x48\x44\xb7\x8c\x68\x6c\xe8\x64\x66\x66\xca\
-\xb9\x73\xe7\xe2\xd2\xa5\x4b\x2c\x4d\x22\x57\x7e\x99\x85\x80\xc1\
-\x60\x40\x79\x79\x39\x1e\x7e\xf8\x61\xcc\x9b\x37\x0f\xbe\xbe\xbe\
-\x4e\x7d\xcf\xea\xea\x6a\x28\x14\x0a\xa8\xd5\xea\x5a\x8f\x5b\x2c\
-\x16\xb4\x6d\xdb\x56\x34\xf5\xfb\xa9\x1a\xbb\x82\x75\xeb\xd6\xe1\
-\xbf\xff\xfd\x2f\xf7\x16\x22\x37\x92\x91\x91\x81\xc0\xc0\x40\xf8\
-\xf9\xf9\x39\xef\xf0\x4c\xa1\xc0\xc9\x93\x27\xa1\xd3\xe9\xd0\xa2\
-\x45\x8b\x5a\x47\x5c\x57\xae\x5c\xc1\x47\x1f\x7d\xd4\xe4\xef\xd9\
-\xe8\xc0\xaa\xae\xae\x06\x00\x68\xb5\x5a\x74\xe9\xd2\xa5\x4e\xd2\
-\x12\xd1\xad\xa1\x50\x28\xf0\xeb\xaf\xbf\xe2\xfc\xf9\xf3\x08\x0c\
-\x0c\x44\x5a\x5a\x1a\x5a\xb5\x6a\x25\x9c\xf5\x7e\x1a\x8d\x06\xb3\
-\x67\xcf\x96\x51\x51\x51\x78\xfc\xf1\xc7\x85\xc9\x64\xb2\x3f\x27\
-\xa5\x8c\x74\xc6\x7b\x36\x3a\xb0\x6c\xa9\x1a\x10\x10\x80\xec\xec\
-\x6c\xa7\x16\x10\x11\xdd\xd8\x90\x21\x43\x64\x46\x46\x06\x74\x3a\
-\x1d\xfc\xfd\xfd\xe1\xef\xef\xef\xd4\xf7\x53\x2a\x95\xd0\x6a\xb5\
-\xf0\xf1\xf1\xb9\xf6\xa9\x42\xa7\x84\x72\x53\xad\x48\x4a\x69\xaf\
-\x6d\x11\x91\x6b\x98\xcd\xe6\xdb\xbb\x16\xc9\x4d\x4c\x44\x0c\x2c\
-\x22\x22\x06\x16\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\
-\x62\x60\x11\x11\x31\xb0\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\
-\x60\x11\x11\x31\xb0\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\
-\x11\x11\x03\x8b\x88\x88\x81\x45\x44\xc4\xc0\x22\x22\x06\x16\x11\
-\x11\x03\x8b\x88\x88\x81\x45\x44\x0c\x2c\x22\x22\x06\x16\x11\x11\
-\x03\x8b\x88\x18\x58\x44\x44\x0c\x2c\x22\x22\x06\x16\x11\x31\xb0\
-\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\
-\x88\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\x11\x91\xfb\xaa\xa8\xa8\
-\x88\x64\x60\x11\x91\x47\xe8\xde\xbd\xfb\x89\x6f\xbe\xf9\x46\x32\
-\xb0\x88\xc8\xed\x9d\x3b\x77\x0e\xfd\xfa\xf5\xc3\xac\x59\xb3\x9a\
-\x2c\xb4\x18\x58\x44\xe4\x14\x67\xcf\x9e\x15\xe3\xc7\x8f\xc7\x9c\
-\x39\x73\x10\x1f\x1f\x2f\x2b\x2b\x2b\x1b\xbd\x4e\x15\x8b\x95\x88\
-\x9c\x41\xa5\x52\x61\xd9\xb2\x65\x22\x39\x39\x59\xce\x9a\x35\x0b\
-\xe1\xe1\xe1\xf2\x83\x0f\x3e\x40\x68\x68\x28\x2c\x16\x0b\x00\xc0\
-\x64\x32\xe1\x81\x07\x1e\x78\x36\x30\x30\x70\x29\x03\x8b\x88\x5c\
-\x6e\xf0\xe0\xc1\xa2\x79\xf3\xe6\xb2\x6f\xdf\xbe\x18\x33\x66\x4c\
-\x9d\xe7\xb7\x6c\xd9\xf2\xf1\xa0\x41\x83\x18\x58\x44\xe4\x7a\x1f\
-\x7c\xf0\x81\x9c\x39\x73\x26\x42\x43\x43\xb1\x6d\xdb\x36\xb4\x6b\
-\xd7\xae\x83\xc5\x62\xe9\x0b\x00\x52\xca\x48\x3f\x3f\xbf\x69\x3c\
-\x24\x24\x22\x97\x2a\x2e\x2e\x96\x93\x27\x4f\x46\x76\x76\x36\x46\
-\x8c\x18\x81\xb5\x6b\xd7\x8a\xab\x9e\x5e\xfa\x57\xd6\xc9\xc0\x22\
-\x22\xa7\xe8\xd4\xa9\x13\xfc\xfc\xfc\xf0\xf9\xe7\x9f\x63\xdc\xb8\
-\x71\xa2\x29\xd6\xc9\xc0\x22\x22\xa7\x78\xe8\xa1\x87\xb0\x6a\xd5\
-\x2a\xb4\x6d\xdb\x56\x34\xd5\x3a\x19\x58\x44\xe4\x14\x39\x39\x39\
-\xa2\xa9\xd7\xc9\x7e\x58\x44\xe4\x31\x18\x58\x44\xc4\xc0\x22\x22\
-\x62\x60\x11\xd1\x1d\x8b\x8d\xee\x44\xe4\x74\x85\x85\x85\x72\xef\
-\xde\xbd\x28\x2d\x2d\x85\xd9\x6c\xb6\x3f\x5e\x53\x53\x83\xa7\x9e\
-\x7a\x0a\x11\x11\x11\x0e\x35\xd0\x33\xb0\x88\xc8\xa9\xbe\xff\xfe\
-\x7b\x39\x6e\xdc\x38\x1c\x3b\x76\xac\xde\xe7\xbb\x75\xeb\x86\x88\
-\x88\x08\x1e\x12\x12\x91\xeb\xad\x5d\xbb\x16\xc7\x8e\x1d\xc3\x9c\
-\x39\x73\x20\xa5\x14\xd7\xde\x1e\x7b\xec\x31\x87\xbb\x3f\x30\xb0\
-\x88\xc8\xa9\xbc\xbd\xbd\x01\x00\x33\x66\xcc\x68\x74\xbf\x2c\x06\
-\x16\x11\x39\x55\x5a\x5a\x9a\x48\x4a\x4a\xc2\x8c\x19\x33\x1a\x3d\
-\x90\x1f\x03\x8b\x88\x9c\x6a\xc6\x8c\x19\x32\x3b\x3b\x1b\xf3\xe6\
-\xcd\x83\x8f\x8f\x8f\xf4\xf5\xf5\xb5\xdf\x84\x10\x72\xf7\xee\xdd\
-\x0e\x07\x19\x1b\xdd\x89\xc8\xa9\x82\x82\x82\xd0\xa5\x4b\x17\x28\
-\x14\x75\xeb\x47\x55\x55\x55\xd0\xe9\x74\x0e\xaf\x8b\x81\x45\x44\
-\x4e\x35\x6b\xd6\x2c\x31\x6b\xd6\xac\x26\x59\x17\x0f\x09\x89\xa8\
-\x49\x49\x29\xeb\xbd\xcf\xc0\x22\x22\xb7\x23\x84\x40\x87\x0e\x1d\
-\xa4\x10\x42\x0a\x21\xf0\xcc\x33\xcf\xd8\xee\xd7\x7b\xcb\xca\xca\
-\x62\x1b\x16\x11\xb9\xce\x90\x21\x43\x50\x5a\x5a\x0a\xc0\x3a\x2e\
-\x56\x55\x55\x55\xbd\x6d\x58\x06\x83\x01\xad\x5b\xb7\x76\x78\xbd\
-\x0c\x2c\x22\x6a\x72\x0b\x16\x2c\x10\xb6\x43\xc2\xd4\xd4\x54\x91\
-\x9a\x9a\xca\x43\x42\x22\x72\xff\xc3\xc3\xa6\xc4\xc0\x22\x22\x8f\
-\xc1\xc0\x22\x22\x06\x16\x11\x11\x03\x8b\x88\xee\x58\x3c\x4b\x48\
-\x44\x4e\x65\x30\x18\xb0\x65\xcb\x16\x19\x12\x12\x82\x5e\xbd\x7a\
-\x89\x9f\x7e\xfa\x49\x1e\x3a\x74\x08\x6a\xb5\x1a\x0f\x3e\xf8\x20\
-\xc2\xc3\xc3\x1d\x6e\x99\x67\x60\x11\x91\x53\x65\x66\x66\xca\x27\
-\x9f\x7c\x12\x9b\x36\x6d\x42\x41\x41\x81\x4c\x4e\x4e\xc6\xe9\xd3\
-\xa7\x01\x00\x03\x07\x0e\xc4\x8a\x15\x2b\xf6\x07\x07\x07\xc7\xf1\
-\x90\x90\x88\x5c\x2e\x37\x37\x17\x80\xb5\x33\xe9\xfa\xf5\xeb\x71\
-\xfa\xf4\x69\x1c\x3b\x76\x0c\xb3\x67\xcf\xc6\xf6\xed\xdb\x71\xfc\
-\xf8\xf1\x58\x47\xd7\xc5\xc0\x22\x22\xa7\x32\x99\x4c\x00\x80\x53\
-\xa7\x4e\x21\x27\x27\x07\x03\x06\x0c\x40\x44\x44\x84\x18\x37\x6e\
-\x1c\x00\x40\xaf\xd7\x3b\xbc\x2e\x06\x16\x11\x39\xd5\x5d\x77\xdd\
-\x05\x00\x18\x39\x72\x24\xf2\xf2\xf2\xd0\xa7\x4f\x1f\xa8\xd5\x6a\
-\x9c\x3c\x79\x12\x00\xe0\xe7\xe7\xc7\xc0\x22\x22\xf7\x90\x9a\x9a\
-\x2a\x9e\x7c\xf2\x49\xec\xdb\xb7\x0f\xdd\xba\x75\xc3\xc8\x91\x23\
-\x01\x00\xaf\xbc\xf2\x0a\xe2\xe2\xe2\xd0\xa5\x4b\x17\x36\xba\x13\
-\x91\x7b\x50\xa9\x54\x58\xb3\x66\x8d\x58\xb3\x66\x4d\xad\xc7\xbf\
-\xff\xfe\xfb\x06\x5f\xb7\xc3\xc0\x22\xa2\x26\xb7\x71\xe3\x46\x59\
-\x51\x51\x71\xd3\xd7\x19\x8d\x46\x0c\x1a\x34\x08\xad\x5b\xb7\xe6\
-\xbc\x84\x44\xe4\x1a\x93\x27\x4f\xc6\xb9\x73\xe7\x1c\x7a\x6d\x9b\
-\x36\x6d\x1c\x1e\x62\x86\x6d\x58\x44\xd4\xe4\xca\xca\xca\x6a\xcd\
-\x3d\x38\x61\xc2\x04\x44\x45\x45\xe1\xc8\x91\x23\x30\x99\x4c\xc8\
-\xc9\xc9\x41\x9b\x36\x6d\xf0\xc1\x07\x1f\x20\x39\x39\x99\x6d\x58\
-\x44\xe4\x1e\xfe\xfd\xef\x7f\xcb\x65\xcb\x96\xe1\xfc\xf9\xf3\x08\
-\x0c\x0c\x04\x00\xf4\xec\xd9\x13\xeb\xd6\xad\x43\x7c\x7c\x3c\x12\
-\x12\x12\x64\x4c\x4c\x8c\x43\xa1\xc5\x1a\x16\x11\x39\x55\x41\x41\
-\x01\x80\x3f\x27\x54\xb5\xf1\xf1\xf1\x01\x00\x87\x0f\x1d\x19\x58\
-\x44\xe4\x74\x51\x51\x51\x10\x42\x20\x29\x29\xc9\x3e\x6c\xf2\xa1\
-\x43\x87\x30\x62\xc4\x08\xf8\xfa\xfa\xda\x6b\x5d\x3c\x24\x24\x22\
-\x97\x9b\x3a\x75\xaa\xc8\xce\xce\x96\xbb\x77\xef\x46\xab\x56\xad\
-\xec\x8f\x37\x6b\xd6\x0c\x2f\xbd\xf4\x12\xba\x76\xed\xca\x36\x2c\
-\x22\x72\x1f\xdb\xb7\x6f\x17\xdb\xb6\x6d\x93\x79\x79\x79\xb8\x7c\
-\xf9\x32\x5a\xb4\x68\x81\xc4\xc4\x44\xc4\xc7\xc7\x37\xa8\x2f\x16\
-\x03\x8b\x88\x6e\x89\xe4\xe4\x64\x91\x9c\x9c\xdc\xa8\x75\xb0\x0d\
-\x8b\x88\x9c\x6e\xd5\xaa\x55\xf2\xde\x7b\xef\x95\x2a\x95\xaa\xce\
-\xbc\x84\x3b\x76\xec\xe0\xbc\x84\x44\xe4\x1e\x3e\xfb\xec\x33\xf9\
-\xf4\xd3\x4f\x23\x34\x34\x14\x3d\x7b\xf6\xac\x35\x3f\xa1\x5e\xaf\
-\x47\x50\x50\x10\x0f\x09\x89\xc8\x3d\x7c\xff\xfd\xf7\x00\x80\x5d\
-\xbb\x76\xe1\xae\xbb\xee\x6a\xd4\xbc\x5f\x3c\x24\x24\x22\xa7\x8a\
-\x8d\xb5\x8e\xcf\xd7\xb6\x6d\xdb\x46\x4f\x52\xc8\x1a\x16\x11\x39\
-\xd5\xa8\x51\xa3\x44\x4e\x4e\x8e\x7c\xf8\xe1\x87\xe5\xb2\x65\xcb\
-\x10\x1c\x1c\x0c\x29\xad\xcd\x56\x52\x4a\x84\x84\x84\x08\xad\x56\
-\xcb\xc0\x22\x22\xd7\x1b\x37\x6e\x9c\xdc\xb8\x71\x23\x00\x20\x2e\
-\xae\xee\xd0\xed\x19\x19\x19\x32\x25\x25\x85\xa3\x35\x10\x91\xeb\
-\x2d\x58\xb0\x00\xaf\xbd\xf6\x5a\xbd\xd3\xd6\x9b\xcd\x66\x44\x45\
-\x45\xb1\xe3\x28\x11\xb9\x87\x76\xed\xda\x89\x76\xed\xda\xc1\x62\
-\xb1\xc0\x62\xb1\x40\x4a\x09\xb5\x5a\x0d\x93\xc9\x04\x21\x04\x94\
-\x4a\xa5\xc3\xeb\x62\xa3\x3b\x11\x39\x5d\x5e\x5e\x9e\xec\xd3\xa7\
-\x8f\x54\xab\xd5\xd2\xcb\xcb\x4b\xea\xf5\x7a\xc4\xc6\xc6\xca\xb8\
-\xb8\x38\x59\x51\x51\x11\xc9\xc0\x22\x22\xb7\x70\xe4\xc8\x11\x99\
-\x92\x92\x82\xe2\xe2\x62\x3c\xfb\xec\xb3\x00\xac\x33\xe9\xcc\x9c\
-\x39\x13\x07\x0f\x1e\x44\x61\x61\xe1\x09\x06\x16\x11\xb9\x85\x8d\
-\x1b\x37\xe2\xec\xd9\xb3\xd8\xbc\x79\x33\xfa\xf5\xeb\x07\x00\xb0\
-\x58\x2c\x91\xf7\xdd\x77\x1f\x2c\x16\x0b\x1c\x19\x4a\x99\x81\x45\
-\x44\xb7\x44\x49\x49\x09\x00\x20\x26\x26\x06\x66\xb3\x19\x00\x20\
-\xa5\x8c\xb4\xb5\x5d\x59\x2c\x16\x06\x16\x11\xb9\x07\xdb\xa5\x37\
-\x25\x25\x25\x50\xa9\xac\xe7\xf9\xd4\x6a\xf5\xae\x9f\x7f\xfe\x19\
-\x80\x75\x98\x19\x06\x16\x11\xb9\x85\xbf\xff\xfd\xef\xf0\xf2\xf2\
-\xc2\xc4\x89\x13\x51\x59\x59\x09\x00\x28\x2f\x2f\x97\xaf\xbe\xfa\
-\x2a\xba\x75\xeb\x86\x4e\x9d\x3a\x3d\xcb\xc0\x22\x22\xb7\xf0\xd0\
-\x43\x0f\x89\x97\x5f\x7e\x19\x99\x99\x99\x18\x37\x6e\x1c\x84\x10\
-\x08\x0f\x0f\x47\x59\x59\x19\xd2\xd3\xd3\x11\x18\x18\xb8\xd4\xd1\
-\x75\x39\xde\x0f\x4b\x4a\xa0\x9e\x8e\x5f\xc6\x3f\x8e\x43\xab\x85\
-\x80\xd4\x68\x1a\xb4\xec\x5f\x7d\x4f\x87\x97\x69\xe8\xf2\xb6\xd7\
-\x37\xe6\xf3\x02\xb7\x66\xd9\xbf\xfa\x19\xdd\x65\xfb\x78\xe2\xb6\
-\x6d\xcc\xe7\xbd\x45\xdb\xd4\xf6\x7d\x34\x00\x75\xbf\x8f\x4d\xb9\
-\xcf\x34\xd0\xdc\xb9\x73\xc5\xa3\x8f\x3e\x2a\xd7\xaf\x5f\x8f\xb2\
-\xb2\x32\xb4\x6b\xd7\x0e\x13\x26\x4c\x68\xf0\xc5\xd0\x8e\x07\x96\
-\x10\xc0\xff\xfe\x27\x51\x54\x04\xec\xd8\x61\xfd\x5b\xa3\xc1\xd8\
-\x03\x07\xd0\x15\x80\xdf\xe5\xcb\x08\x78\xeb\x2d\xc0\xcf\xaf\xf6\
-\xd8\x36\x21\x21\xc0\xd4\xa9\x02\xb9\xb9\x12\x97\x2f\x03\xbb\x77\
-\x03\x6a\xf5\xcd\xdf\xaf\x7d\x7b\x60\xe2\x44\xeb\x7f\xc6\x60\x00\
-\xf6\xed\x93\xf8\xf1\x47\xe0\xe2\xc5\x1b\xfc\x6f\x54\xc0\xec\xd9\
-\xa2\xd6\x67\x2e\x2c\x94\x38\x79\x12\xf8\xfa\x6b\x40\xa1\xb8\xfe\
-\x8e\xd2\xb5\x2b\xf0\xc4\x13\xc2\xbe\xdc\xf1\xe3\x12\x67\xce\x00\
-\xd9\xd9\x80\x23\x1d\xdb\x14\x0a\x60\xce\x1c\xeb\xf2\x39\x39\xd6\
-\xff\xeb\x77\xdf\x01\x2a\x15\x24\x00\x93\xc5\x02\xa5\x42\x51\x7f\
-\x95\x36\x3a\x1a\x18\x31\xc2\xba\xec\x8e\x1d\xd6\x32\xfe\xdf\xff\
-\xae\xbf\x73\x55\x57\x03\x0b\x16\x88\x5a\x9f\x7f\xe7\x4e\x89\x5f\
-\x7e\x01\xce\x9c\xb9\xf9\x67\x35\x18\x80\x57\x5f\x05\x42\x42\xfe\
-\xfc\xff\xee\xd9\x23\x71\xe9\x12\x90\x9b\x6b\x2d\xc7\x9b\x7d\xb1\
-\xba\x75\x03\x86\x0c\xb1\x2e\x5f\x51\x11\x89\x1f\x7f\x3c\x81\x7d\
-\xfb\xac\x9f\xed\x7a\x9a\x37\x07\x5e\x79\xe5\xcf\xf7\x3c\x77\x6e\
-\x3d\x7e\xfe\x79\x18\xf6\xee\x05\x4c\xa6\xeb\x2f\x67\x36\x03\x03\
-\x06\x00\xbd\x7a\xd5\xde\xb6\xdf\x7c\x23\x71\xf1\x22\xf0\x7f\xff\
-\x77\xe3\xcf\x7c\x75\x79\x09\x01\xec\xda\x25\x51\x5e\x0e\xe4\xe7\
-\x5f\x7f\xdb\xea\xf5\xc0\xbc\x79\x02\xb6\x2f\xbd\x10\xd6\x32\x2e\
-\x2b\x03\x7e\xfe\xf9\xfa\xfb\x92\x4d\xdb\xb6\xc0\x73\xcf\x09\xec\
-\xdb\x67\xdd\x17\xf6\xee\xbd\xf1\x67\xbc\x72\x05\x78\xef\xbd\xda\
-\x1b\xfc\xfc\xf9\x79\x98\x34\x29\x0d\xa7\x4e\x59\xdf\xdf\x68\x04\
-\x2e\x5f\x06\x02\x02\x80\xa4\x24\xeb\xfd\x19\x33\x1e\xc5\xfe\xfd\
-\x3b\x51\x56\x06\x1c\x3b\x86\xa7\x0f\x1d\xc2\x83\x00\x02\x2e\x5e\
-\x44\xb3\xb7\xde\xb2\xee\x8b\x2d\x5b\x02\x1f\x7e\x08\x44\x44\xb8\
-\x24\xad\x3e\xf9\xe4\x13\x99\x91\x91\x81\xed\xdb\xb7\xa3\x77\xef\
-\xde\xf6\xc7\x2f\x5e\xbc\x88\xc4\xc4\x44\xb9\x70\xe1\x42\x44\x47\
-\x47\x3b\xe1\xd2\x1c\x5f\xdf\x7f\x22\x24\x24\x0d\xb1\xb1\xd6\x02\
-\xd4\xe9\x50\x94\x9d\x8d\xfd\x00\x82\xd5\x6a\xd4\xdc\x73\x0f\x10\
-\x1c\x5c\x7b\x19\x3f\x3f\xeb\xbf\x2d\x5b\x5a\xef\x77\xeb\xe6\x58\
-\x00\x5c\x3d\x46\x8e\x52\x09\x84\x85\x59\x37\xd8\x95\x2b\x37\x0e\
-\x8d\x6b\x35\x6b\x96\x8f\x90\x90\x58\xc4\xc6\xde\x38\xb0\xda\xb5\
-\xab\xfb\xb9\x2d\x16\x20\x2e\xee\xe6\x3b\xe7\xb5\x35\xa3\x90\x10\
-\xc0\xdf\xdf\xba\xac\x52\x09\x8b\xc5\x82\x9d\x07\x0f\x22\x2e\x22\
-\x02\x2d\xfd\xfd\xeb\xbe\x77\xdb\xb6\x7f\xfe\x1d\x16\x06\x78\x79\
-\x01\x2d\x5a\x5c\x3f\xb0\x8c\xc6\xba\x8f\x85\x85\x59\xcb\x29\x24\
-\xe4\xe6\xbf\xa2\x46\x23\xa0\xd3\xd5\x7e\x51\x68\xa8\xf5\x8b\x50\
-\x53\x73\xf3\xed\x23\x25\x10\x1e\xfe\xe7\xdf\x5e\x5e\x85\x08\x0d\
-\x05\x62\x62\x6e\x1c\x3c\xd7\xcc\x9a\x02\x8d\x66\x38\x42\x42\x24\
-\xee\xbf\xdf\x5a\xd6\xd7\x63\xb1\x58\xff\x5f\xd7\xb2\x7d\x66\x93\
-\xe9\xc6\x9f\xf9\xda\xcf\x14\x16\x66\xdd\x3e\x42\x5c\x7f\xdb\xd6\
-\x57\x0e\x61\x61\x40\xb3\x66\xd6\xed\x73\xb3\x7d\xc2\x36\xb1\x42\
-\xab\x56\xd6\x7d\xe9\x8f\x7d\xe1\xba\x6a\x6a\xea\x3e\xa6\xd1\x4c\
-\x43\x62\x62\x1a\xca\xcb\xff\x0c\x6e\x83\xc1\x5a\x8e\xf7\xde\x6b\
-\xbd\xaf\xd1\xec\xb2\x7f\x2e\x7f\x7f\x9c\xf8\xea\x2b\xec\x07\xd0\
-\xca\xcb\x0b\xc6\x7b\xef\xb5\xbe\xb7\x9f\x1f\xe0\xeb\x9b\xef\xaa\
-\x43\xc2\xfc\xfc\x7c\x7c\xf5\xd5\x57\x75\x1e\xaf\xac\xac\xc4\x9e\
-\x3d\x7b\x50\x52\x52\x82\xe8\xe8\x68\x47\x6b\xa1\xd2\xb1\xdb\x1f\
-\x5d\xea\xaf\xbd\x0d\x19\x3e\x5c\x02\x90\x41\x21\x21\xb2\xf8\xf4\
-\x69\xd9\x90\x65\xff\xea\x7b\x3a\xbc\x4c\x43\x97\xb7\xbd\xbe\x31\
-\x9f\xb7\x9e\x65\x8d\x52\xe2\xed\x7f\xfe\x53\xfe\x52\x54\x24\x1b\
-\xba\x6c\x93\x96\x4d\x53\xaf\xab\x31\xdb\xc7\x13\xb7\xad\xb3\x97\
-\x69\x82\x6d\x9a\x94\x92\x22\x01\xc8\x96\xad\x5b\xcb\x92\x73\xe7\
-\xa4\xd3\xf6\x99\x3f\x6e\xd3\xa7\x4f\x97\xeb\xd6\xad\xab\x77\xbf\
-\x3e\x74\xe8\x90\x3c\x71\xe2\x84\x1c\xfe\x47\x46\x14\x15\x15\xc9\
-\xc3\x87\x0f\xcb\xc3\x87\x0f\xcb\x23\x47\x8e\xc8\xb9\x73\xe7\x4a\
-\x00\xf2\xdb\x6f\xbf\x95\x8e\xbe\x5f\xc3\x0e\x09\xeb\xa1\xfc\xe3\
-\x97\x51\x25\x25\xc4\xf5\x7e\x5d\xff\xea\x71\xf3\x5f\x59\xee\xea\
-\x65\x1a\xba\xbc\xed\xf5\x4d\xfc\x79\xa5\xd1\x88\x73\x25\x25\xa8\
-\xae\xaa\x6a\xba\xff\x6b\x53\xb6\x45\xb8\x62\xfb\xdc\x26\xdb\xb6\
-\x49\x97\x69\x82\x6d\x6a\xfb\x3e\xaa\xeb\xab\x59\xde\xe2\xf6\xab\
-\xbb\xef\xbe\xfb\xaa\x83\x24\x25\x22\x22\x22\xea\xbc\x66\xc8\x90\
-\x21\xf8\xdb\xdf\xfe\x56\xde\xf4\x6d\x58\x44\x44\x0d\x70\xe8\xd0\
-\x21\xe8\x74\x3a\xbc\xf0\xc2\x0b\xc8\xcc\xcc\x44\x71\x71\x31\xf4\
-\x7a\xbd\xfd\x79\xb5\x5a\x8d\xe0\xe0\x60\xe1\x7f\x6d\x33\x09\x03\
-\x8b\x88\x6e\x35\xdb\x19\xc0\x6d\xdb\xb6\x5d\xf7\x35\x66\xb3\x19\
-\x16\x8b\xa5\xd6\x38\xef\x37\xc2\x7e\x58\x44\xe4\x54\xd3\xa7\x4f\
-\x97\x4b\x96\x2c\x91\xd5\xd7\x9c\x41\x3e\x75\xea\x94\x7c\xf6\xd9\
-\x67\xe5\xbe\x7d\xfb\x1c\x9e\x35\x87\x81\x45\x44\x4e\x55\x55\x55\
-\x85\xe7\x9f\x7f\x1e\x03\x07\x0e\x94\x47\x8e\x1c\x91\x00\xb0\x62\
-\xc5\x0a\xd9\xbb\x77\x6f\x2c\x5b\xb6\xac\x41\xd7\x12\xf2\x90\x90\
-\x88\x9c\x6a\xe1\xc2\x85\x22\x31\x31\x51\x3e\xf7\xdc\x73\x48\x48\
-\x48\x40\x68\x68\xa8\x3c\x7c\xf8\x30\x3a\x77\xee\x8c\x1f\x7e\xf8\
-\x01\x71\x71\x71\x0e\x9f\x0d\x60\x0d\x8b\x88\x9c\x6e\xd0\xa0\x41\
-\xe2\xcc\x99\x33\xe2\xb9\xe7\x9e\xc3\xaf\xbf\xfe\x8a\xf9\xf3\xe7\
-\xe3\xe8\xd1\xa3\xa2\x21\x61\xc5\x1a\x16\x11\xdd\x12\xbf\xff\xfe\
-\xbb\x5c\xb9\x72\x25\xb2\xb2\xb2\x00\x00\x59\x59\x59\x68\xd1\xa2\
-\x85\x1c\x3d\x7a\xb4\x50\x3b\x72\xe5\x0b\x6b\x58\x44\x74\x2b\x2c\
-\x5d\xba\x54\x3e\xf0\xc0\x03\x98\x36\x6d\x1a\x1e\x7f\xfc\x71\x1c\
-\x3e\x7c\x18\x42\x08\x3c\xfd\xf4\xd3\xe8\xda\xb5\xab\x3c\x74\xe8\
-\x10\x1b\xdd\x3d\x4d\x41\x41\x81\xdc\xbd\x7b\xb7\xbc\xba\x9f\x8a\
-\x4d\x4e\x4e\x8e\xdc\xbf\x7f\xbf\xb4\x0d\x7e\x46\xe4\x49\xf2\xf3\
-\xf3\x61\x36\x9b\xf1\xe3\x8f\x3f\x62\xfa\xf4\xe9\x22\x32\x32\x52\
-\xec\xda\xb5\x4b\x2c\x5f\xbe\x1c\x05\x05\x05\x38\x7d\xfa\x34\x6b\
-\x58\x9e\xe6\x9d\x77\xde\xc1\x84\x09\x13\x70\xea\xd4\xa9\x3a\xbf\
-\x36\xa3\x46\x8d\xc2\x9c\x39\x73\x60\x30\x18\x58\x50\xe4\x71\x86\
-\x0f\x1f\x8e\x13\x27\x4e\x88\xfb\xef\xbf\xbf\x56\x7b\xd5\xd3\x4f\
-\x3f\x2d\x0e\x1c\x38\x80\xce\x9d\x3b\x3b\xbc\x2e\xb6\x61\xb9\x89\
-\xea\xea\x6a\x18\x0c\x86\x3a\xa7\x78\x8f\x1d\x3b\x26\x2f\x5c\xb8\
-\x00\xb3\xd9\x5c\xef\xbc\x6e\x44\xee\x48\x4a\x69\xdf\x5f\xfb\xf4\
-\xe9\x73\xdd\x1d\xd7\xd1\x51\x1a\x58\xc3\x72\x03\x45\x45\x45\x52\
-\x08\x21\x85\x10\x72\xdd\xba\x75\x38\x7b\xf6\x2c\xa2\xa2\xa2\x60\
-\x7b\x4c\x08\x21\xa3\xa2\xa2\x10\x1e\x1e\x8e\xf1\xe3\xc7\x43\x73\
-\xbd\xf1\xc6\x88\xdc\x8c\x10\x02\x42\x08\x39\x70\xe0\x40\x79\xd5\
-\x63\x72\xf4\xe8\xd1\xf6\xbf\x4f\x9d\x3a\x25\x85\x10\x72\xe7\xce\
-\x9d\x0e\xb7\x61\xb1\x86\xe5\x42\x61\x61\x61\x62\xf7\xee\xdd\x52\
-\xab\xd5\x62\xfd\xfa\xf5\x38\x7e\xfc\x38\x26\x4e\x9c\x88\xab\xaf\
-\xad\x52\xab\xd5\x08\x09\x09\x41\xa7\x4e\x9d\x58\xbd\x22\x8f\x73\
-\x6d\xbb\x6b\x7d\xed\xb0\x52\x3a\x9c\x57\x0c\x2c\x57\xd2\x68\x34\
-\x48\x4c\x4c\x14\x00\xd0\xad\x5b\x37\x48\x29\xe1\xe5\xe5\xc5\x82\
-\x21\xe2\x21\xa1\x7b\x33\x1a\x8d\xd8\xb0\x61\x83\xec\xd1\xa3\x87\
-\xf4\xf7\xf7\x97\x3a\x9d\xce\x7e\xf3\xf2\xf2\x92\xfd\xfb\xf7\xaf\
-\xf7\x0c\x22\xd1\x9d\x84\x35\x2c\x37\xf1\xee\xbb\xef\xca\xf4\xf4\
-\x74\xc4\xc6\xc6\x62\xe2\xc4\x89\xb5\x1a\xd8\xa5\x94\x88\x8a\x8a\
-\xb2\x4f\x91\x44\xe4\x29\x6a\x6a\x6a\x60\x30\x18\xec\xfb\x73\x75\
-\x75\x35\xf4\x7a\x3d\xf4\x7a\xfd\xfa\x0b\x17\x2e\x30\xb0\x3c\xd5\
-\x89\x13\x27\xe0\xed\xed\x8d\xa5\x4b\x97\x22\x26\x26\x86\xed\x55\
-\x74\x5b\xd8\xb3\x67\x0f\x74\x3a\x9d\xbd\x91\x2a\x23\x23\x03\x3e\
-\x3e\x3e\xb5\x1a\xad\x1a\xd2\xbf\x90\x81\xe5\xe2\xc3\x40\x00\x50\
-\x28\x14\x98\x33\x67\x0e\x2e\x5d\xba\x84\x6d\xdb\xb6\x21\x2a\x2a\
-\xaa\xce\xf8\x40\x0a\x85\x02\x0a\x85\x82\x5d\x1b\xc8\x63\xec\xdc\
-\xb9\xf3\xa6\xe3\x5c\x99\x4c\x26\xc4\xc5\xc5\x39\x3c\x2f\x21\x03\
-\xcb\x85\x82\x82\x82\xa4\x4e\xa7\x03\x60\x3d\x1b\x58\x5e\x5e\x8e\
-\xcd\x9b\x37\xe3\xbd\xf7\xde\x93\x57\x77\x61\x30\x9b\xcd\xe8\xd5\
-\xab\x17\x56\xae\x5c\x29\xbc\xaf\x9d\xc8\x81\xc8\x4d\xf5\xed\xdb\
-\xb7\xc9\x7f\x5d\x19\x58\x2e\xb4\x78\xf1\x62\x5c\x7d\xe1\xa7\xad\
-\x06\x65\xf9\x63\xb2\x80\xab\x85\x86\x86\xf2\x0c\x22\xdd\xf1\x18\
-\x58\x2e\x34\x76\xec\x58\x1e\xdf\x11\x31\xb0\x3c\xcf\xba\x75\xeb\
-\x64\x41\x41\x01\xb4\x5a\x2d\xcc\x66\xb3\xfd\xd2\x06\x5b\xad\xcb\
-\xcb\xcb\x0b\x6d\xdb\xb6\x45\xf7\xee\xdd\x11\x1e\x1e\x2e\x94\x8e\
-\xcc\xed\x48\xc4\xc0\x22\x67\x38\x73\xe6\x0c\xd6\xac\x59\x83\x13\
-\x27\x4e\xa0\x67\xcf\x9e\x68\xd5\xaa\x15\x2e\x5e\xbc\x88\x1d\x3b\
-\x76\x20\x2c\x2c\x0c\x5d\xbb\x76\xc5\x0f\x3f\xfc\x80\x66\xcd\x9a\
-\x61\xe6\xcc\x99\x72\xd4\xa8\x51\x82\xdd\x1c\xe8\x4e\xc3\x8e\xa3\
-\x6e\xa2\x4b\x97\x2e\xd0\x6a\xb5\xf8\xe8\xa3\x8f\x90\x99\x99\x89\
-\x55\xab\x56\x21\x23\x23\x03\xd9\xd9\xd9\xb0\x58\x2c\x48\x4e\x4e\
-\xc6\x96\x2d\x5b\xe0\xe7\xe7\x87\x37\xde\x78\x03\xbf\xfc\xf2\x8b\
-\x64\xa9\x11\x6b\x58\xe4\x12\xab\x57\xaf\xc6\xd9\xb3\x67\xf1\xf0\
-\xc3\x0f\xa3\x59\xb3\x66\xf6\xc7\xfb\xf7\xef\x8f\xca\xca\x4a\x6c\
-\xda\xb4\x09\x93\x26\x4d\x42\xbf\x7e\xfd\xb0\x70\xe1\x42\x54\x54\
-\x54\xb0\xd0\xc8\x63\xe4\xe6\xe6\xca\xe5\xcb\x97\xa3\xb0\xb0\x10\
-\xa6\xab\x26\x78\xd5\xeb\xf5\x58\xb2\x64\x09\xba\x75\xeb\xe6\x50\
-\x7b\x2e\x03\xcb\x4d\x74\xe8\xd0\x01\x97\x2f\x5f\xc6\x87\x1f\x7e\
-\x88\x29\x53\xa6\x20\x20\x20\x00\x7a\xbd\x1e\xab\x57\xaf\x46\x65\
-\x65\x25\x22\x22\x22\x50\x55\x55\x85\xa2\xa2\x22\xf8\xf9\xf9\xa1\
-\x21\x93\x4f\x12\xb9\x52\x56\x56\x96\x1c\x3e\x7c\x38\xaa\xea\x99\
-\xf9\x5c\x4a\x89\xf2\x72\x87\x27\x7e\x66\x60\xb9\x8b\xa9\x53\xa7\
-\xfe\xd3\x6c\x36\xa7\x2d\x5f\xbe\x1c\x6b\xd6\xac\x81\x8f\x8f\x0f\
-\xaa\xaa\xaa\x20\x84\xc0\x84\x09\x13\x30\x63\xc6\x0c\x94\x96\x96\
-\x22\x2c\x2c\x0c\x73\xe7\xce\x45\x87\x0e\x1d\x78\x86\x91\x3c\xc2\
-\x57\x5f\x7d\x85\xca\xca\x4a\xac\x5e\xbd\x1a\x23\x47\x8e\x6c\xd4\
-\x7e\xcb\xc0\x72\x13\x41\x41\x41\xd3\xd2\xd3\xd3\xa7\x4d\x9a\x34\
-\x49\x96\x96\x96\xa2\xa6\xa6\x06\x2a\x95\x0a\x41\x41\x41\x88\x88\
-\x88\x10\xb6\x1e\xee\xef\xbe\xfb\x2e\x7b\xbb\x93\x47\x69\xd3\xa6\
-\x0d\x00\x34\x3a\xac\x18\x58\x2e\xf6\xed\xb7\xdf\xca\xb0\xb0\x30\
-\x74\xec\xd8\x51\x1c\x3b\x76\x4c\x9e\x3b\x77\x0e\x4a\xa5\x12\x0a\
-\x85\x02\x4a\xa5\x12\x52\x4a\x94\x95\x95\xa1\xa4\xa4\x44\x36\x6f\
-\xde\x1c\x9d\x3b\x77\x66\x77\x06\xf2\x38\x69\x69\x69\xe2\xe8\xd1\
-\xa3\xf2\xf1\xc7\x1f\x97\x5f\x7c\xf1\x85\xd0\x6a\xb5\x0c\x2c\x4f\
-\xd4\xab\x57\x2f\x8c\x1d\x3b\x16\x2b\x57\xae\xc4\xcc\x99\x33\xb1\
-\x61\xc3\x86\x7a\xaf\xbd\xb2\x58\x2c\xe8\xdb\xb7\xaf\xed\xc2\x51\
-\x16\x1c\x79\x94\xb1\x63\xc7\xca\x55\xab\x56\x01\x40\xad\x0b\xa1\
-\x6d\x32\x33\x33\x31\x70\xe0\x40\x36\xba\xbb\xbb\xd2\xd2\xd2\x7c\
-\xad\x56\x1b\x27\xa5\xc4\xb2\x65\xcb\xc4\xe2\xc5\x8b\xf7\xab\xd5\
-\xea\xe1\x4a\xa5\xb2\x50\x08\x01\xa3\xd1\xd8\x57\xa9\x54\xee\x52\
-\x28\x14\xb0\x58\x2c\xe0\x75\x84\xe4\x89\x06\x0d\x1a\x84\xa0\xa0\
-\xa0\x7a\x9b\x32\xaa\xab\xab\xd1\xb1\x63\x47\xd6\xb0\x3c\x41\x70\
-\x70\x70\x9c\xed\x7e\xb3\x66\xcd\x60\x32\x99\xa6\x6d\xdd\xba\xf5\
-\x44\x4e\x4e\x0e\x2e\x5c\xb8\x80\x97\x5e\x7a\x09\x07\x0e\x1c\xc0\
-\xb7\xdf\x7e\x8b\x79\xf3\xe6\xc1\xcf\xcf\x8f\x8d\x57\xe4\x71\x86\
-\x0d\x1b\x26\x86\x0d\x1b\xd6\x24\xeb\x62\xc7\x51\x37\x51\x5c\x5c\
-\x2c\x47\x8d\x1a\xb5\xf3\xe5\x97\x5f\xc6\x6f\xbf\xfd\x86\x8c\x8c\
-\x0c\x1c\x3d\x7a\x14\xd1\xd1\xd1\xd8\xb0\x61\x03\x3e\xfd\xf4\x53\
-\xfb\x70\x34\x44\xee\xce\x6c\x36\xdb\xc7\xb9\xb2\x58\x2c\xf6\xbf\
-\xaf\xbd\x99\x4c\xa6\x06\x8d\xe9\xce\xc0\x72\x13\x9f\x7e\xfa\x29\
-\xf6\xed\xdb\x87\xcf\x3f\xff\x1c\xef\xbe\xfb\x2e\x00\x6b\x1f\x95\
-\x9e\x3d\x7b\xc2\xd7\xd7\x17\x07\x0f\x1e\x64\x60\x91\xc7\x68\xd5\
-\xaa\x95\x54\xa9\x54\x12\x00\x46\x8e\x1c\x29\x55\x2a\x55\xbd\x37\
-\xb5\x5a\x2d\x33\x33\x33\x39\x6b\x8e\x07\xd6\xb0\xe0\xed\xed\x8d\
-\xce\x9d\x3b\xe3\xf2\xe5\xcb\xb5\x7f\x55\xfe\x68\xc3\x22\xf2\x14\
-\xcb\x97\x2f\xb7\xef\xc7\x2f\xbe\xf8\x22\x92\x92\x92\xea\x6d\xc3\
-\xfa\x63\x00\x3f\x87\xd7\xcb\xc0\x72\x13\x91\x91\x91\xd0\xeb\xf5\
-\x28\x2a\x2a\xb2\xf7\x5b\xd1\x6a\xb5\xc8\xcb\xcb\x83\xc1\x60\x40\
-\xe7\xce\x9d\x39\xa6\x3b\x79\x8c\x41\x83\x06\xd9\xd3\xa9\x47\x8f\
-\x1e\xa2\x47\x8f\x1e\x4d\xb2\x5e\x7e\x03\xdc\xc4\xc4\x89\x13\xb1\
-\x67\xcf\x1e\x8c\x1d\x3b\x16\x89\x89\x89\x00\xac\xd7\x17\x16\x14\
-\x14\x20\x32\x32\x12\xcf\x3f\xff\x3c\x07\xf0\xa3\x3b\x1e\x03\xcb\
-\x4d\xb4\x6d\xdb\x56\x64\x64\x64\xcc\xfb\xe8\xa3\x8f\xd2\x16\x2f\
-\x5e\x0c\x00\xf8\xcf\x7f\xfe\x83\x49\x93\x26\x61\xfa\xf4\xe9\xcf\
-\x06\x06\x06\x2e\x65\x29\x91\xa7\xaa\xa9\xa9\xc1\xd7\x5f\x7f\x2d\
-\x8b\x8b\x8b\x61\x30\x18\xec\x0d\xed\x35\x35\x35\x18\x33\x66\x0c\
-\xda\xb7\x6f\xcf\x7e\x58\x9e\x26\x28\x28\x68\xda\xf4\xe9\xd3\xa7\
-\x4d\x9f\x3e\x9d\x85\x41\xb7\x8d\x8b\x17\x2f\x22\x25\x25\x45\xe6\
-\xe6\xe6\xd6\x7b\xe2\x28\x26\x26\x06\xed\xdb\xb7\x67\x0d\xcb\xdd\
-\x19\x8d\x46\x1c\x3d\x7a\x54\xda\x46\x17\xbd\x1e\x29\x25\x7c\x7c\
-\x7c\x10\x19\x19\x29\x78\x1d\x21\x79\x9a\xa5\x4b\x97\xca\x9c\x9c\
-\x1c\xbc\xf0\xc2\x0b\x78\xe4\x91\x47\x30\x74\xe8\x50\x9c\x3f\x7f\
-\x1e\xa9\xa9\xa9\x48\x48\x48\xc0\x63\x8f\x3d\xe6\xf0\x4e\xcd\xc0\
-\x72\xa1\x53\xa7\x4e\xc9\xe8\xe8\x68\x68\xb5\x5a\x08\x21\x20\x84\
-\x80\x8f\x8f\x0f\xa4\x94\xb8\x7c\xf9\xb2\xfd\x32\x1d\x8b\xc5\x82\
-\x3e\x7d\xfa\x60\xed\xda\xb5\xb5\xc6\xca\x22\xf2\x04\xc5\xc5\xc5\
-\x00\x80\x45\x8b\x16\xe1\xcb\x2f\xbf\xb4\x3f\xfe\xd6\x5b\x6f\xe1\
-\xee\xbb\xef\x46\xaf\x5e\xbd\x64\x6c\x6c\x2c\x0f\x09\xdd\x5d\x78\
-\x78\xb8\x28\x2a\x2a\x92\x00\x20\x84\x40\x45\x45\x05\x06\x0f\x1e\
-\x0c\x5f\x5f\x5f\x9c\x3c\x79\x52\x94\x94\x94\x48\x5b\x8d\x4a\xab\
-\xd5\xc2\xd7\xd7\x97\x85\x46\x1e\xc7\x76\xd6\xbb\xb2\xb2\xd2\x7e\
-\x79\xd9\x81\x03\x07\xec\x3f\xc8\x0d\x99\x01\x9a\x81\xe5\x42\x4a\
-\xa5\xb2\x56\x63\xe3\x1f\x1d\xe9\xa0\xd1\x68\xa0\xd3\xe9\x10\x11\
-\x11\xc1\xe3\x3f\xf2\x78\x23\x47\x8e\x44\x7a\x7a\x3a\x5e\x7a\xe9\
-\x25\xcc\x99\x33\x07\x1d\x3b\x76\xc4\x80\x01\x03\x00\x00\x81\x81\
-\x81\x68\xd9\xb2\x25\x03\xcb\x13\xb1\x73\x28\xdd\x8e\x7c\x7c\x7c\
-\xf2\x8b\x8a\x8a\x62\xc3\xc2\xc2\x04\x00\x7c\xfc\xf1\xc7\x72\xf6\
-\xec\xd9\x30\x18\x0c\x78\xed\xb5\xd7\x70\xdf\x7d\xf7\xb1\x0d\xcb\
-\x13\x69\x34\x9a\x72\xa5\x52\xd9\x9c\x1d\x44\xe9\x76\x92\x96\x96\
-\x16\xbb\x62\xc5\x0a\x7b\x57\x86\xc4\xc4\x44\x61\xeb\x6b\xd8\x50\
-\xfc\x66\xb8\xd0\xef\xbf\xff\x2e\xfb\xf7\xef\x0f\x95\x4a\x05\x21\
-\x04\x4c\x26\x13\x8e\x1f\x3f\x0e\xa5\x52\x89\x07\x1f\x7c\x50\x56\
-\x57\x57\x43\x08\x01\xb3\xd9\x8c\xee\xdd\xbb\x63\xe1\xc2\x85\xc2\
-\x36\xb5\x3d\x91\xa7\x88\x8f\x8f\xc7\x8a\x15\x2b\x50\x5c\x5c\x2c\
-\x1d\xed\x6f\xc5\xc0\x72\x43\x3a\x9d\xae\xc3\xd0\xa1\x43\x4f\x5c\
-\xdd\x83\x7d\xf4\xe8\xd1\x00\x50\x6b\x66\x11\x29\x25\x3a\x74\xe8\
-\x00\x8e\x36\x4a\x9e\x68\xc2\x84\x09\x22\x37\x37\x57\xf6\xee\xdd\
-\x1b\x1b\x37\x6e\x94\x5d\xba\x74\xb1\x77\xcf\x91\x52\x42\xa7\xd3\
-\xd5\x3b\x70\x25\x03\xcb\xcd\x04\x04\x04\x14\xa6\xa7\xa7\xb3\x61\
-\x9d\x6e\x6b\xc3\x87\x0f\x97\x1b\x36\x6c\x00\x00\xdb\x85\xce\xb5\
-\x46\x67\xd8\xb2\x65\x4b\xad\x6b\x0f\x19\x58\x44\xe4\x32\x6f\xbf\
-\xfd\x36\xa6\x4e\x9d\x8a\x73\xe7\xce\xd5\x79\xce\x64\x32\xa1\x47\
-\x8f\x1e\x0e\xcf\xf3\xc5\xc0\x22\x22\xa7\x5a\xbc\x78\x31\x16\x2d\
-\x5a\x04\x29\x65\xa3\x8f\x26\x38\x80\x1f\x11\x39\x95\xed\xea\x8c\
-\xa6\xe8\xb6\xc3\xc0\x22\x22\xa7\x9a\x32\x65\x0a\xe2\xe3\xe3\x91\
-\x96\x96\x26\xaf\x3e\x99\xf4\x57\xf0\x90\xd0\x4d\x48\x29\xf1\xeb\
-\xaf\xbf\xca\x82\x82\x02\x54\x55\x55\xd5\x1a\xe7\x5a\x4a\x89\xd0\
-\xd0\x50\xf4\xee\xdd\x5b\xb0\x8f\x16\x79\x9a\x8f\x3f\xfe\x18\x05\
-\x05\x05\xc8\xcb\xcb\xc3\xc6\x8d\x1b\xa5\x97\x97\x97\xfd\x62\xff\
-\xca\xca\x4a\xac\x5b\xb7\x0e\xf1\xf1\xf1\x6c\x74\xf7\x24\x19\x19\
-\x19\x32\x2d\x2d\x0d\xbf\xff\xfe\x3b\xee\xb9\xe7\x9e\x5a\xa3\x8b\
-\x5a\x2c\x16\xc4\xc5\xc5\x21\x21\x21\x81\xa3\x8e\x92\xc7\xa9\xa8\
-\xa8\x80\xc5\x62\x81\x8f\x8f\x0f\xca\xcb\x6b\xb7\xaf\x57\x56\x56\
-\xa2\xba\xba\x9a\x35\x2c\x4f\xb3\x61\xc3\x06\x94\x94\x94\x60\xd3\
-\xa6\x4d\x48\x48\x48\xa8\xf3\x6b\xa3\x50\x28\xa0\xd1\x68\x58\x50\
-\xe4\x71\xde\x7f\xff\x7d\xf1\xfe\xfb\xef\x37\xc9\xba\xd8\x86\xe5\
-\x26\xfa\xf5\xeb\x87\xc0\xc0\x40\x68\x34\x1a\x68\xb5\x5a\xe8\x74\
-\xba\x5a\x37\x86\x15\x79\xba\xcf\x3f\xff\x5c\x8e\x19\x33\x46\xf6\
-\xea\xd5\x4b\xd6\xd4\xd4\xe0\xa9\xa7\x9e\x92\x6f\xbd\xf5\x96\xb4\
-\x4d\x07\xc6\x1a\x96\x07\x09\x08\x08\x40\x78\x78\x38\x46\x8c\x18\
-\x81\xd1\xa3\x47\xcb\xa0\xa0\x20\x7b\x3b\x96\xad\xa7\xfb\xd0\xa1\
-\x43\x05\xc7\x75\x27\x4f\x94\x94\x94\x24\xb3\xb2\xb2\xec\x7f\xd7\
-\xd4\xd4\xa0\x7d\xfb\xf6\x58\xb2\x64\x09\x9e\x7c\xf2\x49\xd9\xb1\
-\x63\x47\xb6\x61\x79\x92\xdc\xdc\x5c\x9c\x3b\x77\x0e\xe1\xe1\xe1\
-\xd8\xb3\x67\x0f\xae\x1e\x85\xd4\x76\x2d\x61\x4a\x4a\x0a\x0b\x8a\
-\x3c\xce\xea\xd5\xab\x65\x76\x76\x36\xa6\x4c\x99\x82\x7e\xfd\xfa\
-\x21\x25\x25\x05\x26\x93\x29\x32\x29\x29\x09\xb3\x67\xcf\x46\x49\
-\x49\x89\xc3\xd3\xd5\x33\xb0\xdc\x80\x94\x12\xf3\xe7\xcf\x17\xf3\
-\xe7\xcf\x67\x61\xd0\x6d\xe7\x87\x1f\x7e\x80\x94\x12\x0b\x17\x2e\
-\xc4\x96\x2d\x5b\x6c\xfb\x7c\x64\x48\x48\x08\x00\xe0\xca\x95\x2b\
-\x3c\x24\xf4\x04\x59\x59\x59\xb2\x75\xeb\xd6\x88\x8e\x8e\x16\x07\
-\x0f\x1e\x94\xbf\xfd\xf6\x1b\xd4\x6a\x75\xbd\x81\x16\x18\x18\x88\
-\xae\x5d\xbb\x0a\x5e\x00\x4d\x9e\xc6\xd6\x61\x54\xa5\x52\xd9\xef\
-\x0b\x21\x0a\xcf\x9f\x3f\x0f\x00\x0d\x9a\xbe\x8e\x81\xe5\xda\xe3\
-\x7a\x0c\x19\x32\x04\x9b\x36\x6d\xc2\xeb\xaf\xbf\x8e\xed\xdb\xb7\
-\x5f\xf7\xb5\xdd\xbb\x77\xc7\xae\x5d\xbb\x38\x4c\x32\x79\x8c\xf3\
-\xe7\xcf\xcf\xf3\xf5\xf5\x9d\x76\xd7\x5d\x77\x01\x00\xb6\x6e\xdd\
-\x6a\xef\x96\xa3\x50\x28\x0a\x37\x6f\xde\x8c\xa0\xa0\x20\x8e\x38\
-\xea\x29\x2a\x2b\x2b\x85\x5a\xad\x86\x94\x12\x5f\x7e\xf9\xa5\xb8\
-\x51\x2f\x60\x95\x4a\xc5\x89\x54\xc9\xa3\xb4\x68\xd1\x22\x2d\x3e\
-\x3e\x3e\x2d\x27\x27\x47\x2c\x59\xb2\x44\x8e\x1a\x35\x0a\xc9\xc9\
-\xc9\x00\x80\xf9\xf3\xe7\xcb\xb7\xdf\x7e\x1b\x2f\xbc\xf0\x02\x3a\
-\x77\xee\xcc\x11\x47\x3d\x81\x8f\x8f\x8f\xfd\xbe\x46\xa3\x61\xd7\
-\x05\xba\xed\xf8\xfa\xfa\x42\xa9\x54\x62\xcb\x96\x2d\x78\xe3\x8d\
-\x37\xb0\x6a\xd5\x2a\x00\xc0\xc2\x85\x0b\x31\x73\xe6\x4c\xbc\xf6\
-\xda\x6b\x0d\x6a\xe6\x60\x60\xb9\x99\xfc\xfc\x7c\x59\x58\x58\x08\
-\xbd\x5e\x5f\xab\x5b\x43\x48\x48\x08\x1e\x7d\xf4\x51\x5e\x9a\x43\
-\x1e\xa9\x5d\xbb\x76\x62\xc5\x8a\x15\x58\xbe\x7c\xb9\xfd\x31\x47\
-\x07\xed\x63\x60\xb9\xa1\xf2\xf2\xf2\xbe\x53\xa6\x4c\xd9\xb9\x79\
-\xf3\x66\x18\x0c\x06\x68\xb5\x5a\x18\x0c\x06\xfb\xf3\x8f\x3c\xf2\
-\x08\x12\x12\x12\x38\x2f\x21\x79\x94\x8a\x8a\x0a\x1c\x3c\x78\x50\
-\xea\xf5\xfa\x7a\x9f\x37\x9b\xcd\xb8\xe7\x9e\x7b\x84\xbf\xbf\x3f\
-\x03\xcb\x93\xcc\x9b\x37\x6f\xe7\x9a\x35\x6b\x90\x9e\x9e\x8e\x11\
-\x23\x46\x20\x2a\x2a\x0a\xab\x57\xaf\xc6\xc9\x93\x27\x91\x9b\x9b\
-\x8b\x15\x2b\x56\x3c\xcb\xb0\x22\x4f\x93\x97\x97\x87\xfb\xee\xbb\
-\xef\x86\xaf\xc9\xc8\xc8\x90\x29\x29\x29\xec\x38\xea\x49\xce\x9c\
-\x39\x83\xe0\xe0\x60\xa4\xa6\xa6\xc2\x76\xba\xb7\xbc\xbc\x1c\x69\
-\x69\x69\xf0\xf2\xf2\xc2\xe4\xc9\x93\x3f\xfe\xec\xb3\xcf\x96\x72\
-\x12\x0a\xf2\x24\xbd\x7a\xf5\x42\x46\x46\x46\x87\xaa\xaa\xaa\x13\
-\xf5\x3d\x6f\xb1\x58\xd0\xb2\x65\x4b\x36\xba\x7b\x9a\xbe\x7d\xfb\
-\xe2\x8b\x2f\xbe\xc0\xa6\x4d\x9b\x30\x64\xc8\x10\x04\x06\x06\x62\
-\xed\xda\xb5\x38\x7f\xfe\x3c\x8c\x46\x63\x9d\x21\x67\x88\x3c\x81\
-\x56\xab\x45\x40\x40\x40\x61\x40\x40\x40\x93\xcc\x5d\xc0\xc0\x72\
-\x13\xe3\xc7\x8f\x17\x7d\xfb\xf6\x95\x57\xae\x5c\x41\x9b\x36\x6d\
-\xc4\xf2\xe5\xcb\x65\x6a\x6a\x2a\xbe\xfb\xee\x3b\xc4\xc4\xc4\x60\
-\xee\xdc\xb9\xf6\x69\xbe\x89\xee\x54\x1c\xad\xc1\x4d\x0c\x1f\x3e\
-\x5c\x76\xea\xd4\xc9\xfe\x77\x4a\x4a\x8a\x28\x2b\x2b\x13\x52\x4a\
-\xf1\xd3\x4f\x3f\x89\xe8\xe8\x68\xce\xae\x43\x77\x3c\xd6\xb0\xdc\
-\x44\x62\x62\x22\xf2\xf3\xf3\x51\x58\x58\xe8\xf0\x85\xa0\x44\xee\
-\xac\x29\x26\x9d\x60\x60\xb9\xa9\xd8\xd8\x58\x44\x46\x46\x62\xf2\
-\xe4\xc9\x78\xfe\xf9\xe7\x65\x64\x64\x64\xad\x7e\x58\xc1\xc1\xc1\
-\x88\x8f\x8f\xe7\xb5\x84\xc4\x1a\x16\xb9\xde\xdb\x6f\xbf\x8d\xfd\
-\xfb\xf7\x43\xa5\x52\xe1\xcd\x37\xdf\xac\xd5\xc0\x6e\xb1\x58\xd0\
-\xa7\x4f\x1f\xdc\x7f\xff\xfd\xec\x87\x45\x0c\x2c\x72\xbd\x29\x53\
-\xa6\x20\x29\x29\x09\x03\x06\x0c\x80\x9f\x9f\x5f\x9d\xaa\xb4\x4a\
-\xa5\xaa\x75\x29\x0f\x11\x03\x8b\x5c\x66\xe5\xca\x95\xd8\xba\x75\
-\x2b\x12\x13\x13\xe1\x68\xaf\x5f\xa2\x3b\x0d\xcf\x12\xba\x89\x67\
-\x9e\x79\x06\x1d\x3b\x76\xc4\xf6\xed\xdb\x61\x34\x1a\x21\xa5\xac\
-\x73\x23\x62\x0d\x8b\xdc\xc2\xf1\xe3\xc7\x51\x59\x59\x89\x7f\xfc\
-\xe3\x1f\xd8\xba\x75\xab\x6c\xdd\xba\x75\xad\x46\xf7\xbb\xef\xbe\
-\x1b\x2f\xbe\xf8\xa2\xd0\x6a\xb5\x2c\x2c\x62\x60\x91\x6b\xe9\x74\
-\x3a\x0c\x1b\x36\x0c\x5e\x5e\x5e\x30\x99\x4c\xb5\xa6\xf5\xb6\x8d\
-\xd6\xf0\x57\xae\x6e\x27\x62\x60\x51\x93\x1b\x3b\x76\xac\x00\x60\
-\x9f\x78\x82\x88\xea\xe2\x4f\xb6\x1b\xc9\xcf\xcf\x97\x83\x07\x0f\
-\x96\x0a\x85\x42\x0a\x21\xe4\x27\x9f\x7c\x22\x53\x53\x53\xa5\x10\
-\x42\x66\x67\x67\xb3\x11\x8b\x18\x58\x2c\x02\xf7\xb0\x77\xef\x5e\
-\x39\x68\xd0\x20\x5c\xb8\x70\x01\xe9\xe9\xe9\xd6\x8d\xa3\x50\xe0\
-\x9d\x77\xde\x81\xb7\xb7\x37\x56\xaf\x5e\x5d\x6b\x7c\x2c\x22\x06\
-\x16\xb9\xcc\x9a\x35\x6b\x60\x30\x18\xb0\x68\xd1\x22\x3c\xf1\xc4\
-\x13\x00\xac\x83\x9b\x35\x6f\xde\x1c\x4a\xa5\x12\xa5\xa5\xa5\x68\
-\xc8\x0c\xb9\x44\x0c\x2c\x72\x1a\xa3\xd1\x08\xa5\x52\x09\x6f\x6f\
-\x6f\xd4\xd4\xd4\x00\xf8\xb3\x3d\xcb\x62\xb1\xc0\xcb\xcb\x8b\x8d\
-\xee\xc4\xc0\x62\x11\xb8\x4e\x55\x55\x15\xbe\xf8\xe2\x0b\xf9\xdb\
-\x6f\xbf\xc9\x3e\x7d\xfa\xc0\x68\x34\x22\x23\x23\xc3\x1e\x58\xb6\
-\xc9\x27\x6b\x6a\x6a\xd0\xbf\x7f\x7f\xce\x9a\x43\x77\x3c\x9e\x25\
-\x74\xa1\xb2\xb2\x32\x39\x66\xcc\x18\x2c\x5a\xb4\x08\x93\x27\x4f\
-\xc6\xd1\xa3\x47\xb1\x60\xc1\x02\x7c\xf2\xc9\x27\x00\x80\xd9\xb3\
-\x67\xe3\xe2\xc5\x8b\x78\xe6\x99\x67\xf0\xd4\x53\x4f\xf1\xc2\x67\
-\x62\x60\xb1\x08\x5c\xc7\x76\xc8\xa7\x54\x2a\xa1\x56\xab\xf1\xe6\
-\x9b\x6f\x62\xe8\xd0\xa1\xd8\xb5\x6b\x17\xca\xca\xca\xd0\xac\x59\
-\x33\x24\x26\x26\x22\x21\x21\x81\x7d\x1d\x88\x18\x58\xee\xe1\xd2\
-\xa5\x4b\x38\x7a\xf4\x28\x2c\x16\x0b\x7c\x7c\x7c\xf0\xc4\x13\x4f\
-\x40\xa1\x50\x40\x4a\x09\xa3\xd1\x88\x43\x87\x0e\x49\x1f\x1f\x1f\
-\x84\x87\x87\x0b\xb6\x63\x11\x03\x8b\x5c\xea\xf5\xd7\x5f\xc7\xeb\
-\xaf\xbf\x7e\xc3\xd7\xc4\xc7\xc7\x23\x3b\x3b\x9b\x53\xd5\x13\x03\
-\x8b\x5c\x6b\xfe\xfc\xf9\x18\x31\x62\x44\xad\xcb\x71\xae\xe5\xed\
-\xed\x5d\xce\x31\xdd\x89\x81\x45\x2e\xe7\xed\xed\x8d\xf0\xf0\x70\
-\xb6\x53\x11\xdd\x04\x1b\x44\x5c\xc8\x56\xa3\xb2\x75\x63\x20\x22\
-\xd6\xb0\xdc\x56\xcb\x96\x2d\xc5\x67\x9f\x7d\x26\x1f\x7c\xf0\x41\
-\x16\x06\x11\x03\xcb\xbd\xf9\xf8\xf8\x60\xfc\xf8\xf1\x3c\x14\x24\
-\xe2\x21\x21\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\x62\
-\x60\x59\xd9\xae\x87\x13\x42\x70\x34\x81\xeb\x50\xab\xd5\x50\x2a\
-\x95\xd0\x68\x34\x2c\x0c\x72\xaa\xdb\xfd\x02\xf9\x46\x9f\x25\x34\
-\x1a\x8d\x00\x00\xbd\x5e\x8f\x7f\xfd\xeb\x5f\x08\x08\x08\xe0\x50\
-\xbe\xd7\xb0\x58\x2c\xc8\xcb\xcb\x83\xc5\x62\x41\xab\x56\xad\x58\
-\x3e\xe4\x14\x1a\x8d\x06\xc7\x8e\x1d\x03\x60\xed\xdb\xa7\xd1\x68\
-\x3a\xdc\x8a\x1f\xe3\xeb\x55\x54\xa4\x94\x4d\x3e\x47\x81\x68\xec\
-\x7c\x77\xf1\xf1\xf1\x32\x37\x37\xd7\x5a\x5d\xe3\x85\xb9\xd7\xe5\
-\x8c\x8d\x47\x54\xdf\x8f\xa3\xcd\xab\xaf\xbe\x8a\x80\x80\x00\xe7\
-\xd5\x76\x54\x2a\x64\x65\x65\x21\x24\x24\x04\x31\x31\x31\xb5\x46\
-\xc4\x35\x18\x0c\x78\xf3\xcd\x37\x9b\x7c\x87\x6f\x74\x0d\xab\x7d\
-\xfb\xf6\xc8\xcd\xcd\xb5\x0f\x91\x42\x44\xae\x21\x84\x80\xc9\x64\
-\x82\xd1\x68\x84\x4e\xa7\x43\x60\x60\x20\xfc\xfc\xfc\x9c\x1a\x58\
-\xe1\xe1\xe1\x08\x0a\x0a\x82\xbf\xbf\x7f\xad\xb0\x74\xd6\xd5\x1b\
-\x8d\xae\x61\x15\x15\x15\xc9\xcc\xcc\x4c\xe8\x74\x3a\xa7\x16\x0e\
-\x11\xdd\x3c\xb0\xf4\x7a\x3d\x4a\x4b\x4b\xd1\xa9\x53\x27\x0c\x1e\
-\x3c\xd8\xa5\x55\x7a\xb7\x3b\x24\xe4\x61\x0e\x11\xdd\xd2\x50\x6e\
-\x6c\x0d\x8b\x88\xe8\x56\x61\x2b\x39\x11\x31\xb0\x88\x88\x18\x58\
-\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\x88\x81\x45\x44\
-\xc4\xc0\x22\x22\x62\x60\x11\x11\x03\x8b\x88\x88\x81\x45\x44\xc4\
-\xc0\x22\x22\x06\x16\x11\x11\x03\x8b\x88\x88\x81\x45\x44\x0c\x2c\
-\x22\x22\x06\x16\x11\x11\x03\x8b\x88\x18\x58\x44\x44\x0c\x2c\x22\
-\x22\x06\x16\x11\x31\xb0\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\x62\
-\x60\x11\x11\x31\xb0\x88\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\
-\x11\x11\x03\x8b\x45\x40\x44\x0c\x2c\x22\x22\x06\x16\x11\x31\xb0\
-\x88\x88\x18\x58\x44\x44\x0c\x2c\x22\x62\x60\x11\x11\x31\xb0\x88\
-\x88\x18\x58\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x31\xb0\x88\x88\
-\x81\x45\x44\xc4\xc0\x22\x22\x62\x60\x11\x11\x03\x8b\x88\x88\x81\
-\x45\x44\xc4\xc0\x22\xa2\xdb\xc8\xff\x03\x94\x2f\xf5\x90\x11\xa7\
-\x53\x72\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\
-"
-
-qt_resource_name = "\
-\x00\x08\
-\x0c\x35\x75\x76\
-\x00\x68\
-\x00\x65\x00\x6c\x00\x70\x00\x50\x00\x72\x00\x65\x00\x66\
-\x00\x13\
-\x05\xdd\x1a\x07\
-\x00\x54\
-\x00\x65\x00\x72\x00\x72\x00\x61\x00\x69\x00\x6e\x00\x45\x00\x78\x00\x74\x00\x65\x00\x6e\x00\x64\x00\x73\x00\x31\x00\x2e\x00\x70\
-\x00\x6e\x00\x67\
-"
-
-qt_resource_struct = "\
-\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x01\
-\x00\x00\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x02\
-\x00\x00\x00\x16\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\
-"
-
-def qInitResources():
-    QtCore.qRegisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)
-
-def qCleanupResources():
-    QtCore.qUnregisterResourceData(0x01, qt_resource_struct, qt_resource_name, qt_resource_data)
-
-qInitResources()

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/help/help_rc.py (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/help/help_rc.py)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/icons/icons.qrc (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/icons/icons.qrc)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/icons/terrain.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/icons/terrain.png)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/icons/terrain_small.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/icons/terrain_small.png)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETShader.program
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/ETShader.program	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETShader.program	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,46 +0,0 @@
-fragment_program ET/Programs/PSSplat cg
-{
-  source PSSplat.cg
-  entry_point main
-  profiles ps_1_1 arbfp1
-}
-
-fragment_program ET/Programs/PSSplat2 cg
-{
-  source PSSplat2.cg
-  entry_point main
-  profiles ps_2_0 arbfp1
-}
-
-fragment_program ET/Programs/PSLighting cg
-{
-  source PSLighting.cg
-  entry_point main
-  profiles ps_1_1 arbfp1
-}
-
-vertex_program ET/Programs/VSLodMorph cg
-{
-  source VSLodMorph.cg
-  entry_point terrain_vp
-  profiles vs_1_1 arbvp1
-  
-  default_params
-  {
-    param_named_auto morphFactor custom 77
-    param_named_auto worldViewProj worldviewproj_matrix
-  }
-}
-
-vertex_program ET/Programs/VSLodMorph2 cg
-{
-  source VSLodMorph.cg
-  entry_point terrain_vp
-  profiles vs_1_1 arbvp1
-  
-  default_params
-  {
-    param_named_auto morphFactor custom 77
-    param_named_auto worldViewProj worldviewproj_matrix
-  }
-}

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETShader.program (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/ETShader.program)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETTerrain.material
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/ETTerrain.material	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETTerrain.material	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,199 +0,0 @@
-material ETTerrainMaterial
-{
-  technique
-  {
-    // primary splatting technique, requires PS 2.0
-    // has issues with OpenGL rendering, though...
-    pass
-    {
-      // splatting pass
-      
-      lighting off
-      
-      vertex_program_ref ET/Programs/VSLodMorph2
-      {
-      }
-      
-      fragment_program_ref ET/Programs/PSSplat2
-      {
-        param_named splatScaleX float 20
-	param_named splatScaleZ float 20
-      }
-      
-      texture_unit
-      {
-        // first coverage map, dynamically managed
-	texture ETSplatting0
-      }
-      texture_unit
-      {
-        // second coverage map, dynamically managed
-	texture ETSplatting1
-      }
-
-      // splatting textures
-      texture_unit
-      {
-        texture splatting0.png
-      }
-      texture_unit
-      {
-        texture splatting1.png
-      }
-      texture_unit
-      {
-        texture splatting2.png
-      }
-      texture_unit
-      {
-        texture splatting3.png
-      }
-      texture_unit
-      {
-        texture splatting4.png
-      }
-      texture_unit
-      {
-        texture splatting5.png
-      }
-    }
-    
-    pass
-    {
-      // lightmap texture pass
-      
-      scene_blend modulate
-
-      vertex_program_ref ET/Programs/VSLodMorph2
-      {
-      }
-      
-      fragment_program_ref ET/Programs/PSLighting
-      {
-      }
-
-      texture_unit
-      {
-        // dynamically created
-        texture ETLightmap
-      }
-      
-    }
-  }
-  
-
-
-  technique
-  {
-    // fallback technique for ps 1.1
-
-    pass
-    {
-      // first splatting pass
-      
-      lighting off
-	
-      vertex_program_ref ET/Programs/VSLodMorph
-      {
-        param_named splatScaleX float 20
-	param_named splatScaleZ float 20
-      }
-      
-      fragment_program_ref ET/Programs/PSSplat
-      {
-      }
-      
-      texture_unit
-      {
-        // will be dynamically generated by the splatting manager
-        texture ETSplatting0
-      }
-
-      texture_unit
-      {
-        texture splatting0.png
-      }
-     
-
-      texture_unit
-      {
-        texture splatting1.png
-      }
-     
-      texture_unit
-      {
-        texture splatting2.png
-      }
-
-    }
-    
-    pass
-    {
-      // second splatting pass
-      
-      lighting off
-      
-      scene_blend add
-	
-      vertex_program_ref ET/Programs/VSLodMorph
-      {
-        param_named splatScaleX float 20
-	param_named splatScaleZ float 20
-      }
-      
-      fragment_program_ref ET/Programs/PSSplat
-      {
-      }
-      
-      texture_unit
-      {
-        // will be dynamically generated by the splatting manager
-        texture ETSplatting1
-      }
-
-      texture_unit
-      {
-        texture splatting3.png
-      }
-
-      texture_unit
-      {
-        texture splatting4.png
-      }
-     
-
-      texture_unit
-      {
-        texture splatting5.png
-      }
-     
-    }
-    
-    pass 
-    {
-      // lightmap texture pass
-      
-      scene_blend modulate
-
-      vertex_program_ref ET/Programs/VSLodMorph
-      {
-        param_named splatScaleX float 20
-	param_named splatScaleZ float 20
-        param_named_auto morphFactor custom 77
-      }
-      
-      fragment_program_ref ET/Programs/PSLighting
-      {
-      }
-
-      texture_unit
-      {
-        // dynamically created
-        texture ETLightmap
-      }
-    }
-
-
- 
-  }
-}
\ No newline at end of file

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETTerrain.material (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/ETTerrain.material)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETcoverage.0.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETcoverage.0.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/ETcoverage.0.png)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETcoverage.1.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETcoverage.1.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/ETcoverage.1.png)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETlightmap.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETlightmap.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/ETlightmap.png)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETterrain.cfg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/ETterrain.cfg	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETterrain.cfg	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,41 +0,0 @@
-# Specify the heightmap data type and source
-DataType=Image
-DataSource=terrain.png
-
-# Specify the size of the terrain
-Width=513
-Height=513
-TileSize=513
-
-# Scale factor for terrain rendering
-ScaleX=1500
-ScaleY=100
-ScaleZ=1500
-
-# Adjust LOD settings
-MaxMipMapLevel=4
-MaxPixelError=2
-LODMorphing=no
-
-# Specify the splatting textures to use
-# You can use as many as you want (and your hardware supports)
-Texture0=splatting0.png
-Texture1=splatting1.png
-Texture2=splatting2.png
-Texture3=splatting3.png
-
-# If you intend to load a terrain texturing done before,
-# then specify the coverage maps' extension and their base name
-# (excluding extension and the .## at the end)
-#CoverageExtension=png
-#CoverageBasename=ETterrain.Tex
-
-# Calculate a lightmap for the terrain upon loading?
-UseLightmap=yes
-# From where does the light for the lightmap come?
-LightDirection=1 -1 1
-LightmapDetail=1
-
-# How often should the splatting textures be tiled over the terrain?
-TextureRepeatX=20
-TextureRepeatZ=20

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETterrain.cfg (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/ETterrain.cfg)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETterrain.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/ETterrain.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/ETterrain.png)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSLighting.cg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/PSLighting.cg	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSLighting.cg	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,10 +0,0 @@
-void main
-(
-  float2 iTexCoord0 : TEXCOORD0, 
-  out float4 oColor : COLOR, 
-  uniform sampler2D lightMap
-) 
-{
-  oColor = tex2D(lightMap, iTexCoord0);
-}
-

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSLighting.cg (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/PSLighting.cg)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSSplat.cg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat.cg	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSSplat.cg	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,22 +0,0 @@
-void main
-(
-  float2 iTexCoord0 : TEXCOORD0,
-  float2 iTexCoord1 : TEXCOORD1,
-  float2 iTexCoord2 : TEXCOORD2,
-  float2 iTexCoord3 : TEXCOORD3,
- 
-  out float4 oColor : COLOR,
- 
-  uniform sampler2D covMap,
-  uniform sampler2D splat1,
-  uniform sampler2D splat2,
-  uniform sampler2D splat3  
-) 
-{
-  float3 cov = tex2D(covMap, iTexCoord0).rgb;
-  
-  oColor = tex2D(splat1, iTexCoord1) * cov.x
-          + tex2D(splat2, iTexCoord2) * cov.y
-          + tex2D(splat3, iTexCoord3) * cov.z;
-}
-

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSSplat.cg (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat.cg)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSSplat2.cg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat2.cg	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSSplat2.cg	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,34 +0,0 @@
-void main
-(
-  float2 iTexCoord0 : TEXCOORD0,
- 
-  out float4 oColor : COLOR,
- 
-  uniform sampler2D covMap1,
-  uniform sampler2D covMap2,
-  uniform sampler2D splat1,
-  uniform sampler2D splat2,
-  uniform sampler2D splat3,
-  uniform sampler2D splat4,
-  uniform sampler2D splat5,
-  uniform sampler2D splat6,
-
-  uniform float splatScaleX,
-  uniform float splatScaleZ
-) 
-{
-  float3 cov1 = tex2D(covMap1, iTexCoord0).rgb;
-  float3 cov2 = tex2D(covMap2, iTexCoord0).rgb;
-  
-  iTexCoord0.x *= splatScaleX;
-  iTexCoord0.y *= splatScaleZ;
-  
-  oColor = tex2D(splat1, iTexCoord0) * cov1.x
-           + tex2D(splat2, iTexCoord0) * cov1.y
-           + tex2D(splat3, iTexCoord0) * cov1.z
-           + tex2D(splat4, iTexCoord0) * cov2.x
-           + tex2D(splat5, iTexCoord0) * cov2.y
-           + tex2D(splat6, iTexCoord0) * cov2.z;
-
-}
-

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/PSSplat2.cg (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/PSSplat2.cg)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/VSLodMorph.cg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph.cg	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/VSLodMorph.cg	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,32 +0,0 @@
-    void terrain_vp(
-	    float4 position : POSITION,
-	    float2 uv1   	: TEXCOORD0,
-	    /*float2 uv2   	: TEXCOORD1,
-	    float2 uv3   	: TEXCOORD2,
-	    float2 uv4   	: TEXCOORD3,*/
-	    float delta     : BLENDWEIGHT,
-
-	    out float4 oPosition : POSITION,
-	    out float2 oUv1		 : TEXCOORD0,
-	    out float2 oUv2		 : TEXCOORD1,
-	    out float2 oUv3		 : TEXCOORD2,
-	    out float2 oUv4		 : TEXCOORD3,
-	    uniform float splatScaleX,
-	    uniform float splatScaleZ,
-	    uniform float4x4 worldViewProj,
-	    uniform float morphFactor
-	    )
-    {
-	    position.y = position.y + (delta.x * morphFactor);
-	    oPosition = mul(worldViewProj, position);
-	    oUv1 = uv1;
-	    oUv2 = uv1;
-	    oUv3 = uv1;
-	    oUv4 = uv1;
-	    oUv2.x *= splatScaleX;
-	    oUv2.y *= splatScaleZ;
-	    oUv3.x *= splatScaleX;
-	    oUv3.y *= splatScaleZ;
-	    oUv4.x *= splatScaleX;
-	    oUv4.y *= splatScaleZ;
-    }

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/VSLodMorph.cg (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph.cg)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/VSLodMorph2.cg
===================================================================
--- rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph2.cg	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/VSLodMorph2.cg	2009-05-22 22:18:33 UTC (rev 4940)
@@ -1,15 +0,0 @@
-    void terrain_vp(
-	    float4 position : POSITION,
-	    float2 uv1   	: TEXCOORD0,
-	    float delta     : BLENDWEIGHT,
-
-	    out float4 oPosition : POSITION,
-	    out float2 oUv1		 : TEXCOORD0,
-	    uniform float4x4 worldViewProj,
-	    uniform float morphFactor
-	    )
-    {
-	    position.y = position.y + (delta.x * morphFactor);
-	    oPosition = mul(worldViewProj, position);
-	    oUv1 = uv1;
-    }

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/VSLodMorph2.cg (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/VSLodMorph2.cg)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/brushes (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/brushes)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/brushes/brush.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/brushes/brush.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/brushes/brush.png)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting0.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting0.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/splatting0.png)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting1.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting1.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/splatting1.png)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting2.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting2.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/splatting2.png)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting3.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting3.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/splatting3.png)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting4.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting4.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/splatting4.png)

Deleted: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting5.png
===================================================================
(Binary files differ)

Copied: rl/branches/persistence2/editors/Lockenwickler/src/media/terrain/splatting5.png (from rev 4939, rl/trunk/editors/Lockenwickler/src/media/terrain/splatting5.png)

Copied: rl/branches/persistence2/editors/Lockenwickler/ui files/AddTriggerDialog.ui (from rev 4939, rl/trunk/editors/Lockenwickler/ui files/AddTriggerDialog.ui)

Copied: rl/branches/persistence2/editors/Lockenwickler/ui files/BrushDialog.ui (from rev 4939, rl/trunk/editors/Lockenwickler/ui files/BrushDialog.ui)

Copied: rl/branches/persistence2/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui (from rev 4939, rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui)

Modified: rl/branches/persistence2/engine/ai/include/Dialog.h
===================================================================
--- rl/branches/persistence2/engine/ai/include/Dialog.h	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ai/include/Dialog.h	2009-05-22 22:18:33 UTC (rev 4940)
@@ -19,10 +19,10 @@
 #include "AiPrerequisites.h"
 
 #include "Properties.h"
+#include "Creature.h"
 
 namespace rl
 {
-    class Creature;
     class DialogOption;
     class DialogResponse;
     class DialogVariable;
@@ -47,12 +47,12 @@
         virtual PropertyKeys getAllPropertyKeys() const;
 
         void addParticipant(const CeGuiString& personId, Creature* person);
-        std::list<Creature*> getParticipants() const;
+        const CreatureList& getParticipants() const;
         Creature* getParticipant(const CeGuiString& id) const;
 
     private:
         DialogResponse* mDialogStart;
-        std::list<Creature*> mAllParticipants;
+        CreatureList mAllParticipants;
         std::map<CeGuiString, Creature*> mParticipantMap;
         std::map<Ogre::String, DialogVariable*> mVariables;
         PropertyRecord mPropertyVariables;

Modified: rl/branches/persistence2/engine/ai/include/DialogLoader.h
===================================================================
--- rl/branches/persistence2/engine/ai/include/DialogLoader.h	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ai/include/DialogLoader.h	2009-05-22 22:18:33 UTC (rev 4940)
@@ -17,12 +17,11 @@
 #define __DialogLoader_H__
 
 #include "AiPrerequisites.h"
+#include "Creature.h"
 
-#include <list>
 
 namespace rl
 {
-	class Creature;
     class Dialog;
     class DialogLoaderImpl;
 
@@ -36,7 +35,7 @@
         virtual void parseScript(Ogre::DataStreamPtr& stream, const Ogre::String& groupName);
 		virtual Ogre::Real getLoadingOrder() const;
 
-		Dialog* createDialog(const Ogre::String& name, const std::list<Creature*>& participants) const;
+		Dialog* createDialog(const Ogre::String& name, const CreatureList& participants) const;
 
 	private:
         Ogre::StringVector mScriptPatterns;

Modified: rl/branches/persistence2/engine/ai/include/DialogLoaderImpl.h
===================================================================
--- rl/branches/persistence2/engine/ai/include/DialogLoaderImpl.h	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ai/include/DialogLoaderImpl.h	2009-05-22 22:18:33 UTC (rev 4940)
@@ -19,10 +19,10 @@
 
 #include "Properties.h"
 #include "XmlProcessor.h"
+#include "Creature.h"
 
 namespace rl
 {
-    class Creature;
     class Dialog;
     class DialogCondition;
     class DialogElement;
@@ -39,7 +39,7 @@
         DialogLoaderImpl();
         ~DialogLoaderImpl();
 
-        Dialog* createDialog(const Ogre::String& name, const std::list<Creature*>& participants) const;
+        Dialog* createDialog(const Ogre::String& name, const CreatureList& participants) const;
         void parseDialog(Ogre::DataStreamPtr& stream, const Ogre::String& groupName);
 
     private:
@@ -70,7 +70,7 @@
             DialogResponse* getResponse(const CeGuiString& id) const;
 
             void setStartResponse(DialogResponse* response);
-            Dialog* createDialog(const std::list<Creature*>& participants);
+            Dialog* createDialog(const CreatureList& participants);
             void setProperty(const CeGuiString& key, const Property& value);
 
             void addParticipant(DialogParticipant* participant);

Modified: rl/branches/persistence2/engine/ai/include/DialogManager.h
===================================================================
--- rl/branches/persistence2/engine/ai/include/DialogManager.h	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ai/include/DialogManager.h	2009-05-22 22:18:33 UTC (rev 4940)
@@ -21,12 +21,12 @@
 #include <list>
 
 #include "Properties.h"
+#include "Creature.h"
 #include "SaveGameData.h"
 #include "XmlProcessor.h"
 
 namespace rl
 {
-    class Creature;
 	class Dialog;
 	class DialogLoader;
 
@@ -45,7 +45,7 @@
         ~DialogManager();
 
         Dialog* createDialog(const Ogre::String& name, Creature* npc);
-        Dialog* createDialog(const Ogre::String& name, const std::list<Creature*>& npcs);
+        Dialog* createDialog(const Ogre::String& name, const CreatureList& npcs);
 
         virtual const Property getProperty(const CeGuiString& key) const;
         virtual void setProperty(const CeGuiString& key, const Property& value);
@@ -60,16 +60,16 @@
         class DialogConfiguration
         {
         public:
-            DialogConfiguration(const Ogre::String& name, const std::list<Creature*>& participants);
+            DialogConfiguration(const Ogre::String& name, const CreatureList& participants);
 
             const Ogre::String& getName() const;
-            const std::list<Creature*>& getParticipants() const;
+            const CreatureList& getParticipants() const;
 
             bool operator==(const DialogConfiguration&) const;
             bool operator<(const DialogConfiguration&) const;
         private:
             Ogre::String mDialogName;
-            std::list<Creature*> mParticipants;
+            CreatureList mParticipants;
         };
 
 

Modified: rl/branches/persistence2/engine/ai/include/DialogParagraph.h
===================================================================
--- rl/branches/persistence2/engine/ai/include/DialogParagraph.h	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ai/include/DialogParagraph.h	2009-05-22 22:18:33 UTC (rev 4940)
@@ -18,10 +18,10 @@
 #define __DialogParagraph_H__
 
 #include "AiPrerequisites.h"
+#include "Creature.h"
 
 namespace rl
 {
-    class Creature;
     class Dialog;
     class DialogElement;
     class DialogResponse;
@@ -39,7 +39,7 @@
         void _setParent(DialogElement* parent);
         virtual DialogResponse* getResponse() const;
         Creature* getSpeaker(Dialog* dialog) const;
-        std::list<Creature*> getListeners(Dialog* dialog) const;
+        CreatureList getListeners(Dialog* dialog) const;
 
     private:
         CeGuiString mText;

Modified: rl/branches/persistence2/engine/ai/src/Dialog.cpp
===================================================================
--- rl/branches/persistence2/engine/ai/src/Dialog.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ai/src/Dialog.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -100,7 +100,7 @@
         mAllParticipants.push_back(person);
     }
 
-    list<Creature*> Dialog::getParticipants() const
+    const CreatureList& Dialog::getParticipants() const
     {
         return mAllParticipants;
     }

Modified: rl/branches/persistence2/engine/ai/src/DialogLoader.cpp
===================================================================
--- rl/branches/persistence2/engine/ai/src/DialogLoader.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ai/src/DialogLoader.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -50,7 +50,7 @@
         mLoaderImplementation->parseDialog(stream, groupName);
     }
 
-    Dialog* DialogLoader::createDialog(const Ogre::String& name, const std::list<Creature*>& participants) const
+    Dialog* DialogLoader::createDialog(const Ogre::String& name, const CreatureList& participants) const
     {
         return mLoaderImplementation->createDialog(name, participants);
     }

Modified: rl/branches/persistence2/engine/ai/src/DialogLoaderImpl.cpp
===================================================================
--- rl/branches/persistence2/engine/ai/src/DialogLoaderImpl.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ai/src/DialogLoaderImpl.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -81,7 +81,7 @@
         shutdownXml();
     }
 
-    Dialog* DialogLoaderImpl::createDialog(const String& name, const std::list<Creature*>& participants) const
+    Dialog* DialogLoaderImpl::createDialog(const String& name, const CreatureList& participants) const
     {
         std::map<Ogre::String, DialogPrototype*>::const_iterator it =
         mDialogs.find(name);
@@ -607,7 +607,7 @@
         return it->second;
     }
 
-    Dialog* DialogLoaderImpl::DialogPrototype::createDialog(const list<Creature*>& participants)
+    Dialog* DialogLoaderImpl::DialogPrototype::createDialog(const CreatureList& participants)
     {
         Dialog* dialog = new Dialog();
 
@@ -618,7 +618,7 @@
         bool found1stNpc = false;
         Party playerChars = PartyManager::getSingleton().getCharacters();
 
-        for (list<Creature*>::const_iterator itPart = participants.begin(); itPart != participants.end(); ++itPart)
+        for (CreatureList::const_iterator itPart = participants.begin(); itPart != participants.end(); ++itPart)
         {
             Creature* curCr = *itPart;
 

Modified: rl/branches/persistence2/engine/ai/src/DialogManager.cpp
===================================================================
--- rl/branches/persistence2/engine/ai/src/DialogManager.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ai/src/DialogManager.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -78,7 +78,7 @@
 
                 PropertyArray npcs;
 
-                for (list<Creature*>::const_iterator itNpc = it->first.getParticipants().begin();
+                for (CreatureList::const_iterator itNpc = it->first.getParticipants().begin();
                     itNpc != it->first.getParticipants().end(); ++itNpc)
                 {
                     npcs.push_back(GameObjectManager::getSingleton().toProperty(*itNpc));
@@ -133,15 +133,15 @@
 
     Dialog* DialogManager::createDialog(const Ogre::String& name, Creature* npc)
     {
-        list<Creature*> npcs;
+        CreatureList npcs;
         npcs.push_back(npc);
 
         return createDialog(name, npcs);
     }
 
-    Dialog* DialogManager::createDialog(const Ogre::String& name, const list<Creature*>& npcs)
+    Dialog* DialogManager::createDialog(const Ogre::String& name, const CreatureList& npcs)
     {
-        list<Creature*> participants;
+        CreatureList participants;
 
         Party party = PartyManager::getSingleton().getCharacters();
         for (Party::const_iterator it = party.begin(); it != party.end(); ++it)
@@ -149,7 +149,7 @@
             participants.push_back(*it);
         }
 
-        for (list<Creature*>::const_iterator it = npcs.begin(); it != npcs.end(); ++it)
+        for (CreatureList::const_iterator it = npcs.begin(); it != npcs.end(); ++it)
         {
             participants.push_back(*it);
         }
@@ -178,7 +178,7 @@
     }
 
     DialogManager::DialogConfiguration::DialogConfiguration(const Ogre::String& name,
-            const list<Creature*>& participants)
+            const CreatureList& participants)
         : mDialogName(name), mParticipants(participants)
     {
     }
@@ -188,7 +188,7 @@
         return mDialogName;
     }
 
-    const list<Creature*>& DialogManager::DialogConfiguration::getParticipants() const
+    const CreatureList& DialogManager::DialogConfiguration::getParticipants() const
     {
         return mParticipants;
     }

Modified: rl/branches/persistence2/engine/ai/src/DialogParagraph.cpp
===================================================================
--- rl/branches/persistence2/engine/ai/src/DialogParagraph.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ai/src/DialogParagraph.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -76,14 +76,14 @@
         return dialog->getParticipant(getPerson());
     }
 
-    list<Creature*> DialogParagraph::getListeners(Dialog* dialog) const
+    CreatureList DialogParagraph::getListeners(Dialog* dialog) const
     {
         Creature* speaker = getSpeaker(dialog);
 
-        list<Creature*> listeners;
+        CreatureList listeners;
 
-        list<Creature*> participants = dialog->getParticipants();
-        for (list<Creature*>::iterator it = participants.begin(), end = participants.end(); it != end; ++it)
+        CreatureList participants = dialog->getParticipants();
+        for (CreatureList::iterator it = participants.begin(), end = participants.end(); it != end; ++it)
         {
             if (*it != speaker)
             {

Modified: rl/branches/persistence2/engine/core/CMakeLists.txt
===================================================================
--- rl/branches/persistence2/engine/core/CMakeLists.txt	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/CMakeLists.txt	2009-05-22 22:18:33 UTC (rev 4940)
@@ -49,6 +49,7 @@
 src/MovableText.cpp
 src/ParticleSystemObject.cpp
 src/PhysicsContactListener.cpp
+src/PhysicsCollisionFactory.cpp
 src/PhysicalThing.cpp
 src/PhysicsGenericContactCallback.cpp
 src/PhysicsManager.cpp

Modified: rl/branches/persistence2/engine/core/RlCore2005.vcproj
===================================================================
--- rl/branches/persistence2/engine/core/RlCore2005.vcproj	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/RlCore2005.vcproj	2009-05-22 22:18:33 UTC (rev 4940)
@@ -524,6 +524,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\include\PhysicsCollisionFactory.h"
+				>
+			</File>
+			<File
 				RelativePath=".\include\PhysicsContactListener.h"
 				>
 			</File>
@@ -881,6 +885,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\src\PhysicsCollisionFactory.cpp"
+				>
+			</File>
+			<File
 				RelativePath=".\src\PhysicsContactListener.cpp"
 				>
 			</File>

Modified: rl/branches/persistence2/engine/core/RlCore2008.vcproj
===================================================================
--- rl/branches/persistence2/engine/core/RlCore2008.vcproj	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/RlCore2008.vcproj	2009-05-22 22:18:33 UTC (rev 4940)
@@ -414,14 +414,6 @@
 				>
 			</File>
 			<File
-				RelativePath=".\include\DotSceneLoader.h"
-				>
-			</File>
-			<File
-				RelativePath=".\include\DotSceneOctreeWorld.h"
-				>
-			</File>
-			<File
 				RelativePath=".\include\FadeAnimation.h"
 				>
 			</File>
@@ -450,6 +442,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\include\GenericWorld.h"
+				>
+			</File>
+			<File
 				RelativePath=".\include\Job.h"
 				>
 			</File>
@@ -526,6 +522,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\include\PhysicsCollisionFactory.h"
+				>
+			</File>
+			<File
 				RelativePath=".\include\PhysicsContactListener.h"
 				>
 			</File>
@@ -546,6 +546,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\include\PhysicsRagDoll.h"
+				>
+			</File>
+			<File
 				RelativePath=".\include\PlayAnimationJob.h"
 				>
 			</File>
@@ -775,14 +779,6 @@
 				>
 			</File>
 			<File
-				RelativePath=".\src\DotSceneLoader.cpp"
-				>
-			</File>
-			<File
-				RelativePath=".\src\DotSceneOctreeWorld.cpp"
-				>
-			</File>
-			<File
 				RelativePath=".\src\FadeAnimation.cpp"
 				>
 			</File>
@@ -811,6 +807,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\src\GenericWorld.cpp"
+				>
+			</File>
+			<File
 				RelativePath=".\src\Job.cpp"
 				>
 			</File>
@@ -871,6 +871,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\src\PhysicsCollisionFactory.cpp"
+				>
+			</File>
+			<File
 				RelativePath=".\src\PhysicsContactListener.cpp"
 				>
 			</File>
@@ -887,6 +891,10 @@
 				>
 			</File>
 			<File
+				RelativePath=".\src\PhysicsRagDoll.cpp"
+				>
+			</File>
+			<File
 				RelativePath=".\src\PlayAnimationJob.cpp"
 				>
 			</File>

Copied: rl/branches/persistence2/engine/core/include/PhysicsCollisionFactory.h (from rev 4939, rl/trunk/engine/core/include/PhysicsCollisionFactory.h)

Modified: rl/branches/persistence2/engine/core/include/PhysicsManager.h
===================================================================
--- rl/branches/persistence2/engine/core/include/PhysicsManager.h	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/include/PhysicsManager.h	2009-05-22 22:18:33 UTC (rev 4940)
@@ -28,12 +28,6 @@
 #   include <OgreNewt.h>
 #endif
 
-namespace OgreNewt {
-    class Body;
-    class MaterialID;
-    class MaterialPair;
-    class World;
-}
 
 #include "CorePrerequisites.h"
 #include "CoreDefines.h"
@@ -212,8 +206,8 @@
 			Ogre::Entity* entity,
             const GeometryType& geomType = GT_NONE,
             const Ogre::String& animName = "",
-			const Ogre::Vector3* offset = NULL,
-			const Ogre::Quaternion* orientation = NULL,
+			const Ogre::Vector3 &offset = Ogre::Vector3::ZERO,
+			const Ogre::Quaternion &orientation = Ogre::Quaternion::IDENTITY,
             const Ogre::Real mass = 0,
             Ogre::Vector3* inertia = NULL,
             Ogre::Vector3* centerOfMass = NULL,
@@ -224,8 +218,8 @@
             const Ogre::String& name,
             const Ogre::AxisAlignedBox& aabb,
             const GeometryType& geomType = GT_NONE,
-            const Ogre::Vector3* offset = NULL,
-			const Ogre::Quaternion* orientation = NULL,
+			const Ogre::Vector3 &offset = Ogre::Vector3::ZERO,
+			const Ogre::Quaternion &orientation = Ogre::Quaternion::IDENTITY,
             const Ogre::Real mass = 0,
             Ogre::Vector3* inertia = NULL,
             Ogre::Vector3* centerOfMass = NULL,
@@ -316,253 +310,7 @@
 #endif
 
     };
-
-    class PhysicsCollisionFactory
-    {
-    public:
-        //! destructor, releases the collisions from the collision cache
-        ~PhysicsCollisionFactory();
-
-        /** creates a collision primitive for OgreNewt from an Ogre::Entity.
-		 * The collision primitive created has got a basic orientation which can be influenced by
-		 * offset and orientation parameters. Additionally an initial inertiaCoefficents vector is
-		 * calculated according to the size and type of collision primitiv.
-         * Whenever any of the parameters is a null pointer, it is ignored.
-         * The created collision primitive gets cached for the given mesh,
-         * so whenever an other entity with the same mesh tries to fetch
-         * a collision primitive here, then it gets back the already existing
-         * one (no need to duplicate).
-         * 
-         * Scaling should be implemented through attaching to a scene node.
-         * if that is not the case, we'll have to fix OgreNewt ...
-		 * @param entity gives the mesh entity that needs a collision primitive
-		 * @param geomType specifies the type of collision primitiv to create.
-		 * @param offset gives the offset of the coordinate system of the coll. primitiv
-		 * @param orientation Quaternion gives an euler rotation for the coordinate system of the coll. primitiv
-         * @param mass gives the mass of the collision primitive used for calculating the inertia
-		 * @param inertia Vector3 returns the inertia coefficients for the created collision primitiv
-		 * @param centerOfMass Vector3 returns the centerOfMass coefficients for the created collision primitiv
-         * @param nocache if set to true a new collision will be created (without looking for an existing one in the cache);
-         *                the new collision is not added to the cache
-		*/
-        OgreNewt::CollisionPtr createCollisionFromEntity(
-            Ogre::Entity* entity,
-            const GeometryType& geomType,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation,
-            const Ogre::Real Mass,
-            Ogre::Vector3* inertia,
-            Ogre::Vector3* centerOfMass,
-            bool nocache);
-
-        /** creates a collision primitive for OgreNewt.
-		 * The collision primitive created has got a basic orientation which can be influenced by
-		 * offset and orientation parameters. Additionally an initial inertiaCoefficents vector is
-		 * calculated according to the size and type of collision primitiv.
-         * Whenever any of the parameters is a null pointer, it is ignored.
-         * The created collision primitive gets cached for the given aabb,
-         * so whenever an other aabb with the same name tries to fetch
-         * a collision primitive here, then it gets back the already existing
-         * one (no need to duplicate). There's no difference between Collisions created through an aabb or through
-         * the entity in the cache. In order to supply a support for 'scaling' the size of the cached collision is
-         * checked.
-         * Since no entity is given several physical collision primitives are not
-         * possible (convexhull, tree, etc.)
-         * // no scaling at the moment, the correct scale must be given (OgreNewt cannot scale a collision, this is a limitation
-         * // of newton. It is only possible to 'scale' a convex collision by created a ConvexHullModifier (a new collision,
-         * // that uses the old one and applies transformation through a matrix), so for aabbs (-> convex collisions) a scale
-         * // that udpates with the scale of the node could be implemented, but as this would be different for treecollisions,
-         * // it is better to create a collision with the correct scale...
-         * // "Scaling should be implemented through attaching to a scene node.
-         * // if that is not the case, we'll have to fix OgreNewt ..."
-         * @param name gives the name of the AxisAlignedBox
-		 * @param aabb AxisAlignedBox that contains the extents for the collision primitive to be created
-		 * @param geomType specifies the type of collision primitiv to create.
-		 * @param offset gives the offset of the coordinate system of the coll. primitiv
-		 * @param orientation Quaternion gives an euler rotation for the coordinate system of the coll. primitiv
-         * @param mass gives the mass of the collision primitive used for calculating the inertia
-		 * @param inertia Vector3 returns the inertia coefficients for the created collision primitiv
-		 * @param centerOfMass Vector3 returns the centerOfMass coefficients for the created collision primitiv
-         * @param nocache if set to true a new collision will be created (without looking for an existing one in the cache);
-         *                the new collision is not added to the cache
-		*/
-        OgreNewt::CollisionPtr createCollisionFromAABB(
-            const Ogre::String& name,
-            const Ogre::AxisAlignedBox& aabb,
-            const GeometryType& geomType,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation,
-            const Ogre::Real Mass,
-            Ogre::Vector3* inertia,
-            Ogre::Vector3* centerOfMass,
-            bool nocache);
-
-        /// clear the collision cache
-        void clearCollisionCache();
-
-    protected:
-        /** checks if the specified size is ok for OgreNewt
-         * @param aabb check the aabb's size
-         */
-        bool checkSize(const Ogre::AxisAlignedBox& aabb) const;
-
-        /** corrects the specified size if it is not ok for OgreNewt
-         * @param aabb correct the aabb's size
-         */
-        void correctSize(Ogre::AxisAlignedBox& aabb);
-
-        /** creates a box collision primitive with offset at middle of bottom layer.
-         * It's actually a convenience function used by both createCollision functions.
-         * @param aabb gives the axis aligned dimension to create the primitive for.
-         * @param offset when not null, specifies a different offset than the standard.
-         * @param orientation when not null, specifies the euler angle of orientation.
-         */
-        OgreNewt::ConvexCollisionPtr createBox(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation);
-
-        /** creates a pyramid collision primitive with offset at middle of bottom layer.
-         * It's actually a convenience function used by both createCollision functions.
-         * @param aabb gives the axis aligned dimension to create the primitive for.
-         * @param offset when not null, specifies a different offset than the standard.
-         * @param orientation when not null, specifies the euler angle of orientation.
-         */
-        OgreNewt::ConvexCollisionPtr createPyramid(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation);
-
-        /** creates a sphere collision primitive with offset at middle of bottom layer.
-         * It's actually a convenience function used by both createCollision functions.
-         * @param aabb gives the axis aligned dimension to create the primitive for.
-         * @param offset when not null, specifies a different offset than the standard.
-         * @param orientation when not null, specifies the euler angle of orientation.
-         */
-        OgreNewt::ConvexCollisionPtr createSphere(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation);
-
-        /** creates a ellipsoid collision primitive with offset at middle of bottom layer.
-         * It's actually a convenience function used by both createCollision functions.
-         * @param aabb gives the axis aligned dimension to create the primitive for.
-         * @param offset when not null, specifies a different offset than the standard.
-         * @param orientation when not null, specifies the euler angle of orientation.
-         */
-        OgreNewt::ConvexCollisionPtr createEllipsoid(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation);
-
-        /** creates a capsule collision primitive with offset at middle of bottom layer.
-         * It's actually a convenience function used by both createCollision functions.
-         * @param aabb gives the axis aligned dimension to create the primitive for.
-         * @param offset when not null, specifies a different offset than the standard.
-         * @param orientation when not null, specifies the euler angle of orientation.
-         */
-        OgreNewt::ConvexCollisionPtr createCapsule(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation);
-
-        /** creates a convex-hull collision primitive with offset at middle of bottom layer.
-         * It's actually a convenience function used by createCollisionFromEntity
-         * @param entity the entity for which a convexhull should be created, if it is attached to
-         *               a node the scale of the node is used (see OgreNewt)
-         * @param offset when not null, specifies a different offset than the standard.
-         * @param orientation when not null, specifies the euler angle of orientation.
-         */
-        OgreNewt::ConvexCollisionPtr createConvexHull(
-            Ogre::Entity* entity,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation);
-
-
-        //! class for caching convex collisions (box...convexhull), saves additionally the scale, so it can be rescaled if necessary
-        class ConvexCollisionCacheObject
-        {
-            public:
-                ConvexCollisionCacheObject() :
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-                    col(NULL),
-#endif
-                    scale(Ogre::Vector3::ZERO),
-                    type(GT_NONE)
-                    {}
-                OgreNewt::ConvexCollisionPtr col;
-                Ogre::Vector3 scale;
-                GeometryType type;
-        };
-
-        typedef std::map<Ogre::String, ConvexCollisionCacheObject> ConvexCollisionCacheMap;
-
-        //! cache for convex collisions
-        ConvexCollisionCacheMap mConvexCollisionsCache;
-
-        //! for using a string and a vector as key in a map... we should implement here a hash-function
-        class StringVector
-        {
-            public:
-                StringVector(const Ogre::String& str, const Ogre::Vector3& vec) : mStr(str)
-                {
-                    setVector(vec);
-                }
-                void setString(const Ogre::String& str) {mStr = str;}
-                void setVector(const Ogre::Vector3& vec)
-                {
-                    mVec = vec;
-                }
-                const Ogre::String& getString() const {return mStr;}
-                const Ogre::Vector3& getVector() const {return mVec;}
-
-                bool operator==(const StringVector& strVec) const
-                {
-                    if( mStr != strVec.mStr )
-                        return false;
-
-                    Ogre::Vector3 diff = mVec - strVec.mVec;
-                    if( abs(diff.x) > 0.01 )
-                        return false;
-                    if( abs(diff.y) > 0.01 )
-                        return false;
-                    if( abs(diff.z) > 0.01 )
-                        return false;
-
-                    return true;
-                }
-
-                bool operator<(const StringVector& strVec) const
-                {
-                    int strCompare = mStr.compare(strVec.mStr);
-                    if( strCompare == 0 ) // strings are the same
-                    {
-                        // compare vectors
-                        Ogre::Vector3 diff = mVec - strVec.mVec;
-                        if( diff.x < -0.01 )
-                            return true;
-                        if( diff.x > 0.01 )
-                            return false;
-                        if( diff.y < -0.01 )
-                            return true;
-                        if( diff.y > 0.01 )
-                            return false;
-                        if( diff.y < -0.01 )
-                            return true;
-
-                        return false;
-                    }
-                    
-                    return strCompare < 0;
-                }
-            private:
-                Ogre::String mStr;
-                Ogre::Vector3 mVec;
-        };
-
-        typedef std::map<StringVector, OgreNewt::CollisionPtr> MeshCollisionCacheMap;
-
-        //! cache for mesh collisions
-        MeshCollisionCacheMap mMeshCollisionsCache;
-
-
-
-    };
 }
 
 #endif
+

Modified: rl/branches/persistence2/engine/core/src/ConfigurationManager.cpp
===================================================================
--- rl/branches/persistence2/engine/core/src/ConfigurationManager.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/src/ConfigurationManager.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -97,6 +97,7 @@
         addSetting("Movement keys", "run", "Umschalt links");
         addSetting("Movement keys", "sneak", "Strg links");
         addSetting("Movement keys", "run_lock", "< | >");
+        addSetting("Movement keys", "rear_view", "T");
 
         addSetting("Action keys", "quitgame", "Ctrl+X");
         addSetting("Action keys", "closecurrentwindow", "Escape");

Modified: rl/branches/persistence2/engine/core/src/GameAreaTypes.cpp
===================================================================
--- rl/branches/persistence2/engine/core/src/GameAreaTypes.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/src/GameAreaTypes.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -238,21 +238,14 @@
         }
         OgreNewt::CollisionPtr col =
             PhysicsManager::getSingleton().createCollision(entity,
-            geomType, "", &offset, &orientation);
+            geomType, "", offset, orientation);
         mBody = new OgreNewt::Body(
             PhysicsManager::getSingleton()._getNewtonWorld(),
             col);
         mBody->setMaterialGroupID(
             PhysicsManager::getSingleton().getMaterialID("gamearea"));
-#ifndef OGRENEWT_USE_OGRE_ANY
-        mBody->setUserData(NULL);
-#endif
 
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
         boost::dynamic_pointer_cast<OgreNewt::ConvexCollision>(col)->setAsTriggerVolume(true);
-#else
-        dynamic_cast<OgreNewt::ConvexCollisionPtr>(col)->setAsTriggerVolume(true);
-#endif
     }
 
     GameSimpleCollisionAreaType::GameSimpleCollisionAreaType(
@@ -263,21 +256,14 @@
     {
         OgreNewt::CollisionPtr col =
             PhysicsManager::getSingleton().createCollision(
-            "", aabb, geomType, &offset, &orientation, 0, NULL, NULL, true);
+            "", aabb, geomType, offset, orientation, 0, NULL, NULL, true);
         mBody = new OgreNewt::Body(
             PhysicsManager::getSingleton()._getNewtonWorld(),
             col);
         mBody->setMaterialGroupID(
             PhysicsManager::getSingleton().getMaterialID("gamearea"));
-#ifndef OGRENEWT_USE_OGRE_ANY
-        mBody->setUserData(NULL);
-#endif
 
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
         boost::dynamic_pointer_cast<OgreNewt::ConvexCollision>(col)->setAsTriggerVolume(true);
-#else
-        dynamic_cast<OgreNewt::ConvexCollisionPtr>(col)->setAsTriggerVolume(true);
-#endif
     }
 
 }

Modified: rl/branches/persistence2/engine/core/src/GameEventManager.cpp
===================================================================
--- rl/branches/persistence2/engine/core/src/GameEventManager.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/src/GameEventManager.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -308,13 +308,9 @@
 
     Actor* GameEventManager::bodyToActor(OgreNewt::Body* body)
     {
-#ifdef OGRENEWT_USE_OGRE_ANY
         if( body->getUserData().getType() == typeid(Actor*) )
             return Ogre::any_cast<Actor*>(body->getUserData());
         else
             return NULL;
-#else
-        return static_cast<Actor*>(body->getUserData());
-#endif
     }
 }

Modified: rl/branches/persistence2/engine/core/src/PhysicalThing.cpp
===================================================================
--- rl/branches/persistence2/engine/core/src/PhysicalThing.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/src/PhysicalThing.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -127,11 +127,7 @@
 	void PhysicalThing::setBody(OgreNewt::Body* body)
     {
         mBody = body;
-#ifdef OGRENEWT_USE_OGRE_ANY
 		mBody->setUserData( Ogre::Any(mActor) );
-#else
-        mBody->setUserData( mActor );
-#endif
     }
 
     void PhysicalThing::_update()
@@ -159,11 +155,7 @@
         mActor = actor;
 		if (mBody != NULL)
         {
-#ifdef OGRENEWT_USE_OGRE_ANY
     		mBody->setUserData( Ogre::Any(mActor) );
-#else
-            mBody->setUserData( mActor );
-#endif
         }
     }
 
@@ -289,8 +281,8 @@
                 entity,
                 mGeometryType,
                 "",
-                NULL,
-                NULL,
+                Vector3::ZERO,
+                Quaternion::IDENTITY,
                 0, NULL, NULL,
                 true); // don't cache
         if( collision )
@@ -515,8 +507,8 @@
                 entity,
                 mGeometryType,
                 "",
-                NULL,
-                NULL,
+                Vector3::ZERO,
+                Quaternion::IDENTITY,
                 mMass,
                 &inertia,
                 &centerOfMass);
@@ -528,8 +520,8 @@
                 "", // @todo: can we use a name here?
                 aabb,
                 mGeometryType,
-                NULL,
-                NULL,
+                Vector3::ZERO,
+                Quaternion::IDENTITY,
                 mMass,
                 &inertia,
                 &centerOfMass);

Copied: rl/branches/persistence2/engine/core/src/PhysicsCollisionFactory.cpp (from rev 4939, rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp)

Modified: rl/branches/persistence2/engine/core/src/PhysicsGenericContactCallback.cpp
===================================================================
--- rl/branches/persistence2/engine/core/src/PhysicsGenericContactCallback.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/src/PhysicsGenericContactCallback.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -32,7 +32,6 @@
         Actor* a1 = NULL;
         Actor* a2 = NULL;
 
-#ifdef OGRENEWT_USE_OGRE_ANY
         try
         {
             a1 = Ogre::any_cast<Actor*>(contactJoint.getBody0()->getUserData());
@@ -49,10 +48,7 @@
         {
             LOG_WARNING(Logger::CORE, "Found collision with a OgreNewt::Body that doesn't have an Actor as UserData in PhysicsGenericContactCallback::contactsProcess");
         }
-#else
-        a1 = static_cast<Actor*>(contactJoint.getBody0()->getUserData());
-        a2 = static_cast<Actor*>(contactJoint.getBody1()->getUserData());
-#endif
+
         if (a1 && a1->getPhysicalThing()->getContactListener())
         {
             a1->getPhysicalThing()->getContactListener()->

Modified: rl/branches/persistence2/engine/core/src/PhysicsManager.cpp
===================================================================
--- rl/branches/persistence2/engine/core/src/PhysicsManager.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/src/PhysicsManager.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -23,6 +23,7 @@
 #include "Exception.h"
 #include "GameEventManager.h"
 #include "PhysicsController.h"
+#include "PhysicsCollisionFactory.h"
 #include "PhysicsGenericContactCallback.h"
 #include "PhysicalObject.h"
 #include "PhysicalThing.h"
@@ -113,6 +114,16 @@
 
     PhysicsManager::~PhysicsManager()
     {
+        // remove all bodies
+        clearLevelGeometry();
+
+        // remove all physical things
+        for( vector<PhysicalThing*>::iterator it = mPhysicalThings.begin(); it != mPhysicalThings.end(); it++ )
+        {
+            delete (*it);
+        }
+
+
         // remove all material-pairs
         for (MaterialPairMap::iterator it = mMaterialPairs.begin(); it != mMaterialPairs.end(); it++)
         {
@@ -324,9 +335,6 @@
 
         // try one compound collision for the entity if there are several collisions
         OgreNewt::CollisionPtr collision;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        collision = NULL;
-#endif
         switch( collisions.size() )
         {
             case 0:
@@ -405,11 +413,7 @@
         // apply saved forces in the PhysicalThing
         PhysicalThing* thing;
 
-#ifdef OGRENEWT_USE_OGRE_ANY
         thing = Ogre::any_cast<Actor*>(body->getUserData())->getPhysicalThing();
-#else
-        thing = static_cast<Actor*>(body->getUserData())->getPhysicalThing();
-#endif
 
         thing->onApplyForceAndTorque(timestep);
     }
@@ -418,11 +422,7 @@
     {
         PhysicalThing* thing;
 
-#ifdef OGRENEWT_USE_OGRE_ANY
         thing = Ogre::any_cast<Actor*>(body->getUserData())->getPhysicalThing();
-#else
-        thing = static_cast<Actor*>(body->getUserData())->getPhysicalThing();
-#endif
 
 
         if (thing->getPhysicsController())
@@ -517,12 +517,12 @@
 
     OgreNewt::CollisionPtr PhysicsManager::createCollision(
         Ogre::Entity* entity, const GeometryType& geomType,
-		const Ogre::String& animName, const Ogre::Vector3* offset,
-        const Ogre::Quaternion* orientation, const Ogre::Real mass, Ogre::Vector3* inertia,
+		const Ogre::String& animName, const Ogre::Vector3 &offset,
+        const Ogre::Quaternion &orientation, const Ogre::Real mass, Ogre::Vector3* inertia,
         Ogre::Vector3* centerOfMass, bool nocache)
     {
         return mPhysicsCollisionFactory->createCollisionFromEntity(
-                entity, geomType, offset, orientation, mass, inertia, centerOfMass, nocache );
+                entity, geomType, animName, offset, orientation, mass, inertia, centerOfMass, nocache );
 /*
         // problem here is that a mesh can have different animations with
         // different extents. Therefore we add the animName to the meshname
@@ -531,9 +531,6 @@
 
         // result value
         CollisionPtr rval;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        rval = NULL;
-#endif
 
         // check if there is a collision primitiv for the specified mesh object
         CollisionInUse &usedcol (mCollisionPrimitives[collisionName]);
@@ -571,8 +568,8 @@
 
     OgreNewt::CollisionPtr PhysicsManager::createCollision(
         const Ogre::String& name, const Ogre::AxisAlignedBox& aabb,
-        const GeometryType& geomType, const Ogre::Vector3* offset,
-        const Ogre::Quaternion* orientation, const Ogre::Real mass, Ogre::Vector3* inertia,
+        const GeometryType& geomType, const Ogre::Vector3 &offset,
+        const Ogre::Quaternion &orientation, const Ogre::Real mass, Ogre::Vector3* inertia,
         Ogre::Vector3* centerOfMass, bool nocache)
     {
         return mPhysicsCollisionFactory->createCollisionFromAABB(
@@ -580,9 +577,6 @@
 /*
         // result value
         CollisionPtr rval;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        rval = NULL;
-#endif
 
         // check if there is a collision primitiv for the specified mesh object
         CollisionInUse &usedcol (mCollisionPrimitives[name]);
@@ -656,413 +650,5 @@
 			typestr = "convexhull";
 		return typestr;
 	}
-
-    PhysicsCollisionFactory::~PhysicsCollisionFactory()
-    {
-        clearCollisionCache();
-    }
-
-    void PhysicsCollisionFactory::clearCollisionCache()
-    {
-        mMeshCollisionsCache.clear();
-        mConvexCollisionsCache.clear();
-    }
-
-    bool PhysicsCollisionFactory::checkSize(const Ogre::AxisAlignedBox& aabb) const
-    {
-        Ogre::Vector3 size = aabb.getSize();
-        if( size.x < PhysicsManager::NEWTON_GRID_WIDTH ||
-            size.y < PhysicsManager::NEWTON_GRID_WIDTH ||
-            size.z < PhysicsManager::NEWTON_GRID_WIDTH )
-            return false;
-        return true;
-    }
-
-    void PhysicsCollisionFactory::correctSize(Ogre::AxisAlignedBox& aabb)
-    {
-        Ogre::Vector3 size = aabb.getSize();
-        // correct size, log warning and fail back to box
-        if (size.x < PhysicsManager::NEWTON_GRID_WIDTH)
-            size.x = PhysicsManager::NEWTON_GRID_WIDTH;
-        if (size.y < PhysicsManager::NEWTON_GRID_WIDTH)
-            size.y = PhysicsManager::NEWTON_GRID_WIDTH;
-        if (size.z < PhysicsManager::NEWTON_GRID_WIDTH)
-            size.z = PhysicsManager::NEWTON_GRID_WIDTH;
-        LOG_MESSAGE(Logger::CORE, "Correcting collision primitiv size");
-        Ogre::Vector3 center = aabb.getCenter();
-        aabb.setMaximum(center + 0.5*size);
-        aabb.setMinimum(center - 0.5*size);
-    }
-
-    /*
-    Ogre::Vector3 PhysicsCollisionFactory::calculateIntertia(const Ogre::Real& Mass, Ogre::Vector3* inertiaCoefficients)
-    {
-        return Ogre::Vector3(0,0,0);
-    }
-    */
-
-    OgreNewt::CollisionPtr PhysicsCollisionFactory::createCollisionFromAABB(
-        const Ogre::String& name,
-        const Ogre::AxisAlignedBox& passedAabb,
-        const GeometryType& geomType,
-        const Ogre::Vector3* offset,
-        const Ogre::Quaternion* orientation,
-        const Ogre::Real mass,
-        Ogre::Vector3* inertia,
-        Ogre::Vector3* centerOfMass,
-        bool nocache)
-    {
-        Ogre::AxisAlignedBox aabb(passedAabb);
-        // type for the collision primitiv (can change internally here)
-        bool forceBox (false);
-
-        // result value
-        ConvexCollisionPtr rval;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        rval = NULL;
-#endif
-
-        // size check (if object is too small, it falls back to a box primitiv
-        if (checkSize(aabb) == false )
-        {
-            correctSize(aabb);
-            LOG_MESSAGE(Logger::CORE,
-                " AABB is too small, using 'box' instead of primitiv '" +
-                PhysicsManager::convertGeometryTypeToString(geomType));
-            forceBox = true;
-        }
-
-        // check if the geometry type is supported for aabb
-        if (geomType == GT_CONVEXHULL ||
-            geomType == GT_MESH)
-        {
-            LOG_MESSAGE(Logger::CORE,
-                " the geometry type '"+
-                PhysicsManager::convertGeometryTypeToString(geomType)+
-                "' is not supported for aabb, fail back to box");
-            forceBox = true;
-        }
-
-        /* differentiate between the different collision primitives, because they all
-		   need different offset and probably different orientation values.
-		   Newton SDK is really nifty and helps here, because we can shift the origin
-		   of the coordinate system of the primitiv we create into any position we
-		   desire. Actually this is the bottom middle of our mesh - as the meshes are
-		   always constructed like that.
-	    */
-		if (geomType == GT_BOX || forceBox == true)
-        {
-			rval = createBox(aabb, offset, orientation);
-        }
-        else if (geomType == GT_PYRAMID)
-        {
-            rval = createPyramid(aabb, offset, orientation);
-        }
-        else if (geomType == GT_SPHERE)
-        {
-			rval = createSphere(aabb, offset, orientation);
-        }
-        else if (geomType == GT_ELLIPSOID)
-        {
-            rval = createEllipsoid(aabb, offset, orientation);
-        }
-		else if (geomType == GT_CAPSULE)
-		{
-			rval = createCapsule(aabb, offset, orientation);
-		}
-
-        // calculate inertia / centerOfMass if needed
-        if (inertia != NULL || centerOfMass != NULL )
-        {
-            Vector3 temp_inertia, temp_centerOfMass;
-            rval->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
-            if( inertia != NULL )
-                *inertia = temp_inertia*mass;
-            if( centerOfMass != NULL )
-                *centerOfMass = temp_centerOfMass;
-        }
-
-        return rval;
-    }
-
-    OgreNewt::CollisionPtr PhysicsCollisionFactory::createCollisionFromEntity(Ogre::Entity* entity,
-        const GeometryType& geomType,
-        const Ogre::Vector3* offset,
-        const Ogre::Quaternion* orientation,
-        const Ogre::Real mass,
-        Ogre::Vector3* inertia,
-        Ogre::Vector3* centerOfMass,
-        bool nocache)
-    {
-        // bounding box of the mesh
-        Ogre::AxisAlignedBox aabb(entity->getBoundingBox());
-        // apply scale if attached to a node (like in OgreNewt for convexhull)
-        if( entity->getParentNode() )
-            aabb.scale(entity->getParentNode()->getScale());
-
-        // type for the collision primitiv (can change internally here)
-        bool forceBox (false);
-
-        // result value
-        CollisionPtr rval;
-        ConvexCollisionPtr rvalAsConvexCollision; // store pointer to ConvexCollision, so we don't need to cast
-                                                  // this also indicates, that it is possible to calculate inertia/centerOfMass
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        rval = NULL;
-        rvalAsConvexCollision = NULL;
-#endif
-
-        // size check (if object is too small, it falls back to a box primitiv
-        if (checkSize(aabb) == false )
-        {
-            correctSize(aabb);
-            LOG_MESSAGE(Logger::CORE, " Entity '"+entity->getName()+
-                "' is too small, using 'box' instead of primitiv '"+
-                PhysicsManager::convertGeometryTypeToString(geomType));
-            forceBox = true;
-        }
-
-		/* differentiate between the different collision primitives, because they all
-		   need different offset and probably different orientation values.
-		   Newton SDK is really nifty and helps here, because we can shift the origin
-		   of the coordinate system of the primitiv we create into any position we
-		   desire. Actually this is the bottom middle of our mesh - as the meshes are
-		   always constructed like that.
-	    */
-		if (geomType == GT_BOX || forceBox == true)
-        {
-            rvalAsConvexCollision = createBox(aabb, offset, orientation);
-            rval = rvalAsConvexCollision;
-        }
-        else if (geomType == GT_PYRAMID)
-        {
-            rvalAsConvexCollision = createPyramid(aabb, offset, orientation);
-            rval = rvalAsConvexCollision;
-        }
-        else if (geomType == GT_SPHERE)
-        {
-            rvalAsConvexCollision = createSphere(aabb, offset, orientation);
-            rval = rvalAsConvexCollision;
-        }
-        else if (geomType == GT_ELLIPSOID)
-        {
-            rvalAsConvexCollision = createEllipsoid(aabb, offset, orientation);
-            rval = rvalAsConvexCollision;
-        }
-		else if (geomType == GT_CAPSULE)
-		{
-            rvalAsConvexCollision = createCapsule(aabb, offset, orientation);
-            rval = rvalAsConvexCollision;
-		}
-        else if (geomType == GT_CONVEXHULL)
-        {
-            rvalAsConvexCollision = createConvexHull(entity, offset, orientation);
-            rval = rvalAsConvexCollision;
-        }
-        else if (geomType == GT_MESH)
-        {
-            if (inertia != NULL)
-                *inertia = Ogre::Vector3::ZERO;
-            if (centerOfMass != NULL)
-                *centerOfMass = Ogre::Vector3::ZERO;
-
-            rval = CollisionPtr(new OgreNewt::CollisionPrimitives::TreeCollision(
-                PhysicsManager::getSingleton()._getNewtonWorld(),
-                entity, true ));
-        }
-        else
-        {
-            Throw(IllegalArgumentException, "unknown geometry type.");
-        }
-
-        if ( rval == NULL )
-        {
-            LOG_DEBUG(Logger::CORE, " creating collision primitiv '"+
-                PhysicsManager::convertGeometryTypeToString(geomType)+"' for Entity '"+
-                entity->getName()+"' failed.");
-        }
-        else
-        {
-            LOG_DEBUG(Logger::CORE, " collision primitiv '"+
-                PhysicsManager::convertGeometryTypeToString(geomType)+"' created for Entity '"+
-                entity->getName()+"'");
-        }
-
-        // calculate inertia / centerOfMass if requested
-        if( rvalAsConvexCollision )
-        {
-            if (inertia != NULL || centerOfMass != NULL )
-            {
-                Vector3 temp_inertia, temp_centerOfMass;
-                rvalAsConvexCollision->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
-                if( inertia != NULL )
-                    *inertia = temp_inertia*mass;
-                if( centerOfMass != NULL )
-                    *centerOfMass = temp_centerOfMass;
-            }
-        }
-
-        return rval;
-    }
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createBox(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation)
-    {
-        // offset of the collision primitiv
-        Ogre::Vector3 object_offset( aabb.getCenter() );
-        // orientation of the collision primitiv
-		Ogre::Quaternion object_orientation = Ogre::Quaternion::IDENTITY;
-
-        // set offset/orientation when they are null
-		if (! offset)
-			offset = &object_offset;
-		if (! orientation)
-			orientation = &object_orientation;
-
-        // a box collision primitiv has got it's coordinate system at it's center, so we need to shift it
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Box(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            aabb.getSize(), *orientation, *offset));
-
-       return rval;
-    }
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createPyramid(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation)
-    {
-        Ogre::Vector3 size = aabb.getSize();
-        // positional offset of the collision primitiv
-        Ogre::Vector3 object_offset(aabb.getCenter());
-        // orientation of the collision primitiv
-		Ogre::Quaternion object_orientation = Ogre::Quaternion::IDENTITY;
-
-        // set offset/orientation when they are null
-		if (! offset)
-			offset = &object_offset;
-		if (! orientation)
-			orientation = &object_orientation;
-
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Pyramid(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            size, *orientation, *offset));
-
-       return rval;
-    }
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createSphere(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation)
-    {
-        Ogre::Vector3 size = aabb.getSize();
-        // calculate the maximum radius needed to include 'everything'
-        double radius = std::max(size.x, std::max(size.y, size.z)) / 2.0;
-        // positional offset of the collision primitiv
-        Ogre::Vector3 object_offset(aabb.getCenter());
-        //object_offset.y = aabb.getMinimum().y;
-        // orientation of the collision primitiv
-		Ogre::Quaternion object_orientation = Ogre::Quaternion::IDENTITY;
-
-		// set offset/orientation when they are null
-		if (! offset)
-			offset = &object_offset;
-		if (! orientation)
-			orientation = &object_orientation;
- 
-        // a sphere primitiv has got its coordinate system at its center, so shift it with radius
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Ellipsoid(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            Vector3(radius, radius, radius), *orientation, *offset));
- 
-       return rval;
-    }
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createEllipsoid(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation)
-    {
-        Ogre::Vector3 size = aabb.getSize();
-        // set the size x/z values to the maximum
-        Vector3 s(size/2.0);
-        s.x = std::max(s.x, s.z);
-        s.z = s.x;
-        // positional offset of the collision primitiv
-		Ogre::Vector3 object_offset(aabb.getCenter());
-        // orientation of the collision primitiv
-		Ogre::Quaternion object_orientation = Ogre::Quaternion::IDENTITY;
-
-		// set offset/orientation when they are null
-		if (! offset)
-			offset = &object_offset;
-		if (! orientation)
-			orientation = &object_orientation;
-
-        // an ellipsoid primitiv has got its coordinate system at its center, so shift it with radius
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Ellipsoid(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            s, *orientation, *offset));
-
-       return rval;
-    }
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createCapsule(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation)
-    {
-        Ogre::Vector3 size = aabb.getSize();
-        // positional offset of the collision primitiv
-		Ogre::Vector3 object_offset(aabb.getCenter());
-        // orientation of the collision primitiv
-		Ogre::Quaternion object_orientation = Ogre::Quaternion::IDENTITY;
-        double radius = std::max(size.x, size.z) / 2.0;
-		double height = size.y;
-        // @todo: fixme: this is a semi ugly fix - because the orientation should be set by the loader
-        object_orientation.FromAngleAxis(Degree(90), Vector3::UNIT_Z);
-
-		// set offset/orientation when they are null
-		if (! offset)
-    		offset = &object_offset;
-		if (! orientation)
-			orientation = &object_orientation;
-
-
-        // an capsule primitiv has got its coordinate system at its center, so shift it with radius
-        // additionally it is x axis aligned, so rotate it 90 degrees around z axis
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Capsule(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            radius, height, *orientation, *offset));
-
-
-        return rval;
-    }
-
-
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createConvexHull(
-            Ogre::Entity* entity,
-            const Ogre::Vector3* offset,
-            const Ogre::Quaternion* orientation)
-    {
-        // offset of the collision primitiv
-        Ogre::Vector3 object_offset( Ogre::Vector3::ZERO );
-        // orientation of the collision primitiv
-        Ogre::Quaternion object_orientation = Ogre::Quaternion::IDENTITY;
-
-        // set offset/orientation when they are null
-        if (! offset)
-            offset = &object_offset;
-        if (! orientation)
-            orientation = &object_orientation;
-
-        // calculate the convex hull of the animated mesh
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::ConvexHull(
-                    PhysicsManager::getSingleton()._getNewtonWorld(),
-                    entity, *orientation, *offset));
-
-        return rval;
-    }
-
-
 }
 

Modified: rl/branches/persistence2/engine/core/src/PhysicsRagDoll.cpp
===================================================================
--- rl/branches/persistence2/engine/core/src/PhysicsRagDoll.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/src/PhysicsRagDoll.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -35,11 +35,7 @@
 	mParent = parent;
 	mOgreBone = ogreBone;
 
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
 	OgreNewt::ConvexCollisionPtr col;
-#else
-	OgreNewt::ConvexCollisionPtr col = NULL;
-#endif
 
 	// in the case of the cylindrical primitives, they need to be rotated to align the main axis with the direction vector.
 	Ogre::Quaternion orient = Ogre::Quaternion::IDENTITY;
@@ -95,12 +91,7 @@
     {
         if( col->getNewtonCollision() == NULL )
         {
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
             col.reset();
-#else
-            delete col;
-            col = NULL;
-#endif
         }
     }
 
@@ -112,11 +103,7 @@
     else
     {
     	mBody = new OgreNewt::Body( world, col );
-#ifdef OGRENEWT_USE_OGRE_ANY
         mBody->setUserData( Ogre::Any(parentActor) );
-#else
-	    mBody->setUserData( parentActor );
-#endif
     	mBody->setStandardForceCallback();
         const OgreNewt::MaterialID* ragdollMat = PhysicsManager::getSingleton().createMaterialID("default");
         mBody->setMaterialGroupID(ragdollMat);
@@ -146,11 +133,7 @@
 
 void PhysicsRagDoll::RagBone::_hingeCallback( OgreNewt::BasicJoints::Hinge* me )
 {
-#ifdef OGRENEWT_USE_OGRE_ANY
     PhysicsRagDoll::RagBone* bone = Ogre::any_cast<PhysicsRagDoll::RagBone*>(me->getUserData());
-#else
-    PhysicsRagDoll::RagBone* bone = static_cast<PhysicsRagDoll::RagBone*>(me->getUserData());
-#endif
 
 	Ogre::Degree angle = me->getJointAngle();
 	Ogre::Degree lim1( bone->getLimit1() );
@@ -261,11 +244,7 @@
 	}
 
 	//////////////////////////////////////////////////////////////////////////////////
-#ifdef OGRENEWT_COLLISION_USE_SHAREDPTR
     OgreNewt::ConvexCollisionPtr col;
-#else
-    OgreNewt::ConvexCollisionPtr col = NULL;
-#endif
     if( numVerts > 0 )
     	col = OgreNewt::ConvexCollisionPtr(new OgreNewt::CollisionPrimitives::ConvexHull( world, verts, numVerts ));
 
@@ -464,11 +443,7 @@
 	case PhysicsRagDoll::JT_HINGE:
 		joint = new OgreNewt::BasicJoints::Hinge( world, child->getBody(), parent->getBody(), pos, pin );
 		((OgreNewt::BasicJoints::Hinge*)joint)->setCallback( RagBone::_hingeCallback );
-#ifdef OGRENEWT_USE_OGRE_ANY
 		joint->setUserData( Ogre::Any(child) );
-#else
-		joint->setUserData( child );
-#endif
 		child->setLimits( limit1, limit2 );
 		break;
 	}
@@ -478,11 +453,7 @@
 
 void PhysicsRagDoll::_placementCallback( OgreNewt::Body* me, const Ogre::Quaternion& orient, const Ogre::Vector3& pos, int threadindex )
 {
-#ifdef OGRENEWT_USE_OGRE_ANY
     Actor* parentActor = Ogre::any_cast<Actor*>(me->getUserData());
-#else
-    Actor* parentActor = static_cast<Actor*>(me->getUserData());
-#endif
 	PhysicsRagDoll* doll = parentActor->getPhysicalThing()->getRagDoll();
     PhysicsRagDoll::RagBoneMapIterator it = doll->mRagBonesMap.find(me);
     if( it == doll->mRagBonesMap.end() )

Modified: rl/branches/persistence2/engine/core/src/PlayAnimationJob.cpp
===================================================================
--- rl/branches/persistence2/engine/core/src/PlayAnimationJob.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/src/PlayAnimationJob.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -103,15 +103,22 @@
             if (mAnimationRunning && mAnimation) 
             {
                 mAnimationRunning = false;
-                if (mHoldOnEnd) 
+                    
+                mAnimation->pause();
+                
+                if (!mHoldOnEnd) 
                 {
-                    mAnimation->pause();
+                    if( mActor )
+                    {
+                        MeshObject* mo = dynamic_cast<MeshObject*>(mActor->getControlledObject());
+                        mo->stopAnimation(mAnimName);
+                    }
+                    else
+                    {
+                        //! TODO: what to do here?
+                    }
                 }
-                else
-                {
-                    mAnimation->stop();
-                    delete mAnimation;
-                }
+
                 mAnimation = NULL;
             }
             return true;
@@ -119,4 +126,4 @@
 
         return false;
     }
-}
\ No newline at end of file
+}

Modified: rl/branches/persistence2/engine/core/src/SceneQuery.cpp
===================================================================
--- rl/branches/persistence2/engine/core/src/SceneQuery.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/core/src/SceneQuery.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -116,15 +116,11 @@
                 if (mLevelOcclusion && (body->getMaterialGroupID() == levelId)) break;
 
                 // Add actor to this body to the result
-#ifdef OGRENEWT_USE_OGRE_ANY
                 Actor* actor = NULL;
                 if( body->getUserData().getType() == typeid(Actor*) )
                 {
                     actor = Ogre::any_cast<Actor*>(body->getUserData());
                 }
-#else
-                Actor* actor = static_cast<Actor*>(body->getUserData());
-#endif
                 if (actor != NULL) mResult.push_back(actor);
             }
         }

Modified: rl/branches/persistence2/engine/rules/include/GoToJob.h
===================================================================
--- rl/branches/persistence2/engine/rules/include/GoToJob.h	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/rules/include/GoToJob.h	2009-05-22 22:18:33 UTC (rev 4940)
@@ -37,6 +37,7 @@
             CreatureController::MovementType movementType_moving = CreatureController::MT_RENNEN,
             CreatureController::MovementType movementType_idle = CreatureController::MT_STEHEN);
 		GoToJob(const CeGuiString &id, Creature* actor, GameObject* target, Ogre::Real maxDistance, Ogre::Real duration,
+            bool followTarget = false,
             CreatureController::MovementType movementType_moving = CreatureController::MT_RENNEN,
             CreatureController::MovementType movementType_idle = CreatureController::MT_STEHEN);
         virtual ~GoToJob();
@@ -46,6 +47,7 @@
     private:
 		CreatureController* mActor;
 		GameObject* mTarget;
+        bool mFollowTarget;
 		Ogre::Vector3 mTargetPos;
 		Ogre::Real mMaxDistance;
 		Ogre::Real mTimeLeft;

Modified: rl/branches/persistence2/engine/rules/src/CreatureControllerManager.cpp
===================================================================
--- rl/branches/persistence2/engine/rules/src/CreatureControllerManager.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/rules/src/CreatureControllerManager.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -166,13 +166,9 @@
 
     void CreatureControllerManager::userProcess(OgreNewt::ContactJoint &contactJoint, Real timestep, int threadid)
     {
-#ifdef OGRENEWT_USE_OGRE_ANY
         Actor *actor = NULL;
         if( contactJoint.getBody0()->getUserData().getType() == typeid(Actor*) )
             actor = Ogre::any_cast<Actor*>(contactJoint.getBody0()->getUserData());
-#else
-        Actor *actor = static_cast<Actor*>(contactJoint.getBody0()->getUserData());
-#endif
         if( actor != NULL )
         {
             ControllerMap::const_iterator it = mControllers.find(static_cast<Creature*>(actor->getGameObject()));
@@ -184,12 +180,8 @@
         }
 
         // if the controlled body is the second body...
-#ifdef OGRENEWT_USE_OGRE_ANY
         if( contactJoint.getBody1()->getUserData().getType() == typeid(Actor*) )
             actor = Ogre::any_cast<Actor*>(contactJoint.getBody1()->getUserData());
-#else
-        actor = static_cast<Actor*>(contactJoint.getBody1()->getUserData());
-#endif
         if( actor != NULL )
         {
             ControllerMap::const_iterator it = mControllers.find(static_cast<Creature*>(actor->getGameObject()));

Modified: rl/branches/persistence2/engine/rules/src/GoToJob.cpp
===================================================================
--- rl/branches/persistence2/engine/rules/src/GoToJob.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/rules/src/GoToJob.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -31,6 +31,7 @@
 		: Job(id, false, true, TimeSource::REALTIME_INTERRUPTABLE),
 		  mActor(NULL),
 		  mTarget(NULL),
+          mFollowTarget(false),
 		  mTargetPos(targetPos),
 		  mMaxDistance(maxDistance),
 		  mTimeLeft(duration),
@@ -40,11 +41,12 @@
 		mActor = CreatureControllerManager::getSingleton().getCreatureController(actor);
 	}
 
-	GoToJob::GoToJob(const CeGuiString& id, Creature* actor, GameObject* target, Real maxDistance, Real duration, CreatureController::MovementType movementType_moving,
-            CreatureController::MovementType movementType_idle)
+	GoToJob::GoToJob(const CeGuiString& id, Creature* actor, GameObject* target, Real maxDistance, Real duration, bool followTarget,
+			CreatureController::MovementType movementType_moving, CreatureController::MovementType movementType_idle)
 		: Job(id, false, true, TimeSource::REALTIME_INTERRUPTABLE),
 		  mActor(NULL),
 		  mTarget(target),
+          mFollowTarget(followTarget),
 		  mTargetPos(Vector3::ZERO),
 		  mMaxDistance(maxDistance),
 		  mTimeLeft(duration),
@@ -83,34 +85,43 @@
         }
         
 		// Are we there now?
-		if (distance < mMaxDistance)
-		{
-			// Stay put where ever we are.
-			mActor->setMovement(mMovementType_idle, Vector3::ZERO, Vector3::ZERO);
-			return true;
-		}
-
-
-		Vector3 pos = mActor->getCreature()->getPosition();
-		pos.y = 0;
-		Vector3 targetPos = mTargetPos;
-		targetPos.y = 0;
+        Vector3 pos = mActor->getCreature()->getPosition();
+        pos.y = 0;
+        Vector3 targetPos = mTargetPos;
+        targetPos.y = 0;
         Degree realYawDiff = (mActor->getCreature()->getOrientation()*Vector3::NEGATIVE_UNIT_Z).getRotationTo(targetPos - pos).getYaw();
         Vector3 rotation = Vector3::ZERO;
         Quaternion currentOri(mActor->getYaw(), Vector3::UNIT_Y);
         rotation.y = (currentOri*Vector3::NEGATIVE_UNIT_Z).getRotationTo(targetPos - pos).getYaw().valueRadians();
 
         // old code for rotation:
-		//mActor->getCreature()->setOrientation(Vector3::NEGATIVE_UNIT_Z.getRotationTo(targetPos - pos));
-        
-        // first rotate, then move, is this the "desired" behaviour?
-        if( realYawDiff > Degree(5) || realYawDiff < Degree(-5) )
+        //mActor->getCreature()->setOrientation(Vector3::NEGATIVE_UNIT_Z.getRotationTo(targetPos - pos));
+
+        // in order to prevent fast switching between moving and idle, use a larger maxDistance if idle
+        Real maxDistance = mMaxDistance;
+        if( mFollowTarget && mActor->getMovementId() == mMovementType_idle)
+            maxDistance += 0.5;
+
+        if( distance < maxDistance )
+        {
+            // turn to object
             mActor->setMovement(mMovementType_idle, Vector3::ZERO, rotation);
+        }
         else
-    		mActor->setMovement(mMovementType_moving, Vector3::NEGATIVE_UNIT_Z, rotation);
+        {
+            // first rotate, then move, is this the "desired" behaviour?
+            if( realYawDiff > Degree(5) || realYawDiff < Degree(-5) )
+                mActor->setMovement(mMovementType_idle, Vector3::ZERO, rotation);
+            else
+                mActor->setMovement(mMovementType_moving, Vector3::NEGATIVE_UNIT_Z, rotation);
+        }
 
-		mTimeLeft  -= time;
-		return false;
+        mTimeLeft  -= time;
+
+        if( !mFollowTarget && distance < mMaxDistance )
+            return true;
+        else
+            return false;
 	}
 }
 

Modified: rl/branches/persistence2/engine/rules/src/SelectionHelper.cpp
===================================================================
--- rl/branches/persistence2/engine/rules/src/SelectionHelper.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/rules/src/SelectionHelper.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -84,13 +84,9 @@
             OgreNewt::Body* body = info.mBody;
             if (body != NULL)
             {
-#ifdef OGRENEWT_USE_OGRE_ANY
                 Actor* hitActor = NULL;
                 if( body->getUserData().getType() == typeid(Actor*) )
                     hitActor = Ogre::any_cast<Actor*>(body->getUserData());
-#else
-                Actor* hitActor = static_cast<Actor*>(body->getUserData());
-#endif
                 isVisible = hitActor == actor2 || hitActor == actor1;
                 if (!isVisible) break;
             }

Modified: rl/branches/persistence2/engine/script/src/EntityNodeProcessor.cpp
===================================================================
--- rl/branches/persistence2/engine/script/src/EntityNodeProcessor.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/script/src/EntityNodeProcessor.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -117,7 +117,6 @@
         }
 
         parentNode->attachObject(newEnt);
-        createCollision(newEnt, meshFile, getChildNamed(nodeElem, "physicsproxy"));
 
         DOMElement* scaleElem = getChildNamed(nodeElem, "scale");
         if (scaleElem != NULL)
@@ -125,6 +124,9 @@
             parentNode->scale(processVector3(scaleElem));
         }
 
+        // in order for the scale to work correctly the collision needs to be created after the scale was applied
+        createCollision(newEnt, meshFile, getChildNamed(nodeElem, "physicsproxy"));
+
 		AutoXMLCh animation("animation");
 		DOMNodeList* list = nodeElem->getElementsByTagName(animation.data());
 		for (XMLSize_t idx = 0; idx < list->getLength(); idx++)
@@ -173,26 +175,28 @@
                 if (physicsProxyTypeAsString == "custom")
                 {
                     ///@todo create physics proxy from custom collision primitives which are defined in children elements of <code>physicsProxyElem<code>
-                    LOG_WARNING(Logger::SCRIPT, "Physics proxy type 'custom' is not yet implemented.");
+                    LOG_WARNING(Logger::SCRIPT, "Physics proxy type 'custom' is not yet implemented, using mesh instead");
+                    physicsProxyType = GT_MESH;
                 }
-                else if ( physicsProxyType != GT_NONE )
+            }
+
+            if ( physicsProxyType != GT_NONE )
+            {
+                OgreNewt::CollisionPtr collision = PhysicsManager::getSingleton().createCollision(entity, physicsProxyType);
+                if (collision)
                 {
-                    OgreNewt::CollisionPtr collision = PhysicsManager::getSingleton().createCollision(entity, physicsProxyType);
-                    if (collision)
-                    {
-                        LOG_DEBUG(Logger::SCRIPT, "Created physics proxy type '" + physicsProxyTypeAsString + "' for entity '"+entity->getName()+"'.");
-                        std::vector<OgreNewt::CollisionPtr> collisionVector;
-                        collisionVector.push_back(collision);
-                        PhysicsManager::getSingleton().addLevelGeometry(entity, collisionVector);
-                    }
+                    LOG_DEBUG(Logger::SCRIPT, "Created physics proxy type '" + physicsProxyTypeAsString + "' for entity '"+entity->getName()+"'.");
+                    std::vector<OgreNewt::CollisionPtr> collisionVector;
+                    collisionVector.push_back(collision);
+                    PhysicsManager::getSingleton().addLevelGeometry(entity, collisionVector);
                 }
-                else
-                {
-                    LOG_ERROR(Logger::SCRIPT,
-                            "Physics proxy type '" + physicsProxyTypeAsString + "' of entity '"+entity->getName()+"' is unknown.");
-                    return;
-                }
             }
+            else
+            {
+                LOG_ERROR(Logger::SCRIPT,
+                        "Physics proxy type '" + physicsProxyTypeAsString + "' of entity '"+entity->getName()+"' is unknown.");
+                return;
+            }
 
                 
         }

Modified: rl/branches/persistence2/engine/script/src/PlaneNodeProcessor.cpp
===================================================================
--- rl/branches/persistence2/engine/script/src/PlaneNodeProcessor.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/script/src/PlaneNodeProcessor.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -148,7 +148,7 @@
 			const Quaternion orientation(0,0,0,0);// = parentNode->getOrientation();
 			const Ogre::Vector3 pos = aab.getMinimum() * parentNode->getScale() + (size/2.0);
 
-            collision = PhysicsManager::getSingleton().createCollision(entity, GT_BOX, "", NULL, NULL, 0, NULL, NULL, true);
+            collision = PhysicsManager::getSingleton().createCollision(entity, GT_BOX, "", Vector3::ZERO, Quaternion::IDENTITY, 0, NULL, NULL, true);
 
 			if ( collision != NULL )
 			{

Modified: rl/branches/persistence2/engine/script/swig/RlAi.swig
===================================================================
--- rl/branches/persistence2/engine/script/swig/RlAi.swig	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/script/swig/RlAi.swig	2009-05-22 22:18:33 UTC (rev 4940)
@@ -301,8 +301,8 @@
     {
     public:
         static rl::DialogManager& getSingleton();
-        rl::Dialog* createDialog(const Ogre::String& name, rl::Creature* npc);
-        rl::Dialog* createDialog(const Ogre::String& name, rl::CreatureList& npcs);
+        // rl::Dialog* createDialog(const Ogre::String& name, rl::Creature* npc); // function overloading is not working correctly here in swig
+        rl::Dialog* createDialog(const Ogre::String& name, const rl::CreatureList& npcs);
     private:
         DialogManager();
     };

Modified: rl/branches/persistence2/engine/script/swig/RlCore.swig
===================================================================
--- rl/branches/persistence2/engine/script/swig/RlCore.swig	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/script/swig/RlCore.swig	2009-05-22 22:18:33 UTC (rev 4940)
@@ -184,8 +184,8 @@
     virtual void setAmbientLight(Ogre::Real r, Ogre::Real g, Ogre::Real b);
     virtual Ogre::Vector3 getStartPoint() const;
     virtual void setCastShadows(bool);
-    virtual void clearScene() = 0;
-    virtual void initializeDefaultCamera() = 0;
+    virtual void clearScene() = 0;
+    virtual void initializeDefaultCamera() = 0;
 
     void setShowBoundingBoxes( bool dis );
 };
@@ -207,11 +207,19 @@
 private:
 	GameAreaType();
 public:
-	unsigned long getQueryMask() const;
-    void setQueryMask( unsigned long mask );
+	virtual unsigned long getQueryMask() const = 0;
+    virtual void setQueryMask( unsigned long mask = 0xFFFFFFFF ) = 0;
     void addQueryFlag( unsigned long flag  );
     void removeQueryFlag( unsigned long flag );
-    const Ogre::Vector3& getQueryPosition() const;
+    virtual void setQueryPosition( const Ogre::Vector3& vec ) = 0;
+    virtual Ogre::Vector3 getQueryPosition() const = 0;
+    virtual void setQueryOrientation( const Ogre::Quaternion& ori ) = 0;
+    virtual Ogre::Quaternion getQueryOrientation() const = 0;
+    virtual OgreNewt::Body* getBody() { return NULL;}
+    virtual Ogre::Real getDistance(rl::Actor* actor) = 0;
+    virtual Ogre::Real getTransitionDistance() const = 0;
+    virtual void setTransitionDistance(Ogre::Real dist) = 0;
+    virtual bool isInside(rl::Actor *actor) = 0;
 };
 
 /*
@@ -1063,6 +1071,7 @@
     PlayAnimationJob(const rl::CeGuiString &id, Actor* actor, const Ogre::String& anim, int loops = 1,
 		bool replaceAllAnims=true);
     virtual ~PlayAnimationJob();
+    virtual void setHoldOnEnd(bool hold);
     
 private:
     bool execute(Ogre::Real time);

Modified: rl/branches/persistence2/engine/script/swig/RlRules.swig
===================================================================
--- rl/branches/persistence2/engine/script/swig/RlRules.swig	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/script/swig/RlRules.swig	2009-05-22 22:18:33 UTC (rev 4940)
@@ -302,7 +302,7 @@
         virtual int getTargetClass() const;
         virtual void doAction(rl::GameObject *object, rl::Creature *actor,
             rl::GameObject *target);
-        virtual bool canDo(rl::GameObject* object, rl::Creature* actor) const;
+        virtual bool canDo(rl::GameObject* object, rl::Creature* actor, rl::GameObject* target = NULL) const;
             
         void setGroup(rl::ActionGroup* group);
         rl::ActionGroup* getGroup() const;
@@ -449,9 +449,12 @@
     public:
 
 		GoToJob(const rl::CeGuiString &id, rl::Creature* actor, const Ogre::Vector3& targetPos,
-			Ogre::Real maxDistance, Ogre::Real duration);
-		// Unclear what version is called from ruby, so uncomment second ctor.
-		//GoToJob(rl::Creature* actor, rl::GameObject* target, Ogre::Real maxDistance, Ogre::Real duration);
+			Ogre::Real maxDistance, Ogre::Real duration,
+            rl::CreatureController::MovementType movementType_moving = rl::CreatureController::MT_RENNEN,
+            rl::CreatureController::MovementType movementType_idle = rl::CreatureController::MT_STEHEN);
+		GoToJob(const rl::CeGuiString &id, rl::Creature* actor, rl::GameObject* target, Ogre::Real maxDistance, Ogre::Real duration, bool followTarget = false,
+            rl::CreatureController::MovementType movementType_moving = rl::CreatureController::MT_RENNEN,
+            rl::CreatureController::MovementType movementType_idle = rl::CreatureController::MT_STEHEN);
     };
     
     /// A rl#Job to fetch an item

Modified: rl/branches/persistence2/engine/ui/include/CommandMapper.h
===================================================================
--- rl/branches/persistence2/engine/ui/include/CommandMapper.h	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ui/include/CommandMapper.h	2009-05-22 22:18:33 UTC (rev 4940)
@@ -35,7 +35,8 @@
         MOVE_RUN = 1<<6,
         MOVE_SNEAK = 1<<7,
         MOVE_JUMP = 1<<8,
-        MOVE_RUN_LOCK = 1<<9
+        MOVE_RUN_LOCK = 1<<9,
+        REAR_VIEW = 1<<10
     };
 
     const int CMDMAP_NO_MAPPING = -9999999;

Modified: rl/branches/persistence2/engine/ui/include/DialogControlState.h
===================================================================
--- rl/branches/persistence2/engine/ui/include/DialogControlState.h	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ui/include/DialogControlState.h	2009-05-22 22:18:33 UTC (rev 4940)
@@ -19,11 +19,11 @@
 
 #include "UiPrerequisites.h"
 #include "DialogController.h"
+#include "Creature.h"
 
 namespace rl {
 
 	class Actor;
-    class Creature;
 	class Dialog;
     class DialogElement;
 	class DialogWindow;
@@ -83,7 +83,7 @@
 
 		DialogWindow* mDialogWindow;
 
-        virtual void recalculateDialogCamera(Creature* speaker, std::list<Creature*> listeners);
+        virtual void recalculateDialogCamera(Creature* speaker, const CreatureList& listeners);
 
         void showOptions(const std::list<DialogOption*>& options);
 	};

Modified: rl/branches/persistence2/engine/ui/include/DialogController.h
===================================================================
--- rl/branches/persistence2/engine/ui/include/DialogController.h	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ui/include/DialogController.h	2009-05-22 22:18:33 UTC (rev 4940)
@@ -9,15 +9,12 @@
 #define DIALOGCONTROLLER_H_
 
 #include "AiPrerequisites.h"
-
-#include <list>
-
 #include "ControlState.h"
+#include "Creature.h"
 
 namespace rl
 {
     class Actor;
-    class Creature;
     class Dialog;
     class DialogOption;
     class DialogParagraph;
@@ -52,7 +49,7 @@
         void doTalk(DialogParagraph* paragraph, DialogWindow* window = NULL);
         Ogre::Vector3 getParticipantPosition(Creature* participant);
         virtual bool textFinished();
-        virtual void recalculateDialogCamera(Creature* speaker, std::list<Creature*> listeners) = 0;
+        virtual void recalculateDialogCamera(Creature* speaker, const CreatureList& listeners) = 0;
         virtual void handleDialogEnd() = 0;
         void setDialogWindow(DialogWindow* window);
         void setSubtitleWindow(SubtitleWindow* window);
@@ -68,7 +65,7 @@
         Ogre::Real mTotalFadeTextTime;
         Ogre::Real mSubtitleSpeed;
         Creature* mCurrentSpeaker;
-        std::list<Creature*> mCurrentListeners;
+        CreatureList mCurrentListeners;
         /// Der Untertitel-Text
         CeGuiString mText;
         /// Es wird gerade Text angezeigt

Modified: rl/branches/persistence2/engine/ui/include/MovementControlState.h
===================================================================
--- rl/branches/persistence2/engine/ui/include/MovementControlState.h	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ui/include/MovementControlState.h	2009-05-22 22:18:33 UTC (rev 4940)
@@ -112,6 +112,7 @@
         std::pair<Ogre::Real, Ogre::Real> mDistanceRange;
         Ogre::Degree mCamYaw; // f?r VM_FREE_CAMERA
         Ogre::Degree mCamVirtualYaw; // helps to simulate strafe+forward/backward movement
+        Ogre::Degree mCamRearViewYaw; // helps to create smooth rear view effect
         Ogre::Degree mNewCamVirtualYaw; // s.o.
         Ogre::Degree mPitch;
         Ogre::Degree mRoll;

Modified: rl/branches/persistence2/engine/ui/src/CommandMapper.cpp
===================================================================
--- rl/branches/persistence2/engine/ui/src/CommandMapper.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ui/src/CommandMapper.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -252,6 +252,10 @@
         {
             return MOVE_RUN_LOCK;
         }
+        else if (movementDescription == "rear_view")
+        {
+            return REAR_VIEW;
+        }
 
         return MOVE_NONE;
     }

Modified: rl/branches/persistence2/engine/ui/src/DialogControlState.cpp
===================================================================
--- rl/branches/persistence2/engine/ui/src/DialogControlState.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ui/src/DialogControlState.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -196,7 +196,7 @@
                 + StringConverter::toString(mCurrFadeTextTime));
     }
 
-    void DialogControlState::recalculateDialogCamera(Creature* speaker, std::list<Creature*> listeners)
+    void DialogControlState::recalculateDialogCamera(Creature* speaker, const CreatureList& listeners)
     {
         // Position camera at position between char and dialog partner
         Vector3 speakerEyes = getParticipantPosition(speaker);
@@ -221,8 +221,8 @@
         mSubtitleWindow = NULL;
         if (mDialog != NULL)
         {
-            const list<Creature*> list = mDialog->getParticipants();
-            for (std::list<Creature*>::const_iterator it = list.begin(); it != list.end(); ++it)
+            const CreatureList list = mDialog->getParticipants();
+            for (CreatureList::const_iterator it = list.begin(); it != list.end(); ++it)
             {
                 Actor* actor = (*it)->getActor();
                 if (actor != NULL)

Modified: rl/branches/persistence2/engine/ui/src/ItemDragContainer.cpp
===================================================================
--- rl/branches/persistence2/engine/ui/src/ItemDragContainer.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ui/src/ItemDragContainer.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -55,6 +55,8 @@
             if(mDestroyListener)
                 mDestroyListener->notifyItemDragContainerDestroyed(this);
             setDestroyListener(NULL);
+
+            stopFadeOut();
         }
 
 	void ItemDragContainer::destroy()
@@ -62,21 +64,25 @@
             if(mDestroyListener)
                 mDestroyListener->notifyItemDragContainerDestroyed(this);
             setDestroyListener(NULL);
+            stopFadeOut();
 
             CEGUI::DragContainer::destroy();
-/*        
-        stopFadeOut();
 
-        hide();
-		if (getParent())
-		{
-			getParent()->removeChildWindow(this);
-		}
-		removeAllEvents();
-		mContentWindow->removeAllEvents();
-		removeChildWindow(mContentWindow);
-		CEGUI::WindowManager::getSingleton().destroyWindow(mContentWindow);
-        CEGUI::WindowManager::getSingleton().destroyWindow(this);
+
+/*
+            hide();
+		
+            if (getParent())
+            {
+                getParent()->removeChildWindow(this);
+            }
+
+            removeAllEvents();
+            if( mContentWindow )
+            mContentWindow->removeAllEvents();
+            removeChildWindow(mContentWindow);
+            CEGUI::WindowManager::getSingleton().destroyWindow(mContentWindow);
+            CEGUI::WindowManager::getSingleton().destroyWindow(this);
 */
 	}
 /*

Modified: rl/branches/persistence2/engine/ui/src/MovementControlState.cpp
===================================================================
--- rl/branches/persistence2/engine/ui/src/MovementControlState.cpp	2009-05-22 20:34:43 UTC (rev 4939)
+++ rl/branches/persistence2/engine/ui/src/MovementControlState.cpp	2009-05-22 22:18:33 UTC (rev 4940)
@@ -73,6 +73,7 @@
         mCamYaw(0),
         mCamVirtualYaw(0),
         mNewCamVirtualYaw(0),
+        mCamRearViewYaw(0),
         mPitch(20),
         mRoll(0),
         mPitchRange(Degree(-75), Degree(85)),
@@ -87,9 +88,6 @@
         mViewMode(VM_THIRD_PERSON),
         mRaycast(new PhysicsMaterialRaycast()),
         mConvexcast(new PhysicsMaterialConvexcast()),
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        mCameraCastCollision(NULL),
-#endif
         mSelector(CoreSubsystem::getSingleton().getWorld()->getSceneManager()),
         mCombatSelector(CoreSubsystem::getSingleton().getWorld()->getSceneManager(),
             QUERYFLAG_CREATURE),
@@ -174,9 +172,6 @@
         mSelector.setFilter(NULL);
         delete mRaycast;
         delete mConvexcast;
-#ifndef OGRENEWT_COLLISION_USE_SHAREDPTR
-        delete mCameraCastCollision;
-#endif
 
         if (DebugWindow::getSingletonPtr())
         {
@@ -313,9 +308,9 @@
     void MovementControlState::updateCharacter(Ogre::Real elapsedTime)
     {
         InputManager* im = InputManager::getSingletonPtr();
+        int movement = mCharacterState.mCurrentMovementState;
         if( mController != NULL )
         {
-            int movement = mCharacterState.mCurrentMovementState;
             Degree rotation(0);
 
             AbstractMovement *drehen = mController->getMovementFromId(CreatureController::MT_DREHEN);
@@ -347,7 +342,7 @@
                 }
 
 
-                if( mViewMode != VM_PNYX_MODE  && mViewMode != VM_FIRST_PERSON )
+                if( mViewMode != VM_PNYX_MODE  )//&& mViewMode != VM_FIRST_PERSON )
                 {
                     // virtual yaw
                     if( mCamVirtualYaw != mNewCamVirtualYaw )
@@ -366,14 +361,14 @@
                     }
                     else
                     {
-                        mNewCamVirtualYaw =Degree(0);
+                        mNewCamVirtualYaw = Degree(0);
                     }
                     if( mCamVirtualYaw != mNewCamVirtualYaw )
                     {
                         rotation += mCamVirtualYaw - mNewCamVirtualYaw;
                     }
                 }
-
+/*
                 if( mViewMode == VM_FIRST_PERSON )
                 {
                     if( ((movement & MOVE_FORWARD) && (movement & MOVE_RIGHT) && !(movement & MOVE_LEFT)) ||
@@ -406,6 +401,7 @@
                         }
                     }
                 }
+*/
             }
 
 
@@ -589,6 +585,23 @@
                 }
             }
         }
+
+
+        if ( movement & REAR_VIEW )
+        {
+            if( mCamRearViewYaw < Degree(180) )
+                mCamRearViewYaw += elapsedTime*Degree(2*360);
+            if( mCamRearViewYaw > Degree(180) )
+                mCamRearViewYaw = Degree(180);
+        }
+        else
+        {
+            if( mCamRearViewYaw > Degree(0) )
+                mCamRearViewYaw -= elapsedTime*Degree(2*360);
+            if( mCamRearViewYaw < Degree(0) )
+                mCamRearViewYaw = Degree(0);
+        }
+
     }
 
     // ------------------------------------------------------------------------
@@ -624,7 +637,7 @@
         charPos = mCharacter->getActor()->getWorldPosition();
         Quaternion charOri = mCharacter->getActor()->getWorldOrientation();
         Quaternion virtualCamOri;
-        virtualCamOri.FromAngleAxis(mCamVirtualYaw, Vector3::UNIT_Y);
+        virtualCamOri.FromAngleAxis(mCamVirtualYaw+mCamRearViewYaw, Vector3::UNIT_Y);
 
 
         // Kamera-Gr???e beziehen
@@ -649,8 +662,8 @@
         {
            cameraNode->lookAt(
                 charPos
-                + charOri * /* virtualCamOri * */  mLookAtOffset
-                + charOri * /* virtualCamOri * */ (-Vector3::UNIT_Z*radius),   // doesn't work smoothly with strafe+forward
+                + charOri * virtualCamOri *  mLookAtOffset
+                + charOri * virtualCamOri *  (-Vector3::UNIT_Z*radius),   // doesn't work smoothly with strafe+forward
                 Node::TS_WORLD);
 
         }
@@ -756,7 +769,7 @@
         Vector3 charPos = mCharacter->getActor()->getWorldPosition();
         Quaternion charOri = mCharacter->getActor()->getWorldOrientation();
         Quaternion virtualCamOri;
-        virtualCamOri.FromAngleAxis(mCamVirtualYaw, Vector3::UNIT_Y);
+        virtualCamOri.FromAngleAxis(mCamVirtualYaw+mCamRearViewYaw, Vector3::UNIT_Y);
 
 
         Vector3 camPos;
@@ -985,7 +998,7 @@
         //Quaternion charOri = mCharacter->getActor()->getWorldOrientation();
         Quaternion charOri (mController->getYaw(), Vector3::UNIT_Y);
         Quaternion virtualCamOri;
-        virtualCamOri.FromAngleAxis(mCamVirtualYaw, Vector3::UNIT_Y);
+        virtualCamOri.FromAngleAxis(mCamVirtualYaw+mCamRearViewYaw, Vector3::UNIT_Y);
         // get camera size
         CameraObject* ogreCam = static_cast<CameraObject*>(
                 mCameraActor->getControlledObject());
@@ -1311,6 +1324,7 @@
         mCamBody->setPositionOrientation(calculateOptimalCameraPosition(false, 0.0f), camOri);
         mCamVirtualYaw = Degree(0);
         mNewCamVirtualYaw = Degree(0);
+        mCamRearViewYaw = Degree(0);
         mLastCameraCollision = 0;
         if(mViewMode == VM_FIRST_PERSON)
             mCharacterActor->setVisible(false);



From blakharaz at mail.berlios.de  Sun May 24 19:05:50 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Sun, 24 May 2009 19:05:50 +0200
Subject: [Dsa-hl-svn] r4941 - in rl/trunk: Mac/Rastullah.xcodeproj
	engine/core/include engine/core/src engine/ui/src
Message-ID: <200905241705.n4OH5o10027224@sheep.berlios.de>

Author: blakharaz
Date: 2009-05-24 19:05:43 +0200 (Sun, 24 May 2009)
New Revision: 4941

Modified:
   rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj
   rl/trunk/engine/core/include/stdinc.h
   rl/trunk/engine/core/src/GameAreaTypes.cpp
   rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp
   rl/trunk/engine/ui/src/CutsceneControlState.cpp
Log:
Fixes for Mac OS build

Modified: rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj
===================================================================
--- rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj	2009-05-22 22:18:33 UTC (rev 4940)
+++ rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj	2009-05-24 17:05:43 UTC (rev 4941)
@@ -67,8 +67,6 @@
 		444EAB6D0BD0E2F300C6D4A0 /* CoreSubsystem.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 444EAB2C0BD0E2B600C6D4A0 /* CoreSubsystem.cpp */; };
 		444EAB6E0BD0E2F300C6D4A0 /* DebugVisualisable.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 444EAB2D0BD0E2B600C6D4A0 /* DebugVisualisable.cpp */; };
 		444EAB6F0BD0E2F300C6D4A0 /* DebugVisualsManager.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 444EAB2E0BD0E2B600C6D4A0 /* DebugVisualsManager.cpp */; };
-		444EAB700BD0E2F300C6D4A0 /* DotSceneLoader.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 444EAB2F0BD0E2B600C6D4A0 /* DotSceneLoader.cpp */; };
-		444EAB710BD0E2F300C6D4A0 /* DotSceneOctreeWorld.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 444EAB300BD0E2B600C6D4A0 /* DotSceneOctreeWorld.cpp */; };
 		444EAB720BD0E2F300C6D4A0 /* FadeAnimation.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 444EAB310BD0E2B600C6D4A0 /* FadeAnimation.cpp */; };
 		444EAB730BD0E2F300C6D4A0 /* GameAreaEvent.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 444EAB320BD0E2B600C6D4A0 /* GameAreaEvent.cpp */; };
 		444EAB740BD0E2F300C6D4A0 /* GameAreaEventSource.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 444EAB330BD0E2B600C6D4A0 /* GameAreaEventSource.cpp */; };
@@ -120,8 +118,6 @@
 		444EABEA0BD0E33300C6D4A0 /* CoreSubsystem.h in Headers */ = {isa = PBXBuildFile; fileRef = 444EABA90BD0E33300C6D4A0 /* CoreSubsystem.h */; };
 		444EABEB0BD0E33300C6D4A0 /* DebugVisualisable.h in Headers */ = {isa = PBXBuildFile; fileRef = 444EABAA0BD0E33300C6D4A0 /* DebugVisualisable.h */; };
 		444EABEC0BD0E33300C6D4A0 /* DebugVisualsManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 444EABAB0BD0E33300C6D4A0 /* DebugVisualsManager.h */; };
-		444EABED0BD0E33300C6D4A0 /* DotSceneLoader.h in Headers */ = {isa = PBXBuildFile; fileRef = 444EABAC0BD0E33300C6D4A0 /* DotSceneLoader.h */; };
-		444EABEE0BD0E33300C6D4A0 /* DotSceneOctreeWorld.h in Headers */ = {isa = PBXBuildFile; fileRef = 444EABAD0BD0E33300C6D4A0 /* DotSceneOctreeWorld.h */; };
 		444EABEF0BD0E33300C6D4A0 /* FadeAnimation.h in Headers */ = {isa = PBXBuildFile; fileRef = 444EABAE0BD0E33300C6D4A0 /* FadeAnimation.h */; };
 		444EABF00BD0E33300C6D4A0 /* GameAreaEvent.h in Headers */ = {isa = PBXBuildFile; fileRef = 444EABAF0BD0E33300C6D4A0 /* GameAreaEvent.h */; };
 		444EABF10BD0E33300C6D4A0 /* GameAreaEventSource.h in Headers */ = {isa = PBXBuildFile; fileRef = 444EABB00BD0E33300C6D4A0 /* GameAreaEventSource.h */; };
@@ -593,8 +589,6 @@
 		485B895A0E15796500D5B19C /* Scene.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485B89570E15796500D5B19C /* Scene.cpp */; };
 		485B895B0E15796500D5B19C /* SceneLoader.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485B89580E15796500D5B19C /* SceneLoader.cpp */; };
 		485B895C0E15796500D5B19C /* SceneManager.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485B89590E15796500D5B19C /* SceneManager.cpp */; };
-		4869D5300EF055F500619D4D /* libboost_system.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
-		4869D5310EF055F600619D4D /* libboost_filesystem.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48A52B210E0EDA0E008DBDD8 /* libboost_filesystem.dylib */; };
 		487029C70E80DCEA00B66388 /* GameOverWindow.h in Headers */ = {isa = PBXBuildFile; fileRef = 487029C60E80DCEA00B66388 /* GameOverWindow.h */; };
 		487029C90E80DCF900B66388 /* GameOverWindow.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 487029C80E80DCF900B66388 /* GameOverWindow.cpp */; };
 		487029E80E80E12200B66388 /* PartyManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 487029E70E80E12200B66388 /* PartyManager.h */; };
@@ -635,18 +629,14 @@
 		4890C0E20E18062B00BE5850 /* StepRecognitionMovement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 4890C0D40E18062B00BE5850 /* StepRecognitionMovement.cpp */; };
 		4890C0E30E18062B00BE5850 /* StrafeMovement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 4890C0D50E18062B00BE5850 /* StrafeMovement.cpp */; };
 		4890C0E40E18062B00BE5850 /* WalkMovement.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 4890C0D60E18062B00BE5850 /* WalkMovement.cpp */; };
-		48A52B220E0EDA0E008DBDD8 /* libboost_filesystem.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52B210E0EDA0E008DBDD8 /* libboost_filesystem.dylib */; };
-		48A52CB00E0EF55C008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
-		48A52CB10E0EF55C008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
-		48A52CB30E0EF577008DBDD8 /* libboost_filesystem.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52B210E0EDA0E008DBDD8 /* libboost_filesystem.dylib */; };
+		489864DA0FC4927300736047 /* GenericWorld.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 489864D70FC4927300736047 /* GenericWorld.cpp */; };
+		489864DB0FC4927300736047 /* PhysicsCollisionFactory.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 489864D80FC4927300736047 /* PhysicsCollisionFactory.cpp */; };
+		489864DC0FC4927300736047 /* PhysicsRagDoll.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 489864D90FC4927300736047 /* PhysicsRagDoll.cpp */; };
+		489864E00FC4928B00736047 /* GenericWorld.h in Headers */ = {isa = PBXBuildFile; fileRef = 489864DD0FC4928A00736047 /* GenericWorld.h */; };
+		489864E10FC4928B00736047 /* PhysicsCollisionFactory.h in Headers */ = {isa = PBXBuildFile; fileRef = 489864DE0FC4928B00736047 /* PhysicsCollisionFactory.h */; };
+		489864E20FC4928B00736047 /* PhysicsRagDoll.h in Headers */ = {isa = PBXBuildFile; fileRef = 489864DF0FC4928B00736047 /* PhysicsRagDoll.h */; };
 		48A52CB60E0EF5BD008DBDD8 /* ApplyDamageJob.h in Headers */ = {isa = PBXBuildFile; fileRef = 48A52CB50E0EF5BD008DBDD8 /* ApplyDamageJob.h */; };
 		48A52CB80E0EF5D0008DBDD8 /* ApplyDamageJob.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48A52CB70E0EF5D0008DBDD8 /* ApplyDamageJob.cpp */; };
-		48A52CBC0E0EF77B008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
-		48A52CBD0E0EF77B008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
-		48A52CBE0E0EF77C008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
-		48A52CBF0E0EF77C008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
-		48A52CC00E0EF77D008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
-		48A52CC20E0EF77E008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
 		48B006C50ECAC05F008141C2 /* CharacterSelectionWindow.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48B006C40ECAC05F008141C2 /* CharacterSelectionWindow.cpp */; };
 		48B006C80ECAC11D008141C2 /* CharacterSelectionWindow.h in Headers */ = {isa = PBXBuildFile; fileRef = 48B006C70ECAC11D008141C2 /* CharacterSelectionWindow.h */; };
 		48B0B0350E6534690023B198 /* PlaneNodeProcessor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48B0B0340E6534690023B198 /* PlaneNodeProcessor.cpp */; };
@@ -668,7 +658,6 @@
 		48CA78D40F2A513100F8E471 /* Fmod4Listener.h in Headers */ = {isa = PBXBuildFile; fileRef = 48CA78D00F2A513100F8E471 /* Fmod4Listener.h */; };
 		48CA78D50F2A513100F8E471 /* Fmod4Sound.h in Headers */ = {isa = PBXBuildFile; fileRef = 48CA78D10F2A513100F8E471 /* Fmod4Sound.h */; };
 		48CA78D60F2A513100F8E471 /* Fmod4SoundStitching.h in Headers */ = {isa = PBXBuildFile; fileRef = 48CA78D20F2A513100F8E471 /* Fmod4SoundStitching.h */; };
-		48CA78D80F2A51A400F8E471 /* libfmodex.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48CA78D70F2A51A400F8E471 /* libfmodex.dylib */; };
 		48CFBF8F0E2E869000CD0C51 /* FreeType.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48CFBF8E0E2E869000CD0C51 /* FreeType.framework */; };
 		48D0BDC70E23375E00863824 /* libruby.dylib in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 483646A10D83D57800912FEC /* libruby.dylib */; };
 		48D0BE2C0E273C5E00863824 /* SaveAble.h in Headers */ = {isa = PBXBuildFile; fileRef = 48D0BE280E273C5E00863824 /* SaveAble.h */; };
@@ -696,6 +685,15 @@
 		48D34A810D91C7D800C89477 /* SaveGameManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 485A05710D71EDC40024198D /* SaveGameManager.h */; };
 		48EFE0A40E8B6AF6007EB7F8 /* FetchItemJob.h in Headers */ = {isa = PBXBuildFile; fileRef = 48EFE0A30E8B6AF6007EB7F8 /* FetchItemJob.h */; };
 		48EFE0A60E8B6C39007EB7F8 /* FetchItemJob.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48EFE0A50E8B6C39007EB7F8 /* FetchItemJob.cpp */; };
+		48FF23FD0FC99D3D00E71D4D /* libboost_system-mt.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48FF23FC0FC99D3D00E71D4D /* libboost_system-mt.dylib */; };
+		48FF24000FC99D8700E71D4D /* libboost_filesystem-mt.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48FF23FF0FC99D8700E71D4D /* libboost_filesystem-mt.dylib */; };
+		48FF240A0FC99F2900E71D4D /* libfmodex.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48B0B0480E65BBB30023B198 /* libfmodex.dylib */; };
+		48FF240C0FC99F4800E71D4D /* libboost_filesystem-mt.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48FF23FF0FC99D8700E71D4D /* libboost_filesystem-mt.dylib */; };
+		48FF24160FC9A19600E71D4D /* libboost_system-mt.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48FF23FC0FC99D3D00E71D4D /* libboost_system-mt.dylib */; };
+		48FF24560FC9A4F600E71D4D /* libboost_system-mt.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48FF23FC0FC99D3D00E71D4D /* libboost_system-mt.dylib */; };
+		48FF245A0FC9A53A00E71D4D /* libboost_system-mt.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48FF23FC0FC99D3D00E71D4D /* libboost_system-mt.dylib */; };
+		48FF245C0FC9A58000E71D4D /* libboost_system-mt.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48FF23FC0FC99D3D00E71D4D /* libboost_system-mt.dylib */; };
+		48FF245E0FC9A59D00E71D4D /* libboost_system-mt.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48FF23FC0FC99D3D00E71D4D /* libboost_system-mt.dylib */; };
 		8D0C4E8D0486CD37000505A6 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 0867D6AAFE840B52C02AAC07 /* InfoPlist.strings */; };
 		8D0C4E8E0486CD37000505A6 /* main.nib in Resources */ = {isa = PBXBuildFile; fileRef = 02345980000FD03B11CA0E72 /* main.nib */; };
 /* End PBXBuildFile section */
@@ -945,8 +943,6 @@
 		444EAB2C0BD0E2B600C6D4A0 /* CoreSubsystem.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CoreSubsystem.cpp; sourceTree = "<group>"; };
 		444EAB2D0BD0E2B600C6D4A0 /* DebugVisualisable.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DebugVisualisable.cpp; sourceTree = "<group>"; };
 		444EAB2E0BD0E2B600C6D4A0 /* DebugVisualsManager.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DebugVisualsManager.cpp; sourceTree = "<group>"; };
-		444EAB2F0BD0E2B600C6D4A0 /* DotSceneLoader.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DotSceneLoader.cpp; sourceTree = "<group>"; };
-		444EAB300BD0E2B600C6D4A0 /* DotSceneOctreeWorld.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = DotSceneOctreeWorld.cpp; sourceTree = "<group>"; };
 		444EAB310BD0E2B600C6D4A0 /* FadeAnimation.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FadeAnimation.cpp; sourceTree = "<group>"; };
 		444EAB320BD0E2B600C6D4A0 /* GameAreaEvent.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = GameAreaEvent.cpp; sourceTree = "<group>"; };
 		444EAB330BD0E2B600C6D4A0 /* GameAreaEventSource.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = GameAreaEventSource.cpp; sourceTree = "<group>"; };
@@ -999,8 +995,6 @@
 		444EABA90BD0E33300C6D4A0 /* CoreSubsystem.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = CoreSubsystem.h; sourceTree = "<group>"; };
 		444EABAA0BD0E33300C6D4A0 /* DebugVisualisable.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DebugVisualisable.h; sourceTree = "<group>"; };
 		444EABAB0BD0E33300C6D4A0 /* DebugVisualsManager.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DebugVisualsManager.h; sourceTree = "<group>"; };
-		444EABAC0BD0E33300C6D4A0 /* DotSceneLoader.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DotSceneLoader.h; sourceTree = "<group>"; };
-		444EABAD0BD0E33300C6D4A0 /* DotSceneOctreeWorld.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = DotSceneOctreeWorld.h; sourceTree = "<group>"; };
 		444EABAE0BD0E33300C6D4A0 /* FadeAnimation.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = FadeAnimation.h; sourceTree = "<group>"; };
 		444EABAF0BD0E33300C6D4A0 /* GameAreaEvent.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = GameAreaEvent.h; sourceTree = "<group>"; };
 		444EABB00BD0E33300C6D4A0 /* GameAreaEventSource.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = GameAreaEventSource.h; sourceTree = "<group>"; };
@@ -1460,8 +1454,12 @@
 		4890C0D40E18062B00BE5850 /* StepRecognitionMovement.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = StepRecognitionMovement.cpp; sourceTree = "<group>"; };
 		4890C0D50E18062B00BE5850 /* StrafeMovement.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = StrafeMovement.cpp; sourceTree = "<group>"; };
 		4890C0D60E18062B00BE5850 /* WalkMovement.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = WalkMovement.cpp; sourceTree = "<group>"; };
-		48A52B210E0EDA0E008DBDD8 /* libboost_filesystem.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libboost_filesystem.dylib; path = /usr/local/lib/libboost_filesystem.dylib; sourceTree = "<absolute>"; };
-		48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libboost_system.dylib; path = /usr/local/lib/libboost_system.dylib; sourceTree = "<absolute>"; };
+		489864D70FC4927300736047 /* GenericWorld.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = GenericWorld.cpp; sourceTree = "<group>"; };
+		489864D80FC4927300736047 /* PhysicsCollisionFactory.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PhysicsCollisionFactory.cpp; sourceTree = "<group>"; };
+		489864D90FC4927300736047 /* PhysicsRagDoll.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = PhysicsRagDoll.cpp; sourceTree = "<group>"; };
+		489864DD0FC4928A00736047 /* GenericWorld.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = GenericWorld.h; sourceTree = "<group>"; };
+		489864DE0FC4928B00736047 /* PhysicsCollisionFactory.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = PhysicsCollisionFactory.h; sourceTree = "<group>"; };
+		489864DF0FC4928B00736047 /* PhysicsRagDoll.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = PhysicsRagDoll.h; sourceTree = "<group>"; };
 		48A52CB50E0EF5BD008DBDD8 /* ApplyDamageJob.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = ApplyDamageJob.h; sourceTree = "<group>"; };
 		48A52CB70E0EF5D0008DBDD8 /* ApplyDamageJob.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = ApplyDamageJob.cpp; sourceTree = "<group>"; };
 		48B006C40ECAC05F008141C2 /* CharacterSelectionWindow.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = CharacterSelectionWindow.cpp; sourceTree = "<group>"; };
@@ -1486,7 +1484,6 @@
 		48CA78D00F2A513100F8E471 /* Fmod4Listener.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Fmod4Listener.h; path = fmod4driver/Fmod4Listener.h; sourceTree = "<group>"; };
 		48CA78D10F2A513100F8E471 /* Fmod4Sound.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Fmod4Sound.h; path = fmod4driver/Fmod4Sound.h; sourceTree = "<group>"; };
 		48CA78D20F2A513100F8E471 /* Fmod4SoundStitching.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Fmod4SoundStitching.h; path = fmod4driver/Fmod4SoundStitching.h; sourceTree = "<group>"; };
-		48CA78D70F2A51A400F8E471 /* libfmodex.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libfmodex.dylib; path = "FMOD Programmers API/api/lib/libfmodex.dylib"; sourceTree = SYSTEM_DEVELOPER_DIR; };
 		48CFBF8E0E2E869000CD0C51 /* FreeType.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = FreeType.framework; path = /Library/Frameworks/FreeType.framework; sourceTree = "<absolute>"; };
 		48D0BE280E273C5E00863824 /* SaveAble.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SaveAble.h; sourceTree = "<group>"; };
 		48D0BE290E273C5E00863824 /* SaveAbleCollection.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SaveAbleCollection.h; sourceTree = "<group>"; };
@@ -1511,6 +1508,8 @@
 		48EFE0A50E8B6C39007EB7F8 /* FetchItemJob.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = FetchItemJob.cpp; sourceTree = "<group>"; };
 		48EFE0D70E8B6EB1007EB7F8 /* mkdmg.sh */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.script.sh; path = mkdmg.sh; sourceTree = "<group>"; };
 		48EFE0D80E8B6EB1007EB7F8 /* renameinstalldirs.sh */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.script.sh; path = renameinstalldirs.sh; sourceTree = "<group>"; };
+		48FF23FC0FC99D3D00E71D4D /* libboost_system-mt.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = "libboost_system-mt.dylib"; path = "/opt/local/lib/libboost_system-mt.dylib"; sourceTree = "<absolute>"; };
+		48FF23FF0FC99D8700E71D4D /* libboost_filesystem-mt.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = "libboost_filesystem-mt.dylib"; path = "/opt/local/lib/libboost_filesystem-mt.dylib"; sourceTree = "<absolute>"; };
 		8D0C4E960486CD37000505A6 /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist; path = Info.plist; sourceTree = "<group>"; };
 		8D0C4E970486CD37000505A6 /* Rastullah.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Rastullah.app; sourceTree = BUILT_PRODUCTS_DIR; };
 /* End PBXFileReference section */
@@ -1520,12 +1519,12 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				48A52B220E0EDA0E008DBDD8 /* libboost_filesystem.dylib in Frameworks */,
 				444EAEBF0BD0F09900C6D4A0 /* CEGUI.framework in Frameworks */,
 				444EAEC00BD0F09900C6D4A0 /* Ogre.framework in Frameworks */,
 				4836CBCE0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */,
-				48A52CB00E0EF55C008DBDD8 /* libboost_system.dylib in Frameworks */,
 				484FE6BA0E17BC8800FA880F /* Carbon.framework in Frameworks */,
+				48FF23FD0FC99D3D00E71D4D /* libboost_system-mt.dylib in Frameworks */,
+				48FF24000FC99D8700E71D4D /* libboost_filesystem-mt.dylib in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1533,17 +1532,17 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				48A52CB30E0EF577008DBDD8 /* libboost_filesystem.dylib in Frameworks */,
+				48FF24160FC9A19600E71D4D /* libboost_system-mt.dylib in Frameworks */,
 				444EB0AB0BD115CB00C6D4A0 /* libRlCommon.dylib in Frameworks */,
+				48FF240C0FC99F4800E71D4D /* libboost_filesystem-mt.dylib in Frameworks */,
+				48FF240A0FC99F2900E71D4D /* libfmodex.dylib in Frameworks */,
 				483646A20D83D57800912FEC /* libruby.dylib in Frameworks */,
 				444EAEF30BD1150500C6D4A0 /* CEGUI.framework in Frameworks */,
 				444EAEF60BD1150500C6D4A0 /* Ogre.framework in Frameworks */,
 				444EB0890BD1153500C6D4A0 /* OgreNewt.framework in Frameworks */,
 				440785DE0C09D231006E496D /* libmeshmagick.dylib in Frameworks */,
 				4836CBCD0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */,
-				48A52CB10E0EF55C008DBDD8 /* libboost_system.dylib in Frameworks */,
 				484FE6BC0E17BC8800FA880F /* Carbon.framework in Frameworks */,
-				48CA78D80F2A51A400F8E471 /* libfmodex.dylib in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1555,12 +1554,12 @@
 				444EB34A0BD173A900C6D4A0 /* libRlRules.dylib in Frameworks */,
 				444EB12D0BD11A0C00C6D4A0 /* libRlCore.dylib in Frameworks */,
 				444EB1290BD119FB00C6D4A0 /* libRlCommon.dylib in Frameworks */,
+				48FF245A0FC9A53A00E71D4D /* libboost_system-mt.dylib in Frameworks */,
 				444EB0D40BD1198B00C6D4A0 /* CEGUI.framework in Frameworks */,
 				444EB0D60BD1198B00C6D4A0 /* Ogre.framework in Frameworks */,
 				444EB0D80BD1198B00C6D4A0 /* OgreNewt.framework in Frameworks */,
 				444EB0DB0BD119BB00C6D4A0 /* OpenSteer.framework in Frameworks */,
 				4836CBCC0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */,
-				48A52CBC0E0EF77B008DBDD8 /* libboost_system.dylib in Frameworks */,
 				484FE6BD0E17BC8800FA880F /* Carbon.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -1569,6 +1568,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				48FF24560FC9A4F600E71D4D /* libboost_system-mt.dylib in Frameworks */,
 				440785EB0C09D377006E496D /* libmeshmagick.dylib in Frameworks */,
 				444EB3480BD1733900C6D4A0 /* OgreNewt.framework in Frameworks */,
 				444EB3440BD1730C00C6D4A0 /* libRlCommon.dylib in Frameworks */,
@@ -1576,7 +1576,6 @@
 				444EB3410BD172BA00C6D4A0 /* CEGUI.framework in Frameworks */,
 				444EB3420BD172BA00C6D4A0 /* Ogre.framework in Frameworks */,
 				4836CBCB0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */,
-				48A52CBD0E0EF77B008DBDD8 /* libboost_system.dylib in Frameworks */,
 				484FE6BE0E17BC8800FA880F /* Carbon.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -1585,6 +1584,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				48FF245C0FC9A58000E71D4D /* libboost_system-mt.dylib in Frameworks */,
 				48389BC70D86764600AFAB66 /* libRlAi.dylib in Frameworks */,
 				444EB3610BD1756B00C6D4A0 /* libRlRules.dylib in Frameworks */,
 				444EB1CE0BD1595100C6D4A0 /* OgreNewt.framework in Frameworks */,
@@ -1595,7 +1595,6 @@
 				444EB3730BD1784A00C6D4A0 /* OgreCEGUIRenderer.framework in Frameworks */,
 				4857E4E50D46A664009D376D /* OIS.framework in Frameworks */,
 				4836CBCA0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */,
-				48A52CBE0E0EF77C008DBDD8 /* libboost_system.dylib in Frameworks */,
 				484FE6BF0E17BC8800FA880F /* Carbon.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -1605,7 +1604,6 @@
 			buildActionMask = 2147483647;
 			files = (
 				483D87CE0D8C564400F3629E /* libRlScript.dylib in Frameworks */,
-				48A52CC00E0EF77D008DBDD8 /* libboost_system.dylib in Frameworks */,
 				484FE6C20E17BC8800FA880F /* Carbon.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -1624,7 +1622,6 @@
 				48570C480D8A6E9900096E35 /* libRlRules.dylib in Frameworks */,
 				48570C490D8A6E9900096E35 /* libRlUi.dylib in Frameworks */,
 				4836CBC90D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */,
-				48A52CBF0E0EF77C008DBDD8 /* libboost_system.dylib in Frameworks */,
 				484FE6C00E17BC8800FA880F /* Carbon.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -1640,6 +1637,7 @@
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				48FF245E0FC9A59D00E71D4D /* libboost_system-mt.dylib in Frameworks */,
 				444EB7A20BD1963A00C6D4A0 /* CEGUI.framework in Frameworks */,
 				444EB7A80BD1963A00C6D4A0 /* Ogre.framework in Frameworks */,
 				444EB7A90BD1963A00C6D4A0 /* OgreCEGUIRenderer.framework in Frameworks */,
@@ -1652,7 +1650,6 @@
 				444EB7A00BD195E800C6D4A0 /* libRlUi.dylib in Frameworks */,
 				4836F8BC0D885AAA00E3632F /* libruby.dylib in Frameworks */,
 				48570E020D8A6F8300096E35 /* libRlScript.dylib in Frameworks */,
-				48A52CC20E0EF77E008DBDD8 /* libboost_system.dylib in Frameworks */,
 				484FE6BB0E17BC8800FA880F /* Carbon.framework in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
@@ -1679,7 +1676,6 @@
 		20286C29FDCF999611CA2CEA /* Rastullah */ = {
 			isa = PBXGroup;
 			children = (
-				48CA78D70F2A51A400F8E471 /* libfmodex.dylib */,
 				20286C2AFDCF999611CA2CEA /* Engine */,
 				48D401810D9E483200AE5340 /* modules */,
 				20286C2CFDCF999611CA2CEA /* Resources */,
@@ -1719,13 +1715,13 @@
 		20286C32FDCF999611CA2CEA /* External Frameworks and Libraries */ = {
 			isa = PBXGroup;
 			children = (
+				48FF23FC0FC99D3D00E71D4D /* libboost_system-mt.dylib */,
+				48FF23FF0FC99D8700E71D4D /* libboost_filesystem-mt.dylib */,
 				487750AF0E7E3C9C0018216B /* Cg.framework */,
 				48C04B890E67DF0300CD3A7D /* PCRE.framework */,
 				48B0B0480E65BBB30023B198 /* libfmodex.dylib */,
 				48CFBF8E0E2E869000CD0C51 /* FreeType.framework */,
 				484FE6B90E17BC8800FA880F /* Carbon.framework */,
-				48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */,
-				48A52B210E0EDA0E008DBDD8 /* libboost_filesystem.dylib */,
 				4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */,
 				4857E4E40D46A664009D376D /* OIS.framework */,
 				440785DD0C09D231006E496D /* libmeshmagick.dylib */,
@@ -1959,6 +1955,9 @@
 		4851EA4C0EDDC82400AB79E9 /* Source */ = {
 			isa = PBXGroup;
 			children = (
+				489864D70FC4927300736047 /* GenericWorld.cpp */,
+				489864D80FC4927300736047 /* PhysicsCollisionFactory.cpp */,
+				489864D90FC4927300736047 /* PhysicsRagDoll.cpp */,
 				48CA78C70F2A511E00F8E471 /* Fmod4Driver.cpp */,
 				48CA78C80F2A511E00F8E471 /* Fmod4Listener.cpp */,
 				48CA78C90F2A511E00F8E471 /* Fmod4Sound.cpp */,
@@ -2000,8 +1999,6 @@
 				444EAB2C0BD0E2B600C6D4A0 /* CoreSubsystem.cpp */,
 				444EAB2D0BD0E2B600C6D4A0 /* DebugVisualisable.cpp */,
 				444EAB2E0BD0E2B600C6D4A0 /* DebugVisualsManager.cpp */,
-				444EAB2F0BD0E2B600C6D4A0 /* DotSceneLoader.cpp */,
-				444EAB300BD0E2B600C6D4A0 /* DotSceneOctreeWorld.cpp */,
 				444EAB310BD0E2B600C6D4A0 /* FadeAnimation.cpp */,
 				444EAB320BD0E2B600C6D4A0 /* GameAreaEvent.cpp */,
 				444EAB330BD0E2B600C6D4A0 /* GameAreaEventSource.cpp */,
@@ -2048,6 +2045,9 @@
 		4851EA4D0EDDC8CA00AB79E9 /* Header */ = {
 			isa = PBXGroup;
 			children = (
+				489864DD0FC4928A00736047 /* GenericWorld.h */,
+				489864DE0FC4928B00736047 /* PhysicsCollisionFactory.h */,
+				489864DF0FC4928B00736047 /* PhysicsRagDoll.h */,
 				48CA78CF0F2A513100F8E471 /* Fmod4Driver.h */,
 				48CA78D00F2A513100F8E471 /* Fmod4Listener.h */,
 				48CA78D10F2A513100F8E471 /* Fmod4Sound.h */,
@@ -2092,8 +2092,6 @@
 				444EABA90BD0E33300C6D4A0 /* CoreSubsystem.h */,
 				444EABAA0BD0E33300C6D4A0 /* DebugVisualisable.h */,
 				444EABAB0BD0E33300C6D4A0 /* DebugVisualsManager.h */,
-				444EABAC0BD0E33300C6D4A0 /* DotSceneLoader.h */,
-				444EABAD0BD0E33300C6D4A0 /* DotSceneOctreeWorld.h */,
 				444EABAE0BD0E33300C6D4A0 /* FadeAnimation.h */,
 				444EABAF0BD0E33300C6D4A0 /* GameAreaEvent.h */,
 				444EABB00BD0E33300C6D4A0 /* GameAreaEventSource.h */,
@@ -2565,8 +2563,6 @@
 				444EABEA0BD0E33300C6D4A0 /* CoreSubsystem.h in Headers */,
 				444EABEB0BD0E33300C6D4A0 /* DebugVisualisable.h in Headers */,
 				444EABEC0BD0E33300C6D4A0 /* DebugVisualsManager.h in Headers */,
-				444EABED0BD0E33300C6D4A0 /* DotSceneLoader.h in Headers */,
-				444EABEE0BD0E33300C6D4A0 /* DotSceneOctreeWorld.h in Headers */,
 				444EABEF0BD0E33300C6D4A0 /* FadeAnimation.h in Headers */,
 				444EABF00BD0E33300C6D4A0 /* GameAreaEvent.h in Headers */,
 				444EABF10BD0E33300C6D4A0 /* GameAreaEventSource.h in Headers */,
@@ -2639,6 +2635,9 @@
 				48CA78D40F2A513100F8E471 /* Fmod4Listener.h in Headers */,
 				48CA78D50F2A513100F8E471 /* Fmod4Sound.h in Headers */,
 				48CA78D60F2A513100F8E471 /* Fmod4SoundStitching.h in Headers */,
+				489864E00FC4928B00736047 /* GenericWorld.h in Headers */,
+				489864E10FC4928B00736047 /* PhysicsCollisionFactory.h in Headers */,
+				489864E20FC4928B00736047 /* PhysicsRagDoll.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -3081,8 +3080,6 @@
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
-				4869D5300EF055F500619D4D /* libboost_system.dylib in Resources */,
-				4869D5310EF055F600619D4D /* libboost_filesystem.dylib in Resources */,
 				48B0B03C0E6535AB0023B198 /* libmeshmagick.dylib in Resources */,
 				484D921E0E1E078100BCFC2B /* libRlCommon.dylib in Resources */,
 				484D921F0E1E078100BCFC2B /* libRlCore.dylib in Resources */,
@@ -3190,8 +3187,6 @@
 				483646C50D83D62E00912FEC /* SaveGameManager.cpp in Sources */,
 				444EAB6E0BD0E2F300C6D4A0 /* DebugVisualisable.cpp in Sources */,
 				444EAB6F0BD0E2F300C6D4A0 /* DebugVisualsManager.cpp in Sources */,
-				444EAB700BD0E2F300C6D4A0 /* DotSceneLoader.cpp in Sources */,
-				444EAB710BD0E2F300C6D4A0 /* DotSceneOctreeWorld.cpp in Sources */,
 				444EAB720BD0E2F300C6D4A0 /* FadeAnimation.cpp in Sources */,
 				444EAB730BD0E2F300C6D4A0 /* GameAreaEvent.cpp in Sources */,
 				444EAB740BD0E2F300C6D4A0 /* GameAreaEventSource.cpp in Sources */,
@@ -3254,6 +3249,9 @@
 				48CA78CC0F2A511E00F8E471 /* Fmod4Listener.cpp in Sources */,
 				48CA78CD0F2A511E00F8E471 /* Fmod4Sound.cpp in Sources */,
 				48CA78CE0F2A511E00F8E471 /* Fmod4SoundStitching.cpp in Sources */,
+				489864DA0FC4927300736047 /* GenericWorld.cpp in Sources */,
+				489864DB0FC4927300736047 /* PhysicsCollisionFactory.cpp in Sources */,
+				489864DC0FC4927300736047 /* PhysicsRagDoll.cpp in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -3624,8 +3622,7 @@
 				);
 				INSTALL_PATH = "@executable_path/../Resources";
 				LIBRARY_SEARCH_PATHS = (
-					/sw/lib,
-					/usr/local/lib,
+					"$(inherited)",
 					/opt/local/lib,
 				);
 				MACH_O_TYPE = mh_dylib;
@@ -3700,9 +3697,11 @@
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
 					/opt/local/lib,
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2)",
+					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_3)",
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Ruby.framework/Versions/1.8/usr/lib\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
+				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_3 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
 				MACH_O_TYPE = mh_dylib;
 				OTHER_LDFLAGS = "";
 				PREBINDING = NO;
@@ -3746,9 +3745,11 @@
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
 					/opt/local/lib,
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2)",
+					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_3)",
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Ruby.framework/Versions/1.8/usr/lib\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
+				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_3 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
 				OTHER_LDFLAGS = "";
 				PREBINDING = NO;
 				PRODUCT_NAME = RlCore;
@@ -3783,8 +3784,7 @@
 				INSTALL_PATH = "@executable_path/../Resources";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_1)",
-					/sw/lib,
+					/opt/local/lib,
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_1 = "\"$(SRCROOT)/build/Debug\"";
 				MACH_O_TYPE = mh_dylib;
@@ -3819,8 +3819,7 @@
 				INSTALL_PATH = "@executable_path/../Resources";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_1)",
-					/sw/lib,
+					/opt/local/lib,
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_1 = "\"$(SRCROOT)/build/Debug\"";
 				OTHER_LDFLAGS = "";
@@ -3857,6 +3856,7 @@
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_1)",
+					/opt/local/lib,
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_1 = "\"$(SRCROOT)/build/Debug\"";
 				MACH_O_TYPE = mh_dylib;
@@ -3893,6 +3893,7 @@
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_1)",
+					/opt/local/lib,
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_1 = "\"$(SRCROOT)/build/Debug\"";
 				OTHER_LDFLAGS = "";
@@ -3929,7 +3930,10 @@
 					/Library/Frameworks/Xerces.framework/Headers,
 				);
 				INSTALL_PATH = "@executable_path/../Resources";
-				LIBRARY_SEARCH_PATHS = "$(inherited)";
+				LIBRARY_SEARCH_PATHS = (
+					"$(inherited)",
+					/opt/local/lib,
+				);
 				LIBRARY_SEARCH_PATHS_QUOTED_1 = "\"$(SRCROOT)/build/Debug\"";
 				MACH_O_TYPE = mh_dylib;
 				OTHER_LDFLAGS = (
@@ -3969,6 +3973,7 @@
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_1)",
+					/opt/local/lib,
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_1 = "\"$(SRCROOT)/build/Debug\"";
 				OTHER_LDFLAGS = (
@@ -4183,6 +4188,7 @@
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2)",
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_3)",
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_4)",
+					/opt/local/lib,
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SRCROOT)/build/Debug\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Ruby.framework/Versions/1.8/usr/lib\"";
@@ -4217,6 +4223,7 @@
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_2)",
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_3)",
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
+					/opt/local/lib,
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_1 = "\"$(SRCROOT)/build/Debug\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_2 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Ruby.framework/Versions/1.8/usr/lib\"";

Modified: rl/trunk/engine/core/include/stdinc.h
===================================================================
--- rl/trunk/engine/core/include/stdinc.h	2009-05-22 22:18:33 UTC (rev 4940)
+++ rl/trunk/engine/core/include/stdinc.h	2009-05-24 17:05:43 UTC (rev 4941)
@@ -58,6 +58,7 @@
 #include <boost/filesystem/operations.hpp>
 #include <boost/filesystem/exception.hpp>
 #include <boost/any.hpp>
+#include <boost/smartptr.hpp>
 
 #if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
 #  include <Windows.h>

Modified: rl/trunk/engine/core/src/GameAreaTypes.cpp
===================================================================
--- rl/trunk/engine/core/src/GameAreaTypes.cpp	2009-05-22 22:18:33 UTC (rev 4940)
+++ rl/trunk/engine/core/src/GameAreaTypes.cpp	2009-05-24 17:05:43 UTC (rev 4941)
@@ -1,270 +1,272 @@
-/* This source file is part of Rastullahs Lockenpracht.
- * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the Clarified Artistic License.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  Clarified Artistic License for more details.
- *
- *  You should have received a copy of the Clarified Artistic License
- *  along with this program; if not you can get it here
- *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
- */
-#include "stdinc.h" //precompiled header
-
-#include "GameAreaTypes.h"
-
-#include "Actor.h"
-#include "World.h"
-#include "CoreSubsystem.h"
-#include "Exception.h"
-#include "PhysicsManager.h"
-#include "PhysicalThing.h"
-
-
-using namespace Ogre;
-
-namespace rl {
-    GameAreaType::~GameAreaType()
-    {
-    }
-
-    void GameAreaType::addQueryFlag( unsigned long flag  )
-    {
-        setQueryMask(  getQueryMask() | flag );
-    }
-
-    void GameAreaType::removeQueryFlag( unsigned long flag )
-    {
-        setQueryMask(  getQueryMask() &~ flag );
-    }
-}
-
-
-namespace rl {
-/*
-    GameSphereAreaType::GameSphereAreaType(Vector3 center, Real radius, unsigned long mask)
-    {
-        mSphereQuery = CoreSubsystem::getSingleton().getWorld()->
-            getSceneManager()->createSphereQuery( Sphere(center,radius), mask );
-
-        // Keine Welt-Geometrie erw?nscht, nur Movables
-        mSphereQuery->setWorldFragmentType( SceneQuery::WFT_NONE );
-    }
-
-    GameSphereAreaType::~GameSphereAreaType()
-    {
-        mSphereQuery->clearResults();
-        CoreSubsystem::getSingleton().getWorld()->getSceneManager()->destroyQuery( mSphereQuery );
-    }
-
-    ActorMap GameSphereAreaType::performQuery(  )
-    {
-        SceneQueryResult rs = mSphereQuery->execute();
-        SceneQueryResultMovableList movList = rs.movables;
-
-        ActorMap retMap;
-
-        // Durch die Ergebnis Liste iterieren
-        SceneQueryResultMovableList::iterator it;
-        for (it = movList.begin(); it != movList.end(); ++it)
-        {
-            MovableObject* mov = *it;
-            if( mov->getUserObject() != NULL )
-            {
-                // Zur Zeit sind die einzigen an Movables gekn?pfte Objekte Actoren
-                Actor* act = dynamic_cast<Actor*>( mov->getUserObject() );
-                retMap.insert(ActorPair(act->getName(),act));
-            }
-        }
-
-        return retMap;
-    }
-
-    unsigned long GameSphereAreaType::getQueryMask() const
-    {
-        return mSphereQuery->getQueryMask();
-    }
-
-    void GameSphereAreaType::setQueryMask( unsigned long mask )
-    {
-        mSphereQuery->setQueryMask( mask );
-    }
-
-    void GameSphereAreaType::setQueryPosition( const Ogre::Vector3& vec )
-    {
-        // Wurde es bewegt?
-        if( vec != mSphereQuery->getSphere().getCenter( ) )
-            // Kugel muss neu erzeugt werden :(
-            mSphereQuery->setSphere( Sphere(vec,mSphereQuery->getSphere().getRadius()) );
-    }
-
-    Ogre::Vector3 GameSphereAreaType::getQueryPosition() const
-    {
-        return mSphereQuery->getSphere().getCenter( );
-    }
-*/
-
-
-
-    GameNewtonBodyAreaType::GameNewtonBodyAreaType() :
-        mBody(NULL),
-        mTransitionDistance(0)
-    {
-    }
-
-
-    GameNewtonBodyAreaType::~GameNewtonBodyAreaType()
-    {
-        if(mBody != NULL)
-            delete mBody;
-        mBody = NULL;
-    }
-
-    unsigned long GameNewtonBodyAreaType::getQueryMask() const
-    {
-        return mQueryMask;
-    }
-
-    void GameNewtonBodyAreaType::setQueryMask(unsigned long mask)
-    {
-        mQueryMask = mask;
-    }
-
-    Quaternion GameNewtonBodyAreaType::getQueryOrientation() const
-    {
-        Vector3 pos;
-        Quaternion orient;
-        mBody->getPositionOrientation(pos, orient);
-        return orient;
-    }
-
-    Vector3 GameNewtonBodyAreaType::getQueryPosition() const
-    {
-        Vector3 pos;
-        Quaternion orient;
-        mBody->getPositionOrientation(pos, orient);
-        return pos;
-    }
-
-    void GameNewtonBodyAreaType::setQueryPosition(const Vector3 &pos)
-    {
-        Quaternion orient;
-        Vector3 old_pos;
-        mBody->getPositionOrientation(old_pos, orient);
-        mBody->setPositionOrientation(pos, orient);
-    }
-
-    void GameNewtonBodyAreaType::setQueryOrientation(const Quaternion &orient)
-    {
-        Quaternion old_orient;
-        Vector3 pos;
-        mBody->getPositionOrientation(pos, old_orient);
-        mBody->setPositionOrientation(pos, orient);
-    }
-
-    void GameNewtonBodyAreaType::foundCollision(Actor* actor)
-    {
-        if( actor )
-        {
-            unsigned long flags = actor->getQueryFlags();
-            if( flags & mQueryMask )
-                mFoundActors[actor->getName()] = actor;
-        }
-    }
-
-    void GameNewtonBodyAreaType::resetFoundCollisions()
-    {
-        mFoundActors.clear();
-    }
-
-    bool GameNewtonBodyAreaType::isInside(Actor *actor)
-    {
-        return getDistance(actor) <= 0;
-    }
-
-    ActorMap GameNewtonBodyAreaType::performQuery()
-    {
-        return mFoundActors;
-    }
-
-    Ogre::Real GameNewtonBodyAreaType::getDistance(Actor* actor)
-    {
-        if(!actor)
-            Throw(NullPointerException, "Argument actor cannot be NULL!");
-        OgreNewt::World *world = 
-            PhysicsManager::getSingleton()._getNewtonWorld();
-        Vector3 retA, retB, retNorm;
-        Vector3 positionA;
-        Quaternion orientationA;
-        mBody->getPositionOrientation(positionA, orientationA);
-        int intRet = 
-            OgreNewt::CollisionTools::CollisionClosestPoint(
-                world,
-                mBody->getCollision(), orientationA, positionA,
-                actor->getPhysicalThing()->_getBody()->getCollision(),
-                actor->getOrientation(), actor->getPosition(),
-                retA, retB, retNorm, 0); // set threadindex to 0, I hope this is ok!
-
-        if( intRet == 0 )
-            return 0;
-
-        return (retA - retB).length();
-    }
-
-    Ogre::Real GameNewtonBodyAreaType::getTransitionDistance() const
-    {
-        return mTransitionDistance;
-    }
-
-    void GameNewtonBodyAreaType::setTransitionDistance(Ogre::Real dist) 
-    {
-        mTransitionDistance = dist;
-    }
-
-    GameMeshAreaType::GameMeshAreaType(
-            Ogre::Entity* entity,
-            GeometryType geomType,
-			Ogre::Vector3 offset,
-			Ogre::Quaternion orientation)
-    {
-        if(geomType == GT_MESH)
-        {
-            LOG_ERROR(Logger::CORE, "Geometrie Typ 'GT_MESH' is not (yet) support by GameMeshAreaType, use GT_CONVEXHULL instead!");
-            geomType = GT_CONVEXHULL;
-        }
-        OgreNewt::CollisionPtr col =
-            PhysicsManager::getSingleton().createCollision(entity,
-            geomType, "", offset, orientation);
-        mBody = new OgreNewt::Body(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            col);
-        mBody->setMaterialGroupID(
-            PhysicsManager::getSingleton().getMaterialID("gamearea"));
-
-        boost::dynamic_pointer_cast<OgreNewt::ConvexCollision>(col)->setAsTriggerVolume(true);
-    }
-
-    GameSimpleCollisionAreaType::GameSimpleCollisionAreaType(
-            Ogre::AxisAlignedBox aabb,
-            GeometryType geomType,
-            Ogre::Vector3 offset,
-            Ogre::Quaternion orientation)
-    {
-        OgreNewt::CollisionPtr col =
-            PhysicsManager::getSingleton().createCollision(
-            "", aabb, geomType, offset, orientation, 0, NULL, NULL, true);
-        mBody = new OgreNewt::Body(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            col);
-        mBody->setMaterialGroupID(
-            PhysicsManager::getSingleton().getMaterialID("gamearea"));
-
-        boost::dynamic_pointer_cast<OgreNewt::ConvexCollision>(col)->setAsTriggerVolume(true);
-    }
-
-}
-
+/* This source file is part of Rastullahs Lockenpracht.
+ * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the Clarified Artistic License.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  Clarified Artistic License for more details.
+ *
+ *  You should have received a copy of the Clarified Artistic License
+ *  along with this program; if not you can get it here
+ *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+ */
+#include "stdinc.h" //precompiled header
+
+#include "GameAreaTypes.h"
+
+#include <boost/smart_ptr.hpp>
+
+#include "Actor.h"
+#include "World.h"
+#include "CoreSubsystem.h"
+#include "Exception.h"
+#include "PhysicsManager.h"
+#include "PhysicalThing.h"
+
+
+using namespace Ogre;
+
+namespace rl {
+    GameAreaType::~GameAreaType()
+    {
+    }
+
+    void GameAreaType::addQueryFlag( unsigned long flag  )
+    {
+        setQueryMask(  getQueryMask() | flag );
+    }
+
+    void GameAreaType::removeQueryFlag( unsigned long flag )
+    {
+        setQueryMask(  getQueryMask() &~ flag );
+    }
+}
+
+
+namespace rl {
+/*
+    GameSphereAreaType::GameSphereAreaType(Vector3 center, Real radius, unsigned long mask)
+    {
+        mSphereQuery = CoreSubsystem::getSingleton().getWorld()->
+            getSceneManager()->createSphereQuery( Sphere(center,radius), mask );
+
+        // Keine Welt-Geometrie erw??nscht, nur Movables
+        mSphereQuery->setWorldFragmentType( SceneQuery::WFT_NONE );
+    }
+
+    GameSphereAreaType::~GameSphereAreaType()
+    {
+        mSphereQuery->clearResults();
+        CoreSubsystem::getSingleton().getWorld()->getSceneManager()->destroyQuery( mSphereQuery );
+    }
+
+    ActorMap GameSphereAreaType::performQuery(  )
+    {
+        SceneQueryResult rs = mSphereQuery->execute();
+        SceneQueryResultMovableList movList = rs.movables;
+
+        ActorMap retMap;
+
+        // Durch die Ergebnis Liste iterieren
+        SceneQueryResultMovableList::iterator it;
+        for (it = movList.begin(); it != movList.end(); ++it)
+        {
+            MovableObject* mov = *it;
+            if( mov->getUserObject() != NULL )
+            {
+                // Zur Zeit sind die einzigen an Movables gekn??pfte Objekte Actoren
+                Actor* act = dynamic_cast<Actor*>( mov->getUserObject() );
+                retMap.insert(ActorPair(act->getName(),act));
+            }
+        }
+
+        return retMap;
+    }
+
+    unsigned long GameSphereAreaType::getQueryMask() const
+    {
+        return mSphereQuery->getQueryMask();
+    }
+
+    void GameSphereAreaType::setQueryMask( unsigned long mask )
+    {
+        mSphereQuery->setQueryMask( mask );
+    }
+
+    void GameSphereAreaType::setQueryPosition( const Ogre::Vector3& vec )
+    {
+        // Wurde es bewegt?
+        if( vec != mSphereQuery->getSphere().getCenter( ) )
+            // Kugel muss neu erzeugt werden :(
+            mSphereQuery->setSphere( Sphere(vec,mSphereQuery->getSphere().getRadius()) );
+    }
+
+    Ogre::Vector3 GameSphereAreaType::getQueryPosition() const
+    {
+        return mSphereQuery->getSphere().getCenter( );
+    }
+*/
+
+
+
+    GameNewtonBodyAreaType::GameNewtonBodyAreaType() :
+        mBody(NULL),
+        mTransitionDistance(0)
+    {
+    }
+
+
+    GameNewtonBodyAreaType::~GameNewtonBodyAreaType()
+    {
+        if(mBody != NULL)
+            delete mBody;
+        mBody = NULL;
+    }
+
+    unsigned long GameNewtonBodyAreaType::getQueryMask() const
+    {
+        return mQueryMask;
+    }
+
+    void GameNewtonBodyAreaType::setQueryMask(unsigned long mask)
+    {
+        mQueryMask = mask;
+    }
+
+    Quaternion GameNewtonBodyAreaType::getQueryOrientation() const
+    {
+        Vector3 pos;
+        Quaternion orient;
+        mBody->getPositionOrientation(pos, orient);
+        return orient;
+    }
+
+    Vector3 GameNewtonBodyAreaType::getQueryPosition() const
+    {
+        Vector3 pos;
+        Quaternion orient;
+        mBody->getPositionOrientation(pos, orient);
+        return pos;
+    }
+
+    void GameNewtonBodyAreaType::setQueryPosition(const Vector3 &pos)
+    {
+        Quaternion orient;
+        Vector3 old_pos;
+        mBody->getPositionOrientation(old_pos, orient);
+        mBody->setPositionOrientation(pos, orient);
+    }
+
+    void GameNewtonBodyAreaType::setQueryOrientation(const Quaternion &orient)
+    {
+        Quaternion old_orient;
+        Vector3 pos;
+        mBody->getPositionOrientation(pos, old_orient);
+        mBody->setPositionOrientation(pos, orient);
+    }
+
+    void GameNewtonBodyAreaType::foundCollision(Actor* actor)
+    {
+        if( actor )
+        {
+            unsigned long flags = actor->getQueryFlags();
+            if( flags & mQueryMask )
+                mFoundActors[actor->getName()] = actor;
+        }
+    }
+
+    void GameNewtonBodyAreaType::resetFoundCollisions()
+    {
+        mFoundActors.clear();
+    }
+
+    bool GameNewtonBodyAreaType::isInside(Actor *actor)
+    {
+        return getDistance(actor) <= 0;
+    }
+
+    ActorMap GameNewtonBodyAreaType::performQuery()
+    {
+        return mFoundActors;
+    }
+
+    Ogre::Real GameNewtonBodyAreaType::getDistance(Actor* actor)
+    {
+        if(!actor)
+            Throw(NullPointerException, "Argument actor cannot be NULL!");
+        OgreNewt::World *world = 
+            PhysicsManager::getSingleton()._getNewtonWorld();
+        Vector3 retA, retB, retNorm;
+        Vector3 positionA;
+        Quaternion orientationA;
+        mBody->getPositionOrientation(positionA, orientationA);
+        int intRet = 
+            OgreNewt::CollisionTools::CollisionClosestPoint(
+                world,
+                mBody->getCollision(), orientationA, positionA,
+                actor->getPhysicalThing()->_getBody()->getCollision(),
+                actor->getOrientation(), actor->getPosition(),
+                retA, retB, retNorm, 0); // set threadindex to 0, I hope this is ok!
+
+        if( intRet == 0 )
+            return 0;
+
+        return (retA - retB).length();
+    }
+
+    Ogre::Real GameNewtonBodyAreaType::getTransitionDistance() const
+    {
+        return mTransitionDistance;
+    }
+
+    void GameNewtonBodyAreaType::setTransitionDistance(Ogre::Real dist) 
+    {
+        mTransitionDistance = dist;
+    }
+
+    GameMeshAreaType::GameMeshAreaType(
+            Ogre::Entity* entity,
+            GeometryType geomType,
+			Ogre::Vector3 offset,
+			Ogre::Quaternion orientation)
+    {
+        if(geomType == GT_MESH)
+        {
+            LOG_ERROR(Logger::CORE, "Geometrie Typ 'GT_MESH' is not (yet) support by GameMeshAreaType, use GT_CONVEXHULL instead!");
+            geomType = GT_CONVEXHULL;
+        }
+        OgreNewt::CollisionPtr col =
+            PhysicsManager::getSingleton().createCollision(entity,
+            geomType, "", offset, orientation);
+        mBody = new OgreNewt::Body(
+            PhysicsManager::getSingleton()._getNewtonWorld(),
+            col);
+        mBody->setMaterialGroupID(
+            PhysicsManager::getSingleton().getMaterialID("gamearea"));
+
+        boost::dynamic_pointer_cast<OgreNewt::ConvexCollision>(col)->setAsTriggerVolume(true);
+    }
+
+    GameSimpleCollisionAreaType::GameSimpleCollisionAreaType(
+            Ogre::AxisAlignedBox aabb,
+            GeometryType geomType,
+            Ogre::Vector3 offset,
+            Ogre::Quaternion orientation)
+    {
+        OgreNewt::CollisionPtr col =
+            PhysicsManager::getSingleton().createCollision(
+            "", aabb, geomType, offset, orientation, 0, NULL, NULL, true);
+        mBody = new OgreNewt::Body(
+            PhysicsManager::getSingleton()._getNewtonWorld(),
+            col);
+        mBody->setMaterialGroupID(
+            PhysicsManager::getSingleton().getMaterialID("gamearea"));
+
+        boost::dynamic_pointer_cast<OgreNewt::ConvexCollision>(col)->setAsTriggerVolume(true);
+    }
+
+}
+

Modified: rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp
===================================================================
--- rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp	2009-05-22 22:18:33 UTC (rev 4940)
+++ rl/trunk/engine/core/src/PhysicsCollisionFactory.cpp	2009-05-24 17:05:43 UTC (rev 4941)
@@ -1,790 +1,790 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-*
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#include "stdinc.h" //precompiled header
-
-#include "Exception.h"
-#include "PhysicsCollisionFactory.h"
-#include "PhysicsManager.h"
-#include "ConfigurationManager.h"
-
-#include <boost/filesystem/operations.hpp>
-#include <boost/filesystem/exception.hpp>
-
-namespace fs = boost::filesystem;
-
-#ifdef __APPLE__
-#   include <Ogre/OgreMesh.h>
-#else
-#   include <OgreMesh.h>
-#endif
-
-
-
-using namespace std;
-using namespace OgreNewt;
-using namespace Ogre;
-
-
-namespace rl
-{
-
-    PhysicsCollisionFactory::PhysicsCollisionFactory() :
-        mCollisionSerializer()
-    {
-
-#       if OGRE_PLATFORM == OGRE_PLATFORM_LINUX
-        mCachePathName = Ogre::String( Ogre::String(::getenv("HOME")) + "/.rastullah/cache/");
-        fs::path cachePath( mCachePathName, fs::portable_posix_name);
-#       else
-        mCachePathName = Ogre::String( ConfigurationManager::getSingleton().getModulesRootDirectory() + "/cache/" );
-        fs::path cachePath( mCachePathName );
-#       endif
-
-        if( !fs::exists(cachePath) )
-            fs::create_directory(cachePath);
-    }
-
-
-    PhysicsCollisionFactory::~PhysicsCollisionFactory()
-    {
-        clearCollisionCache();
-    }
-
-    void PhysicsCollisionFactory::clearCollisionCache()
-    {
-        mMeshCollisionsCache.clear();
-        mConvexCollisionsCache.clear();
-        mConvexAABBCollisionsCache.clear();
-    }
-
-    bool PhysicsCollisionFactory::checkSize(const Ogre::AxisAlignedBox& aabb) const
-    {
-        Ogre::Vector3 size = aabb.getSize();
-        if( size.x < PhysicsManager::NEWTON_GRID_WIDTH ||
-            size.y < PhysicsManager::NEWTON_GRID_WIDTH ||
-            size.z < PhysicsManager::NEWTON_GRID_WIDTH )
-            return false;
-        return true;
-    }
-
-    void PhysicsCollisionFactory::correctSize(Ogre::AxisAlignedBox& aabb)
-    {
-        Ogre::Vector3 size = aabb.getSize();
-        // correct size, log warning and fail back to box
-        if (size.x < PhysicsManager::NEWTON_GRID_WIDTH)
-            size.x = PhysicsManager::NEWTON_GRID_WIDTH;
-        if (size.y < PhysicsManager::NEWTON_GRID_WIDTH)
-            size.y = PhysicsManager::NEWTON_GRID_WIDTH;
-        if (size.z < PhysicsManager::NEWTON_GRID_WIDTH)
-            size.z = PhysicsManager::NEWTON_GRID_WIDTH;
-        LOG_MESSAGE(Logger::CORE, "Correcting collision primitiv size");
-        Ogre::Vector3 center = aabb.getCenter();
-        aabb.setMaximum(center + 0.5*size);
-        aabb.setMinimum(center - 0.5*size);
-    }
-
-    OgreNewt::CollisionPtr PhysicsCollisionFactory::createCollisionFromAABB(
-        const Ogre::String& name,
-        const Ogre::AxisAlignedBox& passedAabb,
-        const GeometryType& geomType,
-        const Ogre::Vector3 &offset,
-        const Ogre::Quaternion &orientation,
-        const Ogre::Real mass,
-        Ogre::Vector3* inertia,
-        Ogre::Vector3* centerOfMass,
-        bool nocache)
-    {
-
-        // don't cache if the name is ""
-        if( name == "" )
-            nocache = true;
-
-
-        Ogre::AxisAlignedBox aabb(passedAabb);
-        // type for the collision primitiv (can change internally here)
-        bool forceBox (false);
-
-        // result value
-        ConvexCollisionPtr rval;
-
-        // size check (if object is too small, it falls back to a box primitiv
-        if (checkSize(aabb) == false )
-        {
-            correctSize(aabb);
-            LOG_WARNING(Logger::CORE,
-                " AABB is too small, using 'box' instead of primitiv '" +
-                PhysicsManager::convertGeometryTypeToString(geomType));
-            forceBox = true;
-        }
-
-        // check if the geometry type is supported for aabb
-        if (geomType == GT_CONVEXHULL ||
-            geomType == GT_MESH)
-        {
-            LOG_WARNING(Logger::CORE,
-                " the geometry type '"+
-                PhysicsManager::convertGeometryTypeToString(geomType)+
-                "' is not supported for aabb, fail back to box");
-            forceBox = true;
-        }
-
-
-        ConvexCollisionCacheMap::iterator convexCacheIt = mConvexAABBCollisionsCache.end();
-
-        // check if we can reuse a cached collision
-        if( !nocache )
-        {
-            if( !forceBox )
-            {
-                Ogre::String index(name);
-                std::pair<ConvexCollisionCacheMap::iterator,bool> iterBoolPair = mConvexAABBCollisionsCache.insert(std::make_pair(index, ConvexCollisionCacheObject()));
-                convexCacheIt = iterBoolPair.first;
-                if( !iterBoolPair.second )
-                {
-                    // there was already an element, check type, the size, offset etc if we can use it
-                    if( geomType != convexCacheIt->second.type )
-                    {
-                        LOG_MESSAGE(Logger::CORE, "Performance warning: trying to create a collision for aabb '" + name +
-                                "' with geometry-type '"+PhysicsManager::convertGeometryTypeToString(geomType)+
-                                "'. There's already a collision with type '"+PhysicsManager::convertGeometryTypeToString(convexCacheIt->second.type)+"'!");
-                    }
-                    else if( aabb.getSize() == convexCacheIt->second.scale && offset == convexCacheIt->second.offset && orientation == convexCacheIt->second.orientation )
-                    {
-                        // everything fine, reuse it
-                        rval = convexCacheIt->second.col;
-
-                        if( inertia != NULL )
-                            *inertia = convexCacheIt->second.inertia;
-                        if( centerOfMass != NULL )
-                            *centerOfMass = convexCacheIt->second.centerOfMass;
-
-                        LOG_DEBUG(Logger::CORE, "Reused collision for aabb '" + name + "'.");
-
-                        return rval;
-                    }
-                }
-            }
-        }
-
-
-        /* differentiate between the different collision primitives, because they all
-		   need different offset and probably different orientation values.
-		   Newton SDK is really nifty and helps here, because we can shift the origin
-		   of the coordinate system of the primitiv we create into any position we
-		   desire. Actually this is the bottom middle of our mesh - as the meshes are
-		   always constructed like that.
-	    */
-        if( !rval )
-        {
-            if (geomType == GT_BOX || forceBox == true)
-            {
-                rval = createBox(aabb, offset, orientation);
-            }
-            else if (geomType == GT_PYRAMID)
-            {
-                rval = createPyramid(aabb, offset, orientation);
-            }
-            else if (geomType == GT_SPHERE)
-            {
-                rval = createSphere(aabb, offset, orientation);
-            }
-            else if (geomType == GT_ELLIPSOID)
-            {
-                rval = createEllipsoid(aabb, offset, orientation);
-            }
-            else if (geomType == GT_CAPSULE)
-            {
-                rval = createCapsule(aabb, offset, orientation);
-            }
-        }
-
-        if ( rval == NULL )
-        {
-            LOG_WARNING(Logger::CORE, " creating collision primitiv '"+
-                PhysicsManager::convertGeometryTypeToString(geomType)+"' for AABB '"+ name
-                +"' failed.");
-
-            // delete cacheobject
-            if( convexCacheIt != mConvexAABBCollisionsCache.end() )
-            {
-                mConvexAABBCollisionsCache.erase( convexCacheIt );
-            }
-        }
-        else
-        {
-            LOG_DEBUG(Logger::CORE, " collision primitiv '"+
-                PhysicsManager::convertGeometryTypeToString(geomType)+"' created for AABB '"+
-                name+"'");
-        }
-
-
-        // calculate inertia / centerOfMass if requested
-        // and save collision in cache
-        if( rval)
-        {
-            if( convexCacheIt != mConvexAABBCollisionsCache.end() )
-            {
-                // save collision in cache
-                Vector3 temp_inertia, temp_centerOfMass;
-                rval->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
-
-                convexCacheIt->second.col = rval;
-                convexCacheIt->second.scale = aabb.getSize();
-                convexCacheIt->second.offset = offset;
-                convexCacheIt->second.orientation = orientation;
-                convexCacheIt->second.inertia = temp_inertia;
-                convexCacheIt->second.centerOfMass = temp_centerOfMass;
-                convexCacheIt->second.type = geomType;
-
-                if( inertia != NULL )
-                    *inertia = temp_inertia*mass;
-                if( centerOfMass != NULL )
-                    *centerOfMass = temp_centerOfMass;
-            }
-            else if (inertia != NULL || centerOfMass != NULL )
-            {
-                Vector3 temp_inertia, temp_centerOfMass;
-                rval->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
-                if( inertia != NULL )
-                    *inertia = temp_inertia*mass;
-                if( centerOfMass != NULL )
-                    *centerOfMass = temp_centerOfMass;
-            }
-        }
-
-        return rval;
-    }
-
-
-    OgreNewt::CollisionPtr PhysicsCollisionFactory::createCollisionFromEntity(Ogre::Entity* entity,
-        const GeometryType& geomType,
-        const Ogre::String& animName,
-        const Ogre::Vector3 &offset,
-        const Ogre::Quaternion &orientation,
-        const Ogre::Real mass,
-        Ogre::Vector3* inertia,
-        Ogre::Vector3* centerOfMass,
-        bool nocache)
-    {
-        // bounding box of the mesh
-        Ogre::AxisAlignedBox aabb(entity->getBoundingBox());
-        // apply scale if attached to a node (like in OgreNewt for convexhull)
-        Ogre::Vector3 scale = Ogre::Vector3::UNIT_SCALE;
-        if( entity->getParentNode() )
-        {
-            scale = entity->getParentNode()->getScale();
-            aabb.scale(scale);
-        }
-
-        // type for the collision primitiv (can change internally here)
-        bool forceBox (false);
-
-        // result value
-        CollisionPtr rval;
-        ConvexCollisionPtr rvalAsConvexCollision; // store pointer to ConvexCollision, so we don't need to cast
-                                                  // this also indicates, that it is possible to calculate inertia/centerOfMass
-
-        // size check (if object is too small, it falls back to a box primitiv
-        if (checkSize(aabb) == false )
-        {
-            correctSize(aabb);
-            LOG_MESSAGE(Logger::CORE, " Entity '"+entity->getName()+
-                "' is too small, using 'box' instead of primitiv '"+
-                PhysicsManager::convertGeometryTypeToString(geomType));
-            forceBox = true;
-        }
-
-
-        if( geomType == GT_MESH )
-        {
-            if( offset != Ogre::Vector3::ZERO || orientation != Ogre::Quaternion::IDENTITY )
-            {
-                LOG_WARNING(Logger::CORE, " Cannot set collision offset or orientation when using mesh-collision (entity: '" +
-                        entity->getName()+"')!");
-            }
-            if( inertia || centerOfMass )
-            {
-                LOG_WARNING(Logger::CORE, " Cannot calculate inertia or center of mass when using mesh-collision (entity: '" +
-                        entity->getName()+"')!");
-            }
-        }
-
-
-        MeshCollisionCacheMap::iterator meshCacheIt = mMeshCollisionsCache.end();
-        ConvexCollisionCacheMap::iterator convexCacheIt = mConvexCollisionsCache.end();
-
-        // check if we can reuse a cached collision
-        if( !nocache )
-        {
-            // use meshcollisionscache
-            if( geomType == GT_MESH && !forceBox )
-            {
-                StringVector index(entity->getMesh()->getName() + animName, scale);
-                std::pair<MeshCollisionCacheMap::iterator,bool> iterBoolPair = mMeshCollisionsCache.insert(std::make_pair(index, MeshCollisionCacheObject()));
-                meshCacheIt = iterBoolPair.first;
-                if( !iterBoolPair.second )
-                {
-                    // there was already an element -- so we can reuse it
-
-                    LOG_DEBUG(Logger::CORE, "Reused collision for entity '" + entity->getName() + "' (mesh: '"
-                            + entity->getMesh()->getName() + "', animation: '" + animName + "').");
-                    rval = iterBoolPair.first->second.col;
-
-                    return rval;
-                }
-            }
-            // use convexcollisionscache
-            else if( !forceBox )
-            {
-                Ogre::String index(entity->getMesh()->getName() + animName);
-                std::pair<ConvexCollisionCacheMap::iterator,bool> iterBoolPair = mConvexCollisionsCache.insert(std::make_pair(index, ConvexCollisionCacheObject()));
-                convexCacheIt = iterBoolPair.first;
-                if( !iterBoolPair.second )
-                {
-                    // there was already an element, check type, the size, offset etc if we can use it
-                    if( geomType != convexCacheIt->second.type )
-                    {
-                        LOG_MESSAGE(Logger::CORE, "Performance warning: trying to create a collision for entity '"+entity->getName()+"' with animation '"+
-                                animName+"' with geometry-type '"+PhysicsManager::convertGeometryTypeToString(geomType)+
-                                "'. There's already a collision with type '"+PhysicsManager::convertGeometryTypeToString(convexCacheIt->second.type)+"'!");
-                    }
-                    else if( scale == convexCacheIt->second.scale && offset == convexCacheIt->second.offset && orientation == convexCacheIt->second.orientation )
-                    {
-                        // everything fine, reuse it
-                        rval = convexCacheIt->second.col;
-
-                        if( inertia != NULL )
-                            *inertia = convexCacheIt->second.inertia;
-                        if( centerOfMass != NULL )
-                            *centerOfMass = convexCacheIt->second.centerOfMass;
-
-                        LOG_DEBUG(Logger::CORE, "Reused collision for entity '" + entity->getName() + "' (mesh: '"
-                            + entity->getMesh()->getName() + "', animation: '" + animName + "').");
-
-                        return rval;
-                    }
-                    else if( geomType == GT_CONVEXHULL ) // for simple types just use create a new collision
-                    {
-                        // we need to rescale (or change offset or orientation)
-                        // the old transformation
-                        Ogre::Matrix4 oldInvTransformation;
-                        oldInvTransformation.makeInverseTransform(convexCacheIt->second.offset, convexCacheIt->second.scale, convexCacheIt->second.orientation);
-                        // the new transformation
-                        Ogre::Matrix4 newTransformation;
-                        newTransformation.makeTransform(offset, scale, orientation);
-
-                        // the needed transformation from old to new:
-                        Ogre::Matrix4 transformation = oldInvTransformation*newTransformation;
-
-                        OgreNewt::ConvexModifierCollision *convexModCol = new OgreNewt::ConvexModifierCollision(
-                                PhysicsManager::getSingleton()._getNewtonWorld(),convexCacheIt->second.col);
-                        convexModCol->setScalarMatrix(transformation);
-
-                        // set the convexcollision-ptr, so centerOfMass and inertia can be calculated
-                        rval = OgreNewt::ConvexCollisionPtr(convexModCol);
-
-
-                        LOG_DEBUG(Logger::CORE, "Reused collision for entity '" + entity->getName() + "' (mesh: '"
-                                + entity->getMesh()->getName() + "', animation: '" + animName + "') with a ConvexModifierCollision.");
-
-                        // calculate inertia / centerOfMass if needed
-                        if (inertia != NULL || centerOfMass != NULL )
-                        {
-                            Vector3 temp_inertia, temp_centerOfMass;
-                            rvalAsConvexCollision->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
-                            if( inertia != NULL )
-                                *inertia = temp_inertia*mass;
-                            if( centerOfMass != NULL )
-                                *centerOfMass = temp_centerOfMass;
-                        }
-
-                        return rval;
-                    }
-                }
-            }
-        }
-
-		/* differentiate between the different collision primitives, because they all
-		   need different offset and probably different orientation values.
-		   Newton SDK is really nifty and helps here, because we can shift the origin
-		   of the coordinate system of the primitiv we create into any position we
-		   desire. Actually this is the bottom middle of our mesh - as the meshes are
-		   always constructed like that.
-	    */
-        if (geomType == GT_BOX || forceBox == true)
-        {
-            rvalAsConvexCollision = createBox(aabb, offset, orientation);
-            rval = rvalAsConvexCollision;
-        }
-        else if (geomType == GT_PYRAMID)
-        {
-            rvalAsConvexCollision = createPyramid(aabb, offset, orientation);
-            rval = rvalAsConvexCollision;
-        }
-        else if (geomType == GT_SPHERE)
-        {
-            rvalAsConvexCollision = createSphere(aabb, offset, orientation);
-            rval = rvalAsConvexCollision;
-        }
-        else if (geomType == GT_ELLIPSOID)
-        {
-            rvalAsConvexCollision = createEllipsoid(aabb, offset, orientation);
-            rval = rvalAsConvexCollision;
-        }
-        else if (geomType == GT_CAPSULE)
-        {
-            rvalAsConvexCollision = createCapsule(aabb, offset, orientation);
-            rval = rvalAsConvexCollision;
-        }
-        else if (geomType == GT_CONVEXHULL)
-        {
-            rvalAsConvexCollision = createConvexHull(entity, offset, orientation);
-            rval = rvalAsConvexCollision;
-        }
-        else if (geomType == GT_MESH)
-        {
-            rval = createMesh( entity, animName, nocache );
-
-            if( meshCacheIt != mMeshCollisionsCache.end() )
-                meshCacheIt->second.col = rval;
-        }
-        else
-        {
-            Throw(IllegalArgumentException, "unknown geometry type.");
-        }
-
-
-        if ( rval == NULL )
-        {
-            LOG_WARNING(Logger::CORE, " creating collision primitiv '"+
-                PhysicsManager::convertGeometryTypeToString(geomType)+"' for Entity '"+
-                entity->getName()+"' failed.");
-
-            // delete cacheobject
-            if( meshCacheIt != mMeshCollisionsCache.end() )
-            {
-                mMeshCollisionsCache.erase( meshCacheIt );
-            }
-            if( convexCacheIt != mConvexCollisionsCache.end() )
-            {
-                mConvexCollisionsCache.erase( convexCacheIt );
-            }
-        }
-        else
-        {
-            LOG_DEBUG(Logger::CORE, " collision primitiv '"+
-                PhysicsManager::convertGeometryTypeToString(geomType)+"' created for Entity '"+
-                entity->getName()+"'");
-        }
-
-        // calculate inertia / centerOfMass if requested
-        // and save collision in cache
-        if( rvalAsConvexCollision )
-        {
-            if( convexCacheIt != mConvexCollisionsCache.end() )
-            {
-                // save collision in cache
-                Vector3 temp_inertia, temp_centerOfMass;
-                rvalAsConvexCollision->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
-
-                convexCacheIt->second.col = rvalAsConvexCollision;
-                convexCacheIt->second.scale = scale;
-                convexCacheIt->second.offset = offset;
-                convexCacheIt->second.orientation = orientation;
-                convexCacheIt->second.inertia = temp_inertia;
-                convexCacheIt->second.centerOfMass = temp_centerOfMass;
-                convexCacheIt->second.type = geomType;
-
-                if( inertia != NULL )
-                    *inertia = temp_inertia*mass;
-                if( centerOfMass != NULL )
-                    *centerOfMass = temp_centerOfMass;
-            }
-            else if (inertia != NULL || centerOfMass != NULL )
-            {
-                Vector3 temp_inertia, temp_centerOfMass;
-                rvalAsConvexCollision->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
-                if( inertia != NULL )
-                    *inertia = temp_inertia*mass;
-                if( centerOfMass != NULL )
-                    *centerOfMass = temp_centerOfMass;
-            }
-        }
-
-        return rval;
-    }
-
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createBox(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3 &offset,
-            const Ogre::Quaternion &orientation)
-    {
-        // offset relative to center
-        Ogre::Vector3 offsetInGlobalSpace = offset + aabb.getCenter();
-
-        // a box collision primitiv has got it's coordinate system at it's center, so we need to shift it
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Box(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            aabb.getSize(), orientation, offsetInGlobalSpace));
-
-       return rval;
-    }
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createPyramid(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3 &offset,
-            const Ogre::Quaternion &orientation)
-    {
-        // offset relative to center
-        Ogre::Vector3 offsetInGlobalSpace = offset + aabb.getCenter();
-
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Pyramid(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            aabb.getSize(), orientation, offsetInGlobalSpace));
-
-       return rval;
-    }
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createSphere(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3 &offset,
-            const Ogre::Quaternion &orientation)
-    {
-        // offset relative to center
-        Ogre::Vector3 offsetInGlobalSpace = offset + aabb.getCenter();
-
-        Ogre::Vector3 size = aabb.getSize();
-        // calculate the maximum radius needed to include 'everything'
-        double radius = std::max(size.x, std::max(size.y, size.z)) / 2.0;
- 
-        // a sphere primitiv has got its coordinate system at its center, so shift it with radius
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Ellipsoid(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            Vector3(radius, radius, radius), orientation, offsetInGlobalSpace));
- 
-       return rval;
-    }
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createEllipsoid(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3 &offset,
-            const Ogre::Quaternion &orientation)
-    {
-        // offset relative to center
-        Ogre::Vector3 offsetInGlobalSpace = offset + aabb.getCenter();
-
-        Ogre::Vector3 size = aabb.getSize();
-        // set the size x/z values to the maximum
-        Vector3 s(size/2.0);
-        s.x = std::max(s.x, s.z);
-        s.z = s.x;
-
-        // an ellipsoid primitiv has got its coordinate system at its center, so shift it with radius
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Ellipsoid(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            s, orientation, offsetInGlobalSpace));
-
-       return rval;
-    }
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createCapsule(const Ogre::AxisAlignedBox& aabb,
-            const Ogre::Vector3 &offset,
-            const Ogre::Quaternion &orientation)
-    {
-        // offset relative to center
-        Ogre::Vector3 offsetInGlobalSpace = offset + aabb.getCenter();
-        // @todo: fixme: this is a semi ugly fix - because the orientation should be set by the loader
-        //object_orientation.FromAngleAxis(Degree(90), Vector3::UNIT_Z);
-
-        Ogre::Vector3 size = aabb.getSize();
-
-        double radius = std::max(size.x, size.z) / 2.0;
-		double height = size.y;
-
-        // an capsule primitiv has got its coordinate system at its center, so shift it with radius
-        // additionally it is x axis aligned, so rotate it 90 degrees around z axis
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Capsule(
-            PhysicsManager::getSingleton()._getNewtonWorld(),
-            radius, height, orientation, offsetInGlobalSpace));
-
-        return rval;
-    }
-
-
-
-    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createConvexHull(
-            Ogre::Entity* entity,
-            const Ogre::Vector3 &offset,
-            const Ogre::Quaternion &orientation)
-    {
-        Ogre::Vector3 offsetInGlobalSpace = offset;
-
-        // calculate the convex hull of the animated mesh
-        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::ConvexHull(
-                    PhysicsManager::getSingleton()._getNewtonWorld(),
-                    entity, orientation, offsetInGlobalSpace));
-
-        return rval;
-    }
-
-
-    OgreNewt::CollisionPtr PhysicsCollisionFactory::loadFromFile(const Ogre::String& filename)
-    {
-        OgreNewt::CollisionPtr rval;
-        Ogre::String fullfilename = mCachePathName+filename;
-        FILE* pFile = fopen(fullfilename.c_str(), "r" );
-        if( pFile )
-        {
-            Ogre::DataStreamPtr streamPtr( new Ogre::FileHandleDataStream( pFile ) );
-            rval = mCollisionSerializer.importCollision( streamPtr, PhysicsManager::getSingleton()._getNewtonWorld() );
-
-            if( rval )
-            {
-                LOG_DEBUG(Logger::CORE, "Loaded collision from file '" + filename + "'.");
-            }
-        }
-
-        return rval;
-    }
-
-
-
-    void PhysicsCollisionFactory::saveToFile(OgreNewt::CollisionPtr col, const Ogre::String& filename)
-    {
-        mCollisionSerializer.exportCollision(col, mCachePathName + filename);
-    }
-
-
-
-    OgreNewt::CollisionPtr PhysicsCollisionFactory::createMesh( Ogre::Entity* entity, const Ogre::String& animName, bool nocache )
-    {
-        OgreNewt::CollisionPtr rval;
-        Ogre::String filename;
-
-        if( !nocache )
-        {
-            Ogre::Vector3 scale(Ogre::Vector3::UNIT_SCALE);
-            if( entity->getParentNode() )
-                scale = entity->getParentNode()->getScale();
-
-            filename = entity->getMesh()->getName() + animName + Ogre::StringConverter::toString(scale) + ".collision";
-
-            // check date of cache file and mesh
-            time_t meshFileModified = 
-                Ogre::ResourceGroupManager::getSingleton().resourceModifiedTime(
-                        entity->getMesh()->getGroup(),
-                        entity->getMesh()->getName());
-
-#if OGRE_PLATFORM == OGRE_PLATFORM_LINUX
-            fs::path cacheFilePath( mCachePathName+filename, fs::portable_posix_name);
-#else
-            fs::path cacheFilePath( mCachePathName+filename );
-#endif
-
-            time_t cacheFileModified = 0;
-            if( fs::exists(cacheFilePath) )
-                cacheFileModified = fs::last_write_time(cacheFilePath);
-
-
-            if( cacheFileModified > meshFileModified )        
-                rval = loadFromFile( filename );
-        }
-
-
-        if( !rval )
-        {
-            rval = OgreNewt::CollisionPtr( new OgreNewt::CollisionPrimitives::TreeCollision(
-                        PhysicsManager::getSingleton()._getNewtonWorld(),
-                        entity, true ));
-
-            if( !nocache )
-            {
-                saveToFile(rval, filename );
-            }
-        }
-
-        return rval;
-    }
-
-
-
-    PhysicsCollisionFactory::StringVector::StringVector(const Ogre::String& str, const Ogre::Vector3& vec)
-    {
-        setString(str);
-        setVector(vec);
-    }
-    
-    void PhysicsCollisionFactory::StringVector::setString(const Ogre::String& str)
-    {
-        mStr = str;
-    }
-    
-    void PhysicsCollisionFactory::StringVector::setVector(const Ogre::Vector3& vec)
-    {
-        mVec = vec;
-    }
-    
-    const Ogre::String& PhysicsCollisionFactory::StringVector::getString() const
-    {
-        return mStr;
-    }
-    
-    const Ogre::Vector3& PhysicsCollisionFactory::StringVector::getVector() const
-    {
-        return mVec;
-    }
-
-    bool PhysicsCollisionFactory::StringVector::operator==(const PhysicsCollisionFactory::StringVector& strVec) const
-    {
-        if( mStr != strVec.mStr )
-            return false;
-
-        Ogre::Vector3 diff = mVec - strVec.mVec;
-        if( abs(diff.x) > 0.01 )
-            return false;
-        if( abs(diff.y) > 0.01 )
-            return false;
-        if( abs(diff.z) > 0.01 )
-            return false;
-
-        return true;
-    }
-
-    bool PhysicsCollisionFactory::StringVector::operator<(const PhysicsCollisionFactory::StringVector& strVec) const
-    {
-        int strCompare = mStr.compare(strVec.mStr);
-        // @todo: use a hash or so
-        if( strCompare == 0 ) // strings are the same
-        {
-            // compare vectors
-            Ogre::Vector3 diff = mVec - strVec.mVec;
-            if( diff.x < -0.01 )
-                return true;
-            if( diff.x > 0.01 )
-                return false;
-            if( diff.y < -0.01 )
-                return true;
-            if( diff.y > 0.01 )
-                return false;
-            if( diff.y < -0.01 )
-                return true;
-
-            return false;
-        }
-        
-        return strCompare < 0;
-    }
-
-
-}
-
+/* This source file is part of Rastullahs Lockenpracht.
+* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+*
+*  This program is free software; you can redistribute it and/or modify
+*  it under the terms of the Clarified Artistic License.
+*
+*  This program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*  Clarified Artistic License for more details.
+*
+*  You should have received a copy of the Clarified Artistic License
+*  along with this program; if not you can get it here
+*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+*/
+#include "stdinc.h" //precompiled header
+
+#include "PhysicsCollisionFactory.h"
+
+#include <boost/filesystem/operations.hpp>
+#include <boost/filesystem/exception.hpp>
+
+#include "ConfigurationManager.h"
+#include "Exception.h"
+#include "PhysicsManager.h"
+
+namespace fs = boost::filesystem;
+
+#ifdef __APPLE__
+#   include <Ogre/OgreMesh.h>
+#else
+#   include <OgreMesh.h>
+#endif
+
+
+using namespace std;
+using namespace OgreNewt;
+using namespace Ogre;
+
+
+namespace rl
+{
+
+    PhysicsCollisionFactory::PhysicsCollisionFactory() :
+        mCollisionSerializer()
+    {
+
+#       if OGRE_PLATFORM == OGRE_PLATFORM_LINUX
+        mCachePathName = Ogre::String( Ogre::String(::getenv("HOME")) + "/.rastullah/cache/");
+        fs::path cachePath( mCachePathName, fs::portable_posix_name);
+#       else
+        mCachePathName = Ogre::String( ConfigurationManager::getSingleton().getModulesRootDirectory() + "/cache/" );
+        fs::path cachePath( mCachePathName );
+#       endif
+
+        if( !fs::exists(cachePath) )
+            fs::create_directory(cachePath);
+    }
+
+
+    PhysicsCollisionFactory::~PhysicsCollisionFactory()
+    {
+        clearCollisionCache();
+    }
+
+    void PhysicsCollisionFactory::clearCollisionCache()
+    {
+        mMeshCollisionsCache.clear();
+        mConvexCollisionsCache.clear();
+        mConvexAABBCollisionsCache.clear();
+    }
+
+    bool PhysicsCollisionFactory::checkSize(const Ogre::AxisAlignedBox& aabb) const
+    {
+        Ogre::Vector3 size = aabb.getSize();
+        if( size.x < PhysicsManager::NEWTON_GRID_WIDTH ||
+            size.y < PhysicsManager::NEWTON_GRID_WIDTH ||
+            size.z < PhysicsManager::NEWTON_GRID_WIDTH )
+            return false;
+        return true;
+    }
+
+    void PhysicsCollisionFactory::correctSize(Ogre::AxisAlignedBox& aabb)
+    {
+        Ogre::Vector3 size = aabb.getSize();
+        // correct size, log warning and fail back to box
+        if (size.x < PhysicsManager::NEWTON_GRID_WIDTH)
+            size.x = PhysicsManager::NEWTON_GRID_WIDTH;
+        if (size.y < PhysicsManager::NEWTON_GRID_WIDTH)
+            size.y = PhysicsManager::NEWTON_GRID_WIDTH;
+        if (size.z < PhysicsManager::NEWTON_GRID_WIDTH)
+            size.z = PhysicsManager::NEWTON_GRID_WIDTH;
+        LOG_MESSAGE(Logger::CORE, "Correcting collision primitiv size");
+        Ogre::Vector3 center = aabb.getCenter();
+        aabb.setMaximum(center + 0.5*size);
+        aabb.setMinimum(center - 0.5*size);
+    }
+
+    OgreNewt::CollisionPtr PhysicsCollisionFactory::createCollisionFromAABB(
+        const Ogre::String& name,
+        const Ogre::AxisAlignedBox& passedAabb,
+        const GeometryType& geomType,
+        const Ogre::Vector3 &offset,
+        const Ogre::Quaternion &orientation,
+        const Ogre::Real mass,
+        Ogre::Vector3* inertia,
+        Ogre::Vector3* centerOfMass,
+        bool nocache)
+    {
+
+        // don't cache if the name is ""
+        if( name == "" )
+            nocache = true;
+
+
+        Ogre::AxisAlignedBox aabb(passedAabb);
+        // type for the collision primitiv (can change internally here)
+        bool forceBox (false);
+
+        // result value
+        ConvexCollisionPtr rval;
+
+        // size check (if object is too small, it falls back to a box primitiv
+        if (checkSize(aabb) == false )
+        {
+            correctSize(aabb);
+            LOG_WARNING(Logger::CORE,
+                " AABB is too small, using 'box' instead of primitiv '" +
+                PhysicsManager::convertGeometryTypeToString(geomType));
+            forceBox = true;
+        }
+
+        // check if the geometry type is supported for aabb
+        if (geomType == GT_CONVEXHULL ||
+            geomType == GT_MESH)
+        {
+            LOG_WARNING(Logger::CORE,
+                " the geometry type '"+
+                PhysicsManager::convertGeometryTypeToString(geomType)+
+                "' is not supported for aabb, fail back to box");
+            forceBox = true;
+        }
+
+
+        ConvexCollisionCacheMap::iterator convexCacheIt = mConvexAABBCollisionsCache.end();
+
+        // check if we can reuse a cached collision
+        if( !nocache )
+        {
+            if( !forceBox )
+            {
+                Ogre::String index(name);
+                std::pair<ConvexCollisionCacheMap::iterator,bool> iterBoolPair = mConvexAABBCollisionsCache.insert(std::make_pair(index, ConvexCollisionCacheObject()));
+                convexCacheIt = iterBoolPair.first;
+                if( !iterBoolPair.second )
+                {
+                    // there was already an element, check type, the size, offset etc if we can use it
+                    if( geomType != convexCacheIt->second.type )
+                    {
+                        LOG_MESSAGE(Logger::CORE, "Performance warning: trying to create a collision for aabb '" + name +
+                                "' with geometry-type '"+PhysicsManager::convertGeometryTypeToString(geomType)+
+                                "'. There's already a collision with type '"+PhysicsManager::convertGeometryTypeToString(convexCacheIt->second.type)+"'!");
+                    }
+                    else if( aabb.getSize() == convexCacheIt->second.scale && offset == convexCacheIt->second.offset && orientation == convexCacheIt->second.orientation )
+                    {
+                        // everything fine, reuse it
+                        rval = convexCacheIt->second.col;
+
+                        if( inertia != NULL )
+                            *inertia = convexCacheIt->second.inertia;
+                        if( centerOfMass != NULL )
+                            *centerOfMass = convexCacheIt->second.centerOfMass;
+
+                        LOG_DEBUG(Logger::CORE, "Reused collision for aabb '" + name + "'.");
+
+                        return rval;
+                    }
+                }
+            }
+        }
+
+
+        /* differentiate between the different collision primitives, because they all
+		   need different offset and probably different orientation values.
+		   Newton SDK is really nifty and helps here, because we can shift the origin
+		   of the coordinate system of the primitiv we create into any position we
+		   desire. Actually this is the bottom middle of our mesh - as the meshes are
+		   always constructed like that.
+	    */
+        if( !rval )
+        {
+            if (geomType == GT_BOX || forceBox == true)
+            {
+                rval = createBox(aabb, offset, orientation);
+            }
+            else if (geomType == GT_PYRAMID)
+            {
+                rval = createPyramid(aabb, offset, orientation);
+            }
+            else if (geomType == GT_SPHERE)
+            {
+                rval = createSphere(aabb, offset, orientation);
+            }
+            else if (geomType == GT_ELLIPSOID)
+            {
+                rval = createEllipsoid(aabb, offset, orientation);
+            }
+            else if (geomType == GT_CAPSULE)
+            {
+                rval = createCapsule(aabb, offset, orientation);
+            }
+        }
+
+        if ( rval == NULL )
+        {
+            LOG_WARNING(Logger::CORE, " creating collision primitiv '"+
+                PhysicsManager::convertGeometryTypeToString(geomType)+"' for AABB '"+ name
+                +"' failed.");
+
+            // delete cacheobject
+            if( convexCacheIt != mConvexAABBCollisionsCache.end() )
+            {
+                mConvexAABBCollisionsCache.erase( convexCacheIt );
+            }
+        }
+        else
+        {
+            LOG_DEBUG(Logger::CORE, " collision primitiv '"+
+                PhysicsManager::convertGeometryTypeToString(geomType)+"' created for AABB '"+
+                name+"'");
+        }
+
+
+        // calculate inertia / centerOfMass if requested
+        // and save collision in cache
+        if( rval)
+        {
+            if( convexCacheIt != mConvexAABBCollisionsCache.end() )
+            {
+                // save collision in cache
+                Vector3 temp_inertia, temp_centerOfMass;
+                rval->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
+
+                convexCacheIt->second.col = rval;
+                convexCacheIt->second.scale = aabb.getSize();
+                convexCacheIt->second.offset = offset;
+                convexCacheIt->second.orientation = orientation;
+                convexCacheIt->second.inertia = temp_inertia;
+                convexCacheIt->second.centerOfMass = temp_centerOfMass;
+                convexCacheIt->second.type = geomType;
+
+                if( inertia != NULL )
+                    *inertia = temp_inertia*mass;
+                if( centerOfMass != NULL )
+                    *centerOfMass = temp_centerOfMass;
+            }
+            else if (inertia != NULL || centerOfMass != NULL )
+            {
+                Vector3 temp_inertia, temp_centerOfMass;
+                rval->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
+                if( inertia != NULL )
+                    *inertia = temp_inertia*mass;
+                if( centerOfMass != NULL )
+                    *centerOfMass = temp_centerOfMass;
+            }
+        }
+
+        return rval;
+    }
+
+
+    OgreNewt::CollisionPtr PhysicsCollisionFactory::createCollisionFromEntity(Ogre::Entity* entity,
+        const GeometryType& geomType,
+        const Ogre::String& animName,
+        const Ogre::Vector3 &offset,
+        const Ogre::Quaternion &orientation,
+        const Ogre::Real mass,
+        Ogre::Vector3* inertia,
+        Ogre::Vector3* centerOfMass,
+        bool nocache)
+    {
+        // bounding box of the mesh
+        Ogre::AxisAlignedBox aabb(entity->getBoundingBox());
+        // apply scale if attached to a node (like in OgreNewt for convexhull)
+        Ogre::Vector3 scale = Ogre::Vector3::UNIT_SCALE;
+        if( entity->getParentNode() )
+        {
+            scale = entity->getParentNode()->getScale();
+            aabb.scale(scale);
+        }
+
+        // type for the collision primitiv (can change internally here)
+        bool forceBox (false);
+
+        // result value
+        CollisionPtr rval;
+        ConvexCollisionPtr rvalAsConvexCollision; // store pointer to ConvexCollision, so we don't need to cast
+                                                  // this also indicates, that it is possible to calculate inertia/centerOfMass
+
+        // size check (if object is too small, it falls back to a box primitiv
+        if (checkSize(aabb) == false )
+        {
+            correctSize(aabb);
+            LOG_MESSAGE(Logger::CORE, " Entity '"+entity->getName()+
+                "' is too small, using 'box' instead of primitiv '"+
+                PhysicsManager::convertGeometryTypeToString(geomType));
+            forceBox = true;
+        }
+
+
+        if( geomType == GT_MESH )
+        {
+            if( offset != Ogre::Vector3::ZERO || orientation != Ogre::Quaternion::IDENTITY )
+            {
+                LOG_WARNING(Logger::CORE, " Cannot set collision offset or orientation when using mesh-collision (entity: '" +
+                        entity->getName()+"')!");
+            }
+            if( inertia || centerOfMass )
+            {
+                LOG_WARNING(Logger::CORE, " Cannot calculate inertia or center of mass when using mesh-collision (entity: '" +
+                        entity->getName()+"')!");
+            }
+        }
+
+
+        MeshCollisionCacheMap::iterator meshCacheIt = mMeshCollisionsCache.end();
+        ConvexCollisionCacheMap::iterator convexCacheIt = mConvexCollisionsCache.end();
+
+        // check if we can reuse a cached collision
+        if( !nocache )
+        {
+            // use meshcollisionscache
+            if( geomType == GT_MESH && !forceBox )
+            {
+                StringVector index(entity->getMesh()->getName() + animName, scale);
+                std::pair<MeshCollisionCacheMap::iterator,bool> iterBoolPair = mMeshCollisionsCache.insert(std::make_pair(index, MeshCollisionCacheObject()));
+                meshCacheIt = iterBoolPair.first;
+                if( !iterBoolPair.second )
+                {
+                    // there was already an element -- so we can reuse it
+
+                    LOG_DEBUG(Logger::CORE, "Reused collision for entity '" + entity->getName() + "' (mesh: '"
+                            + entity->getMesh()->getName() + "', animation: '" + animName + "').");
+                    rval = iterBoolPair.first->second.col;
+
+                    return rval;
+                }
+            }
+            // use convexcollisionscache
+            else if( !forceBox )
+            {
+                Ogre::String index(entity->getMesh()->getName() + animName);
+                std::pair<ConvexCollisionCacheMap::iterator,bool> iterBoolPair = mConvexCollisionsCache.insert(std::make_pair(index, ConvexCollisionCacheObject()));
+                convexCacheIt = iterBoolPair.first;
+                if( !iterBoolPair.second )
+                {
+                    // there was already an element, check type, the size, offset etc if we can use it
+                    if( geomType != convexCacheIt->second.type )
+                    {
+                        LOG_MESSAGE(Logger::CORE, "Performance warning: trying to create a collision for entity '"+entity->getName()+"' with animation '"+
+                                animName+"' with geometry-type '"+PhysicsManager::convertGeometryTypeToString(geomType)+
+                                "'. There's already a collision with type '"+PhysicsManager::convertGeometryTypeToString(convexCacheIt->second.type)+"'!");
+                    }
+                    else if( scale == convexCacheIt->second.scale && offset == convexCacheIt->second.offset && orientation == convexCacheIt->second.orientation )
+                    {
+                        // everything fine, reuse it
+                        rval = convexCacheIt->second.col;
+
+                        if( inertia != NULL )
+                            *inertia = convexCacheIt->second.inertia;
+                        if( centerOfMass != NULL )
+                            *centerOfMass = convexCacheIt->second.centerOfMass;
+
+                        LOG_DEBUG(Logger::CORE, "Reused collision for entity '" + entity->getName() + "' (mesh: '"
+                            + entity->getMesh()->getName() + "', animation: '" + animName + "').");
+
+                        return rval;
+                    }
+                    else if( geomType == GT_CONVEXHULL ) // for simple types just use create a new collision
+                    {
+                        // we need to rescale (or change offset or orientation)
+                        // the old transformation
+                        Ogre::Matrix4 oldInvTransformation;
+                        oldInvTransformation.makeInverseTransform(convexCacheIt->second.offset, convexCacheIt->second.scale, convexCacheIt->second.orientation);
+                        // the new transformation
+                        Ogre::Matrix4 newTransformation;
+                        newTransformation.makeTransform(offset, scale, orientation);
+
+                        // the needed transformation from old to new:
+                        Ogre::Matrix4 transformation = oldInvTransformation*newTransformation;
+
+                        OgreNewt::ConvexModifierCollision *convexModCol = new OgreNewt::ConvexModifierCollision(
+                                PhysicsManager::getSingleton()._getNewtonWorld(),convexCacheIt->second.col);
+                        convexModCol->setScalarMatrix(transformation);
+
+                        // set the convexcollision-ptr, so centerOfMass and inertia can be calculated
+                        rval = OgreNewt::ConvexCollisionPtr(convexModCol);
+
+
+                        LOG_DEBUG(Logger::CORE, "Reused collision for entity '" + entity->getName() + "' (mesh: '"
+                                + entity->getMesh()->getName() + "', animation: '" + animName + "') with a ConvexModifierCollision.");
+
+                        // calculate inertia / centerOfMass if needed
+                        if (inertia != NULL || centerOfMass != NULL )
+                        {
+                            Vector3 temp_inertia, temp_centerOfMass;
+                            rvalAsConvexCollision->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
+                            if( inertia != NULL )
+                                *inertia = temp_inertia*mass;
+                            if( centerOfMass != NULL )
+                                *centerOfMass = temp_centerOfMass;
+                        }
+
+                        return rval;
+                    }
+                }
+            }
+        }
+
+		/* differentiate between the different collision primitives, because they all
+		   need different offset and probably different orientation values.
+		   Newton SDK is really nifty and helps here, because we can shift the origin
+		   of the coordinate system of the primitiv we create into any position we
+		   desire. Actually this is the bottom middle of our mesh - as the meshes are
+		   always constructed like that.
+	    */
+        if (geomType == GT_BOX || forceBox == true)
+        {
+            rvalAsConvexCollision = createBox(aabb, offset, orientation);
+            rval = rvalAsConvexCollision;
+        }
+        else if (geomType == GT_PYRAMID)
+        {
+            rvalAsConvexCollision = createPyramid(aabb, offset, orientation);
+            rval = rvalAsConvexCollision;
+        }
+        else if (geomType == GT_SPHERE)
+        {
+            rvalAsConvexCollision = createSphere(aabb, offset, orientation);
+            rval = rvalAsConvexCollision;
+        }
+        else if (geomType == GT_ELLIPSOID)
+        {
+            rvalAsConvexCollision = createEllipsoid(aabb, offset, orientation);
+            rval = rvalAsConvexCollision;
+        }
+        else if (geomType == GT_CAPSULE)
+        {
+            rvalAsConvexCollision = createCapsule(aabb, offset, orientation);
+            rval = rvalAsConvexCollision;
+        }
+        else if (geomType == GT_CONVEXHULL)
+        {
+            rvalAsConvexCollision = createConvexHull(entity, offset, orientation);
+            rval = rvalAsConvexCollision;
+        }
+        else if (geomType == GT_MESH)
+        {
+            rval = createMesh( entity, animName, nocache );
+
+            if( meshCacheIt != mMeshCollisionsCache.end() )
+                meshCacheIt->second.col = rval;
+        }
+        else
+        {
+            Throw(IllegalArgumentException, "unknown geometry type.");
+        }
+
+
+        if ( rval == NULL )
+        {
+            LOG_WARNING(Logger::CORE, " creating collision primitiv '"+
+                PhysicsManager::convertGeometryTypeToString(geomType)+"' for Entity '"+
+                entity->getName()+"' failed.");
+
+            // delete cacheobject
+            if( meshCacheIt != mMeshCollisionsCache.end() )
+            {
+                mMeshCollisionsCache.erase( meshCacheIt );
+            }
+            if( convexCacheIt != mConvexCollisionsCache.end() )
+            {
+                mConvexCollisionsCache.erase( convexCacheIt );
+            }
+        }
+        else
+        {
+            LOG_DEBUG(Logger::CORE, " collision primitiv '"+
+                PhysicsManager::convertGeometryTypeToString(geomType)+"' created for Entity '"+
+                entity->getName()+"'");
+        }
+
+        // calculate inertia / centerOfMass if requested
+        // and save collision in cache
+        if( rvalAsConvexCollision )
+        {
+            if( convexCacheIt != mConvexCollisionsCache.end() )
+            {
+                // save collision in cache
+                Vector3 temp_inertia, temp_centerOfMass;
+                rvalAsConvexCollision->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
+
+                convexCacheIt->second.col = rvalAsConvexCollision;
+                convexCacheIt->second.scale = scale;
+                convexCacheIt->second.offset = offset;
+                convexCacheIt->second.orientation = orientation;
+                convexCacheIt->second.inertia = temp_inertia;
+                convexCacheIt->second.centerOfMass = temp_centerOfMass;
+                convexCacheIt->second.type = geomType;
+
+                if( inertia != NULL )
+                    *inertia = temp_inertia*mass;
+                if( centerOfMass != NULL )
+                    *centerOfMass = temp_centerOfMass;
+            }
+            else if (inertia != NULL || centerOfMass != NULL )
+            {
+                Vector3 temp_inertia, temp_centerOfMass;
+                rvalAsConvexCollision->calculateInertialMatrix(temp_inertia, temp_centerOfMass);
+                if( inertia != NULL )
+                    *inertia = temp_inertia*mass;
+                if( centerOfMass != NULL )
+                    *centerOfMass = temp_centerOfMass;
+            }
+        }
+
+        return rval;
+    }
+
+
+    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createBox(const Ogre::AxisAlignedBox& aabb,
+            const Ogre::Vector3 &offset,
+            const Ogre::Quaternion &orientation)
+    {
+        // offset relative to center
+        Ogre::Vector3 offsetInGlobalSpace = offset + aabb.getCenter();
+
+        // a box collision primitiv has got it's coordinate system at it's center, so we need to shift it
+        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Box(
+            PhysicsManager::getSingleton()._getNewtonWorld(),
+            aabb.getSize(), orientation, offsetInGlobalSpace));
+
+       return rval;
+    }
+
+    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createPyramid(const Ogre::AxisAlignedBox& aabb,
+            const Ogre::Vector3 &offset,
+            const Ogre::Quaternion &orientation)
+    {
+        // offset relative to center
+        Ogre::Vector3 offsetInGlobalSpace = offset + aabb.getCenter();
+
+        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Pyramid(
+            PhysicsManager::getSingleton()._getNewtonWorld(),
+            aabb.getSize(), orientation, offsetInGlobalSpace));
+
+       return rval;
+    }
+
+    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createSphere(const Ogre::AxisAlignedBox& aabb,
+            const Ogre::Vector3 &offset,
+            const Ogre::Quaternion &orientation)
+    {
+        // offset relative to center
+        Ogre::Vector3 offsetInGlobalSpace = offset + aabb.getCenter();
+
+        Ogre::Vector3 size = aabb.getSize();
+        // calculate the maximum radius needed to include 'everything'
+        double radius = std::max(size.x, std::max(size.y, size.z)) / 2.0;
+ 
+        // a sphere primitiv has got its coordinate system at its center, so shift it with radius
+        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Ellipsoid(
+            PhysicsManager::getSingleton()._getNewtonWorld(),
+            Vector3(radius, radius, radius), orientation, offsetInGlobalSpace));
+ 
+       return rval;
+    }
+
+    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createEllipsoid(const Ogre::AxisAlignedBox& aabb,
+            const Ogre::Vector3 &offset,
+            const Ogre::Quaternion &orientation)
+    {
+        // offset relative to center
+        Ogre::Vector3 offsetInGlobalSpace = offset + aabb.getCenter();
+
+        Ogre::Vector3 size = aabb.getSize();
+        // set the size x/z values to the maximum
+        Vector3 s(size/2.0);
+        s.x = std::max(s.x, s.z);
+        s.z = s.x;
+
+        // an ellipsoid primitiv has got its coordinate system at its center, so shift it with radius
+        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Ellipsoid(
+            PhysicsManager::getSingleton()._getNewtonWorld(),
+            s, orientation, offsetInGlobalSpace));
+
+       return rval;
+    }
+
+    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createCapsule(const Ogre::AxisAlignedBox& aabb,
+            const Ogre::Vector3 &offset,
+            const Ogre::Quaternion &orientation)
+    {
+        // offset relative to center
+        Ogre::Vector3 offsetInGlobalSpace = offset + aabb.getCenter();
+        // @todo: fixme: this is a semi ugly fix - because the orientation should be set by the loader
+        //object_orientation.FromAngleAxis(Degree(90), Vector3::UNIT_Z);
+
+        Ogre::Vector3 size = aabb.getSize();
+
+        double radius = std::max(size.x, size.z) / 2.0;
+		double height = size.y;
+
+        // an capsule primitiv has got its coordinate system at its center, so shift it with radius
+        // additionally it is x axis aligned, so rotate it 90 degrees around z axis
+        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::Capsule(
+            PhysicsManager::getSingleton()._getNewtonWorld(),
+            radius, height, orientation, offsetInGlobalSpace));
+
+        return rval;
+    }
+
+
+
+    OgreNewt::ConvexCollisionPtr PhysicsCollisionFactory::createConvexHull(
+            Ogre::Entity* entity,
+            const Ogre::Vector3 &offset,
+            const Ogre::Quaternion &orientation)
+    {
+        Ogre::Vector3 offsetInGlobalSpace = offset;
+
+        // calculate the convex hull of the animated mesh
+        OgreNewt::ConvexCollisionPtr rval(new OgreNewt::CollisionPrimitives::ConvexHull(
+                    PhysicsManager::getSingleton()._getNewtonWorld(),
+                    entity, orientation, offsetInGlobalSpace));
+
+        return rval;
+    }
+
+
+    OgreNewt::CollisionPtr PhysicsCollisionFactory::loadFromFile(const Ogre::String& filename)
+    {
+        OgreNewt::CollisionPtr rval;
+        Ogre::String fullfilename = mCachePathName+filename;
+        FILE* pFile = fopen(fullfilename.c_str(), "r" );
+        if( pFile )
+        {
+            Ogre::DataStreamPtr streamPtr( new Ogre::FileHandleDataStream( pFile ) );
+            rval = mCollisionSerializer.importCollision( streamPtr, PhysicsManager::getSingleton()._getNewtonWorld() );
+
+            if( rval )
+            {
+                LOG_DEBUG(Logger::CORE, "Loaded collision from file '" + filename + "'.");
+            }
+        }
+
+        return rval;
+    }
+
+
+
+    void PhysicsCollisionFactory::saveToFile(OgreNewt::CollisionPtr col, const Ogre::String& filename)
+    {
+        mCollisionSerializer.exportCollision(col, mCachePathName + filename);
+    }
+
+
+
+    OgreNewt::CollisionPtr PhysicsCollisionFactory::createMesh( Ogre::Entity* entity, const Ogre::String& animName, bool nocache )
+    {
+        OgreNewt::CollisionPtr rval;
+        Ogre::String filename;
+
+        if( !nocache )
+        {
+            Ogre::Vector3 scale(Ogre::Vector3::UNIT_SCALE);
+            if( entity->getParentNode() )
+                scale = entity->getParentNode()->getScale();
+
+            filename = entity->getMesh()->getName() + animName + Ogre::StringConverter::toString(scale) + ".collision";
+
+            // check date of cache file and mesh
+            time_t meshFileModified = 
+                Ogre::ResourceGroupManager::getSingleton().resourceModifiedTime(
+                        entity->getMesh()->getGroup(),
+                        entity->getMesh()->getName());
+
+#if OGRE_PLATFORM == OGRE_PLATFORM_LINUX
+            fs::path cacheFilePath( mCachePathName+filename, fs::portable_posix_name);
+#else
+            fs::path cacheFilePath( mCachePathName+filename );
+#endif
+
+            time_t cacheFileModified = 0;
+            if( fs::exists(cacheFilePath) )
+                cacheFileModified = fs::last_write_time(cacheFilePath);
+
+
+            if( cacheFileModified > meshFileModified )        
+                rval = loadFromFile( filename );
+        }
+
+
+        if( !rval )
+        {
+            rval = OgreNewt::CollisionPtr( new OgreNewt::CollisionPrimitives::TreeCollision(
+                        PhysicsManager::getSingleton()._getNewtonWorld(),
+                        entity, true ));
+
+            if( !nocache )
+            {
+                saveToFile(rval, filename );
+            }
+        }
+
+        return rval;
+    }
+
+
+
+    PhysicsCollisionFactory::StringVector::StringVector(const Ogre::String& str, const Ogre::Vector3& vec)
+    {
+        setString(str);
+        setVector(vec);
+    }
+    
+    void PhysicsCollisionFactory::StringVector::setString(const Ogre::String& str)
+    {
+        mStr = str;
+    }
+    
+    void PhysicsCollisionFactory::StringVector::setVector(const Ogre::Vector3& vec)
+    {
+        mVec = vec;
+    }
+    
+    const Ogre::String& PhysicsCollisionFactory::StringVector::getString() const
+    {
+        return mStr;
+    }
+    
+    const Ogre::Vector3& PhysicsCollisionFactory::StringVector::getVector() const
+    {
+        return mVec;
+    }
+
+    bool PhysicsCollisionFactory::StringVector::operator==(const PhysicsCollisionFactory::StringVector& strVec) const
+    {
+        if( mStr != strVec.mStr )
+            return false;
+
+        Ogre::Vector3 diff = mVec - strVec.mVec;
+        if( abs(diff.x) > 0.01 )
+            return false;
+        if( abs(diff.y) > 0.01 )
+            return false;
+        if( abs(diff.z) > 0.01 )
+            return false;
+
+        return true;
+    }
+
+    bool PhysicsCollisionFactory::StringVector::operator<(const PhysicsCollisionFactory::StringVector& strVec) const
+    {
+        int strCompare = mStr.compare(strVec.mStr);
+        // @todo: use a hash or so
+        if( strCompare == 0 ) // strings are the same
+        {
+            // compare vectors
+            Ogre::Vector3 diff = mVec - strVec.mVec;
+            if( diff.x < -0.01 )
+                return true;
+            if( diff.x > 0.01 )
+                return false;
+            if( diff.y < -0.01 )
+                return true;
+            if( diff.y > 0.01 )
+                return false;
+            if( diff.y < -0.01 )
+                return true;
+
+            return false;
+        }
+        
+        return strCompare < 0;
+    }
+
+
+}
+

Modified: rl/trunk/engine/ui/src/CutsceneControlState.cpp
===================================================================
--- rl/trunk/engine/ui/src/CutsceneControlState.cpp	2009-05-22 22:18:33 UTC (rev 4940)
+++ rl/trunk/engine/ui/src/CutsceneControlState.cpp	2009-05-24 17:05:43 UTC (rev 4941)
@@ -1,118 +1,125 @@
-/*
-* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-*
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#include "stdinc.h" //precompiled header
-
-#include "CutsceneControlState.h"
-#include "Exception.h"
-#include "Actor.h"
-#include "CameraObject.h"
-#include "CommandMapper.h"
-#include "GameObject.h"
-#include "PhysicalThing.h"
-
-using namespace Ogre;
-
-namespace rl {
-
-	CutsceneControlState::CutsceneControlState(CommandMapper* cmdMapper,
-        Actor* camera) : ControlState(cmdMapper, camera, NULL, CST_CUTSCENE),
-        mTarget(NULL)
-	{
-	}
-
-	CutsceneControlState::~CutsceneControlState()
-	{
-	}
-
-    void CutsceneControlState::pause()
-    {
-		mCameraActor->getPhysicalThing()->unfreeze();
-    }
-
-    void CutsceneControlState::resume()
-    {
-		mCameraActor->getPhysicalThing()->freeze();
-		Camera* ogreCam = static_cast<Camera*>(mCameraActor->_getMovableObject());
-		ogreCam->setFixedYawAxis(true);
-		mCameraActor->_getSceneNode()->setFixedYawAxis(true);
-    }
-
-	void CutsceneControlState::run(Real elapsedTime)
-	{
-	    CameraPosition pos = getBestCameraPosition();
-	    switch (pos.type)
-	    {
-	    case CPT_FIXED:
-	        setCameraPosition(pos.position);
-	        setCameraOrientation(pos.orientation1);
-	        break;
-	    case CPT_ROTATING:
-	        setCameraPosition(pos.position);
-	        lookAt(mTarget->getPosition());
-	        break;
-	    }
-	}
-
-	void CutsceneControlState::setCameraTarget(GameObject* target)
-	{
-	    mTarget = target;
-	}
-
-    void CutsceneControlState::setCameraPosition(const Vector3& pos)
-    {
-        mCameraActor->setPosition(pos);
-    }
-
-    void CutsceneControlState::setCameraOrientation(const Quaternion& orient)
-    {
-        mCameraActor->setOrientation(orient);
-    }
-
-    void CutsceneControlState::lookAt(const Vector3& point)
-    {
-        dynamic_cast<Camera*>(mCameraActor->getControlledObject()->getMovableObject())
-            ->lookAt(point);
-    }
-
-    CameraPosition CutsceneControlState::getBestCameraPosition() const
-    {
-        if (mPositions.empty())
-        {
-            CameraPosition nullPos = {CPT_FIXED, Vector3::ZERO, Quaternion::IDENTITY, Quaternion::IDENTITY};
-            return nullPos;
-        }
-        return *mPositions.begin();
-    }
-
-    void CutsceneControlState::addCamera(const Vector3& position, const Quaternion& orientation)
-    {
-        CameraPosition cpos = {CPT_FIXED, position, orientation, orientation};
-        mPositions.push_back(cpos);
-    }
-
-    void CutsceneControlState::addCamera(const Vector3& position, const Quaternion& orientation1,
-            const Quaternion& orientation2)
-    {
-        CameraPosition cpos = {CPT_ROTATING, position, orientation1, orientation2};
-        mPositions.push_back(cpos);
-    }
-
-    void CutsceneControlState::clearCameras()
-    {
-        mPositions.clear();
-    }
-}
+/*
+* This source file is part of Rastullahs Lockenpracht.
+* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+*
+*  This program is free software; you can redistribute it and/or modify
+*  it under the terms of the Clarified Artistic License.
+*
+*  This program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*  Clarified Artistic License for more details.
+*
+*  You should have received a copy of the Clarified Artistic License
+*  along with this program; if not you can get it here
+*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+*/
+#include "stdinc.h" //precompiled header
+
+#include "CutsceneControlState.h"
+#include "Exception.h"
+#include "Actor.h"
+#include "CameraObject.h"
+#include "CommandMapper.h"
+#include "GameObject.h"
+#include "PhysicalThing.h"
+
+using namespace Ogre;
+using namespace std;
+
+namespace rl {
+
+	CutsceneControlState::CutsceneControlState(CommandMapper* cmdMapper,
+        Actor* camera) : ControlState(cmdMapper, camera, NULL, CST_CUTSCENE),
+        mTarget(NULL)
+	{
+	}
+
+	CutsceneControlState::~CutsceneControlState()
+	{
+	}
+
+    void CutsceneControlState::pause()
+    {
+		mCameraActor->getPhysicalThing()->unfreeze();
+    }
+
+    void CutsceneControlState::resume()
+    {
+		mCameraActor->getPhysicalThing()->freeze();
+		Camera* ogreCam = static_cast<Camera*>(mCameraActor->_getMovableObject());
+		ogreCam->setFixedYawAxis(true);
+		mCameraActor->_getSceneNode()->setFixedYawAxis(true);
+    }
+
+	void CutsceneControlState::run(Real elapsedTime)
+	{
+	    CameraPosition pos = getBestCameraPosition();
+	    switch (pos.type)
+	    {
+	    case CPT_FIXED:
+	        setCameraPosition(pos.position);
+	        setCameraOrientation(pos.orientation1);
+	        break;
+	    case CPT_ROTATING:
+	        setCameraPosition(pos.position);
+	        lookAt(mTarget->getPosition());
+	        break;
+	    }
+	}
+
+	void CutsceneControlState::setCameraTarget(GameObject* target)
+	{
+	    mTarget = target;
+	}
+
+    void CutsceneControlState::setCameraPosition(const Vector3& pos)
+    {
+        mCameraActor->setPosition(pos);
+    }
+
+    void CutsceneControlState::setCameraOrientation(const Quaternion& orient)
+    {
+        mCameraActor->setOrientation(orient);
+    }
+
+    void CutsceneControlState::lookAt(const Vector3& point)
+    {
+        dynamic_cast<Camera*>(mCameraActor->getControlledObject()->getMovableObject())
+            ->lookAt(point);
+    }
+
+    CameraPosition CutsceneControlState::getBestCameraPosition() const
+    {
+        if (mPositions.empty())
+        {
+            CameraPosition nullPos = {CPT_FIXED, Vector3::ZERO, Quaternion::IDENTITY, Quaternion::IDENTITY};
+            return nullPos;
+        }
+        
+        for (vector<CameraPosition>::const_iterator it = mPositions.begin(), end = mPositions.end(); it != end; ++it)
+        {
+            
+        }
+        
+        return *mPositions.begin();
+    }
+
+    void CutsceneControlState::addCamera(const Vector3& position, const Quaternion& orientation)
+    {
+        CameraPosition cpos = {CPT_FIXED, position, orientation, orientation};
+        mPositions.push_back(cpos);
+    }
+
+    void CutsceneControlState::addCamera(const Vector3& position, const Quaternion& orientation1,
+            const Quaternion& orientation2)
+    {
+        CameraPosition cpos = {CPT_ROTATING, position, orientation1, orientation2};
+        mPositions.push_back(cpos);
+    }
+
+    void CutsceneControlState::clearCameras()
+    {
+        mPositions.clear();
+    }
+}



From blakharaz at mail.berlios.de  Sun May 24 21:25:28 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Sun, 24 May 2009 21:25:28 +0200
Subject: [Dsa-hl-svn] r4942 - dependencies/OgreNewt/Mac/OgreNewt.xcodeproj
Message-ID: <200905241925.n4OJPSon029722@sheep.berlios.de>

Author: blakharaz
Date: 2009-05-24 21:25:27 +0200 (Sun, 24 May 2009)
New Revision: 4942

Modified:
   dependencies/OgreNewt/Mac/OgreNewt.xcodeproj/project.pbxproj
Log:
Fixes for Mac OS X build

Modified: dependencies/OgreNewt/Mac/OgreNewt.xcodeproj/project.pbxproj
===================================================================
--- dependencies/OgreNewt/Mac/OgreNewt.xcodeproj/project.pbxproj	2009-05-24 17:05:43 UTC (rev 4941)
+++ dependencies/OgreNewt/Mac/OgreNewt.xcodeproj/project.pbxproj	2009-05-24 19:25:27 UTC (rev 4942)
@@ -46,6 +46,7 @@
 		487D45F90F47389A00D1D69F /* OgreNewt_Vehicle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 487D45E70F47389A00D1D69F /* OgreNewt_Vehicle.cpp */; };
 		487D45FA0F47389A00D1D69F /* OgreNewt_World.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 487D45E80F47389A00D1D69F /* OgreNewt_World.cpp */; };
 		48A94EC50F476C1700252666 /* libc.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A94EC10F476B1400252666 /* libc.dylib */; };
+		48FF24380FC9A27B00E71D4D /* libboost_system-mt.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48FF24370FC9A27B00E71D4D /* libboost_system-mt.dylib */; };
 		8D07F2C00486CC7A007CD1D0 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 089C1666FE841158C02AAC07 /* InfoPlist.strings */; };
 /* End PBXBuildFile section */
 
@@ -103,6 +104,7 @@
 		487D45E80F47389A00D1D69F /* OgreNewt_World.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = OgreNewt_World.cpp; path = ../src/OgreNewt_World.cpp; sourceTree = SOURCE_ROOT; };
 		48A94EBE0F476A8700252666 /* libstdc++.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = "libstdc++.dylib"; path = "usr/lib/i686-apple-darwin9/4.0.1/libstdc++.dylib"; sourceTree = SDKROOT; };
 		48A94EC10F476B1400252666 /* libc.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libc.dylib; path = usr/lib/libc.dylib; sourceTree = SDKROOT; };
+		48FF24370FC9A27B00E71D4D /* libboost_system-mt.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = "libboost_system-mt.dylib"; path = "/opt/local/lib/libboost_system-mt.dylib"; sourceTree = "<absolute>"; };
 		8D07F2C70486CC7A007CD1D0 /* Info.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist; path = Info.plist; sourceTree = "<group>"; };
 		8D07F2C80486CC7A007CD1D0 /* OgreNewt.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = OgreNewt.framework; sourceTree = BUILT_PRODUCTS_DIR; };
 /* End PBXFileReference section */
@@ -115,6 +117,7 @@
 				444EA9A30BD0D33B00C6D4A0 /* Ogre.framework in Frameworks */,
 				444EA9A70BD0D35800C6D4A0 /* libnewton32.a in Frameworks */,
 				48A94EC50F476C1700252666 /* libc.dylib in Frameworks */,
+				48FF24380FC9A27B00E71D4D /* libboost_system-mt.dylib in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -132,12 +135,11 @@
 		0867D691FE84028FC02AAC07 /* OgreNewt */ = {
 			isa = PBXGroup;
 			children = (
+				48FF24370FC9A27B00E71D4D /* libboost_system-mt.dylib */,
 				08FB77ACFE841707C02AAC07 /* Source */,
 				089C1665FE841158C02AAC07 /* Resources */,
 				0867D69AFE84028FC02AAC07 /* External Frameworks and Libraries */,
 				034768DDFF38A45A11DB9C8B /* Products */,
-				48A94EBE0F476A8700252666 /* libstdc++.dylib */,
-				48A94EC10F476B1400252666 /* libc.dylib */,
 			);
 			name = OgreNewt;
 			sourceTree = "<group>";
@@ -145,6 +147,8 @@
 		0867D69AFE84028FC02AAC07 /* External Frameworks and Libraries */ = {
 			isa = PBXGroup;
 			children = (
+				48A94EC10F476B1400252666 /* libc.dylib */,
+				48A94EBE0F476A8700252666 /* libstdc++.dylib */,
 				444EA9A60BD0D35800C6D4A0 /* libnewton32.a */,
 				444EA9A20BD0D33B00C6D4A0 /* Ogre.framework */,
 			);
@@ -351,16 +355,8 @@
 				GCC_OPTIMIZATION_LEVEL = 0;
 				GCC_PRECOMPILE_PREFIX_HEADER = YES;
 				GCC_PREFIX_HEADER = "";
-				HEADER_SEARCH_PATHS = (
-					/Library/Frameworks/Ogre.framework/Headers,
-					/usr/local/include,
-				);
 				INFOPLIST_FILE = Info.plist;
 				INSTALL_PATH = "$(HOME)/Library/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					/usr/local/lib,
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SDKROOT)/usr/lib/i686-apple-darwin9/4.0.1\"";
 				LIBRARY_STYLE = DYNAMIC;
 				MACH_O_TYPE = mh_dylib;
@@ -386,13 +382,8 @@
 				GCC_MODEL_TUNING = G5;
 				GCC_PRECOMPILE_PREFIX_HEADER = YES;
 				GCC_PREFIX_HEADER = "";
-				HEADER_SEARCH_PATHS = /usr/local/include;
 				INFOPLIST_FILE = Info.plist;
 				INSTALL_PATH = "$(HOME)/Library/Frameworks";
-				LIBRARY_SEARCH_PATHS = (
-					/usr/local/lib,
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SDKROOT)/usr/lib/i686-apple-darwin9/4.0.1\"";
 				LIBRARY_STYLE = DYNAMIC;
 				MACH_O_TYPE = mh_dylib;
@@ -409,9 +400,20 @@
 		4FADC24708B4156D00ABE55E /* Debug */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
+				ARCHS = "$(ARCHS_STANDARD_32_BIT_PRE_XCODE_3_1)";
+				ARCHS_STANDARD_32_BIT_PRE_XCODE_3_1 = "ppc i386";
 				GCC_WARN_ABOUT_RETURN_TYPE = YES;
 				GCC_WARN_UNUSED_VARIABLE = YES;
-				HEADER_SEARCH_PATHS = /Library/Frameworks/Ogre.framework/Headers;
+				HEADER_SEARCH_PATHS = (
+					/opt/local/include,
+					/usr/local/include,
+					/Library/Frameworks/Ogre.framework/Headers,
+				);
+				LIBRARY_SEARCH_PATHS = (
+					/opt/local/lib,
+					/usr/local/lib,
+					/usr/lib,
+				);
 				PREBINDING = NO;
 				SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;
 			};
@@ -420,12 +422,20 @@
 		4FADC24808B4156D00ABE55E /* Release */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
+				ARCHS = "$(ARCHS_STANDARD_32_BIT_PRE_XCODE_3_1)";
+				ARCHS_STANDARD_32_BIT_PRE_XCODE_3_1 = "ppc i386";
 				GCC_WARN_ABOUT_RETURN_TYPE = YES;
 				GCC_WARN_UNUSED_VARIABLE = YES;
 				HEADER_SEARCH_PATHS = (
+					/opt/local/include,
 					/usr/local/include,
 					/Library/Frameworks/Ogre.framework/Headers,
 				);
+				LIBRARY_SEARCH_PATHS = (
+					/opt/local/lib,
+					/usr/local/lib,
+					/usr/lib,
+				);
 				PREBINDING = NO;
 				SCAN_ALL_SOURCE_FILES_FOR_INCLUDES = YES;
 				SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;



From fusion2 at mail.berlios.de  Sun May 31 13:25:30 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Sun, 31 May 2009 13:25:30 +0200
Subject: [Dsa-hl-svn] r4943 - in rl/trunk/editors/Lockenwickler: . src
	src/media/terrain ui files
Message-ID: <200905311125.n4VBPUfJ003880@sheep.berlios.de>

Author: fusion2
Date: 2009-05-31 13:24:48 +0200 (Sun, 31 May 2009)
New Revision: 4943

Added:
   rl/trunk/editors/Lockenwickler/src/TerrainDecalCursor.py
   rl/trunk/editors/Lockenwickler/src/media/terrain/cursorTex.png
   rl/trunk/editors/Lockenwickler/src/media/terrain/decalBase.png
Modified:
   rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
   rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
   rl/trunk/editors/Lockenwickler/src/ModuleManager.py
   rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
   rl/trunk/editors/Lockenwickler/src/PythonOgreConfig.py
   rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
   rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
Log:
- new TerrainDecalCursor class for displaying the terrain cursor as a projected texture
- removed alot of options from the terrain creation dialog which where not needed
- lots of smaler updates to the terrain editor

Modified: rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
===================================================================
--- rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-05-24 19:25:27 UTC (rev 4942)
+++ rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-05-31 11:24:48 UTC (rev 4943)
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE Project SYSTEM "Project-4.6.dtd">
 <!-- eric4 project file for project Lockenwickler -->
-<!-- Saved: 2009-05-09, 21:08:47 -->
+<!-- Saved: 2009-05-30, 19:50:05 -->
 <!-- Copyright (C) 2009 Stefan Stammberger, sstammberger at web.de -->
 <Project version="4.6">
   <Language>en</Language>
@@ -44,16 +44,18 @@
     <Source>src/ModuleDirectoryView.py</Source>
     <Source>src/TriggerManager.py</Source>
     <Source>src/GlobDirectoryWalker.py</Source>
-    <Source>ui files/Ui_GOPropertyEditorDialogINT.py</Source>
-    <Source>ui files/Ui_GOPropertyEditorDialogSTRING.py</Source>
-    <Source>ui files/Ui_NewModuleWizard.py</Source>
     <Source>src/AddTriggerDialog.py</Source>
     <Source>src/Ui_AddTriggerDialog.py</Source>
     <Source>src/MyTerrainManager.py</Source>
     <Source>src/Ui_MyTerrainManagerDock.py</Source>
     <Source>src/media/help/help_rc.py</Source>
+    <Source>ui files/Ui_MyTerrainManagerDock.py</Source>
+    <Source>ui files/Ui_GOPropertyEditorDialogINT.py</Source>
+    <Source>ui files/Ui_GOPropertyEditorDialogSTRING.py</Source>
+    <Source>ui files/Ui_NewModuleWizard.py</Source>
+    <Source>ui files/Ui_AddTriggerDialog.py</Source>
     <Source>ui files/Ui_BrushDialog.py</Source>
-    <Source>ui files/Ui_MyTerrainManagerDock.py</Source>
+    <Source>src/TerrainDecalCursor.py</Source>
   </Sources>
   <Forms>
     <Form>ui files/GOPropertyEditorDialogINT.ui</Form>

Modified: rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-05-24 19:25:27 UTC (rev 4942)
+++ rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-05-31 11:24:48 UTC (rev 4943)
@@ -1,597 +1,597 @@
-#################################################
-# This source file is part of Rastullahs Lockenwickler.
-# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-#  but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
-#################################################
-
-import os
-import sys
-import platform
-import subprocess
-
-sys.path.insert(0,'..')
-import PythonOgreConfig
-
-from random import randint
-
-from PyQt4 import QtGui, QtCore
-from PreferencesDialog import *
-from ObjectPropertyWin import *
-from ModelSelectionDialog import *
-from MaterialSelectionDialog import *
-from GameObjectClassView import *
-from ConsoleWindow import *
-from ModuleManager import ModuleManager
-from ModuleExplorer import *
-from NewModuleWizard import *
-from MovePivot import *
-from PivotRenderQueueListener import *
-from ModuleDirectoryView import *
-from TriggerManager import *
-from MyTerrainManager import MyTerrainManager
-
-import OgreMainWindow
-import ogre.renderer.OGRE as og
-
-class Lockenwickler(QtGui.QMainWindow):
-    def __init__(self, parent=None):
-        QtGui.QWidget.__init__(self, parent)
-
-#        pixmap = QPixmap("media/icons/lockenwickler_provisorium.png")
-#        splash = QSplashScreen(pixmap, Qt.WindowStaysOnTopHint)
-#        splash.setMask(pixmap.mask())
-#        splash.showMessage("Starting...")
-#        splash.show() 
-
-        self.setupUi()
-
-        self.consoleWindow = ConsoleWindow(False,  self)
-
-        self.setupOgre()
-
-        self.prefDialog = PreferencesDialog(self)
-        self.objectPropertyWin = ObjectPropertyWin(self.OgreMainWinSceneMgr, self.gocManager, self)
-        self.moduleExplorerWin = ModuleExplorer(self)
-        self.modelSelectionDialog = ModelSelectionDialog(self.ogreRoot, self)
-        self.materialSelectionDialog = MaterialSelectionDialog(self.ogreRoot, self)
-        self.moduleManager.modelSelectionDialog = self.modelSelectionDialog
-        self.moduleManager.materialSelectionDialog = self.materialSelectionDialog
-        self.moduleDirectoryViewWin = ModuleDirectoryView(self)
-        
-        triggerManager = TriggerManager()
-        
-        self.gameObjectClassView = GameObjectClassView(self.moduleManager.gocManager)
-
-        self.createDockWindows()
-
-        self.mainTimer = QtCore.QTimer(self)
-        self.mainTimer.connect(self.mainTimer, QtCore.SIGNAL("timeout()"), self.update)
-        self.mainTimer.start(5)
-
-        settings = QtCore.QSettings()
-        self.restoreGeometry(settings.value("MainWindow/Geometry").toByteArray())
-        self.restoreState(settings.value("MainWindow/DockWindows").toByteArray())
-        if not self.prefDialog.setCfgPath(settings.value("Preferences/moduleCfgPath").toString()):
-            self.prefDialog.show()
-            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
-
-        else:
-            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
-            
-        self.prefDialog.setExternalEditorPath(str(settings.value("Preferences/externalEditorPath").toString()))
-        
-        if self.prefDialog.moduleCfgPath is not None:
-            self.moduleDirectoryViewWin.modulesPath = self.prefDialog.moduleCfgPath.replace("modules.cfg", "")
-
-        
-        self.moduleManager.setModuleExplorer(self.moduleExplorerWin)
-        self.moduleManager.setModuleDirView(self.moduleDirectoryViewWin)
-        self.moduleManager.setPropertyWindow(self.objectPropertyWin)
-        self.moduleManager.setContextMenuCallback(self.onContextMenuCallback)
-        
-        self.setWindowIcon(QIcon("media/icons/lockenwickler_provisorium_small.png"))
-        self.setWindowTitle("Rastullahs Lockenwickler")
-        
-        self.editorSetupFinished = False
-        
-#        splash.finish(self)
-
-    def createAction(self, text, slot=None, shortcut=None, icon=None, tip=None, checkable=False, signal="triggered()"):
-        action = QtGui.QAction(text, self)
-        if icon is not None:
-            action.setIcon(QtGui.QIcon("media/icons/%s" % icon))
-        if shortcut is not None:
-            action.setShortcut(shortcut)
-        if tip is not None:
-            action.setToolTip(tip)
-            action.setStatusTip(tip)
-        if slot is not None:
-            self.connect(action, QtCore.SIGNAL(signal), slot)
-
-        action.setCheckable(checkable)
-
-        return action
-
-    def addActions(self, target, actions):
-        for act in actions:
-            if act is None:
-               target.addSeparator()
-            else:
-                target.addAction(act)
-
-    def setupUi(self):
-        self.setObjectName("MainWindow")
-
-        self.centralwidget = QtGui.QWidget(self)
-        self.centralwidget.setObjectName("centralwidget")
-
-        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
-        self.hboxlayout.setContentsMargins(0, 0, 0, 0)
-        self.hboxlayout.setObjectName("hboxlayout")
-
-        self.gridlayout = QtGui.QGridLayout()
-        self.gridlayout.setObjectName("gridlayout")
-        self.gridlayout.setContentsMargins(0, 0, 0, 0)
-        
-        self.menubar = QtGui.QMenuBar(self)
-        self.menubar.setObjectName("menubar")
-
-        self.menuFile = QtGui.QMenu(self.menubar)
-        self.menuFile.setObjectName("menuFile")
-
-        self.menuEdit = QtGui.QMenu(self.menubar)
-        self.menuEdit.setObjectName("menuEdit")
-
-        self.menuView = QtGui.QMenu(self.menubar)
-        self.menuView.setObjectName("menuView")
-        self.setMenuBar(self.menubar)
-
-
-        self.statusbar = QtGui.QStatusBar(self)
-        self.statusbar.setObjectName("statusbar")
-        self.setStatusBar(self.statusbar)
-
-#####################################
-        self.actionNeu =self.createAction("&New Module",  self.actionNewSlot,  QKeySequence.New,  "filenew.png",  "New Module")
-        self.actionNeu.setObjectName("actionNeu")
-
-        self.actionOpen = self.createAction("&Open Module",  self.actionOpenSlot,  QKeySequence.Open,  "fileopen.png",  "Open Module")
-        self.actionOpen.setObjectName("actionOpen")
-        
-        self.actionSave = self.createAction("&Save",  self.actionSaveSlot,  QKeySequence.Save,  "filesave.png",  "Save Module")
-        self.actionSave.setObjectName("actionSave")
-        
-        self.actionRunModule = self.createAction("&Save and Run",  self.actionRunModuleSlot,  "Alt+R",  "fileexport.png",  "Save And Run Module")
-        self.actionRunModule.setObjectName("actionRunModule")
-
-        self.actionClose = self.createAction("Quit",  self.actionQuitSlot,  "Alt+Q",  "exit.png",  "Quit")
-        self.actionClose.setObjectName("actionQuit")
-#####################################
-
-
-#####################################
-        self.actionDelete = self.createAction("Delete",  self.actionDeleteSlot,  QKeySequence.Delete,  "editdelete.png",  "Delete")
-        self.actionDelete.setObjectName("actionDelete")
-
-        self.actionCopy = self.createAction("Copy",  self.actionCopySlot,  QKeySequence.Copy,  "editcopy.png",  "Copy")
-        self.actionCopy.setObjectName("actionCopy")
-
-        self.actionCut = self.createAction("Cut",  self.actionCutSlot,  QKeySequence.Cut,  "editcut.png",  "Cut")
-        self.actionCut.setObjectName("actionCut")
-
-        self.actionPaste = self.createAction("Paste",  self.actionPasteSlot,  QKeySequence.Paste,  "editpaste.png",  "Paste")
-        self.actionPaste.setObjectName("actionPaste")
-
-        self.actionSelect = self.createAction("&Select",  self.actionSelectSlot,  "Space",  "cursor.png",  "Move selected object")
-        self.actionSelect.setObjectName("actionSelect")
-
-        self.actionMove = self.createAction("&Move",  self.actionMoveSlot,  "g",  "move.png",  "Move selected object")
-        self.actionMove.setObjectName("actionMove")
-
-        self.actionRotate = self.createAction("&Rotate",  self.actionRotateSlot,  "r",  "rotate.png",  "Rotate selected object")
-        self.actionRotate.setObjectName("actionRotate")
-
-        self.actionScale = self.createAction("&Scale",  self.actionScaleSlot,  "x",  "resizecol.png",  "Scale selected object")
-        self.actionScale.setObjectName("actionScale")
-
-        self.actionOneClickEntityPlacement = self.createAction("&OneClickEntityPlacement",  self.actionOneClickEntityPlacementSlot,  "",  "resizecol.png",  "Add an Entity just by a click")
-        self.actionOneClickEntityPlacement.setObjectName("actionOneClickEntityPlacement")
-        self.actionOneClickEntityPlacement.setCheckable(True)
-
-#####################################
-#####################################
-        self.actionSceneExplorer = self.createAction("&Scene Exlporer",  self.toggleModuleExplorer,  "Alt+E",  "view_tree.png",  "Module Explorer",  False)
-        self.actionSceneExplorer.setObjectName("actionSceneExplorer")
-        
-        self.actionModuleDirView = self.createAction("&Directory Explorer",  self.toggleModuleDirView,  "Alt+D",  "view_tree.png",  "Module Directory Explorer",  False)
-        self.actionModuleDirView.setObjectName("actionDirectoryExplorer")
-        
-        self.actionPreferences = self.createAction("&Preferences",  self.togglePreferencesWindow,  None,  "configure.png",  "Lockenwickler Preferences",  False)
-        self.actionPreferences.setObjectName("actionPreferences")
-
-        self.actionProperty_Window = self.createAction("Pr&operty Window",  self.togglePropertyWindow,  "Alt+P",  "unsortedlist1.png",  "Property Window")
-        self.actionProperty_Window.setObjectName("actionProperty_Window")
-
-        self.actionObject_Selection = self.createAction("&Model Preview Window",  self.toggleModelPreviewWindow,  "Alt+O",  "tux.png",  "Model Preview")
-        self.actionObject_Selection.setObjectName("actionObject_Selection")
-        
-        self.actionMaterial_Selection = self.createAction("Material &Preview Window",  self.toggleMaterialPreviewWindow,  "Alt+M",  "colors.png",  "Material Preview")
-        self.actionMaterial_Selection.setObjectName("actionMaterial_Selection")
-
-        self.actionGameObjectClass_Selection = self.createAction("&Game Object Class Preview Window",  self.toggleGameObjectViewWindow,  "Ctrl+G",  "multirow.png",  "GameObjectClass Preview")
-        self.actionGameObjectClass_Selection.setObjectName("actionObject_Selection")
-
-        self.actionConsole_Window = self.createAction("&Console Window",  self.toggleConsoleWindow,  "Alt+C",  "console.png",  "Console Window")
-        self.actionConsole_Window.setObjectName("actionConsole_Window")
-        
-        self.actionTerrainTools_Window = self.createAction("&Terrain Tools",  self.toggleTerrainToolsWindow,  "Alt+T",  "terrain_small.png",  "Console Window")
-        self.actionTerrainTools_Window.setObjectName("actionTerrainTools_Window")
-        
-        self.actionToggleViewportGrid = self.createAction("&Toggle Grid",  self.toggleViewportGrid,  "Alt+G",  "console.png",  "Toggle Viewport Grid")
-        self.actionToggleViewportGrid.setObjectName("actionToggleViewportGrid")
-
-#####################################
-#####################################
-
-
-        self.menuFile.addAction(self.actionNeu)
-        self.menuFile.addAction(self.actionOpen)
-        self.menuFile.addAction(self.actionSave)
-        self.menuFile.addAction(self.actionRunModule)
-        self.menuFile.addAction(self.actionClose)
-
-        self.menuEdit.addAction(self.actionSelect)
-        self.menuEdit.addAction(self.actionMove)
-        self.menuEdit.addAction(self.actionRotate)
-        self.menuEdit.addAction(self.actionScale)
-        self.menuEdit.addSeparator()
-        self.menuEdit.addAction(self.actionDelete)
-        self.menuEdit.addAction(self.actionCopy)
-        self.menuEdit.addAction(self.actionCut)
-        self.menuEdit.addAction(self.actionPaste)
-        self.menuEdit.addSeparator()
-        self.menuEdit.addAction(self.actionOneClickEntityPlacement)
-        
-
-        self.menuView.addAction(self.actionSceneExplorer)
-        self.menuView.addAction(self.actionModuleDirView)
-        self.menuView.addAction(self.actionPreferences)
-        self.menuView.addAction(self.actionProperty_Window)
-        self.menuView.addAction(self.actionObject_Selection)
-        self.menuView.addAction(self.actionMaterial_Selection)
-        self.menuView.addAction(self.actionGameObjectClass_Selection)
-        self.menuView.addAction(self.actionConsole_Window)
-        self.menuView.addAction(self.actionTerrainTools_Window)
-        self.menuView.addAction(self.actionToggleViewportGrid)
-        
-        self.menubar.addAction(self.menuFile.menuAction())
-        self.menubar.addAction(self.menuEdit.menuAction())
-        self.menubar.addAction(self.menuView.menuAction())
-
-        self.retranslateUi()
-        QtCore.QMetaObject.connectSlotsByName(self)
-
-    def retranslateUi(self):
-        self.setWindowTitle(QtGui.QApplication.translate("MainWindow", "MainWindow", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuFile.setTitle(QtGui.QApplication.translate("MainWindow", "File", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuEdit.setTitle(QtGui.QApplication.translate("MainWindow", "Edit", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuView.setTitle(QtGui.QApplication.translate("MainWindow", "View", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionNeu.setText(QtGui.QApplication.translate("MainWindow", "New Module", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionMove.setText(QtGui.QApplication.translate("MainWindow", "Move", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionRotate.setText(QtGui.QApplication.translate("MainWindow", "Rotate", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionSceneExplorer.setText(QtGui.QApplication.translate("MainWindow", "Module Explorer", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionPreferences.setText(QtGui.QApplication.translate("MainWindow", "Preferences", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionProperty_Window.setText(QtGui.QApplication.translate("MainWindow", "Property Window", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionObject_Selection.setText(QtGui.QApplication.translate("MainWindow", "Object Selection", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionClose.setText(QtGui.QApplication.translate("MainWindow", "Quit", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionConsole_Window.setText(QtGui.QApplication.translate("MainWindow", "Console Window", None, QtGui.QApplication.UnicodeUTF8))
-
-    def setupOgre(self, pluginCfgPath="./Plugins.cfg", ogreCfgPath="./ogre.cfg", logPath="./ogre.log"):
-        if platform.system() == "Windows":
-            pluginCfgPath="./Plugins-windows.cfg"
-        else:
-            pluginCfgPath="./Plugins-linux.cfg"
-
-        root = og.Root(pluginCfgPath, ogreCfgPath, logPath)
-        self.ogreRoot = root
-
-        if  not self.ogreRoot.restoreConfig() and not self.ogreRoot.showConfigDialog():
-            sys.exit('Quit from Config Dialog')
-
-        root.initialise(False)
-
-        self.pivotRenderQueueListener = PivotRenderQueueListener()
-        self.OgreMainWinSceneMgr = self.ogreRoot.createSceneManager(og.ST_GENERIC, "OgreMainWinSceneMgr")
-        self.OgreMainWinSceneMgr.ambientLight = og.ColourValue(4, 4, 4)
-        self.OgreMainWinSceneMgr.addRenderQueueListener(self.pivotRenderQueueListener)
-        
-        self.moduleName = ""
-        self.myTerrainManager = MyTerrainManager(self.OgreMainWinSceneMgr)
-        self.moduleManager = ModuleManager(self.ogreRoot,  self.OgreMainWinSceneMgr)
-        self.moduleManager.myTerrainManager = self.myTerrainManager
-        self.gocManager = self.moduleManager.gocManager
-        
-        self.ogreMainWindow = OgreMainWindow.OgreMainWindow(self.moduleManager,  root,  self.OgreMainWinSceneMgr,  self)
-        self.gridlayout.addWidget(self.ogreMainWindow,0,0,1,1)
-        self.hboxlayout.addLayout(self.gridlayout)
-        self.setCentralWidget(self.centralwidget)
-        
-        self.myTerrainManager.ogreMainWindow = self.ogreMainWindow
-        
-        oglog = og.LogManager.getSingleton().getDefaultLog()
-        oglog.addListener(self.consoleWindow.lockenLog)
-
-    def finishEditorSetup(self):
-        if not self.editorSetupFinished:
-            og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
-            og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
-
-            self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)
-            self.moduleManager.pivot.hide()
-            self.editorSetupFinished = True
-        
-    def update(self):
-        self.ogreRoot.renderOneFrame()
-        if platform.system() == "Linux":
-            self.ogreMainWindow.updateRenderWindow()
-            self.modelSelectionDialog.updateRenderWindow()
-            self.materialSelectionDialog.updateRenderWindow()
-
-    def actionOpenSlot(self):
-        self.finishEditorSetup()
-        self.moduleManager.openLoadModuleDialog()
-
-    def actionNewSlot(self):
-        newModuleWiz = NewModuleWizard(self.moduleManager, self)
-        newModuleWiz.exec_()
-        return
-        
-    def actionSaveSlot(self):
-        self.moduleManager.save()
-        
-    def actionRunModuleSlot(self):
-        self.moduleManager.save()
-        if platform.system() == "Windows":
-            workingDir = self.prefDialog.moduleCfgPath.replace("/modules/modules.cfg", "")
-            executable = os.path.join(workingDir, "Rastullah.exe")
-            executable = executable.replace("/",  "\\")
-            if os.path.isfile(executable):
-                subprocess.Popen([executable, "--module", self.moduleManager.mainModule.name], 0, None, None, None, None, None, False, False, workingDir)
-
-        
-    def actionQuitSlot(self):
-        self.close()
-
-    def actionDeleteSlot(self):
-        self.moduleManager.deleteObjects()
-
-    def actionCopySlot(self):
-        self.moduleManager.copyObjects()
-
-    def actionCutSlot(self):
-        self.moduleManager.cutObjects()
-
-    def actionPasteSlot(self):
-        self.moduleManager.pasteObjects(self.ogreMainWindow.getCameraToViewportRay())
-
-    def actionSelectSlot(self):
-        self.moduleManager.pivot.hide()
-
-    def actionMoveSlot(self):
-        self.moduleManager.pivot.setMoveMode()
-
-    def actionRotateSlot(self):
-        self.moduleManager.pivot.setRotateMode()
-
-    def actionScaleSlot(self):
-        self.moduleManager.pivot.setScaleMode()
-
-    def actionOneClickEntityPlacementSlot(self):
-        self.moduleManager.setOneClickEntityPlacement(self.actionOneClickEntityPlacement.isChecked())
-
-    def togglePreferencesWindow(self):
-        if self.prefDialog.isHidden():
-            self.prefDialog.show()
-        else:
-            self.prefDialog.hide()
-
-    def toggleModelPreviewWindow(self):
-        if self.modelSelectionDock.isHidden():
-            self.modelSelectionDock.show()
-        else:
-            self.modelSelectionDock.hide()
-    
-    def toggleMaterialPreviewWindow(self):
-        if self.materialSelectionDock.isHidden():
-            self.materialSelectionDock.show()
-        else:
-            self.materialSelectionDock.hide()
-
-    def toggleGameObjectViewWindow(self):
-        if self.gameObjectClassViewDock.isHidden():
-            self.gameObjectClassViewDock.show()
-        else:
-            self.gameObjectClassViewDock.hide()
-
-    def toggleModuleExplorer(self):
-        if self.moduleExplorerDock.isHidden():
-            self.moduleExplorerDock.show()
-        else:
-            self.moduleExplorerDock.hide()
-            
-    def toggleModuleDirView(self):
-        if self.moduleDirectoryViewDock.isHidden():
-            self.moduleDirectoryViewDock.show()
-        else:
-            self.moduleDirectoryViewDock.hide()
-
-    def togglePropertyWindow(self):
-        if self.propertyDock.isHidden():
-            self.propertyDock.show()
-        else:
-            self.propertyDock.hide()
-
-    def toggleConsoleWindow(self):
-        if self.consoleDock.isHidden():
-            self.consoleDock.show()
-        else:
-            self.consoleDock.hide()
-            
-    def toggleTerrainToolsWindow(self):
-        if self.myTerrainManagerDock.isHidden():
-            self.myTerrainManagerDock.show()
-        else:
-            self.myTerrainManagerDock.hide()
-
-    def toggleViewportGrid(self):
-        self.ogreMainWindow.toggleViewportGrid()
-
-    def createDockWindows(self):
-        self.modelSelectionDock = QtGui.QDockWidget(self.tr("Models"), self)
-        self.modelSelectionDock.setObjectName("ModelSelectionDockWindow")
-        self.modelSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.modelSelectionDock.setWidget(self.modelSelectionDialog)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.modelSelectionDock)
-        
-        self.materialSelectionDock = QtGui.QDockWidget(self.tr("Materials"), self)
-        self.materialSelectionDock.setObjectName("MaterialSelectionDockWindow")
-        self.materialSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.materialSelectionDock.setWidget(self.materialSelectionDialog)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.materialSelectionDock)
-        self.tabifyDockWidget(self.modelSelectionDock, self.materialSelectionDock)
-        
-        self.gameObjectClassViewDock = QtGui.QDockWidget(self.tr("GameObjectClasses"), self)
-        self.gameObjectClassViewDock.setObjectName("GameObjectClassView")
-        self.gameObjectClassViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.gameObjectClassViewDock.setWidget(self.gameObjectClassView)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.gameObjectClassViewDock)        
-        self.tabifyDockWidget(self.modelSelectionDock, self.gameObjectClassViewDock)
-        
-        self.propertyDock = QtGui.QDockWidget(self.tr("Properties"), self)
-        self.propertyDock.setObjectName("PropertyDockWindow")
-        self.propertyDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.propertyDock.setWidget(self.objectPropertyWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.propertyDock)
-
-        self.moduleExplorerDock = QtGui.QDockWidget(self.tr("Module Explorer"), self)
-        self.moduleExplorerDock.setObjectName("ModuleExplorerDockWindow")
-        self.moduleExplorerDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.moduleExplorerDock.setWidget(self.moduleExplorerWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleExplorerDock)
-        self.tabifyDockWidget(self.moduleExplorerDock, self.propertyDock)
-        
-        self.moduleDirectoryViewDock = QtGui.QDockWidget(self.tr("Module Directory View"), self)
-        self.moduleDirectoryViewDock.setObjectName("ModuleDirectoryViewDockWindow")
-        self.moduleDirectoryViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea | QtCore.Qt.TopDockWidgetArea | QtCore.Qt.BottomDockWidgetArea)
-        self.moduleDirectoryViewDock.setWidget(self.moduleDirectoryViewWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleDirectoryViewDock)
-        
-        self.myTerrainManagerDock = self.myTerrainManager.getDockWidget(self)
-        
-        self.consoleDock = QtGui.QDockWidget(self.tr("Console"), self)
-        self.consoleDock.setObjectName("ConsoleDockWindow")
-        self.consoleDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea | QtCore.Qt.TopDockWidgetArea)
-        self.consoleDock.setWidget(self.consoleWindow)
-        self.addDockWidget(QtCore.Qt.BottomDockWidgetArea, self.consoleDock)
-
-        self.fileToolBar = self.addToolBar("File Toolbar")
-        self.fileToolBar.setObjectName("FileToolBar")
-        self.fileToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
-        self.fileToolBar.addAction(self.actionNeu)
-        self.fileToolBar.addAction(self.actionOpen)
-        self.fileToolBar.addAction(self.actionSave)
-        self.fileToolBar.addAction(self.actionRunModule)
-        self.fileToolBar.addAction(self.actionClose)
-        self.addToolBar(QtCore.Qt.TopToolBarArea, self.fileToolBar)
-
-        self.moveToolBar = self.addToolBar("Transformation Bar")
-        self.moveToolBar.setObjectName("TransformationBar")
-        self.moveToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
-        self.moveToolBar.addAction(self.actionSelect)
-        self.moveToolBar.addAction(self.actionMove)
-        self.moveToolBar.addAction(self.actionRotate)
-        self.moveToolBar.addAction(self.actionScale)
-        self.addToolBar(QtCore.Qt.TopToolBarArea, self.moveToolBar)
-
-    def keyPressEvent(self,  event):
-        if not event.isAutoRepeat():
-            self.ogreMainWindow.keyPressEvent(event)
-
-    def keyReleaseEvent(self,  event):
-        if not event.isAutoRepeat():
-            self.ogreMainWindow.keyReleaseEvent(event)
-        pass
-
-    def onContextMenuCallback(self, actions, menus):
-        menu = QMenu("My Menu!!")
-        menu.addAction(self.actionDelete)
-        menu.addAction(self.actionCopy)
-        menu.addAction(self.actionCut)
-        menu.addAction(self.actionPaste)
-        menu.addSeparator()
-        
-        for m in menus:
-            menu.addMenu(m)
-        for a in actions:
-            menu.addAction(a)
-
-        menu.exec_(QCursor.pos())
-
-    def connectActionButtons(self):
-        pass
-
-    def saveOnClose(self):
-#        reply = QtGui.QMessageBox.question(self,  "Rastullahs Lockenwickler - Unsaved Chages",  "Save unsaved changes?",  QtGui.QMessageBox.Yes|QtGui.QMessageBox.No|QtGui.QMessageBox.Cancel)
-#        if reply == QtGui.QMessageBox.Cancel:
-#            return False
-#        if reply == QtGui.QMessageBox.Yes:
-#            print""
-#            #TODO: implement save here
-        return True
-
-    def closeEvent(self,  event):
-        if self.saveOnClose():
-            settings = QtCore.QSettings()
-            settings.setValue("Preferences/moduleCfgPath", QtCore.QVariant(self.prefDialog.lineEdit.text()))
-            settings.setValue("MainWindow/Geometry",  QtCore.QVariant(self.saveGeometry()))
-            settings.setValue("MainWIndow/DockWindows",  QtCore.QVariant(self.saveState()))
-            settings.setValue("Preferences/externalEditorPath",  QtCore.QVariant(self.prefDialog.externalTextAppLineEdit.text()))
-            #self.ogreRoot.shutdown()
-        else:
-            event.ignore()
-
-if __name__ == "__main__":
-#    # Import Psyco if available
-#    try:
-#        import psyco
-#        psyco.full(0.02)
-#        #psyco.log()
-#        #psyco.profile()
-#    except ImportError:
-#        pass
-    
-    app = QtGui.QApplication(sys.argv)
-    app.setOrganizationName("Team Pantheon")
-    app.setOrganizationDomain("rastullahs-lockenpracht.de/team")
-    app.setApplicationName("Lockenwickler")
-
-    form = Lockenwickler()
-    form.show()
-
-    app.exec_()
-    
-    sys.exit(0)
-
+#################################################
+# This source file is part of Rastullahs Lockenwickler.
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+#
+# This program is distributed in the hope that it will be useful,
+#  but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  US
+#################################################
+
+import os
+import sys
+import platform
+import subprocess
+
+sys.path.insert(0,'..')
+import PythonOgreConfig
+
+from random import randint
+
+from PyQt4 import QtGui, QtCore
+from PreferencesDialog import *
+from ObjectPropertyWin import *
+from ModelSelectionDialog import *
+from MaterialSelectionDialog import *
+from GameObjectClassView import *
+from ConsoleWindow import *
+from ModuleManager import ModuleManager
+from ModuleExplorer import *
+from NewModuleWizard import *
+from MovePivot import *
+from PivotRenderQueueListener import *
+from ModuleDirectoryView import *
+from TriggerManager import *
+from MyTerrainManager import MyTerrainManager
+
+import OgreMainWindow
+import ogre.renderer.OGRE as og
+
+class Lockenwickler(QtGui.QMainWindow):
+    def __init__(self, parent=None):
+        QtGui.QWidget.__init__(self, parent)
+
+#        pixmap = QPixmap("media/icons/lockenwickler_provisorium.png")
+#        splash = QSplashScreen(pixmap, Qt.WindowStaysOnTopHint)
+#        splash.setMask(pixmap.mask())
+#        splash.showMessage("Starting...")
+#        splash.show() 
+
+        self.setupUi()
+
+        self.consoleWindow = ConsoleWindow(False,  self)
+
+        self.setupOgre()
+
+        self.prefDialog = PreferencesDialog(self)
+        self.objectPropertyWin = ObjectPropertyWin(self.OgreMainWinSceneMgr, self.gocManager, self)
+        self.moduleExplorerWin = ModuleExplorer(self)
+        self.modelSelectionDialog = ModelSelectionDialog(self.ogreRoot, self)
+        self.materialSelectionDialog = MaterialSelectionDialog(self.ogreRoot, self)
+        self.moduleManager.modelSelectionDialog = self.modelSelectionDialog
+        self.moduleManager.materialSelectionDialog = self.materialSelectionDialog
+        self.moduleDirectoryViewWin = ModuleDirectoryView(self)
+        
+        triggerManager = TriggerManager()
+        
+        self.gameObjectClassView = GameObjectClassView(self.moduleManager.gocManager)
+
+        self.createDockWindows()
+
+        self.mainTimer = QtCore.QTimer(self)
+        self.mainTimer.connect(self.mainTimer, QtCore.SIGNAL("timeout()"), self.update)
+        self.mainTimer.start(5)
+
+        settings = QtCore.QSettings()
+        self.restoreGeometry(settings.value("MainWindow/Geometry").toByteArray())
+        self.restoreState(settings.value("MainWindow/DockWindows").toByteArray())
+        if not self.prefDialog.setCfgPath(settings.value("Preferences/moduleCfgPath").toString()):
+            self.prefDialog.show()
+            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
+
+        else:
+            self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
+            
+        self.prefDialog.setExternalEditorPath(str(settings.value("Preferences/externalEditorPath").toString()))
+        
+        if self.prefDialog.moduleCfgPath is not None:
+            self.moduleDirectoryViewWin.modulesPath = self.prefDialog.moduleCfgPath.replace("modules.cfg", "")
+
+        
+        self.moduleManager.setModuleExplorer(self.moduleExplorerWin)
+        self.moduleManager.setModuleDirView(self.moduleDirectoryViewWin)
+        self.moduleManager.setPropertyWindow(self.objectPropertyWin)
+        self.moduleManager.setContextMenuCallback(self.onContextMenuCallback)
+        
+        self.setWindowIcon(QIcon("media/icons/lockenwickler_provisorium_small.png"))
+        self.setWindowTitle("Rastullahs Lockenwickler")
+        
+        self.editorSetupFinished = False
+        
+#        splash.finish(self)
+
+    def createAction(self, text, slot=None, shortcut=None, icon=None, tip=None, checkable=False, signal="triggered()"):
+        action = QtGui.QAction(text, self)
+        if icon is not None:
+            action.setIcon(QtGui.QIcon("media/icons/%s" % icon))
+        if shortcut is not None:
+            action.setShortcut(shortcut)
+        if tip is not None:
+            action.setToolTip(tip)
+            action.setStatusTip(tip)
+        if slot is not None:
+            self.connect(action, QtCore.SIGNAL(signal), slot)
+
+        action.setCheckable(checkable)
+
+        return action
+
+    def addActions(self, target, actions):
+        for act in actions:
+            if act is None:
+               target.addSeparator()
+            else:
+                target.addAction(act)
+
+    def setupUi(self):
+        self.setObjectName("MainWindow")
+
+        self.centralwidget = QtGui.QWidget(self)
+        self.centralwidget.setObjectName("centralwidget")
+
+        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
+        self.hboxlayout.setContentsMargins(0, 0, 0, 0)
+        self.hboxlayout.setObjectName("hboxlayout")
+
+        self.gridlayout = QtGui.QGridLayout()
+        self.gridlayout.setObjectName("gridlayout")
+        self.gridlayout.setContentsMargins(0, 0, 0, 0)
+        
+        self.menubar = QtGui.QMenuBar(self)
+        self.menubar.setObjectName("menubar")
+
+        self.menuFile = QtGui.QMenu(self.menubar)
+        self.menuFile.setObjectName("menuFile")
+
+        self.menuEdit = QtGui.QMenu(self.menubar)
+        self.menuEdit.setObjectName("menuEdit")
+
+        self.menuView = QtGui.QMenu(self.menubar)
+        self.menuView.setObjectName("menuView")
+        self.setMenuBar(self.menubar)
+
+
+        self.statusbar = QtGui.QStatusBar(self)
+        self.statusbar.setObjectName("statusbar")
+        self.setStatusBar(self.statusbar)
+
+#####################################
+        self.actionNeu =self.createAction("&New Module",  self.actionNewSlot,  QKeySequence.New,  "filenew.png",  "New Module")
+        self.actionNeu.setObjectName("actionNeu")
+
+        self.actionOpen = self.createAction("&Open Module",  self.actionOpenSlot,  QKeySequence.Open,  "fileopen.png",  "Open Module")
+        self.actionOpen.setObjectName("actionOpen")
+        
+        self.actionSave = self.createAction("&Save",  self.actionSaveSlot,  QKeySequence.Save,  "filesave.png",  "Save Module")
+        self.actionSave.setObjectName("actionSave")
+        
+        self.actionRunModule = self.createAction("&Save and Run",  self.actionRunModuleSlot,  "Alt+R",  "fileexport.png",  "Save And Run Module")
+        self.actionRunModule.setObjectName("actionRunModule")
+
+        self.actionClose = self.createAction("Quit",  self.actionQuitSlot,  "Alt+Q",  "exit.png",  "Quit")
+        self.actionClose.setObjectName("actionQuit")
+#####################################
+
+
+#####################################
+        self.actionDelete = self.createAction("Delete",  self.actionDeleteSlot,  QKeySequence.Delete,  "editdelete.png",  "Delete")
+        self.actionDelete.setObjectName("actionDelete")
+
+        self.actionCopy = self.createAction("Copy",  self.actionCopySlot,  QKeySequence.Copy,  "editcopy.png",  "Copy")
+        self.actionCopy.setObjectName("actionCopy")
+
+        self.actionCut = self.createAction("Cut",  self.actionCutSlot,  QKeySequence.Cut,  "editcut.png",  "Cut")
+        self.actionCut.setObjectName("actionCut")
+
+        self.actionPaste = self.createAction("Paste",  self.actionPasteSlot,  QKeySequence.Paste,  "editpaste.png",  "Paste")
+        self.actionPaste.setObjectName("actionPaste")
+
+        self.actionSelect = self.createAction("&Select",  self.actionSelectSlot,  "Space",  "cursor.png",  "Move selected object")
+        self.actionSelect.setObjectName("actionSelect")
+
+        self.actionMove = self.createAction("&Move",  self.actionMoveSlot,  "g",  "move.png",  "Move selected object")
+        self.actionMove.setObjectName("actionMove")
+
+        self.actionRotate = self.createAction("&Rotate",  self.actionRotateSlot,  "r",  "rotate.png",  "Rotate selected object")
+        self.actionRotate.setObjectName("actionRotate")
+
+        self.actionScale = self.createAction("&Scale",  self.actionScaleSlot,  "x",  "resizecol.png",  "Scale selected object")
+        self.actionScale.setObjectName("actionScale")
+
+        self.actionOneClickEntityPlacement = self.createAction("&OneClickEntityPlacement",  self.actionOneClickEntityPlacementSlot,  "",  "resizecol.png",  "Add an Entity just by a click")
+        self.actionOneClickEntityPlacement.setObjectName("actionOneClickEntityPlacement")
+        self.actionOneClickEntityPlacement.setCheckable(True)
+
+#####################################
+#####################################
+        self.actionSceneExplorer = self.createAction("&Scene Exlporer",  self.toggleModuleExplorer,  "Alt+E",  "view_tree.png",  "Module Explorer",  False)
+        self.actionSceneExplorer.setObjectName("actionSceneExplorer")
+        
+        self.actionModuleDirView = self.createAction("&Directory Explorer",  self.toggleModuleDirView,  "Alt+D",  "view_tree.png",  "Module Directory Explorer",  False)
+        self.actionModuleDirView.setObjectName("actionDirectoryExplorer")
+        
+        self.actionPreferences = self.createAction("&Preferences",  self.togglePreferencesWindow,  None,  "configure.png",  "Lockenwickler Preferences",  False)
+        self.actionPreferences.setObjectName("actionPreferences")
+
+        self.actionProperty_Window = self.createAction("Pr&operty Window",  self.togglePropertyWindow,  "Alt+P",  "unsortedlist1.png",  "Property Window")
+        self.actionProperty_Window.setObjectName("actionProperty_Window")
+
+        self.actionObject_Selection = self.createAction("&Model Preview Window",  self.toggleModelPreviewWindow,  "Alt+O",  "tux.png",  "Model Preview")
+        self.actionObject_Selection.setObjectName("actionObject_Selection")
+        
+        self.actionMaterial_Selection = self.createAction("Material &Preview Window",  self.toggleMaterialPreviewWindow,  "Alt+M",  "colors.png",  "Material Preview")
+        self.actionMaterial_Selection.setObjectName("actionMaterial_Selection")
+
+        self.actionGameObjectClass_Selection = self.createAction("&Game Object Class Preview Window",  self.toggleGameObjectViewWindow,  "Ctrl+G",  "multirow.png",  "GameObjectClass Preview")
+        self.actionGameObjectClass_Selection.setObjectName("actionObject_Selection")
+
+        self.actionConsole_Window = self.createAction("&Console Window",  self.toggleConsoleWindow,  "Alt+C",  "console.png",  "Console Window")
+        self.actionConsole_Window.setObjectName("actionConsole_Window")
+        
+        self.actionTerrainTools_Window = self.createAction("&Terrain Tools",  self.toggleTerrainToolsWindow,  "Alt+T",  "terrain_small.png",  "Console Window")
+        self.actionTerrainTools_Window.setObjectName("actionTerrainTools_Window")
+        
+        self.actionToggleViewportGrid = self.createAction("&Toggle Grid",  self.toggleViewportGrid,  "Alt+G",  "console.png",  "Toggle Viewport Grid")
+        self.actionToggleViewportGrid.setObjectName("actionToggleViewportGrid")
+
+#####################################
+#####################################
+
+
+        self.menuFile.addAction(self.actionNeu)
+        self.menuFile.addAction(self.actionOpen)
+        self.menuFile.addAction(self.actionSave)
+        self.menuFile.addAction(self.actionRunModule)
+        self.menuFile.addAction(self.actionClose)
+
+        self.menuEdit.addAction(self.actionSelect)
+        self.menuEdit.addAction(self.actionMove)
+        self.menuEdit.addAction(self.actionRotate)
+        self.menuEdit.addAction(self.actionScale)
+        self.menuEdit.addSeparator()
+        self.menuEdit.addAction(self.actionDelete)
+        self.menuEdit.addAction(self.actionCopy)
+        self.menuEdit.addAction(self.actionCut)
+        self.menuEdit.addAction(self.actionPaste)
+        self.menuEdit.addSeparator()
+        self.menuEdit.addAction(self.actionOneClickEntityPlacement)
+        
+
+        self.menuView.addAction(self.actionSceneExplorer)
+        self.menuView.addAction(self.actionModuleDirView)
+        self.menuView.addAction(self.actionPreferences)
+        self.menuView.addAction(self.actionProperty_Window)
+        self.menuView.addAction(self.actionObject_Selection)
+        self.menuView.addAction(self.actionMaterial_Selection)
+        self.menuView.addAction(self.actionGameObjectClass_Selection)
+        self.menuView.addAction(self.actionConsole_Window)
+        self.menuView.addAction(self.actionTerrainTools_Window)
+        self.menuView.addAction(self.actionToggleViewportGrid)
+        
+        self.menubar.addAction(self.menuFile.menuAction())
+        self.menubar.addAction(self.menuEdit.menuAction())
+        self.menubar.addAction(self.menuView.menuAction())
+
+        self.retranslateUi()
+        QtCore.QMetaObject.connectSlotsByName(self)
+
+    def retranslateUi(self):
+        self.setWindowTitle(QtGui.QApplication.translate("MainWindow", "MainWindow", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuFile.setTitle(QtGui.QApplication.translate("MainWindow", "File", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuEdit.setTitle(QtGui.QApplication.translate("MainWindow", "Edit", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuView.setTitle(QtGui.QApplication.translate("MainWindow", "View", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionNeu.setText(QtGui.QApplication.translate("MainWindow", "New Module", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionMove.setText(QtGui.QApplication.translate("MainWindow", "Move", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionRotate.setText(QtGui.QApplication.translate("MainWindow", "Rotate", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionSceneExplorer.setText(QtGui.QApplication.translate("MainWindow", "Module Explorer", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionPreferences.setText(QtGui.QApplication.translate("MainWindow", "Preferences", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionProperty_Window.setText(QtGui.QApplication.translate("MainWindow", "Property Window", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionObject_Selection.setText(QtGui.QApplication.translate("MainWindow", "Object Selection", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionClose.setText(QtGui.QApplication.translate("MainWindow", "Quit", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionConsole_Window.setText(QtGui.QApplication.translate("MainWindow", "Console Window", None, QtGui.QApplication.UnicodeUTF8))
+
+    def setupOgre(self, pluginCfgPath="./Plugins.cfg", ogreCfgPath="./ogre.cfg", logPath="./ogre.log"):
+        if platform.system() == "Windows":
+            pluginCfgPath="./Plugins-windows.cfg"
+        else:
+            pluginCfgPath="./Plugins-linux.cfg"
+
+        root = og.Root(pluginCfgPath, ogreCfgPath, logPath)
+        self.ogreRoot = root
+
+        if  not self.ogreRoot.restoreConfig() and not self.ogreRoot.showConfigDialog():
+            sys.exit('Quit from Config Dialog')
+
+        root.initialise(False)
+
+        self.pivotRenderQueueListener = PivotRenderQueueListener()
+        self.OgreMainWinSceneMgr = self.ogreRoot.createSceneManager(og.ST_GENERIC, "OgreMainWinSceneMgr")
+        self.OgreMainWinSceneMgr.ambientLight = og.ColourValue(4, 4, 4)
+        self.OgreMainWinSceneMgr.addRenderQueueListener(self.pivotRenderQueueListener)
+        
+        self.moduleName = ""
+        self.myTerrainManager = MyTerrainManager(self.OgreMainWinSceneMgr)
+        self.moduleManager = ModuleManager(self.ogreRoot,  self.OgreMainWinSceneMgr)
+        self.moduleManager.myTerrainManager = self.myTerrainManager
+        self.gocManager = self.moduleManager.gocManager
+        
+        self.ogreMainWindow = OgreMainWindow.OgreMainWindow(self.moduleManager,  root,  self.OgreMainWinSceneMgr,  self)
+        self.gridlayout.addWidget(self.ogreMainWindow,0,0,1,1)
+        self.hboxlayout.addLayout(self.gridlayout)
+        self.setCentralWidget(self.centralwidget)
+        
+        self.myTerrainManager.ogreMainWindow = self.ogreMainWindow
+        
+        oglog = og.LogManager.getSingleton().getDefaultLog()
+        oglog.addListener(self.consoleWindow.lockenLog)
+
+    def finishEditorSetup(self):
+        if not self.editorSetupFinished:
+            og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
+            og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
+
+            self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)
+            self.moduleManager.pivot.hide()
+            self.editorSetupFinished = True
+        
+    def update(self):
+        self.ogreRoot.renderOneFrame()
+        if platform.system() == "Linux":
+            self.ogreMainWindow.updateRenderWindow()
+            self.modelSelectionDialog.updateRenderWindow()
+            self.materialSelectionDialog.updateRenderWindow()
+
+    def actionOpenSlot(self):
+        self.finishEditorSetup()
+        self.moduleManager.openLoadModuleDialog()
+
+    def actionNewSlot(self):
+        newModuleWiz = NewModuleWizard(self.moduleManager, self)
+        newModuleWiz.exec_()
+        return
+        
+    def actionSaveSlot(self):
+        self.moduleManager.save()
+        
+    def actionRunModuleSlot(self):
+        self.moduleManager.save()
+        if platform.system() == "Windows":
+            workingDir = self.prefDialog.moduleCfgPath.replace("/modules/modules.cfg", "")
+            executable = os.path.join(workingDir, "Rastullah.exe")
+            executable = executable.replace("/",  "\\")
+            if os.path.isfile(executable):
+                subprocess.Popen([executable, "--module", self.moduleManager.mainModule.name], 0, None, None, None, None, None, False, False, workingDir)
+
+        
+    def actionQuitSlot(self):
+        self.close()
+
+    def actionDeleteSlot(self):
+        self.moduleManager.deleteObjects()
+
+    def actionCopySlot(self):
+        self.moduleManager.copyObjects()
+
+    def actionCutSlot(self):
+        self.moduleManager.cutObjects()
+
+    def actionPasteSlot(self):
+        self.moduleManager.pasteObjects(self.ogreMainWindow.getCameraToViewportRay())
+
+    def actionSelectSlot(self):
+        self.moduleManager.pivot.hide()
+
+    def actionMoveSlot(self):
+        self.moduleManager.pivot.setMoveMode()
+
+    def actionRotateSlot(self):
+        self.moduleManager.pivot.setRotateMode()
+
+    def actionScaleSlot(self):
+        self.moduleManager.pivot.setScaleMode()
+
+    def actionOneClickEntityPlacementSlot(self):
+        self.moduleManager.setOneClickEntityPlacement(self.actionOneClickEntityPlacement.isChecked())
+
+    def togglePreferencesWindow(self):
+        if self.prefDialog.isHidden():
+            self.prefDialog.show()
+        else:
+            self.prefDialog.hide()
+
+    def toggleModelPreviewWindow(self):
+        if self.modelSelectionDock.isHidden():
+            self.modelSelectionDock.show()
+        else:
+            self.modelSelectionDock.hide()
+    
+    def toggleMaterialPreviewWindow(self):
+        if self.materialSelectionDock.isHidden():
+            self.materialSelectionDock.show()
+        else:
+            self.materialSelectionDock.hide()
+
+    def toggleGameObjectViewWindow(self):
+        if self.gameObjectClassViewDock.isHidden():
+            self.gameObjectClassViewDock.show()
+        else:
+            self.gameObjectClassViewDock.hide()
+
+    def toggleModuleExplorer(self):
+        if self.moduleExplorerDock.isHidden():
+            self.moduleExplorerDock.show()
+        else:
+            self.moduleExplorerDock.hide()
+            
+    def toggleModuleDirView(self):
+        if self.moduleDirectoryViewDock.isHidden():
+            self.moduleDirectoryViewDock.show()
+        else:
+            self.moduleDirectoryViewDock.hide()
+
+    def togglePropertyWindow(self):
+        if self.propertyDock.isHidden():
+            self.propertyDock.show()
+        else:
+            self.propertyDock.hide()
+
+    def toggleConsoleWindow(self):
+        if self.consoleDock.isHidden():
+            self.consoleDock.show()
+        else:
+            self.consoleDock.hide()
+            
+    def toggleTerrainToolsWindow(self):
+        if self.myTerrainManagerDock.isHidden():
+            self.myTerrainManagerDock.show()
+        else:
+            self.myTerrainManagerDock.hide()
+
+    def toggleViewportGrid(self):
+        self.ogreMainWindow.toggleViewportGrid()
+
+    def createDockWindows(self):
+        self.modelSelectionDock = QtGui.QDockWidget(self.tr("Models"), self)
+        self.modelSelectionDock.setObjectName("ModelSelectionDockWindow")
+        self.modelSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.modelSelectionDock.setWidget(self.modelSelectionDialog)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.modelSelectionDock)
+        
+        self.materialSelectionDock = QtGui.QDockWidget(self.tr("Materials"), self)
+        self.materialSelectionDock.setObjectName("MaterialSelectionDockWindow")
+        self.materialSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.materialSelectionDock.setWidget(self.materialSelectionDialog)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.materialSelectionDock)
+        self.tabifyDockWidget(self.modelSelectionDock, self.materialSelectionDock)
+        
+        self.gameObjectClassViewDock = QtGui.QDockWidget(self.tr("GameObjectClasses"), self)
+        self.gameObjectClassViewDock.setObjectName("GameObjectClassView")
+        self.gameObjectClassViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.gameObjectClassViewDock.setWidget(self.gameObjectClassView)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.gameObjectClassViewDock)        
+        self.tabifyDockWidget(self.modelSelectionDock, self.gameObjectClassViewDock)
+        
+        self.propertyDock = QtGui.QDockWidget(self.tr("Properties"), self)
+        self.propertyDock.setObjectName("PropertyDockWindow")
+        self.propertyDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.propertyDock.setWidget(self.objectPropertyWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.propertyDock)
+
+        self.moduleExplorerDock = QtGui.QDockWidget(self.tr("Module Explorer"), self)
+        self.moduleExplorerDock.setObjectName("ModuleExplorerDockWindow")
+        self.moduleExplorerDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.moduleExplorerDock.setWidget(self.moduleExplorerWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleExplorerDock)
+        self.tabifyDockWidget(self.moduleExplorerDock, self.propertyDock)
+        
+        self.moduleDirectoryViewDock = QtGui.QDockWidget(self.tr("Module Directory View"), self)
+        self.moduleDirectoryViewDock.setObjectName("ModuleDirectoryViewDockWindow")
+        self.moduleDirectoryViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea | QtCore.Qt.TopDockWidgetArea | QtCore.Qt.BottomDockWidgetArea)
+        self.moduleDirectoryViewDock.setWidget(self.moduleDirectoryViewWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleDirectoryViewDock)
+        
+        self.myTerrainManagerDock = self.myTerrainManager.getDockWidget(self)
+        
+        self.consoleDock = QtGui.QDockWidget(self.tr("Console"), self)
+        self.consoleDock.setObjectName("ConsoleDockWindow")
+        self.consoleDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea | QtCore.Qt.TopDockWidgetArea)
+        self.consoleDock.setWidget(self.consoleWindow)
+        self.addDockWidget(QtCore.Qt.BottomDockWidgetArea, self.consoleDock)
+
+        self.fileToolBar = self.addToolBar("File Toolbar")
+        self.fileToolBar.setObjectName("FileToolBar")
+        self.fileToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
+        self.fileToolBar.addAction(self.actionNeu)
+        self.fileToolBar.addAction(self.actionOpen)
+        self.fileToolBar.addAction(self.actionSave)
+        self.fileToolBar.addAction(self.actionRunModule)
+        self.fileToolBar.addAction(self.actionClose)
+        self.addToolBar(QtCore.Qt.TopToolBarArea, self.fileToolBar)
+
+        self.moveToolBar = self.addToolBar("Transformation Bar")
+        self.moveToolBar.setObjectName("TransformationBar")
+        self.moveToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
+        self.moveToolBar.addAction(self.actionSelect)
+        self.moveToolBar.addAction(self.actionMove)
+        self.moveToolBar.addAction(self.actionRotate)
+        self.moveToolBar.addAction(self.actionScale)
+        self.addToolBar(QtCore.Qt.TopToolBarArea, self.moveToolBar)
+
+    def keyPressEvent(self,  event):
+        if not event.isAutoRepeat():
+            self.ogreMainWindow.keyPressEvent(event)
+
+    def keyReleaseEvent(self,  event):
+        if not event.isAutoRepeat():
+            self.ogreMainWindow.keyReleaseEvent(event)
+        pass
+
+    def onContextMenuCallback(self, actions, menus):
+        menu = QMenu("My Menu!!")
+        menu.addAction(self.actionDelete)
+        menu.addAction(self.actionCopy)
+        menu.addAction(self.actionCut)
+        menu.addAction(self.actionPaste)
+        menu.addSeparator()
+        
+        for m in menus:
+            menu.addMenu(m)
+        for a in actions:
+            menu.addAction(a)
+
+        menu.exec_(QCursor.pos())
+
+    def connectActionButtons(self):
+        pass
+
+    def saveOnClose(self):
+#        reply = QtGui.QMessageBox.question(self,  "Rastullahs Lockenwickler - Unsaved Chages",  "Save unsaved changes?",  QtGui.QMessageBox.Yes|QtGui.QMessageBox.No|QtGui.QMessageBox.Cancel)
+#        if reply == QtGui.QMessageBox.Cancel:
+#            return False
+#        if reply == QtGui.QMessageBox.Yes:
+#            print""
+#            #TODO: implement save here
+        return True
+
+    def closeEvent(self,  event):
+        if self.saveOnClose():
+            settings = QtCore.QSettings()
+            settings.setValue("Preferences/moduleCfgPath", QtCore.QVariant(self.prefDialog.lineEdit.text()))
+            settings.setValue("MainWindow/Geometry",  QtCore.QVariant(self.saveGeometry()))
+            settings.setValue("MainWIndow/DockWindows",  QtCore.QVariant(self.saveState()))
+            settings.setValue("Preferences/externalEditorPath",  QtCore.QVariant(self.prefDialog.externalTextAppLineEdit.text()))
+            #self.ogreRoot.shutdown()
+        else:
+            event.ignore()
+
+if __name__ == "__main__":
+    # Import Psyco if available
+#    try:
+#        import psyco
+#        psyco.full()
+        #psyco.log()
+#        #psyco.profile()
+#    except ImportError:
+#        print "Warning: No Psycho found!\nPlease download and install from http://psyco.sourceforge.net/"
+    
+    app = QtGui.QApplication(sys.argv)
+    app.setOrganizationName("Team Pantheon")
+    app.setOrganizationDomain("rastullahs-lockenpracht.de/team")
+    app.setApplicationName("Lockenwickler")
+
+    form = Lockenwickler()
+    form.show()
+
+    app.exec_()
+    
+    sys.exit(0)
+

Modified: rl/trunk/editors/Lockenwickler/src/ModuleManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-05-24 19:25:27 UTC (rev 4942)
+++ rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-05-31 11:24:48 UTC (rev 4943)
@@ -838,6 +838,9 @@
         return False
 
     def openLoadModuleDialog(self):
+        if self.moduleCfgPath is None:
+            return
+            
         self.moduleFolder = str(self.moduleCfgPath.replace("modules.cfg", ""))
 
         self.parseModuleConfig()

Modified: rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-24 19:25:27 UTC (rev 4942)
+++ rl/trunk/editors/Lockenwickler/src/MyTerrainManager.py	2009-05-31 11:24:48 UTC (rev 4943)
@@ -25,6 +25,8 @@
 import ogre.addons.et as ET
 
 import Ui_MyTerrainManagerDock
+import TerrainDecalCursor
+
 from GlobDirectoryWalker import GlobDirectoryWalker
 
 class BrushDialog(QDialog):
@@ -34,6 +36,7 @@
         self.brushName = ""
         
         for file in GlobDirectoryWalker("./media/terrain/brushes", "*.png"):
+            file = file.replace("\\", "/")
             btn = QListWidgetItem()
             btn.setText(file.replace("./media/terrain/brushes/", ""))
             btn.setIcon(QIcon(file))
@@ -108,12 +111,7 @@
         self.paintBrushButton.setIconSize(QSize(150, 150))
         self.paintBrushButton.setText(dlg.brushName)
         
-    def onPaintBrushSizeChanged(self, val):
-        self.paintBrushSize = val
         
-    def onEditBrushSizeChanged(self, val):
-        self.editBrushSize = val
-        
     def onCreateTerrainButtonClicked(self):
         terrainData = {}
         terrainData["name"]  = str(self.nameLineEdit.text())
@@ -126,11 +124,11 @@
         terrainData["extendsZ"]  = self.extendsSpinBoxZ.value()
         terrainData["terrainSize"] = int(self.sizeComboBox.currentText())
         terrainData["terrainHeight"]  = self.terrainHeightSpinBox.value()
-        terrainData["splattingBaseName"]  = str(self.baseNameLineEdit.text())
-        terrainData["splattingResGroup"]  = str(self.resGroupLineEdit.text())
-        terrainData["splattingTextureSize"]  = int(self.texSizeComboBox.currentText())
-        terrainData["splattingNumTextures"]  = int(self.numTexturesComboBox.currentText())
-        
+#        terrainData["splattingBaseName"]  = str(self.baseNameLineEdit.text())
+#        terrainData["splattingResGroup"]  = str(self.resGroupLineEdit.text())
+#        terrainData["splattingTextureSize"]  = int(self.texSizeComboBox.currentText())
+#        terrainData["splattingNumTextures"]  = int(self.numTexturesComboBox.currentText())
+ 
         self.emit(SIGNAL("createTerrain"), terrainData)
         
     def onDeleteTerrainButtonClicked(self):
@@ -196,24 +194,30 @@
         self.created = False
         self.terrainInfo = None
         self.visible = True
+        self.decalCursor = None
         
     def __del__(self):
-        print "deleting terrain: " + self.name
         if self.terrainManager:
+            print "deleting terrainmanager: " + self.name
             del self.terrainManager
             del self.splatMgr
-        
-    def create(self, arg):
+            del self.decalCursor
+            
+    def create(self, cursorSize, arg):
         if arg is not None:
             self.name = arg["name"]
             self.position = og.Vector3(arg["positionX"], arg["positionY"], arg["positionZ"])
             self.extends = og.Vector3(arg["extendsX"], arg["extendsY"], arg["extendsZ"])
             self.terrainHeight = arg["terrainHeight"]
             self.terrainSize = arg["terrainSize"] + 1
-            self.splattingBaseName = arg["splattingBaseName"]
-            self.splattingResGroup = arg["splattingResGroup"]
-            self.splattingTextureSize = arg["splattingTextureSize"]
-            self.splattingNumTextures = arg["splattingNumTextures"]
+            self.splattingResGroup = "ETSplatting"
+            self.splattingTextureSize = self.terrainSize = arg["terrainSize"] + 1
+            self.splattingNumTextures = 6
+            
+#            self.splattingBaseName = arg["splattingBaseName"]
+#            self.splattingResGroup = arg["splattingResGroup"]
+#            self.splattingTextureSize = arg["splattingTextureSize"]
+#            self.splattingNumTextures = arg["splattingNumTextures"]
         
         self.terrainManager =  ET.TerrainManager(self.sceneManager, self.name)
         self.terrainManager.setLODErrorMargin(2, self.camera.getViewport().getActualHeight())
@@ -221,7 +225,7 @@
         
         ## create a fresh, mid-high terrain for editing
         # Note 
-        heightMapValues = og.LodDistanceList() ## ET.stdVectorFloat()
+        heightMapValues = og.stdVectorFloat() ## ET.stdVectorFloat()
         for i in xrange(self.terrainSize):
             for j in xrange(self.terrainSize):
                 heightMapValues.append(self.terrainHeight)
@@ -247,7 +251,7 @@
 #        * @param width      width of the textures in pixels
 #        * @param height     height of the textures in pixels
 #        * @param channels   Number of channels per texture (must be in {1, 2, 3, 4})
-        self.splatMgr = ET.SplattingManager(self.splattingBaseName, self.splattingResGroup, self.splattingTextureSize, self.splattingTextureSize, 3)
+        self.splatMgr = ET.SplattingManager(self.splattingBaseName, self.splattingResGroup, self.terrainSize, self.terrainSize, 3)
         ## specify number of splatting textures we need to handle
         self.splatMgr.setNumTextures(self.splattingNumTextures)
         
@@ -272,9 +276,20 @@
         self.parentSceneNode = self.sceneNode.getParentSceneNode()
         self.created = True
         
+        self.decalCursor = TerrainDecalCursor.TerrainDecalCursor(self.sceneManager, material, og.Vector2(cursorSize, cursorSize), "cursorTex.png")
+        
+    def paint(self, choosenTexture, pos, brush, paintBrushIntensity):
+        ## translate our cursor position to vertex indexes
+        x = int( self.terrainManager.getTerrainInfo().posToVertexX(pos.x) )
+        z = int( self.terrainManager.getTerrainInfo().posToVertexZ(pos.z) )
+
+        ## choose a brush intensity, this determines
+        ## how extreme our brush works on the terrain
+        ## and tell the ETM to deform the terrain
+        self.splatMgr.paint(choosenTexture, x, z, brush, paintBrushIntensity)
+        
     def setVisible(self, visibility):
         try:
-            #if self.parentSceneNode.getChild(self.sceneNode.getName()):
             if not visibility:
                 self.parentSceneNode.removeChild(self.sceneNode)
                 self.visible = visibility
@@ -321,8 +336,8 @@
         iHeight = brush.getHeight()
 
         storageclass = ctypes.c_float * (iWidth * iHeight)
-        vecReturnBuffer =  og.LodDistanceList()
-        vecHeightBuffer = og.LodDistanceList()
+        vecReturnBuffer =  og.stdVectorFloat()
+        vecHeightBuffer = og.stdVectorFloat()
        
         ptr = ctypes.pointer(vecReturnBuffer)
        
@@ -362,10 +377,18 @@
                 
                 j += 1
             i += 1
+            
         return brushReturn
 
         
     def updateLightMap(self):
+        return
+        decalCursorWasVisible = False
+        
+        if self.decalCursor.m_bVisible:
+            self.decalCursor.hide()
+            decalCursorWasVisible = True
+            
         lightmap = og.Image()
         ET.createTerrainLightmap(
                              self.terrainManager.getTerrainInfo() ,
@@ -379,7 +402,9 @@
         l = lightmap.getPixelBox(0, 0)
         tex.getBuffer(0, 0).blitFromMemory(lightmap.getPixelBox(0, 0))
         
-        
+        if decalCursorWasVisible:
+            self.decalCursor.show()
+            
 class MyTerrainManager():
     def __init__(self, sceneManager):
         self.sceneManager = sceneManager
@@ -417,12 +442,12 @@
         self.editSmoothMode = False
         
         self.ogreMainWindow = None
-
         
+       
     def createEditingCircle(self):
         self.editingCircle = self.sceneManager.createManualObject("TerrainManagerEditingCircle")
         self.editingCircle.setDynamic(True)
-        self.editingCircleAccuracy = 20
+        self.editingCircleAccuracy = 3
         
         self.editingCircle.begin("BaseWhiteNoLighting", og.RenderOperation.OT_LINE_STRIP)
         
@@ -439,7 +464,6 @@
         self.editingCircle.end()
         
         self.pointerNode.createChildSceneNode("TerrainManagerEditingCircleNode").attachObject(self.editingCircle)
-
         
     def deleteTerrain(self, name):
         for terrain in self.terrainList:
@@ -460,7 +484,6 @@
             
             QWidget.connect(self.dockWidgetContents, SIGNAL("createTerrain"), self.onCreateTerrain)
             
-            
         return self.myTerrainManagerDock
 
     def getTerrain(self, name):
@@ -469,36 +492,42 @@
                 return terrain
 
     def leftMouseUp(self):
-        if self.currentTerrain:
+        if self.currentTerrain and self.editMode is 1:
             self.currentTerrain.updateLightMap()
 
     def onPaintBrushSizeChanged(self, val):
         self.paintBrushSize = val
         self.updatePaintBrush()
         
+        if self.currentTerrain:
+            self.currentTerrain.decalCursor.setSize(og.Vector2(val, val)/3)
+        
     def onPaintBrushIntensityChanged(self, val):
-        self.paintBrushIntensity = val
+        self.paintBrushIntensity = 1 / val
         
     def onEditBrushSizeChanged(self, val):
         self.editBrushSize = val
         self.updateEditBrush()
         
+        if self.currentTerrain:
+            self.currentTerrain.decalCursor.setSize(og.Vector2(val, val)/3)
+            
     def onEditBrushIntensityChanged(self, val):
         self.editBrushIntensity = val
         
     def onCreateTerrain(self, arg):
         if not self.setupFinished:
-            self.pointer = self.sceneManager.createEntity("TerrainManagerPointerNodeMesh", "UniCube.mesh")
+#            self.pointer = self.sceneManager.createEntity("TerrainManagerPointerNodeMesh", "UniCube.mesh")
             self.pointerNode = self.sceneManager.getRootSceneNode().createChild("TerrainManagerPointerNode")
-            self.pointerNode.attachObject(self.pointer)
+#            self.pointerNode.attachObject(self.pointer)
 
-            self.createEditingCircle()
+#            self.createEditingCircle()
             
             self.setupFinished = True
         
         
         terrain = Terrain(self.sceneManager)
-        terrain.create(arg)
+        terrain.create(self.editBrushSize, arg)
         self.terrainList.append(terrain)
         
         og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
@@ -529,6 +558,9 @@
         self.currentEditBrush = ET.loadBrushFromImage(image)
         
     def updatePaintBrush(self):
+        if self.currentPaintBrushName is None:
+            return
+            
         if self.currentPaintBrush is not None:
             self.currentPaintBrush = None
         image = og.Image()
@@ -550,13 +582,16 @@
     def setEditMode(self, mode):
         self.editMode = mode
         
-        if self.editMode == 0:
-            self.mainTimer.disconnect(self.mainTimer, SIGNAL("timeout()"), self.update)
-                
-        elif self.editMode == 1:
-            self.mainTimer.connect(self.mainTimer, SIGNAL("timeout()"), self.update)
-        elif self.editMode == 2:
-            self.mainTimer.connect(self.mainTimer, SIGNAL("timeout()"), self.update)
+        if self.currentTerrain is not None:
+            if self.editMode == 0:
+                self.mainTimer.disconnect(self.mainTimer, SIGNAL("timeout()"), self.update)
+                self.currentTerrain.decalCursor.hide()
+            elif self.editMode == 1:
+                self.mainTimer.connect(self.mainTimer, SIGNAL("timeout()"), self.update)
+                self.currentTerrain.decalCursor.show()
+            elif self.editMode == 2:
+                self.mainTimer.connect(self.mainTimer, SIGNAL("timeout()"), self.update)
+                self.currentTerrain.decalCursor.show()
     
     def setSmoothMode(self, ison):
         self.editSmoothMode = ison
@@ -589,17 +624,25 @@
             elif self.leftMouseDown and self.editSmoothMode:
                 self.currentTerrain.smooth(self.currentEditBrush, self.pointerNode.getPosition(), self.editBrushIntensity)  
         elif self.editMode == 2 and self.isEditing:
-            if self.currentPaintBrushName is not None :
-                print self.currentPaintBrushName + " " + str(self.paintBrushSize) + " " + str(self.paintBrushIntensity)
+            if self.currentPaintBrushName is not None and self.paintBrushIntensity is not 0 and self.leftMouseDown:
+                self.currentTerrain.paint(1, self.pointerNode.getPosition(), self.currentPaintBrush, self.paintBrushIntensity)
     
     def updateEditingCircle(self):
+        radius = None
+        if self.editMode == 1:
+            radius = self.editBrushSize / 2
+        elif self.editMode == 2:
+            radius = self.paintBrushSize / 2
+        else:
+            return # if not in an edit mode, we should not be in here anyway
+            
         self.editingCircle.beginUpdate(0)
 
         point_index = 0
         theta = 0
         while theta < 2 * og.Math.PI:
-            x = (self.editBrushSize / 2) * og.Math.Cos(theta)
-            z = (self.editBrushSize / 2)* og.Math.Sin(theta)
+            x = radius * og.Math.Cos(theta)
+            z =  radius * og.Math.Sin(theta)
             
             y = self.currentTerrain.terrainManager.getTerrainInfo().getHeightAt(self.pointerNode.getPosition().x + x, self.pointerNode.getPosition().z +  z)
             
@@ -617,13 +660,20 @@
             result = self.currentTerrain.terrainManager.getTerrainInfo().rayIntersects(self.currentRay)
             intersects = result[0]
             ## update pointer's position
-            if (intersects):
+            if (intersects) and self.currentTerrain is not None:
                 self.pointerNode.setVisible(True)
                 x = result[1][0]
                 y = result[1][1]
                 z = result[1][2]
-#                print ("Intersect %f, %f, %f " % ( x, y, z) )
+                self.currentTerrain.decalCursor.setPosition(og.Vector3(x, y, z))
+                print ("Intersect %f, %f, %f " % ( x, y, z) )
                 self.pointerNode.setPosition(og.Vector3(x, y, z))
-                self.updateEditingCircle()
-            else:
-                self.pointerNode.setVisible(False)
+                
+#                self.editingCircleUpdateCounter += 1
+#                
+#                if self.editingCircleUpdateCounter == 4: # cheap trick to update the circle only every 4 frames for performance reasons
+#                    self.updateEditingCircle()
+#                    self.editingCircleUpdateCounter = 0
+#                    
+#            else:
+#                self.pointerNode.setVisible(False)

Modified: rl/trunk/editors/Lockenwickler/src/PythonOgreConfig.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/PythonOgreConfig.py	2009-05-24 19:25:27 UTC (rev 4942)
+++ rl/trunk/editors/Lockenwickler/src/PythonOgreConfig.py	2009-05-31 11:24:48 UTC (rev 4943)
@@ -47,7 +47,7 @@
                 libpath=localpath
 
     ## path to the Python-Ogre modules
-    pythonpath = os.path.abspath(os.path.join(libpath, 'python2.5/site-packages') )
+    pythonpath = os.path.abspath(os.path.join(libpath, 'python2.6/site-packages') )
     ## and insert it into the system path
     sys.path.insert(0,pythonpath)
 

Added: rl/trunk/editors/Lockenwickler/src/TerrainDecalCursor.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/TerrainDecalCursor.py	2009-05-24 19:25:27 UTC (rev 4942)
+++ rl/trunk/editors/Lockenwickler/src/TerrainDecalCursor.py	2009-05-31 11:24:48 UTC (rev 4943)
@@ -0,0 +1,131 @@
+# @file DecalCursor.cpp
+# @author Jesse Wright - www.cutthroatstudios.com
+# @date Created on 12/25/2007
+# @date Last modified 5/19/2007
+# @note Modified from Brocan's example on the Ogre forums
+# Translated to Python by Stefan Stammberger
+
+import ogre.renderer.OGRE as og
+import ogre.addons.et as ET
+
+
+#   /**
+#    * @brief The length of one meter in ogre units
+#    * @todo Set this to something meaningful for your project!
+#    */
+METER_SCALE = 1.0
+
+class TerrainDecalCursor():
+    def __init__(self, sceneManager, terrainMat, size, cursorTexName):
+        self.m_bVisible = False
+        self.m_nodeProj  = None
+        self.m_pass = None
+        self.m_frustProj = None
+        self.m_texState = None
+        self.m_sceneMgr = sceneManager
+        self.m_terrainMat = terrainMat
+        self.m_pos = og.Vector3()
+        self.m_size = og.Vector2()
+        self.m_sTexName = None
+        
+        self.init(size, cursorTexName)
+
+
+    def __del__(self):
+        self.hide()
+
+        if self.m_pass is not None:
+            self.m_terrainMat.getTechnique(0).removePass( self.m_pass.getIndex() )
+            self.m_pass = None
+
+        #delete frustum
+        self.m_nodeProj.detachAllObjects()
+        del self.m_frustProj
+
+        #destroy node
+        self.m_nodeProj.getParentSceneNode().removeAndDestroyChild(self.m_nodeProj.getName())
+
+
+    def init(self, size, tex ):
+
+        #create a new pass in the material to render the decal
+        self.m_pass = self.m_terrainMat.getTechnique(0).getPass("Decal")
+        if not self.m_pass:
+            techPref = self.m_terrainMat.getTechnique(0)
+            self.m_pass = techPref.createPass()
+            self.m_pass.setName("Decal")
+            self.m_pass.setLightingEnabled(False)
+            self.m_pass.setSceneBlending(og.SBT_TRANSPARENT_ALPHA)
+            self.m_pass.setDepthBias(2.5, 2.5)
+            self.m_pass.setFog(True)
+            self.m_pass.createTextureUnitState("decalBase.png")
+
+        #init projective decal
+        #set up the main decal projection frustum
+        self.m_frustProj = og.Frustum()
+        self.m_nodeProj = self.m_sceneMgr.getRootSceneNode().createChildSceneNode()
+        self.m_nodeProj.attachObject(self.m_frustProj)
+        self.m_frustProj.setProjectionType(og.PT_ORTHOGRAPHIC)
+        self.m_nodeProj.setOrientation(og.Quaternion(og.Degree(90), og.Vector3().UNIT_X))
+   
+#      /* Commented out for general use. If you are using mouse picking in your scene, set this to an unselectable flag otherwise you may find the frustum in your ray queries. */
+#   //m_frustProj.setQueryFlags(Sanguis.UNSELECTABLE)
+
+#      // set given values
+        self.setSize(size)
+        self.m_sTexName = tex      # texture to apply
+
+#       load the images for the decal and the filter
+        og.TextureManager.getSingleton().load(self.m_sTexName, og.ResourceGroupManager.DEFAULT_RESOURCE_GROUP_NAME, og.TEX_TYPE_2D, 1)
+
+        self.m_bVisible = False
+
+
+    def getPosition(self):
+        return self.m_pos
+
+
+    def show(self):
+        if not self.m_bVisible:
+            self.m_bVisible = True
+            self.showTerrainDecal()
+            self.setPosition(self.m_pos)   
+
+
+    def hide(self):
+        if self.m_bVisible:
+            self.m_bVisible = False
+            self.hideTerrainDecal()
+           
+    def setPosition(self, pos):
+
+        self.m_pos = pos
+
+        #Set the projection coming from some distance above the current position.
+        self.m_nodeProj.setPosition(pos.x, pos.y + (10.0 * METER_SCALE), pos.z)
+
+    def setSize(self, size):
+       if self.m_size is not size:
+            self.m_size = size
+            #m_frustProj.setAspectRatio(m_size.x / m_size.y)
+            self.m_frustProj.setOrthoWindow ( self.m_size.x, self.m_size.y )
+       
+            # set fovy so that tan = 1, so 45 degrees
+            self.m_frustProj.setFOVy(og.Degree(45))
+
+             # set near clip plane according to fovy:
+            self.m_frustProj.setNearClipDistance(self.m_size.y)
+      
+    def showTerrainDecal(self):
+        if not self.m_texState:
+            #set up the decal's texture unit
+            self.m_texState = self.m_pass.createTextureUnitState(self.m_sTexName)
+            self.m_texState.setProjectiveTexturing(True, self.m_frustProj)
+            self.m_texState.setTextureAddressingMode(og.TextureUnitState.TAM_CLAMP)
+            self.m_texState.setTextureFiltering(og.FO_POINT, og.FO_LINEAR, og.FO_NONE)
+            self.m_texState.setAlphaOperation(og.LBX_ADD)
+
+    def hideTerrainDecal(self):
+        if self.m_texState:
+            self.m_pass.removeTextureUnitState(self.m_pass.getTextureUnitStateIndex(self.m_texState))
+            self.m_texState = 0

Modified: rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-24 19:25:27 UTC (rev 4942)
+++ rl/trunk/editors/Lockenwickler/src/Ui_MyTerrainManagerDock.py	2009-05-31 11:24:48 UTC (rev 4943)
@@ -1,8 +1,8 @@
 # -*- coding: utf-8 -*-
 
-# Form implementation generated from reading ui file '/home/fusion/dev/ui files/MyTerrainManagerDock.ui'
+# Form implementation generated from reading ui file '/home/fusion/Rastullah/rl/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui'
 #
-# Created: Sun May 10 12:51:42 2009
+# Created: Sat May 30 17:08:29 2009
 #      by: PyQt4 UI code generator 4.4.4
 #
 # WARNING! All changes made in this file will be lost!
@@ -45,10 +45,9 @@
         self.toolBox = QtGui.QToolBox(TerrainManagerUi)
         self.toolBox.setFrameShape(QtGui.QFrame.NoFrame)
         self.toolBox.setFrameShadow(QtGui.QFrame.Sunken)
-#        self.toolBox.setTabSpacing(1)
         self.toolBox.setObjectName("toolBox")
         self.page = QtGui.QWidget()
-        self.page.setGeometry(QtCore.QRect(0, 0, 378, 655))
+        self.page.setGeometry(QtCore.QRect(0, 0, 378, 654))
         self.page.setObjectName("page")
         self.gridLayout = QtGui.QGridLayout(self.page)
         self.gridLayout.setMargin(1)
@@ -170,58 +169,14 @@
         self.terrainHeightSpinBox.setProperty("value", QtCore.QVariant(0.5))
         self.terrainHeightSpinBox.setObjectName("terrainHeightSpinBox")
         self.gridLayout.addWidget(self.terrainHeightSpinBox, 9, 1, 1, 1)
-        self.label_7 = QtGui.QLabel(self.page)
-        sizePolicy = QtGui.QSizePolicy(QtGui.QSizePolicy.Preferred, QtGui.QSizePolicy.Fixed)
-        sizePolicy.setHorizontalStretch(0)
-        sizePolicy.setVerticalStretch(0)
-        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
-        self.label_7.setSizePolicy(sizePolicy)
-        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
-        self.label_7.setObjectName("label_7")
-        self.gridLayout.addWidget(self.label_7, 10, 0, 1, 2)
-        self.label_4 = QtGui.QLabel(self.page)
-        self.label_4.setObjectName("label_4")
-        self.gridLayout.addWidget(self.label_4, 11, 0, 1, 1)
-        self.baseNameLineEdit = QtGui.QLineEdit(self.page)
-        self.baseNameLineEdit.setObjectName("baseNameLineEdit")
-        self.gridLayout.addWidget(self.baseNameLineEdit, 11, 1, 1, 1)
-        self.label_5 = QtGui.QLabel(self.page)
-        self.label_5.setObjectName("label_5")
-        self.gridLayout.addWidget(self.label_5, 12, 0, 1, 1)
-        self.resGroupLineEdit = QtGui.QLineEdit(self.page)
-        self.resGroupLineEdit.setObjectName("resGroupLineEdit")
-        self.gridLayout.addWidget(self.resGroupLineEdit, 12, 1, 1, 1)
-        self.label_8 = QtGui.QLabel(self.page)
-        self.label_8.setObjectName("label_8")
-        self.gridLayout.addWidget(self.label_8, 13, 0, 1, 1)
-        self.texSizeComboBox = QtGui.QComboBox(self.page)
-        self.texSizeComboBox.setObjectName("texSizeComboBox")
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.texSizeComboBox.addItem(QtCore.QString())
-        self.gridLayout.addWidget(self.texSizeComboBox, 13, 1, 1, 1)
-        self.label_9 = QtGui.QLabel(self.page)
-        self.label_9.setObjectName("label_9")
-        self.gridLayout.addWidget(self.label_9, 14, 0, 1, 1)
-        self.numTexturesComboBox = QtGui.QComboBox(self.page)
-        self.numTexturesComboBox.setObjectName("numTexturesComboBox")
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.numTexturesComboBox.addItem(QtCore.QString())
-        self.gridLayout.addWidget(self.numTexturesComboBox, 14, 1, 1, 1)
         self.createTerrainButton = QtGui.QPushButton(self.page)
         self.createTerrainButton.setObjectName("createTerrainButton")
-        self.gridLayout.addWidget(self.createTerrainButton, 15, 0, 1, 2)
+        self.gridLayout.addWidget(self.createTerrainButton, 10, 0, 1, 2)
         spacerItem = QtGui.QSpacerItem(20, 40, QtGui.QSizePolicy.Minimum, QtGui.QSizePolicy.Expanding)
-        self.gridLayout.addItem(spacerItem, 16, 0, 1, 1)
+        self.gridLayout.addItem(spacerItem, 11, 0, 1, 1)
         self.toolBox.addItem(self.page, "")
         self.page_2 = QtGui.QWidget()
-        self.page_2.setGeometry(QtCore.QRect(0, 0, 378, 655))
+        self.page_2.setGeometry(QtCore.QRect(0, 0, 378, 654))
         self.page_2.setObjectName("page_2")
         self.gridLayout_3 = QtGui.QGridLayout(self.page_2)
         self.gridLayout_3.setMargin(1)
@@ -277,7 +232,7 @@
         self.gridLayout_3.addWidget(self.editSmoothButton, 5, 0, 1, 3)
         self.toolBox.addItem(self.page_2, "")
         self.page_3 = QtGui.QWidget()
-        self.page_3.setGeometry(QtCore.QRect(0, 0, 378, 655))
+        self.page_3.setGeometry(QtCore.QRect(0, 0, 378, 654))
         self.page_3.setObjectName("page_3")
         self.gridLayout_2 = QtGui.QGridLayout(self.page_3)
         self.gridLayout_2.setMargin(1)
@@ -293,7 +248,10 @@
         self.label_20.setObjectName("label_20")
         self.gridLayout_2.addWidget(self.label_20, 1, 0, 1, 1)
         self.paintIntensitySlider = QtGui.QSlider(self.page_3)
-        self.paintIntensitySlider.setProperty("value", QtCore.QVariant(2))
+        self.paintIntensitySlider.setMinimum(1)
+        self.paintIntensitySlider.setMaximum(40)
+        self.paintIntensitySlider.setSingleStep(1)
+        self.paintIntensitySlider.setProperty("value", QtCore.QVariant(20))
         self.paintIntensitySlider.setOrientation(QtCore.Qt.Horizontal)
         self.paintIntensitySlider.setObjectName("paintIntensitySlider")
         self.gridLayout_2.addWidget(self.paintIntensitySlider, 0, 1, 1, 1)
@@ -327,11 +285,6 @@
         self.label_11.setBuddy(self.extendsSpinBoxX)
         self.label_3.setBuddy(self.extendsSpinBoxX)
         self.label_10.setBuddy(self.extendsSpinBoxX)
-        self.label_7.setBuddy(self.baseNameLineEdit)
-        self.label_4.setBuddy(self.baseNameLineEdit)
-        self.label_5.setBuddy(self.resGroupLineEdit)
-        self.label_8.setBuddy(self.texSizeComboBox)
-        self.label_9.setBuddy(self.numTexturesComboBox)
         self.label_12.setBuddy(self.editIntensitySlider)
         self.label_14.setBuddy(self.editBrushButton)
         self.label_15.setBuddy(self.editIntensitySlider)
@@ -340,7 +293,7 @@
         self.label_19.setBuddy(self.editBrushButton)
 
         self.retranslateUi(TerrainManagerUi)
-        self.toolBox.setCurrentIndex(1)
+        self.toolBox.setCurrentIndex(2)
         self.sizeComboBox.setCurrentIndex(3)
         QtCore.QObject.connect(self.editIntensitySlider, QtCore.SIGNAL("sliderMoved(int)"), self.label_13.setNum)
         QtCore.QObject.connect(self.editBrushSizeSlider, QtCore.SIGNAL("valueChanged(int)"), self.label_16.setNum)
@@ -354,11 +307,7 @@
         QtCore.QMetaObject.connectSlotsByName(TerrainManagerUi)
         TerrainManagerUi.setTabOrder(self.editIntensitySlider, self.editBrushButton)
         TerrainManagerUi.setTabOrder(self.editBrushButton, self.extendsSpinBoxZ)
-        TerrainManagerUi.setTabOrder(self.extendsSpinBoxZ, self.baseNameLineEdit)
-        TerrainManagerUi.setTabOrder(self.baseNameLineEdit, self.resGroupLineEdit)
-        TerrainManagerUi.setTabOrder(self.resGroupLineEdit, self.texSizeComboBox)
-        TerrainManagerUi.setTabOrder(self.texSizeComboBox, self.numTexturesComboBox)
-        TerrainManagerUi.setTabOrder(self.numTexturesComboBox, self.createTerrainButton)
+        TerrainManagerUi.setTabOrder(self.extendsSpinBoxZ, self.createTerrainButton)
         TerrainManagerUi.setTabOrder(self.createTerrainButton, self.terrainListComboBox)
         TerrainManagerUi.setTabOrder(self.terrainListComboBox, self.positionSpinBoxX)
         TerrainManagerUi.setTabOrder(self.positionSpinBoxX, self.positionSpinBoxY)
@@ -426,32 +375,6 @@
 "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5</p>\n"
 "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">the vertices are placed in at height 50.</p>\n"
 "<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><img src=\":/helpPref/TerrainExtends1.png\" /></p></body></html>", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_7.setText(QtGui.QApplication.translate("TerrainManagerUi", "Splatting Settings", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_4.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_4.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Base Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.baseNameLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Base name for the map textures (will be appended by their number)", None, QtGui.QApplication.UnicodeUTF8))
-        self.baseNameLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ETSplatting", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_5.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_5.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Res Group", None, QtGui.QApplication.UnicodeUTF8))
-        self.resGroupLineEdit.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The resource group the textures will be placed in", None, QtGui.QApplication.UnicodeUTF8))
-        self.resGroupLineEdit.setText(QtGui.QApplication.translate("TerrainManagerUi", "ET", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_8.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_8.setText(QtGui.QApplication.translate("TerrainManagerUi", "&Tex Size", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Texture size in pixels", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "64", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "128", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "256", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "512", None, QtGui.QApplication.UnicodeUTF8))
-        self.texSizeComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "1024", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_9.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_9.setText(QtGui.QApplication.translate("TerrainManagerUi", "&NumTextures", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "Number of splatting textures (Layers)", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(0, QtGui.QApplication.translate("TerrainManagerUi", "1", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(1, QtGui.QApplication.translate("TerrainManagerUi", "2", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(2, QtGui.QApplication.translate("TerrainManagerUi", "3", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(3, QtGui.QApplication.translate("TerrainManagerUi", "4", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(4, QtGui.QApplication.translate("TerrainManagerUi", "5", None, QtGui.QApplication.UnicodeUTF8))
-        self.numTexturesComboBox.setItemText(5, QtGui.QApplication.translate("TerrainManagerUi", "6", None, QtGui.QApplication.UnicodeUTF8))
         self.createTerrainButton.setText(QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
         self.toolBox.setItemText(self.toolBox.indexOf(self.page), QtGui.QApplication.translate("TerrainManagerUi", "Create Terrain", None, QtGui.QApplication.UnicodeUTF8))
         self.label_12.setToolTip(QtGui.QApplication.translate("TerrainManagerUi", "The intensity wich is applied to the tool", None, QtGui.QApplication.UnicodeUTF8))

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/cursorTex.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/cursorTex.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Added: rl/trunk/editors/Lockenwickler/src/media/terrain/decalBase.png
===================================================================
(Binary files differ)


Property changes on: rl/trunk/editors/Lockenwickler/src/media/terrain/decalBase.png
___________________________________________________________________
Name: svn:mime-type
   + application/octet-stream

Modified: rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui
===================================================================
--- rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-24 19:25:27 UTC (rev 4942)
+++ rl/trunk/editors/Lockenwickler/ui files/MyTerrainManagerDock.ui	2009-05-31 11:24:48 UTC (rev 4943)
@@ -1,7 +1,8 @@
-<ui version="4.0" >
+<?xml version="1.0" encoding="UTF-8"?>
+<ui version="4.0">
  <class>TerrainManagerUi</class>
- <widget class="QWidget" name="TerrainManagerUi" >
-  <property name="geometry" >
+ <widget class="QWidget" name="TerrainManagerUi">
+  <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
@@ -9,622 +10,462 @@
     <height>769</height>
    </rect>
   </property>
-  <property name="windowTitle" >
+  <property name="windowTitle">
    <string>Form</string>
   </property>
-  <layout class="QGridLayout" name="gridLayout_4" >
-   <property name="margin" >
+  <layout class="QGridLayout" name="gridLayout_4">
+   <property name="margin">
     <number>1</number>
    </property>
-   <property name="spacing" >
+   <property name="spacing">
     <number>1</number>
    </property>
-   <item row="0" column="0" >
-    <widget class="QComboBox" name="terrainListComboBox" >
+   <item row="0" column="0">
+    <widget class="QComboBox" name="terrainListComboBox">
      <item>
-      <property name="text" >
+      <property name="text">
        <string>No Terrain</string>
       </property>
      </item>
     </widget>
    </item>
-   <item row="0" column="1" >
-    <widget class="QToolButton" name="toggleTerrainVisibilityButton" >
-     <property name="toolTip" >
+   <item row="0" column="1">
+    <widget class="QToolButton" name="toggleTerrainVisibilityButton">
+     <property name="toolTip">
       <string>Delete the current terrain</string>
      </property>
-     <property name="text" >
+     <property name="text">
       <string>...</string>
      </property>
-     <property name="icon" >
-      <iconset resource="../src/media/icons/icons.qrc" >
+     <property name="icon">
+      <iconset resource="../src/media/icons/icons.qrc">
        <normaloff>:/iconsPref/14_layer_invisible.png</normaloff>
        <normalon>:/iconsPref/14_layer_visible.png</normalon>:/iconsPref/14_layer_invisible.png</iconset>
      </property>
-     <property name="checkable" >
+     <property name="checkable">
       <bool>true</bool>
      </property>
     </widget>
    </item>
-   <item row="0" column="2" >
-    <widget class="QToolButton" name="editTerrainButton" >
-     <property name="toolTip" >
+   <item row="0" column="2">
+    <widget class="QToolButton" name="editTerrainButton">
+     <property name="toolTip">
       <string>Delete the current terrain</string>
      </property>
-     <property name="text" >
+     <property name="text">
       <string>...</string>
      </property>
-     <property name="icon" >
-      <iconset resource="../src/media/icons/icons.qrc" >
+     <property name="icon">
+      <iconset resource="../src/media/icons/icons.qrc">
        <normaloff>:/iconsPref/colors.png</normaloff>:/iconsPref/colors.png</iconset>
      </property>
-     <property name="checkable" >
+     <property name="checkable">
       <bool>true</bool>
      </property>
     </widget>
    </item>
-   <item row="0" column="3" >
-    <widget class="QToolButton" name="deleteTerrainButton" >
-     <property name="toolTip" >
+   <item row="0" column="3">
+    <widget class="QToolButton" name="deleteTerrainButton">
+     <property name="toolTip">
       <string>Delete the current terrain</string>
      </property>
-     <property name="text" >
+     <property name="text">
       <string>...</string>
      </property>
-     <property name="icon" >
-      <iconset resource="../src/media/icons/icons.qrc" >
+     <property name="icon">
+      <iconset resource="../src/media/icons/icons.qrc">
        <normaloff>:/iconsPref/editdelete.png</normaloff>:/iconsPref/editdelete.png</iconset>
      </property>
     </widget>
    </item>
-   <item row="1" column="0" colspan="4" >
-    <widget class="QToolBox" name="toolBox" >
-     <property name="frameShape" >
+   <item row="1" column="0" colspan="4">
+    <widget class="QToolBox" name="toolBox">
+     <property name="frameShape">
       <enum>QFrame::NoFrame</enum>
      </property>
-     <property name="frameShadow" >
+     <property name="frameShadow">
       <enum>QFrame::Sunken</enum>
      </property>
-     <property name="currentIndex" >
-      <number>1</number>
+     <property name="currentIndex">
+      <number>2</number>
      </property>
-     <property name="tabSpacing" >
+     <property name="tabSpacing">
       <number>1</number>
      </property>
-     <widget class="QWidget" name="page" >
-      <property name="geometry" >
+     <widget class="QWidget" name="page">
+      <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>378</width>
-        <height>655</height>
+        <height>654</height>
        </rect>
       </property>
-      <attribute name="label" >
+      <attribute name="label">
        <string>Create Terrain</string>
       </attribute>
-      <layout class="QGridLayout" name="gridLayout" >
-       <property name="margin" >
+      <layout class="QGridLayout" name="gridLayout">
+       <property name="margin">
         <number>1</number>
        </property>
-       <property name="spacing" >
+       <property name="spacing">
         <number>1</number>
        </property>
-       <item row="0" column="0" colspan="2" >
-        <widget class="QLabel" name="label_6" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Preferred" >
+       <item row="0" column="0" colspan="2">
+        <widget class="QLabel" name="label_6">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>Geometry</string>
          </property>
-         <property name="alignment" >
+         <property name="alignment">
           <set>Qt::AlignCenter</set>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>nameLineEdit</cstring>
          </property>
         </widget>
        </item>
-       <item row="1" column="0" >
-        <widget class="QLabel" name="label" >
-         <property name="toolTip" >
+       <item row="1" column="0">
+        <widget class="QLabel" name="label">
+         <property name="toolTip">
           <string>Name of the terrain</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>&amp;Name</string>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>nameLineEdit</cstring>
          </property>
         </widget>
        </item>
-       <item row="1" column="1" >
-        <widget class="QLineEdit" name="nameLineEdit" >
-         <property name="toolTip" >
+       <item row="1" column="1">
+        <widget class="QLineEdit" name="nameLineEdit">
+         <property name="toolTip">
           <string>Name of the terrain</string>
          </property>
         </widget>
        </item>
-       <item row="2" column="0" >
-        <widget class="QLabel" name="label_2" >
-         <property name="toolTip" >
+       <item row="2" column="0">
+        <widget class="QLabel" name="label_2">
+         <property name="toolTip">
           <string>Vertex density</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>&amp;Size</string>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>sizeComboBox</cstring>
          </property>
         </widget>
        </item>
-       <item row="2" column="1" >
-        <widget class="QComboBox" name="sizeComboBox" >
-         <property name="toolTip" >
+       <item row="2" column="1">
+        <widget class="QComboBox" name="sizeComboBox">
+         <property name="toolTip">
           <string>Vertex density</string>
          </property>
-         <property name="currentIndex" >
+         <property name="currentIndex">
           <number>3</number>
          </property>
          <item>
-          <property name="text" >
+          <property name="text">
            <string>8</string>
           </property>
          </item>
          <item>
-          <property name="text" >
+          <property name="text">
            <string>16</string>
           </property>
          </item>
          <item>
-          <property name="text" >
+          <property name="text">
            <string>32</string>
           </property>
          </item>
          <item>
-          <property name="text" >
+          <property name="text">
            <string>64</string>
           </property>
          </item>
          <item>
-          <property name="text" >
+          <property name="text">
            <string>128</string>
           </property>
          </item>
          <item>
-          <property name="text" >
+          <property name="text">
            <string>256</string>
           </property>
          </item>
          <item>
-          <property name="text" >
+          <property name="text">
            <string>512</string>
           </property>
          </item>
          <item>
-          <property name="text" >
+          <property name="text">
            <string>1024</string>
           </property>
          </item>
         </widget>
        </item>
-       <item row="3" column="1" >
-        <widget class="QDoubleSpinBox" name="positionSpinBoxX" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+       <item row="3" column="1">
+        <widget class="QDoubleSpinBox" name="positionSpinBoxX">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
-         <property name="toolTip" >
+         <property name="toolTip">
           <string>Position of the terrain</string>
          </property>
-         <property name="prefix" >
+         <property name="prefix">
           <string>X:</string>
          </property>
-         <property name="minimum" >
+         <property name="minimum">
           <double>-999999999.000000000000000</double>
          </property>
-         <property name="maximum" >
+         <property name="maximum">
           <double>999999999.000000000000000</double>
          </property>
-         <property name="value" >
+         <property name="value">
           <double>0.000000000000000</double>
          </property>
         </widget>
        </item>
-       <item row="4" column="0" >
-        <widget class="QLabel" name="label_11" >
-         <property name="toolTip" >
+       <item row="4" column="0">
+        <widget class="QLabel" name="label_11">
+         <property name="toolTip">
           <string>Position of the terrain</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>&amp;Position</string>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>extendsSpinBoxX</cstring>
          </property>
         </widget>
        </item>
-       <item row="4" column="1" >
-        <widget class="QDoubleSpinBox" name="positionSpinBoxY" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+       <item row="4" column="1">
+        <widget class="QDoubleSpinBox" name="positionSpinBoxY">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
-         <property name="toolTip" >
+         <property name="toolTip">
           <string>Position of the terrain</string>
          </property>
-         <property name="prefix" >
+         <property name="prefix">
           <string>Y:</string>
          </property>
-         <property name="minimum" >
+         <property name="minimum">
           <double>-999999999.000000000000000</double>
          </property>
-         <property name="maximum" >
+         <property name="maximum">
           <double>999999999.000000000000000</double>
          </property>
         </widget>
        </item>
-       <item row="5" column="1" >
-        <widget class="QDoubleSpinBox" name="positionSpinBoxZ" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+       <item row="5" column="1">
+        <widget class="QDoubleSpinBox" name="positionSpinBoxZ">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
-         <property name="toolTip" >
+         <property name="toolTip">
           <string>Position of the terrain</string>
          </property>
-         <property name="prefix" >
+         <property name="prefix">
           <string>Z:</string>
          </property>
-         <property name="suffix" >
+         <property name="suffix">
           <string/>
          </property>
-         <property name="minimum" >
+         <property name="minimum">
           <double>-999999999.000000000000000</double>
          </property>
-         <property name="maximum" >
+         <property name="maximum">
           <double>999999999.000000000000000</double>
          </property>
         </widget>
        </item>
-       <item row="6" column="1" >
-        <widget class="QSpinBox" name="extendsSpinBoxX" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+       <item row="6" column="1">
+        <widget class="QSpinBox" name="extendsSpinBoxX">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
-         <property name="toolTip" >
+         <property name="toolTip">
           <string>The extends of the terrain</string>
          </property>
-         <property name="correctionMode" >
+         <property name="correctionMode">
           <enum>QAbstractSpinBox::CorrectToNearestValue</enum>
          </property>
-         <property name="suffix" >
+         <property name="suffix">
           <string/>
          </property>
-         <property name="prefix" >
+         <property name="prefix">
           <string>X:</string>
          </property>
-         <property name="minimum" >
+         <property name="minimum">
           <number>0</number>
          </property>
-         <property name="maximum" >
+         <property name="maximum">
           <number>10000</number>
          </property>
-         <property name="value" >
+         <property name="value">
           <number>128</number>
          </property>
         </widget>
        </item>
-       <item row="7" column="0" >
-        <widget class="QLabel" name="label_3" >
-         <property name="toolTip" >
+       <item row="7" column="0">
+        <widget class="QLabel" name="label_3">
+         <property name="toolTip">
           <string>The extends of the terrain</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>&amp;Extends</string>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>extendsSpinBoxX</cstring>
          </property>
         </widget>
        </item>
-       <item row="7" column="1" >
-        <widget class="QSpinBox" name="extendsSpinBoxY" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+       <item row="7" column="1">
+        <widget class="QSpinBox" name="extendsSpinBoxY">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
-         <property name="toolTip" >
+         <property name="toolTip">
           <string>The extends of the terrain</string>
          </property>
-         <property name="correctionMode" >
+         <property name="correctionMode">
           <enum>QAbstractSpinBox::CorrectToNearestValue</enum>
          </property>
-         <property name="suffix" >
+         <property name="suffix">
           <string/>
          </property>
-         <property name="prefix" >
+         <property name="prefix">
           <string>Y:</string>
          </property>
-         <property name="minimum" >
+         <property name="minimum">
           <number>0</number>
          </property>
-         <property name="maximum" >
+         <property name="maximum">
           <number>10000</number>
          </property>
-         <property name="value" >
+         <property name="value">
           <number>128</number>
          </property>
         </widget>
        </item>
-       <item row="8" column="1" >
-        <widget class="QSpinBox" name="extendsSpinBoxZ" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+       <item row="8" column="1">
+        <widget class="QSpinBox" name="extendsSpinBoxZ">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
-         <property name="toolTip" >
+         <property name="toolTip">
           <string>The extends of the terrain</string>
          </property>
-         <property name="correctionMode" >
+         <property name="correctionMode">
           <enum>QAbstractSpinBox::CorrectToNearestValue</enum>
          </property>
-         <property name="suffix" >
+         <property name="suffix">
           <string/>
          </property>
-         <property name="prefix" >
+         <property name="prefix">
           <string>Z:</string>
          </property>
-         <property name="minimum" >
+         <property name="minimum">
           <number>0</number>
          </property>
-         <property name="maximum" >
+         <property name="maximum">
           <number>10000</number>
          </property>
-         <property name="value" >
+         <property name="value">
           <number>128</number>
          </property>
         </widget>
        </item>
-       <item row="9" column="0" >
-        <widget class="QLabel" name="label_10" >
-         <property name="toolTip" >
-          <string>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
-&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
+       <item row="9" column="0">
+        <widget class="QLabel" name="label_10">
+         <property name="toolTip">
+          <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
+&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
 p, li { white-space: pre-wrap; }
-&lt;/style>&lt;/head>&lt;body style=" font-family:'Sans Serif'; font-size:9pt; font-weight:400; font-style:normal;">
-&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">This value means how high the vertices are placed in relation to the terrain extend in Y.&lt;/p>
-&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5&lt;/p>
-&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">the vertices are placed in at height 50.&lt;/p>
-&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;img src=":/helpPref/TerrainExtends1.png" />&lt;/p>&lt;/body>&lt;/html></string>
+&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Sans Serif'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;
+&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;This value means how high the vertices are placed in relation to the terrain extend in Y.&lt;/p&gt;
+&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;This means when you have a terrain extend in Y by 100 and the terrain height is 0.5&lt;/p&gt;
+&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;the vertices are placed in at height 50.&lt;/p&gt;
+&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;img src=&quot;:/helpPref/TerrainExtends1.png&quot; /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>&amp;Height</string>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>extendsSpinBoxX</cstring>
          </property>
         </widget>
        </item>
-       <item row="9" column="1" >
-        <widget class="QDoubleSpinBox" name="terrainHeightSpinBox" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+       <item row="9" column="1">
+        <widget class="QDoubleSpinBox" name="terrainHeightSpinBox">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
-         <property name="toolTip" >
-          <string>&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN" "http://www.w3.org/TR/REC-html40/strict.dtd">
-&lt;html>&lt;head>&lt;meta name="qrichtext" content="1" />&lt;style type="text/css">
+         <property name="toolTip">
+          <string>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.0//EN&quot; &quot;http://www.w3.org/TR/REC-html40/strict.dtd&quot;&gt;
+&lt;html&gt;&lt;head&gt;&lt;meta name=&quot;qrichtext&quot; content=&quot;1&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;
 p, li { white-space: pre-wrap; }
-&lt;/style>&lt;/head>&lt;body style=" font-family:'Sans Serif'; font-size:9pt; font-weight:400; font-style:normal;">
-&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">This value means how high the vertices are placed in relation to the terrain extend in Y.&lt;/p>
-&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">This means when you have a terrain extend in Y by 100 and the terrain height is 0.5&lt;/p>
-&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">the vertices are placed in at height 50.&lt;/p>
-&lt;p style=" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;">&lt;img src=":/helpPref/TerrainExtends1.png" />&lt;/p>&lt;/body>&lt;/html></string>
+&lt;/style&gt;&lt;/head&gt;&lt;body style=&quot; font-family:'Sans Serif'; font-size:9pt; font-weight:400; font-style:normal;&quot;&gt;
+&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;This value means how high the vertices are placed in relation to the terrain extend in Y.&lt;/p&gt;
+&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;This means when you have a terrain extend in Y by 100 and the terrain height is 0.5&lt;/p&gt;
+&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;the vertices are placed in at height 50.&lt;/p&gt;
+&lt;p style=&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;&quot;&gt;&lt;img src=&quot;:/helpPref/TerrainExtends1.png&quot; /&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
          </property>
-         <property name="maximum" >
+         <property name="maximum">
           <double>1.000000000000000</double>
          </property>
-         <property name="singleStep" >
+         <property name="singleStep">
           <double>0.100000000000000</double>
          </property>
-         <property name="value" >
+         <property name="value">
           <double>0.500000000000000</double>
          </property>
         </widget>
        </item>
-       <item row="10" column="0" colspan="2" >
-        <widget class="QLabel" name="label_7" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Preferred" >
-           <horstretch>0</horstretch>
-           <verstretch>0</verstretch>
-          </sizepolicy>
-         </property>
-         <property name="text" >
-          <string>Splatting Settings</string>
-         </property>
-         <property name="alignment" >
-          <set>Qt::AlignCenter</set>
-         </property>
-         <property name="buddy" >
-          <cstring>baseNameLineEdit</cstring>
-         </property>
-        </widget>
-       </item>
-       <item row="11" column="0" >
-        <widget class="QLabel" name="label_4" >
-         <property name="toolTip" >
-          <string>Base name for the map textures (will be appended by their number)</string>
-         </property>
-         <property name="text" >
-          <string>&amp;Base Name</string>
-         </property>
-         <property name="buddy" >
-          <cstring>baseNameLineEdit</cstring>
-         </property>
-        </widget>
-       </item>
-       <item row="11" column="1" >
-        <widget class="QLineEdit" name="baseNameLineEdit" >
-         <property name="toolTip" >
-          <string>Base name for the map textures (will be appended by their number)</string>
-         </property>
-         <property name="text" >
-          <string>ETSplatting</string>
-         </property>
-        </widget>
-       </item>
-       <item row="12" column="0" >
-        <widget class="QLabel" name="label_5" >
-         <property name="toolTip" >
-          <string>The resource group the textures will be placed in</string>
-         </property>
-         <property name="text" >
-          <string>&amp;Res Group</string>
-         </property>
-         <property name="buddy" >
-          <cstring>resGroupLineEdit</cstring>
-         </property>
-        </widget>
-       </item>
-       <item row="12" column="1" >
-        <widget class="QLineEdit" name="resGroupLineEdit" >
-         <property name="toolTip" >
-          <string>The resource group the textures will be placed in</string>
-         </property>
-         <property name="text" >
-          <string>ET</string>
-         </property>
-        </widget>
-       </item>
-       <item row="13" column="0" >
-        <widget class="QLabel" name="label_8" >
-         <property name="toolTip" >
-          <string>Texture size in pixels</string>
-         </property>
-         <property name="text" >
-          <string>&amp;Tex Size</string>
-         </property>
-         <property name="buddy" >
-          <cstring>texSizeComboBox</cstring>
-         </property>
-        </widget>
-       </item>
-       <item row="13" column="1" >
-        <widget class="QComboBox" name="texSizeComboBox" >
-         <property name="toolTip" >
-          <string>Texture size in pixels</string>
-         </property>
-         <item>
-          <property name="text" >
-           <string>64</string>
-          </property>
-         </item>
-         <item>
-          <property name="text" >
-           <string>128</string>
-          </property>
-         </item>
-         <item>
-          <property name="text" >
-           <string>256</string>
-          </property>
-         </item>
-         <item>
-          <property name="text" >
-           <string>512</string>
-          </property>
-         </item>
-         <item>
-          <property name="text" >
-           <string>1024</string>
-          </property>
-         </item>
-        </widget>
-       </item>
-       <item row="14" column="0" >
-        <widget class="QLabel" name="label_9" >
-         <property name="toolTip" >
-          <string>Number of splatting textures (Layers)</string>
-         </property>
-         <property name="text" >
-          <string>&amp;NumTextures</string>
-         </property>
-         <property name="buddy" >
-          <cstring>numTexturesComboBox</cstring>
-         </property>
-        </widget>
-       </item>
-       <item row="14" column="1" >
-        <widget class="QComboBox" name="numTexturesComboBox" >
-         <property name="toolTip" >
-          <string>Number of splatting textures (Layers)</string>
-         </property>
-         <item>
-          <property name="text" >
-           <string>1</string>
-          </property>
-         </item>
-         <item>
-          <property name="text" >
-           <string>2</string>
-          </property>
-         </item>
-         <item>
-          <property name="text" >
-           <string>3</string>
-          </property>
-         </item>
-         <item>
-          <property name="text" >
-           <string>4</string>
-          </property>
-         </item>
-         <item>
-          <property name="text" >
-           <string>5</string>
-          </property>
-         </item>
-         <item>
-          <property name="text" >
-           <string>6</string>
-          </property>
-         </item>
-        </widget>
-       </item>
-       <item row="15" column="0" colspan="2" >
-        <widget class="QPushButton" name="createTerrainButton" >
-         <property name="text" >
+       <item row="10" column="0" colspan="2">
+        <widget class="QPushButton" name="createTerrainButton">
+         <property name="text">
           <string>Create Terrain</string>
          </property>
         </widget>
        </item>
-       <item row="16" column="0" >
-        <spacer name="verticalSpacer_2" >
-         <property name="orientation" >
+       <item row="11" column="0">
+        <spacer name="verticalSpacer_2">
+         <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
-         <property name="sizeHint" stdset="0" >
+         <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>40</height>
@@ -634,31 +475,31 @@
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="page_2" >
-      <property name="geometry" >
+     <widget class="QWidget" name="page_2">
+      <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>378</width>
-        <height>655</height>
+        <height>654</height>
        </rect>
       </property>
-      <attribute name="label" >
+      <attribute name="label">
        <string>ModifyTerrain</string>
       </attribute>
-      <layout class="QGridLayout" name="gridLayout_3" >
-       <property name="margin" >
+      <layout class="QGridLayout" name="gridLayout_3">
+       <property name="margin">
         <number>1</number>
        </property>
-       <property name="spacing" >
+       <property name="spacing">
         <number>1</number>
        </property>
-       <item row="6" column="1" >
-        <spacer name="verticalSpacer" >
-         <property name="orientation" >
+       <item row="6" column="1">
+        <spacer name="verticalSpacer">
+         <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
-         <property name="sizeHint" stdset="0" >
+         <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>451</height>
@@ -666,218 +507,227 @@
          </property>
         </spacer>
        </item>
-       <item row="1" column="0" >
-        <widget class="QLabel" name="label_12" >
-         <property name="toolTip" >
+       <item row="1" column="0">
+        <widget class="QLabel" name="label_12">
+         <property name="toolTip">
           <string>The intensity wich is applied to the tool</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>Intensity</string>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>editIntensitySlider</cstring>
          </property>
         </widget>
        </item>
-       <item row="1" column="1" >
-        <widget class="QSlider" name="editIntensitySlider" >
-         <property name="toolTip" >
+       <item row="1" column="1">
+        <widget class="QSlider" name="editIntensitySlider">
+         <property name="toolTip">
           <string>The intensity wich is applied to the tool</string>
          </property>
-         <property name="minimum" >
+         <property name="minimum">
           <number>-50</number>
          </property>
-         <property name="maximum" >
+         <property name="maximum">
           <number>50</number>
          </property>
-         <property name="value" >
+         <property name="value">
           <number>1</number>
          </property>
-         <property name="orientation" >
+         <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
         </widget>
        </item>
-       <item row="1" column="2" >
-        <widget class="QLabel" name="label_13" >
-         <property name="toolTip" >
+       <item row="1" column="2">
+        <widget class="QLabel" name="label_13">
+         <property name="toolTip">
           <string>The intensity wich is applied to the tool</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>2</string>
          </property>
         </widget>
        </item>
-       <item row="3" column="1" >
-        <widget class="QPushButton" name="editBrushButton" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+       <item row="3" column="1">
+        <widget class="QPushButton" name="editBrushButton">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
-         <property name="minimumSize" >
+         <property name="minimumSize">
           <size>
            <width>130</width>
            <height>130</height>
           </size>
          </property>
-         <property name="toolTip" >
+         <property name="toolTip">
           <string>The brush that is applied</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>PushButton</string>
          </property>
         </widget>
        </item>
-       <item row="3" column="0" >
-        <widget class="QLabel" name="label_14" >
-         <property name="text" >
+       <item row="3" column="0">
+        <widget class="QLabel" name="label_14">
+         <property name="text">
           <string>Brush Type  </string>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>editBrushButton</cstring>
          </property>
         </widget>
        </item>
-       <item row="2" column="0" >
-        <widget class="QLabel" name="label_15" >
-         <property name="toolTip" >
+       <item row="2" column="0">
+        <widget class="QLabel" name="label_15">
+         <property name="toolTip">
           <string>The diameter of the tool</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>Brush Size</string>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>editIntensitySlider</cstring>
          </property>
         </widget>
        </item>
-       <item row="2" column="2" >
-        <widget class="QLabel" name="label_16" >
-         <property name="toolTip" >
+       <item row="2" column="2">
+        <widget class="QLabel" name="label_16">
+         <property name="toolTip">
           <string>The diameter of the tool</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>2</string>
          </property>
         </widget>
        </item>
-       <item row="2" column="1" >
-        <widget class="QSlider" name="editBrushSizeSlider" >
-         <property name="toolTip" >
+       <item row="2" column="1">
+        <widget class="QSlider" name="editBrushSizeSlider">
+         <property name="toolTip">
           <string>The diameter of the tool</string>
          </property>
-         <property name="minimum" >
+         <property name="minimum">
           <number>1</number>
          </property>
-         <property name="maximum" >
+         <property name="maximum">
           <number>50</number>
          </property>
-         <property name="value" >
+         <property name="value">
           <number>2</number>
          </property>
-         <property name="orientation" >
+         <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
         </widget>
        </item>
-       <item row="4" column="0" colspan="3" >
-        <widget class="QPushButton" name="setHeightButton" >
-         <property name="text" >
+       <item row="4" column="0" colspan="3">
+        <widget class="QPushButton" name="setHeightButton">
+         <property name="text">
           <string>Set Height</string>
          </property>
-         <property name="checkable" >
+         <property name="checkable">
           <bool>true</bool>
          </property>
         </widget>
        </item>
-       <item row="5" column="0" colspan="3" >
-        <widget class="QPushButton" name="editSmoothButton" >
-         <property name="text" >
+       <item row="5" column="0" colspan="3">
+        <widget class="QPushButton" name="editSmoothButton">
+         <property name="text">
           <string>Smooth</string>
          </property>
-         <property name="checkable" >
+         <property name="checkable">
           <bool>true</bool>
          </property>
         </widget>
        </item>
       </layout>
      </widget>
-     <widget class="QWidget" name="page_3" >
-      <property name="geometry" >
+     <widget class="QWidget" name="page_3">
+      <property name="geometry">
        <rect>
         <x>0</x>
         <y>0</y>
         <width>378</width>
-        <height>655</height>
+        <height>654</height>
        </rect>
       </property>
-      <attribute name="label" >
+      <attribute name="label">
        <string>PaintTerrain</string>
       </attribute>
-      <layout class="QGridLayout" name="gridLayout_2" >
-       <property name="margin" >
+      <layout class="QGridLayout" name="gridLayout_2">
+       <property name="margin">
         <number>1</number>
        </property>
-       <property name="spacing" >
+       <property name="spacing">
         <number>1</number>
        </property>
-       <item row="0" column="2" >
-        <widget class="QLabel" name="label_21" >
-         <property name="toolTip" >
+       <item row="0" column="2">
+        <widget class="QLabel" name="label_21">
+         <property name="toolTip">
           <string>The intensity wich is applied to the tool</string>
          </property>
-         <property name="text" >
-          <string>2</string>
+         <property name="text">
+          <string>20</string>
          </property>
         </widget>
        </item>
-       <item row="0" column="0" >
-        <widget class="QLabel" name="label_18" >
-         <property name="toolTip" >
+       <item row="0" column="0">
+        <widget class="QLabel" name="label_18">
+         <property name="toolTip">
           <string>The intensity wich is applied to the tool</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>Intensity</string>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>editIntensitySlider</cstring>
          </property>
         </widget>
        </item>
-       <item row="1" column="0" >
-        <widget class="QLabel" name="label_20" >
-         <property name="toolTip" >
+       <item row="1" column="0">
+        <widget class="QLabel" name="label_20">
+         <property name="toolTip">
           <string>The diameter of the tool</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>Brush Size</string>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>editIntensitySlider</cstring>
          </property>
         </widget>
        </item>
-       <item row="0" column="1" >
-        <widget class="QSlider" name="paintIntensitySlider" >
-         <property name="toolTip" >
+       <item row="0" column="1">
+        <widget class="QSlider" name="paintIntensitySlider">
+         <property name="toolTip">
           <string>The intensity wich is applied to the tool</string>
          </property>
-         <property name="value" >
-          <number>2</number>
+         <property name="minimum">
+          <number>1</number>
          </property>
-         <property name="orientation" >
+         <property name="maximum">
+          <number>40</number>
+         </property>
+         <property name="singleStep">
+          <number>1</number>
+         </property>
+         <property name="value">
+          <number>20</number>
+         </property>
+         <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
         </widget>
        </item>
-       <item row="3" column="1" >
-        <spacer name="verticalSpacer_3" >
-         <property name="orientation" >
+       <item row="3" column="1">
+        <spacer name="verticalSpacer_3">
+         <property name="orientation">
           <enum>Qt::Vertical</enum>
          </property>
-         <property name="sizeHint" stdset="0" >
+         <property name="sizeHint" stdset="0">
           <size>
            <width>20</width>
            <height>451</height>
@@ -885,57 +735,57 @@
          </property>
         </spacer>
        </item>
-       <item row="1" column="1" >
-        <widget class="QSlider" name="paintBrushSizeSlider" >
-         <property name="toolTip" >
+       <item row="1" column="1">
+        <widget class="QSlider" name="paintBrushSizeSlider">
+         <property name="toolTip">
           <string>The diameter of the tool</string>
          </property>
-         <property name="value" >
+         <property name="value">
           <number>2</number>
          </property>
-         <property name="orientation" >
+         <property name="orientation">
           <enum>Qt::Horizontal</enum>
          </property>
         </widget>
        </item>
-       <item row="2" column="1" >
-        <widget class="QPushButton" name="paintBrushButton" >
-         <property name="sizePolicy" >
-          <sizepolicy vsizetype="Fixed" hsizetype="Fixed" >
+       <item row="2" column="1">
+        <widget class="QPushButton" name="paintBrushButton">
+         <property name="sizePolicy">
+          <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
            <horstretch>0</horstretch>
            <verstretch>0</verstretch>
           </sizepolicy>
          </property>
-         <property name="minimumSize" >
+         <property name="minimumSize">
           <size>
            <width>130</width>
            <height>130</height>
           </size>
          </property>
-         <property name="toolTip" >
+         <property name="toolTip">
           <string>The brush that is applied</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>PushButton</string>
          </property>
         </widget>
        </item>
-       <item row="1" column="2" >
-        <widget class="QLabel" name="label_17" >
-         <property name="toolTip" >
+       <item row="1" column="2">
+        <widget class="QLabel" name="label_17">
+         <property name="toolTip">
           <string>The diameter of the tool</string>
          </property>
-         <property name="text" >
+         <property name="text">
           <string>2</string>
          </property>
         </widget>
        </item>
-       <item row="2" column="0" >
-        <widget class="QLabel" name="label_19" >
-         <property name="text" >
+       <item row="2" column="0">
+        <widget class="QLabel" name="label_19">
+         <property name="text">
           <string>Brush Type  </string>
          </property>
-         <property name="buddy" >
+         <property name="buddy">
           <cstring>editBrushButton</cstring>
          </property>
         </widget>
@@ -954,20 +804,11 @@
     </widget>
    </item>
   </layout>
-  <zorder>terrainListComboBox</zorder>
-  <zorder>toggleTerrainVisibilityButton</zorder>
-  <zorder>editTerrainButton</zorder>
-  <zorder>deleteTerrainButton</zorder>
-  <zorder>toolBox</zorder>
  </widget>
  <tabstops>
   <tabstop>editIntensitySlider</tabstop>
   <tabstop>editBrushButton</tabstop>
   <tabstop>extendsSpinBoxZ</tabstop>
-  <tabstop>baseNameLineEdit</tabstop>
-  <tabstop>resGroupLineEdit</tabstop>
-  <tabstop>texSizeComboBox</tabstop>
-  <tabstop>numTexturesComboBox</tabstop>
   <tabstop>createTerrainButton</tabstop>
   <tabstop>terrainListComboBox</tabstop>
   <tabstop>positionSpinBoxX</tabstop>
@@ -980,8 +821,8 @@
   <tabstop>extendsSpinBoxY</tabstop>
  </tabstops>
  <resources>
-  <include location="../src/media/help/help.qrc" />
-  <include location="../src/media/icons/icons.qrc" />
+  <include location="../src/media/help/help.qrc"/>
+  <include location="../src/media/icons/icons.qrc"/>
  </resources>
  <connections>
   <connection>
@@ -990,11 +831,11 @@
    <receiver>label_13</receiver>
    <slot>setNum(int)</slot>
    <hints>
-    <hint type="sourcelabel" >
+    <hint type="sourcelabel">
      <x>162</x>
      <y>101</y>
     </hint>
-    <hint type="destinationlabel" >
+    <hint type="destinationlabel">
      <x>377</x>
      <y>103</y>
     </hint>
@@ -1006,11 +847,11 @@
    <receiver>label_16</receiver>
    <slot>setNum(int)</slot>
    <hints>
-    <hint type="sourcelabel" >
+    <hint type="sourcelabel">
      <x>160</x>
      <y>112</y>
     </hint>
-    <hint type="destinationlabel" >
+    <hint type="destinationlabel">
      <x>377</x>
      <y>114</y>
     </hint>
@@ -1022,11 +863,11 @@
    <receiver>label_17</receiver>
    <slot>setNum(int)</slot>
    <hints>
-    <hint type="sourcelabel" >
+    <hint type="sourcelabel">
      <x>139</x>
      <y>148</y>
     </hint>
-    <hint type="destinationlabel" >
+    <hint type="destinationlabel">
      <x>371</x>
      <y>150</y>
     </hint>
@@ -1038,11 +879,11 @@
    <receiver>label_21</receiver>
    <slot>setNum(int)</slot>
    <hints>
-    <hint type="sourcelabel" >
+    <hint type="sourcelabel">
      <x>171</x>
      <y>129</y>
     </hint>
-    <hint type="destinationlabel" >
+    <hint type="destinationlabel">
      <x>371</x>
      <y>131</y>
     </hint>
@@ -1054,11 +895,11 @@
    <receiver>editIntensitySlider</receiver>
    <slot>setDisabled(bool)</slot>
    <hints>
-    <hint type="sourcelabel" >
+    <hint type="sourcelabel">
      <x>65</x>
      <y>274</y>
     </hint>
-    <hint type="destinationlabel" >
+    <hint type="destinationlabel">
      <x>85</x>
      <y>94</y>
     </hint>
@@ -1070,11 +911,11 @@
    <receiver>editBrushButton</receiver>
    <slot>setDisabled(bool)</slot>
    <hints>
-    <hint type="sourcelabel" >
+    <hint type="sourcelabel">
      <x>109</x>
      <y>274</y>
     </hint>
-    <hint type="destinationlabel" >
+    <hint type="destinationlabel">
      <x>131</x>
      <y>210</y>
     </hint>
@@ -1086,11 +927,11 @@
    <receiver>editBrushSizeSlider</receiver>
    <slot>setDisabled(bool)</slot>
    <hints>
-    <hint type="sourcelabel" >
+    <hint type="sourcelabel">
      <x>222</x>
      <y>271</y>
     </hint>
-    <hint type="destinationlabel" >
+    <hint type="destinationlabel">
      <x>143</x>
      <y>113</y>
     </hint>
@@ -1102,11 +943,11 @@
    <receiver>editSmoothButton</receiver>
    <slot>setDisabled(bool)</slot>
    <hints>
-    <hint type="sourcelabel" >
+    <hint type="sourcelabel">
      <x>42</x>
      <y>271</y>
     </hint>
-    <hint type="destinationlabel" >
+    <hint type="destinationlabel">
      <x>39</x>
      <y>299</y>
     </hint>
@@ -1118,11 +959,11 @@
    <receiver>setHeightButton</receiver>
    <slot>setDisabled(bool)</slot>
    <hints>
-    <hint type="sourcelabel" >
+    <hint type="sourcelabel">
      <x>101</x>
      <y>301</y>
     </hint>
-    <hint type="destinationlabel" >
+    <hint type="destinationlabel">
      <x>100</x>
      <y>274</y>
     </hint>



