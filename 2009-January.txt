From chrber at mail.berlios.de  Sat Jan  3 13:24:40 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 3 Jan 2009 13:24:40 +0100
Subject: [Dsa-hl-svn] r4661 - in dependencies/OgreNewt: . cmake src
Message-ID: <200901031224.n03COerW026283@sheep.berlios.de>

Author: chrber
Date: 2009-01-03 13:24:31 +0100 (Sat, 03 Jan 2009)
New Revision: 4661

Added:
   dependencies/OgreNewt/CMakeLists.txt
   dependencies/OgreNewt/OgreNewt.pc.cmake
   dependencies/OgreNewt/cmake/
   dependencies/OgreNewt/cmake/FindNewton.cmake
   dependencies/OgreNewt/cmake/FindOGRE.cmake
Modified:
   dependencies/OgreNewt/OgreNewt.pc.in
   dependencies/OgreNewt/config.h.in
   dependencies/OgreNewt/configure.in
   dependencies/OgreNewt/src/Makefile.am
Log:
Added linking to Newton library
Added infrastructure to build OgreNewt using cmake


Added: dependencies/OgreNewt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt/CMakeLists.txt	2008-12-31 13:20:41 UTC (rev 4660)
+++ dependencies/OgreNewt/CMakeLists.txt	2009-01-03 12:24:31 UTC (rev 4661)
@@ -0,0 +1,75 @@
+PROJECT(OgreNewt)
+
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
+
+# Include required cmake macros
+INCLUDE(FeatureSummary)
+
+# Version information
+SET(OgreNewt_MAJOR_VERSION 0)
+SET(OgreNewt_MINOR_VERSION 0)
+SET(OgreNewt_PATCH_VERSION 7)
+
+# Add directory with OgreNewt's own macro definitions
+# (checked before ${CMAKE_ROOT}/Modules)
+SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
+
+# Check for required components
+FIND_PACKAGE(PkgConfig)
+FIND_PACKAGE(OGRE 1.4 REQUIRED)
+FIND_PACKAGE(Newton REQUIRED)
+
+INCLUDE_DIRECTORIES(
+${CMAKE_CURRENT_SOURCE_DIR}/include/OgreNewt
+${OGRE_INCLUDE_DIRS}
+${NEWTON_INCLUDE_DIR})
+
+SET(OgreNewt_LIB_SRCS
+src/OgreNewt_BasicJoints.cpp
+src/OgreNewt_Body.cpp
+src/OgreNewt_Collision.cpp
+src/OgreNewt_CollisionPrimitives.cpp
+src/OgreNewt_ContactCallback.cpp
+src/OgreNewt_Debugger.cpp
+src/OgreNewt_Joint.cpp
+src/OgreNewt_MaterialID.cpp
+src/OgreNewt_MaterialPair.cpp
+src/OgreNewt_RayCast.cpp
+src/OgreNewt_Tools.cpp
+src/OgreNewt_TreeCollisionSerializer.cpp
+src/OgreNewt_Vehicle.cpp
+src/OgreNewt_World.cpp)
+
+ADD_LIBRARY(OgreNewt SHARED ${OgreNewt_LIB_SRCS})
+
+TARGET_LINK_LIBRARIES(OgreNewt ${OGRE_LIBRARIES} ${NEWTON_LIBRARY})
+
+SET_TARGET_PROPERTIES(OgreNewt PROPERTIES
+	VERSION ${OgreNewt_MAJOR_VERSION}.${OgreNewt_MINOR_VERSION}.${OgreNewt_PATCH_VERSION}
+	SOVERSION ${OgreNewt_MAJOR_VERSION}
+	DEFINE_SYMBOL _OGRENEWT_EXPORTS)
+
+CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/OgreNewt.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/OgreNewt.pc)
+
+INSTALL(TARGETS OgreNewt
+        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
+        RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
+        ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
+
+INSTALL(FILES include/OgreNewt/FastDelegate.h include/OgreNewt/line3D.h
+include/OgreNewt/OgreNewt_BasicJoints.h include/OgreNewt/OgreNewt_Body.h
+include/OgreNewt/OgreNewt_BodyIterator.h include/OgreNewt/OgreNewt_Collision.h
+include/OgreNewt/OgreNewt_CollisionPrimitives.h include/OgreNewt/OgreNewt_ContactCallback.h
+include/OgreNewt/OgreNewt_Debugger.h include/OgreNewt/OgreNewt.h
+include/OgreNewt/OgreNewt_Joint.h include/OgreNewt/OgreNewt_MaterialID.h
+include/OgreNewt/OgreNewt_MaterialPair.h include/OgreNewt/OgreNewt_Prerequisites.h
+include/OgreNewt/OgreNewt_RayCast.h include/OgreNewt/OgreNewt_Tools.h
+include/OgreNewt/OgreNewt_TreeCollisionSerializer.h include/OgreNewt/OgreNewt_Vehicle.h
+include/OgreNewt/OgreNewt_World.h DESTINATION ${CMAKE_INSTALL_PREFIX}/include/OgreNewt)
+
+IF(NOT WIN32)
+	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/OgreNewt.pc
+	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
+ENDIF(NOT WIN32)
+
+PRINT_ENABLED_FEATURES()
\ No newline at end of file

Added: dependencies/OgreNewt/OgreNewt.pc.cmake
===================================================================
--- dependencies/OgreNewt/OgreNewt.pc.cmake	2008-12-31 13:20:41 UTC (rev 4660)
+++ dependencies/OgreNewt/OgreNewt.pc.cmake	2009-01-03 12:24:31 UTC (rev 4661)
@@ -0,0 +1,11 @@
+prefix=${CMAKE_INSTALL_PREFIX}
+exec_prefix=${CMAKE_INSTALL_PREFIX}
+libdir=${CMAKE_INSTALL_PREFIX}/lib
+includedir=${CMAKE_INSTALL_PREFIX}/include/OgreNewt
+
+Name: OgreNewt
+Description: Ogre Bindings for the Newton Physics SDK
+Requires: OGRE >= 1.4
+Version: ${OgreNewt_MAJOR_VERSION}.${OgreNewt_MINOR_VERSION}.${OgreNewt_PATCH_VERSION}
+Libs: -L${CMAKE_INSTALL_PREFIX}/lib -lOgreNewt
+Cflags: -I${CMAKE_INSTALL_PREFIX}/include/OgreNewt

Modified: dependencies/OgreNewt/OgreNewt.pc.in
===================================================================
--- dependencies/OgreNewt/OgreNewt.pc.in	2008-12-31 13:20:41 UTC (rev 4660)
+++ dependencies/OgreNewt/OgreNewt.pc.in	2009-01-03 12:24:31 UTC (rev 4661)
@@ -5,7 +5,7 @@
 
 Name: OgreNewt
 Description: Ogre Bindings for the Newton Physics SDK
-Requires: OGRE
+Requires: OGRE >= 1.4
 Version: @VERSION@
 Libs: -L${libdir} -lOgreNewt
 Cflags: -I${includedir}/OgreNewt

Added: dependencies/OgreNewt/cmake/FindNewton.cmake
===================================================================
--- dependencies/OgreNewt/cmake/FindNewton.cmake	2008-12-31 13:20:41 UTC (rev 4660)
+++ dependencies/OgreNewt/cmake/FindNewton.cmake	2009-01-03 12:24:31 UTC (rev 4661)
@@ -0,0 +1,65 @@
+# Find Newton
+#
+# This module defines
+#  NEWTON_FOUND
+#  NEWTON_INCLUDE_DIR
+#  NEWTON_LIBRARY
+#
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+# On a new cmake run, we do not need to be verbose
+IF(NEWTON_INCLUDE_DIR AND NEWTON_LIBRARY)
+	SET(NEWTON_FIND_QUIETLY TRUE)
+ENDIF(NEWTON_INCLUDE_DIR AND NEWTON_LIBRARY)
+
+IF(WIN32)
+
+ELSE(WIN32)
+	SET(NEWTON_INCLUDE_SEARCH_DIRS
+	    /usr/include
+	    /usr/local/include
+	    /opt/newton/include
+	    /opt/include INTERNAL)
+	SET(NEWTON_LIBRARY_SEARCH_DIRS
+	    /usr/lib
+	    /usr/lib64
+	    /usr/local/lib
+	    /usr/local/lib64
+	    /opt/newton/lib
+	    /opt/newton/lib64 INTERNAL)
+	SET(NEWTON_INC_DIR_SUFFIXES PATH_SUFFIXES newton)
+ENDIF(WIN32)
+
+IF (NOT NEWTON_FIND_QUIETLY)
+	MESSAGE(STATUS "Checking for Newton")
+ENDIF(NOT NEWTON_FIND_QUIETLY)
+
+# Search for header files and libraries
+FIND_PATH(NEWTON_INCLUDE_DIR Newton.h
+          PATHS ${NEWTON_INCLUDE_SEARCH_DIRS}
+          PATH_SUFFIXES ${NEWTON_INC_DIR_SUFFIXES})
+
+FIND_LIBRARY(NEWTON_LIBRARY Newton
+             PATHS ${NEWTON_LIBRARY_SEARCH_DIRS}
+             PATH_SUFFIXES ${NEWTON_LIB_DIR_SUFFIXES})
+
+IF(NEWTON_INCLUDE_DIR AND NEWTON_LIBRARY)
+	SET(NEWTON_FOUND TRUE)
+ENDIF(NEWTON_INCLUDE_DIR AND NEWTON_LIBRARY)
+
+IF(NEWTON_FOUND)
+	IF(NOT NEWTON_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries: ${NEWTON_LIBRARY}")
+		MESSAGE(STATUS "  includes: ${NEWTON_INCLUDE_DIR}")
+	ENDIF(NOT NEWTON_FIND_QUIETLY)
+ELSE(NEWTON_FOUND)
+	IF(NOT NEWTON_LIBRARY)
+		MESSAGE(SEND_ERROR, "Newton library could not be found.")
+	ENDIF(NOT NEWTON_LIBRARY)
+	IF(NOT NEWTON_INCLUDE_DIR)
+		MESSAGE(SEND_ERROR "Newton include files could not be found.")
+	ENDIF(NOT NEWTON_INCLUDE_DIR)
+ENDIF(NEWTON_FOUND)
\ No newline at end of file

Added: dependencies/OgreNewt/cmake/FindOGRE.cmake
===================================================================
--- dependencies/OgreNewt/cmake/FindOGRE.cmake	2008-12-31 13:20:41 UTC (rev 4660)
+++ dependencies/OgreNewt/cmake/FindOGRE.cmake	2009-01-03 12:24:31 UTC (rev 4661)
@@ -0,0 +1,102 @@
+# Find OGRE includes and library
+#
+# This module defines
+#  OGRE_INCLUDE_DIRS
+#  OGRE_LIBRARIES, the libraries to link against to use OGRE.
+#  OGRE_LIBRARY_DIRS, the location of the libraries
+#  OGRE_FOUND, If false, do not try to use OGRE
+#
+# Copyright ? 2007-2008, Matt Williams
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+IF (OGRE_LIBRARIES AND OGRE_INCLUDE_DIRS)
+	SET(OGRE_FIND_QUIETLY TRUE) # Already in cache, be silent
+ENDIF (OGRE_LIBRARIES AND OGRE_INCLUDE_DIRS)
+
+#Set the library and include search paths
+#SET(OGRESDK $ENV{OGRE_HOME})
+#STRING(REGEX REPLACE "[\\]" "/" OGRESDK "${OGRESDK}")
+FILE(TO_CMAKE_PATH "$ENV{OGRE_HOME}" OGRESDK)
+SET(OGRE_INCLUDE_SEARCH_DIRS #                 this <-
+	${INCLUDE_SEARCH_DIRS} #TODO Cache this, not ^
+	${CMAKE_LIBRARY_PATH}
+	/usr/include/OGRE
+	/usr/local/include/OGRE
+	/opt/include/OGRE
+	/opt/OGRE/include
+	${OGRESDK}/include
+	${OGRESDK}/OgreMain/include
+	CACHE STRING ""
+)
+
+SET(OGRE_LIBRARY_SEARCH_DIRS
+	${LIBRARY_SEARCH_DIRS}
+	${CMAKE_LIBRARY_PATH}
+	/usr/lib
+	/usr/lib64
+	/usr/local/lib
+	/usr/local/lib64
+	/opt/lib
+	/opt/lib64
+	/opt/OGRE/lib
+	/opt/OGRE/lib64
+	${OGRESDK}/lib
+	${OGRESDK}/lib64
+	CACHE STRING ""
+)
+
+# Allow to set Ogre plugin path manually
+SET(OGRE_PLUGINDIR "" CACHE STRING "Ogre plugin directory")
+
+#Search for the headers and libraries
+IF (WIN32) #Windows
+	MESSAGE(STATUS "Looking for OGRE")
+	FIND_PATH(OGRE_INCLUDE_DIRS Ogre.h ${OGRE_INCLUDE_SEARCH_DIRS})
+	FIND_LIBRARY(OGRE_LIBRARIES debug OgreMain_d optimized OgreMain PATHS ${OGRE_LIBRARY_SEARCH_DIRS})
+ELSE (WIN32) #Unix/OSX
+	FIND_PACKAGE(PkgConfig)
+	IF(PKG_CONFIG_FOUND)
+		PKG_SEARCH_MODULE(OGRE OGRE)
+		IF(NOT PKGCONFIG_FAILED)
+			_PKGCONFIG_INVOKE(OGRE "OGRE" PLUGINDIR "" --variable=plugindir)
+			ADD_DEFINITIONS(-DOGRE_PLUGINDIR="${OGRE_PLUGINDIR}")
+		ENDIF(NOT PKGCONFIG_FAILED)
+		SET(OGRE_INCLUDE_DIRS ${OGRE_INCLUDE_DIRS})
+		SET(OGRE_LIBRARY_DIRS ${OGRE_LIBDIR})
+		SET(OGRE_LIBRARIES ${OGRE_LIBRARIES} CACHE STRING "")
+	ENDIF(PKG_CONFIG_FOUND)
+	IF(NOT OGRE_FOUND) #If PkgConfig couldn't find OGRE...
+		IF (NOT OGRE_FIND_QUIETLY)
+			MESSAGE(STATUS " Manually searching for OGRE")
+		ENDIF (NOT OGRE_FIND_QUIETLY)
+		FIND_PATH(OGRE_INCLUDE_DIRS Ogre.h ${OGRE_INCLUDE_SEARCH_DIRS})
+		FIND_LIBRARY(OGRE_LIBRARIES OgreMain PATHS ${OGRE_LIBRARY_SEARCH_DIRS})
+	ENDIF(NOT OGRE_FOUND)
+ENDIF (WIN32)
+
+#Do some preparation
+SEPARATE_ARGUMENTS(OGRE_INCLUDE_DIRS)
+SEPARATE_ARGUMENTS(OGRE_LIBRARIES)
+
+SET(OGRE_INCLUDE_DIRS ${OGRE_INCLUDE_DIRS})
+SET(OGRE_LIBRARIES ${OGRE_LIBRARIES})
+SET(OGRE_LIBRARY_DIRS ${OGRE_LIBRARY_DIRS})
+
+MARK_AS_ADVANCED(OGRE_INCLUDE_DIRS OGRE_LIBRARIES OGRE_LIBRARY_DIRS) #So they don't show in the default GUI
+
+IF (OGRE_INCLUDE_DIRS AND OGRE_LIBRARIES)
+	SET(OGRE_FOUND TRUE)
+ENDIF (OGRE_INCLUDE_DIRS AND OGRE_LIBRARIES)
+
+IF (OGRE_FOUND)
+	IF (NOT OGRE_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries : ${OGRE_LIBRARIES} from ${OGRE_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes  : ${OGRE_INCLUDE_DIRS}")
+	ENDIF (NOT OGRE_FIND_QUIETLY)
+ELSE (OGRE_FOUND)
+	IF (OGRE_FIND_REQUIRED)
+		MESSAGE(FATAL_ERROR "Could not find OGRE. Make sure you have the OGRE development headers installed. Otherwise, try setting LIBRARY_SEARCH_DIRS and INCLUDE_SEARCH_DIRS to the place OGRE was installed with -DLIBRARY_SEARCH_DIRS=<path/to/lib> -DINCLUDE_SEARCH_DIRS=<path/to/include>")
+	ENDIF (OGRE_FIND_REQUIRED)
+ENDIF (OGRE_FOUND)

Modified: dependencies/OgreNewt/config.h.in
===================================================================
--- dependencies/OgreNewt/config.h.in	2008-12-31 13:20:41 UTC (rev 4660)
+++ dependencies/OgreNewt/config.h.in	2009-01-03 12:24:31 UTC (rev 4661)
@@ -6,6 +6,9 @@
 /* Define to 1 if you have the <inttypes.h> header file. */
 #undef HAVE_INTTYPES_H
 
+/* Define to 1 if you have the `Newton' library (-lNewton). */
+#undef HAVE_LIBNEWTON
+
 /* Define to 1 if you have the <memory.h> header file. */
 #undef HAVE_MEMORY_H
 

Modified: dependencies/OgreNewt/configure.in
===================================================================
--- dependencies/OgreNewt/configure.in	2008-12-31 13:20:41 UTC (rev 4660)
+++ dependencies/OgreNewt/configure.in	2009-01-03 12:24:31 UTC (rev 4661)
@@ -32,8 +32,9 @@
 # Check for Ogre
 PKG_CHECK_MODULES(OGRE, OGRE >= 1.4.0)
 
-# Check for Newton header
-AC_CHECK_HEADERS(Newton.h, , AC_MSG_ERROR([Can't find Newton headers]))
+# Check for Newton
+AC_CHECK_LIB([Newton], [fopen], [], AC_MSG_ERROR([Can't find libNewton]))
+AC_CHECK_HEADERS([Newton.h], , AC_MSG_ERROR([Can't find Newton headers]))
 
 AC_CONFIG_FILES([Makefile
                  include/Makefile

Modified: dependencies/OgreNewt/src/Makefile.am
===================================================================
--- dependencies/OgreNewt/src/Makefile.am	2008-12-31 13:20:41 UTC (rev 4660)
+++ dependencies/OgreNewt/src/Makefile.am	2009-01-03 12:24:31 UTC (rev 4661)
@@ -1,7 +1,7 @@
 INCLUDES = $(OGRE_CFLAGS) -I../include/OgreNewt
 
 lib_LTLIBRARIES = libOgreNewt.la
-libOgreNewt_la_LDFLAGS = $(OGRE_LIBS)
+libOgreNewt_la_LDFLAGS = $(OGRE_LIBS) $(LIBS)
 libOgreNewt_la_SOURCES = \
 	OgreNewt_BasicJoints.cpp \
 	OgreNewt_Body.cpp \



From chrber at mail.berlios.de  Sat Jan  3 18:39:50 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 3 Jan 2009 18:39:50 +0100
Subject: [Dsa-hl-svn] r4662 - in rl/trunk: . cmake engine/ai
	engine/ai/include engine/common engine/common/include
	engine/core engine/rules engine/script engine/script/src
	engine/startup engine/ui
Message-ID: <200901031739.n03HdoIQ032147@sheep.berlios.de>

Author: chrber
Date: 2009-01-03 18:39:30 +0100 (Sat, 03 Jan 2009)
New Revision: 4662

Added:
   rl/trunk/cmake/COPYING-CMAKE-SCRIPTS
   rl/trunk/cmake/FindCEGUIOGRE.cmake
   rl/trunk/cmake/FindOpenSteer.cmake
   rl/trunk/cmake/FindXercesC.cmake
   rl/trunk/cmake/UseSWIG.cmake
   rl/trunk/engine/script/CMakeLists.txt
   rl/trunk/engine/startup/CMakeLists.txt
Modified:
   rl/trunk/CMakeLists.txt
   rl/trunk/cmake/FindFMODEx.cmake
   rl/trunk/cmake/FindMeshMagick.cmake
   rl/trunk/cmake/FindOGRE.cmake
   rl/trunk/cmake/FindOIS.cmake
   rl/trunk/engine/ai/CMakeLists.txt
   rl/trunk/engine/ai/include/DialogLoaderImpl.h
   rl/trunk/engine/common/CMakeLists.txt
   rl/trunk/engine/common/include/WriteableDataStreamFormatTarget.h
   rl/trunk/engine/core/CMakeLists.txt
   rl/trunk/engine/rules/CMakeLists.txt
   rl/trunk/engine/script/src/Scene.cpp
   rl/trunk/engine/ui/CMakeLists.txt
Log:
Finishing touches for cmake build system
Typical bunch of missing line endings for other files


Modified: rl/trunk/CMakeLists.txt
===================================================================
--- rl/trunk/CMakeLists.txt	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/CMakeLists.txt	2009-01-03 17:39:30 UTC (rev 4662)
@@ -24,13 +24,16 @@
 
 # Check for required components
 FIND_PACKAGE(PkgConfig)
+FIND_PACKAGE(XercesC REQUIRED)
 FIND_PACKAGE(OGRE 1.6 REQUIRED)
+FIND_PACKAGE(OIS REQUIRED)
+FIND_PACKAGE(CEGUI REQUIRED)
+FIND_PACKAGE(CEGUIOGRE 1.6 REQUIRED)
 FIND_PACKAGE(OgreNewt REQUIRED)
+FIND_PACKAGE(OpenSteer REQUIRED)
 FIND_PACKAGE(MeshMagick 0.5 REQUIRED)
-FIND_PACKAGE(CEGUI REQUIRED)
 FIND_PACKAGE(Ruby REQUIRED)
 FIND_PACKAGE(Boost 1.34 REQUIRED filesystem)
-FIND_PACKAGE(OIS REQUIRED)
 FIND_PACKAGE(SWIG REQUIRED)
 IF (NOT SWIG_DIR MATCHES -rl$)
 	SET_FEATURE_INFO(SWIG "" "" "You use an unsupported version of SWIG.")
@@ -45,9 +48,6 @@
 SET(WITH_FMOD4 ON CACHE BOOL "Enable FMOD 4.xx (FMODex) sound support")
 SET(WITH_OPENAL OFF CACHE BOOL "Enable OpenAL sound support (unsupported)")
 
-# Handle options
-ADD_DEFINITIONS(-DRL_MODULEDIR="${DATAROOTDIR}/${DATADIRNAME}/modules")
-
 # Include subdirectories
 ADD_SUBDIRECTORY(engine)
 ADD_SUBDIRECTORY(plugins)

Added: rl/trunk/cmake/COPYING-CMAKE-SCRIPTS
===================================================================
--- rl/trunk/cmake/COPYING-CMAKE-SCRIPTS	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/cmake/COPYING-CMAKE-SCRIPTS	2009-01-03 17:39:30 UTC (rev 4662)
@@ -0,0 +1,22 @@
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions
+are met:
+
+1. Redistributions of source code must retain the copyright
+   notice, this list of conditions and the following disclaimer.
+2. Redistributions in binary form must reproduce the copyright
+   notice, this list of conditions and the following disclaimer in the
+   documentation and/or other materials provided with the distribution.
+3. The name of the author may not be used to endorse or promote products 
+   derived from this software without specific prior written permission.
+
+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
+IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
+OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
+INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
+NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
+DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
+THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
+THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Added: rl/trunk/cmake/FindCEGUIOGRE.cmake
===================================================================
--- rl/trunk/cmake/FindCEGUIOGRE.cmake	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/cmake/FindCEGUIOGRE.cmake	2009-01-03 17:39:30 UTC (rev 4662)
@@ -0,0 +1,68 @@
+# Find CEGUI-OGRE (CEGUI Renderer interface module for OGRE)
+#
+# This module defines
+# CEGUIOGRE_FOUND       - OpenSteer was found
+# CEGUIOGRE_INCLUDE_DIR - Directory containing CEGUI-OGRE header files
+# CEGUIOGRE_LIBRARY     - Library name of CEGUI-OGRE library
+#
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+# On a new cmake run, we do not need to be verbose
+IF(CEGUIOGRE_INCLUDE_DIR AND CEGUIOGRE_LIBRARY)
+	SET(CEGUIOGRE_FIND_QUIETLY TRUE)
+ENDIF(CEGUIOGRE_INCLUDE_DIR AND CEGUIOGRE_LIBRARY)
+
+IF(WIN32)
+
+ELSE(WIN32)
+	IF(PKG_CONFIG_FOUND)
+		PKG_SEARCH_MODULE(CEGUIOGRE CEGUI-OGRE)
+		SET(CEGUIOGRE_INCLUDE_DIR ${CEGUIOGRE_INCLUDE_DIRS})
+		SET(CEGUIOGRE_LIBRARY ${CEGUIOGRE_LIBRARIES})
+	ENDIF(PKG_CONFIG_FOUND)
+	IF(NOT CEGUIOGRE_FOUND)
+		SET(CEGUIOGRE_INCLUDE_SEARCH_DIRS
+		    /usr/include
+		    /usr/local/include
+		    /opt/include
+		    /opt/OGRE/include)
+		SET(CEGUIOGRE_LIBRARY_SEARCH_DIRS
+		    /usr/lib
+		    /usr/lib64
+		    /usr/local/lib
+		    /usr/local/lib64
+		    /opt/OGRE/lib
+		    /opt/OGRE/lib64)
+		SET(CEGUIOGRE_INC_DIR_SUFFIXES PATH_SUFFIXES OGRE)
+		FIND_PATH(CEGUIOGRE_INCLUDE_DIR OgreCEGUIRenderer.h
+		          PATHS ${CEGUIOGRE_INCLUDE_SEARCH_DIRS}
+		          PATH_SUFFIXES ${CEGUIOGRE_INC_DIR_SUFFIXES})
+		FIND_LIBRARY(CEGUIOGRE_LIBRARY CEGUIOgreRenderer
+		             PATHS ${CEGUIOGRE_LIBRARY_SEARCH_DIRS}
+		             PATH_SUFFIXES ${CEGUIOGRE_LIB_DIR_SUFFIXES}})
+	ENDIF(NOT CEGUIOGRE_FOUND)
+ENDIF(WIN32)
+
+SET(CEGUIOGRE_INCLUDE_DIR ${CEGUIOGRE_INCLUDE_DIR} CACHE STRING "Directory containing CEGUI-OGRE header files")
+SET(CEGUIOGRE_LIBRARY ${CEGUIOGRE_LIBRARY} CACHE STRING "Library name of CEGRUI-OGRE library")
+
+IF(CEGUIOGRE_INCLUDE_DIR AND CEGUIOGRE_LIBRARY)
+	SET(CEGUIOGRE_FOUND TRUE)
+ENDIF(CEGUIOGRE_INCLUDE_DIR AND CEGUIOGRE_LIBRARY)
+
+IF(CEGUIOGRE_FOUND)
+	IF(NOT CEGUIOGRE_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries: ${CEGUIOGRE_LIBRARY} from ${CEGUIOGRE_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes: ${CEGUIOGRE_INCLUDE_DIR}")
+	ENDIF(NOT CEGUIOGRE_FIND_QUIETLY)
+ELSE(CEGUIOGRE_FOUND)
+	IF(NOT CEGUIOGRE_LIBRARY)
+		MESSAGE(SEND_ERROR, "CEGRUI-OGRE library could not be found.")
+	ENDIF(NOT CEGUIOGRE_LIBRARY)
+	IF(NOT CEGUIOGRE_INCLUDE_DIR)
+		MESSAGE(SEND_ERROR "CEGRUI-OGRE include files could not be found.")
+	ENDIF(NOT CEGUIOGRE_INCLUDE_DIR)
+ENDIF(CEGUIOGRE_FOUND)
\ No newline at end of file

Modified: rl/trunk/cmake/FindFMODEx.cmake
===================================================================
--- rl/trunk/cmake/FindFMODEx.cmake	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/cmake/FindFMODEx.cmake	2009-01-03 17:39:30 UTC (rev 4662)
@@ -28,8 +28,8 @@
 	SET(FMODEX_INCLUDE_SEARCH_DIRS
 	    /usr/include
 	    /usr/local/include
-	    /opt/fmodex/fmodex/include
-            /opt/include INTERNAL)
+	    /opt/fmodex/include
+	    /opt/include INTERNAL)
 	SET(FMODEX_LIBRARY_SEARCH_DIRS
 	    /usr/lib
 	    /usr/lib64

Modified: rl/trunk/cmake/FindMeshMagick.cmake
===================================================================
--- rl/trunk/cmake/FindMeshMagick.cmake	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/cmake/FindMeshMagick.cmake	2009-01-03 17:39:30 UTC (rev 4662)
@@ -1,27 +1,20 @@
 # Find MeshMagick
 #
 # This module defines
-# MESHMAGICK_FOUND
-# MESHMAGICK_INCLUDE_DIR
-# MESHMAGICK_LIBRARY
+# MESHMAGICK_FOUND       - MeshMagick was found
+# MESHMAGICK_INCLUDE_DIR - Directory containing MeshMagick header files
+# MESHMAGICK_LIBRARY     - Library name of MeshMagick library
 #
 # Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
 #
 # Redistribution and use is allowed according to the terms of the BSD license.
 # For details see the accompanying COPYING-CMAKE-SCRIPTS file.
 
-MESSAGE(STATUS "Value of MESHMAGICK_INCLUDE_DIR from previous run: ${MESHMAGICK_INCLUDE_DIR}")
-MESSAGE(STATUS "Value of MESHMAGICK_LIBRARY from previous run: ${MESHMAGICK_LIBRARY}")
-
 # On a new cmake run, we do not need to be verbose
 IF(MESHMAGICK_INCLUDE_DIR AND MESHMAGICK_LIBRARY)
 	SET(MESHMAGICK_FIND_QUIETLY TRUE)
 ENDIF(MESHMAGICK_INCLUDE_DIR AND MESHMAGICK_LIBRARY)
 
-IF (NOT MESHMAGICK_FIND_QUIETLY)
-	MESSAGE(STATUS "Checking for MeshMagick")
-ENDIF(NOT MESHMAGICK_FIND_QUIETLY)
-
 # Search for headers and libraries
 IF(WIN32)
 
@@ -54,8 +47,8 @@
 	ENDIF(NOT MESHMAGICK_FOUND)
 ENDIF(WIN32)
 
-SET(MESHMAGICK_INCLUDE_DIR ${MESHMAGICK_INCLUDE_DIR})
-SET(MESHMAGICK_LIBRARY ${MESHMAGICK_LIBRARY})
+SET(MESHMAGICK_INCLUDE_DIR ${MESHMAGICK_INCLUDE_DIR} CACHE STRING "Directory containing MeshMagick header files")
+SET(MESHMAGICK_LIBRARY ${MESHMAGICK_LIBRARY} CACHE STRING "Library name of MeshMagick library")
 
 IF(MESHMAGICK_INCLUDE_DIR AND MESHMAGICK_LIBRARY)
 	SET(MESHMAGICK_FOUND TRUE)

Modified: rl/trunk/cmake/FindOGRE.cmake
===================================================================
--- rl/trunk/cmake/FindOGRE.cmake	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/cmake/FindOGRE.cmake	2009-01-03 17:39:30 UTC (rev 4662)
@@ -11,9 +11,6 @@
 # Redistribution and use is allowed according to the terms of the BSD license.
 # For details see the accompanying COPYING-CMAKE-SCRIPTS file.
 
-MESSAGE(STATUS "Value of OGRE_INCLUDE_DIRS from previous run: ${OGRE_INCLUDE_DIRS}")
-MESSAGE(STATUS "Value of OGRE_LIBRARIES from previous run: ${OGRE_LIBRARIES}")
-
 IF (OGRE_LIBRARIES AND OGRE_INCLUDE_DIRS)
 	SET(OGRE_FIND_QUIETLY TRUE) # Already in cache, be silent
 ENDIF (OGRE_LIBRARIES AND OGRE_INCLUDE_DIRS)

Modified: rl/trunk/cmake/FindOIS.cmake
===================================================================
--- rl/trunk/cmake/FindOIS.cmake	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/cmake/FindOIS.cmake	2009-01-03 17:39:30 UTC (rev 4662)
@@ -52,6 +52,9 @@
 	ENDIF(NOT OIS_FOUND)
 ENDIF(WIN32)
 
+SET(OIS_INCLUDE_DIR ${OIS_INCLUDE_DIR} CACHE STRING "Directory containing OIS header files")
+SET(OIS_LIBRARY ${OIS_LIBRARY} CACHE STRING "Library name of OIS library")
+
 #Do some preparation
 SEPARATE_ARGUMENTS(OIS_INCLUDE_DIRS)
 SEPARATE_ARGUMENTS(OIS_LIBRARIES)
@@ -68,8 +71,8 @@
 
 IF (OIS_FOUND)
 	IF (NOT OIS_FIND_QUIETLY)
-		MESSAGE(STATUS "  libraries : ${OIS_LIBRARIES} from ${OIS_LIBRARY_DIRS}")
-		MESSAGE(STATUS "  includes  : ${OIS_INCLUDE_DIRS}")
+		MESSAGE(STATUS "  libraries : ${OIS_LIBRARY} from ${OIS_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes  : ${OIS_INCLUDE_DIR}")
 	ENDIF (NOT OIS_FIND_QUIETLY)
 ELSE (OIS_FOUND)
 	IF (OIS_FIND_REQUIRED)

Added: rl/trunk/cmake/FindOpenSteer.cmake
===================================================================
--- rl/trunk/cmake/FindOpenSteer.cmake	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/cmake/FindOpenSteer.cmake	2009-01-03 17:39:30 UTC (rev 4662)
@@ -0,0 +1,68 @@
+# Find OpenSteer
+#
+# This module defines
+# OPENSTEER_FOUND       - OpenSteer was found
+# OPENSTEER_INCLUDE_DIR - Directory containing OpenSteer header files
+# OPENSTEER_LIBRARY     - Library name of OpenSteer library
+#
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+# On a new cmake run, we do not need to be verbose
+IF(OPENSTEER_INCLUDE_DIR AND OPENSTEER_LIBRARY)
+	SET(OPENSTEER_FIND_QUIETLY TRUE)
+ENDIF(OPENSTEER_INCLUDE_DIR AND OPENSTEER_LIBRARY)
+
+IF(WIN32)
+
+ELSE(WIN32)
+	IF(PKG_CONFIG_FOUND)
+		PKG_SEARCH_MODULE(OPENSTEER opensteer)
+		SET(OPENSTEER_INCLUDE_DIR ${OPENSTEER_INCLUDE_DIRS})
+		SET(OPENSTEER_LIBRARY ${OPENSTEER_LIBRARIES})
+	ENDIF(PKG_CONFIG_FOUND)
+	IF(NOT OPENSTEER_FOUND)
+		SET(OPENSTEER_INCLUDE_SEARCH_DIRS
+		    /usr/include
+		    /usr/local/include
+		    /opt/include
+		    /opt/OpenSteer/include)
+		SET(OPENSTEER_LIBRARY_SEARCH_DIRS
+		    /usr/lib
+		    /usr/lib64
+		    /usr/local/lib
+		    /usr/local/lib64
+		    /opt/OpenSteer/lib
+		    /opt/OpenSteer/lib64)
+		SET(OPENSTEER_INC_DIR_SUFFIXES PATH_SUFFIXES OpenSteer)
+		FIND_PATH(OPENSTEER_INCLUDE_DIR SteerLibrary.h
+		          PATHS ${OPENSTEER_INCLUDE_SEARCH_DIRS}
+		          PATH_SUFFIXES ${OPENSTEER_INC_DIR_SUFFIXES})
+		FIND_LIBRARY(OPENSTEER_LIBRARY OPENSTEER
+		             PATHS ${OPENSTEER_LIBRARY_SEARCH_DIRS}
+		             PATH_SUFFIXES ${OPENSTEER_LIB_DIR_SUFFIXES}})
+	ENDIF(NOT OPENSTEER_FOUND)
+ENDIF(WIN32)
+
+SET(OPENSTEER_INCLUDE_DIR ${OPENSTEER_INCLUDE_DIR} CACHE STRING "Directory containing OpenSteer header files")
+SET(OPENSTEER_LIBRARY ${OPENSTEER_LIBRARY} CACHE STRING "Library name of OpenSteer library")
+
+IF(OPENSTEER_INCLUDE_DIR AND OPENSTEER_LIBRARY)
+	SET(OPENSTEER_FOUND TRUE)
+ENDIF(OPENSTEER_INCLUDE_DIR AND OPENSTEER_LIBRARY)
+
+IF(OPENSTEER_FOUND)
+	IF(NOT OPENSTEER_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries: ${OPENSTEER_LIBRARY} from ${OPENSTEER_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes: ${OPENSTEER_INCLUDE_DIR}")
+	ENDIF(NOT OPENSTEER_FIND_QUIETLY)
+ELSE(OPENSTEER_FOUND)
+	IF(NOT OPENSTEER_LIBRARY)
+		MESSAGE(SEND_ERROR, "OpenSteer library could not be found.")
+	ENDIF(NOT OPENSTEER_LIBRARY)
+	IF(NOT OPENSTEER_INCLUDE_DIR)
+		MESSAGE(SEND_ERROR "OpenSteer include files could not be found.")
+	ENDIF(NOT OPENSTEER_INCLUDE_DIR)
+ENDIF(OPENSTEER_FOUND)
\ No newline at end of file

Added: rl/trunk/cmake/FindXercesC.cmake
===================================================================
--- rl/trunk/cmake/FindXercesC.cmake	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/cmake/FindXercesC.cmake	2009-01-03 17:39:30 UTC (rev 4662)
@@ -0,0 +1,32 @@
+# - Find Xerces-C
+# Find the Xerces-C includes and library
+#
+#  XERCESC_INCLUDE_DIR - Where to find xercesc include sub-directory.
+#  XERCESC_LIBRARIES   - List of libraries when using Xerces-C.
+#  XERCESC_FOUND       - True if Xerces-C found.
+
+IF (XERCESC_INCLUDE_DIR)
+  # Already in cache, be silent.
+  SET(XERCESC_FIND_QUIETLY TRUE)
+ENDIF (XERCESC_INCLUDE_DIR)
+
+FIND_PATH(XERCESC_INCLUDE_DIR xercesc)
+
+SET(XERCESC_NAMES xerces-c xerces-c_2)
+FIND_LIBRARY(XERCESC_LIBRARY NAMES ${XERCESC_NAMES} )
+
+# Handle the QUIETLY and REQUIRED arguments and set XERCESC_FOUND to
+# TRUE if all listed variables are TRUE.
+INCLUDE(FindPackageHandleStandardArgs)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(
+  XERCESC DEFAULT_MSG
+  XERCESC_LIBRARY XERCESC_INCLUDE_DIR
+)
+
+IF(XERCESC_FOUND)
+  SET( XERCESC_LIBRARIES ${XERCESC_LIBRARY} )
+ELSE(XERCESC_FOUND)
+  SET( XERCESC_LIBRARIES )
+ENDIF(XERCESC_FOUND)
+
+MARK_AS_ADVANCED( XERCESC_LIBRARY XERCESC_INCLUDE_DIR )

Added: rl/trunk/cmake/UseSWIG.cmake
===================================================================
--- rl/trunk/cmake/UseSWIG.cmake	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/cmake/UseSWIG.cmake	2009-01-03 17:39:30 UTC (rev 4662)
@@ -0,0 +1,206 @@
+# - SWIG module for CMake
+# Defines the following macros:
+#   SWIG_ADD_MODULE(name language [ files ])
+#     - Define swig module with given name and specified language
+#   SWIG_LINK_LIBRARIES(name [ libraries ])
+#     - Link libraries to swig module
+# All other macros are for internal use only.
+# To get the actual name of the swig module,
+# use: ${SWIG_MODULE_name_REAL_NAME}.
+# Set Source files properties such as CPLUSPLUS and SWIG_FLAGS to specify
+# special behavior of SWIG. Also global CMAKE_SWIG_FLAGS can be used to add
+# special flags to all swig calls.
+# Another special variable is CMAKE_SWIG_OUTDIR, it allows one to specify
+# where to write all the swig generated module (swig -outdir option)
+# The name-specific variable SWIG_MODULE_<name>_EXTRA_DEPS may be used
+# to specify extra dependencies for the generated modules.
+#
+# This version was adapted to satisfy the special requirements of the Ruby
+# bindings for Rastullah. It is not identical to the included UseSWIG.cmake
+# file, which is bundeled with cmake.
+
+SET(SWIG_CXX_EXTENSION "cxx")
+SET(SWIG_EXTRA_LIBRARIES "")
+
+SET(SWIG_PYTHON_EXTRA_FILE_EXTENSION "py")
+
+#
+# For given swig module initialize variables associated with it
+#
+MACRO(SWIG_MODULE_INITIALIZE name language)
+  STRING(TOUPPER "${language}" swig_uppercase_language)
+  STRING(TOLOWER "${language}" swig_lowercase_language)
+  SET(SWIG_MODULE_${name}_LANGUAGE "${swig_uppercase_language}")
+  SET(SWIG_MODULE_${name}_SWIG_LANGUAGE_FLAG "${swig_lowercase_language}")
+
+  IF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xUNKNOWNx$")
+    MESSAGE(FATAL_ERROR "SWIG Error: Language \"${language}\" not found")
+  ENDIF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xUNKNOWNx$")
+
+  SET(SWIG_MODULE_${name}_REAL_NAME "${name}")
+  IF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xPYTHONx$")
+    SET(SWIG_MODULE_${name}_REAL_NAME "_${name}")
+  ENDIF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xPYTHONx$")
+  IF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xPERLx$")
+    SET(SWIG_MODULE_${name}_EXTRA_FLAGS "-shadow")
+  ENDIF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xPERLx$")
+ENDMACRO(SWIG_MODULE_INITIALIZE)
+
+#
+# For a given language, input file, and output file, determine extra files that
+# will be generated. This is internal swig macro.
+#
+
+MACRO(SWIG_GET_EXTRA_OUTPUT_FILES language outfiles generatedpath infile)
+  GET_SOURCE_FILE_PROPERTY(SWIG_GET_EXTRA_OUTPUT_FILES_module_basename
+    ${infile} SWIG_MODULE_NAME)
+  IF(SWIG_GET_EXTRA_OUTPUT_FILES_module_basename STREQUAL "NOTFOUND")
+    GET_FILENAME_COMPONENT(SWIG_GET_EXTRA_OUTPUT_FILES_module_basename "${infile}" NAME_WE)
+  ENDIF(SWIG_GET_EXTRA_OUTPUT_FILES_module_basename STREQUAL "NOTFOUND")
+  FOREACH(it ${SWIG_${language}_EXTRA_FILE_EXTENSION})
+    SET(${outfiles} ${${outfiles}}
+      "${generatedpath}/${SWIG_GET_EXTRA_OUTPUT_FILES_module_basename}.${it}")
+  ENDFOREACH(it)
+ENDMACRO(SWIG_GET_EXTRA_OUTPUT_FILES)
+
+#
+# Take swig (*.i) file and add proper custom commands for it
+#
+MACRO(SWIG_ADD_SOURCE_TO_MODULE name outfiles infile)
+  SET(swig_full_infile ${infile})
+  GET_FILENAME_COMPONENT(swig_source_file_path "${infile}" PATH)
+  GET_FILENAME_COMPONENT(swig_source_file_name_we "${infile}" NAME_WE)
+  GET_SOURCE_FILE_PROPERTY(swig_source_file_generated ${infile} GENERATED)
+  GET_SOURCE_FILE_PROPERTY(swig_source_file_cplusplus ${infile} CPLUSPLUS)
+  GET_SOURCE_FILE_PROPERTY(swig_source_file_flags ${infile} SWIG_FLAGS)
+  IF("${swig_source_file_flags}" STREQUAL "NOTFOUND")
+    SET(swig_source_file_flags "")
+  ENDIF("${swig_source_file_flags}" STREQUAL "NOTFOUND")
+  SET(swig_source_file_fullname "${infile}")
+  IF(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_SOURCE_DIR}")
+    STRING(REGEX REPLACE
+      "^${CMAKE_CURRENT_SOURCE_DIR}" ""
+      swig_source_file_relative_path
+      "${swig_source_file_path}")
+  ELSE(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_SOURCE_DIR}")
+    IF(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_BINARY_DIR}")
+      STRING(REGEX REPLACE
+        "^${CMAKE_CURRENT_BINARY_DIR}" ""
+        swig_source_file_relative_path
+        "${swig_source_file_path}")
+      SET(swig_source_file_generated 1)
+    ELSE(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_BINARY_DIR}")
+      SET(swig_source_file_relative_path "${swig_source_file_path}")
+      IF(swig_source_file_generated)
+        SET(swig_source_file_fullname "${CMAKE_CURRENT_BINARY_DIR}/${infile}")
+      ELSE(swig_source_file_generated)
+        SET(swig_source_file_fullname "${CMAKE_CURRENT_SOURCE_DIR}/${infile}")
+      ENDIF(swig_source_file_generated)
+    ENDIF(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_BINARY_DIR}")
+  ENDIF(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_SOURCE_DIR}")
+
+  SET(swig_generated_file_fullname
+    "${CMAKE_CURRENT_BINARY_DIR}")
+  IF(swig_source_file_relative_path)
+    SET(swig_generated_file_fullname
+      "${swig_generated_file_fullname}/${swig_source_file_relative_path}")
+  ENDIF(swig_source_file_relative_path)
+  # If CMAKE_SWIG_OUTDIR was specified then pass it to -outdir
+  IF(CMAKE_SWIG_OUTDIR)
+    SET(swig_outdir ${CMAKE_SWIG_OUTDIR})
+  ELSE(CMAKE_SWIG_OUTDIR)
+    SET(swig_outdir ${CMAKE_CURRENT_BINARY_DIR})
+  ENDIF(CMAKE_SWIG_OUTDIR)
+  SWIG_GET_EXTRA_OUTPUT_FILES(${SWIG_MODULE_${name}_LANGUAGE}
+    swig_extra_generated_files
+    "${swig_outdir}"
+    "${infile}")
+  # add the language into the name of the file (i.e. TCL_wrap)
+  # this allows for the same .i file to be wrapped into different languages
+  SET(swig_generated_file_fullname
+    "${swig_source_file_name_we}${SWIG_MODULE_${name}_LANGUAGE}_wrap")
+
+  IF(swig_source_file_cplusplus)
+    SET(swig_generated_file_fullname
+      "${swig_generated_file_fullname}.${SWIG_CXX_EXTENSION}")
+  ELSE(swig_source_file_cplusplus)
+    SET(swig_generated_file_fullname
+      "${swig_generated_file_fullname}.c")
+  ENDIF(swig_source_file_cplusplus)
+
+  #MESSAGE("Full path to source file: ${swig_source_file_fullname}")
+  #MESSAGE("Full path to the output file: ${swig_generated_file_fullname}")
+  GET_DIRECTORY_PROPERTY(cmake_include_directories INCLUDE_DIRECTORIES)
+  SET(swig_include_dirs)
+  FOREACH(it ${cmake_include_directories})
+    SET(swig_include_dirs ${swig_include_dirs} "-I${it}")
+  ENDFOREACH(it)
+
+  SET(swig_special_flags)
+  # default is c, so add c++ flag if it is c++
+  IF(swig_source_file_cplusplus)
+    SET(swig_special_flags ${swig_special_flags} "-c++")
+  ENDIF(swig_source_file_cplusplus)
+  SET(swig_extra_flags)
+  IF(SWIG_MODULE_${name}_EXTRA_FLAGS)
+    SET(swig_extra_flags ${swig_extra_flags} ${SWIG_MODULE_${name}_EXTRA_FLAGS})
+  ENDIF(SWIG_MODULE_${name}_EXTRA_FLAGS)
+  ADD_CUSTOM_COMMAND(
+    OUTPUT "${swig_generated_file_fullname}" ${swig_extra_generated_files}
+    COMMAND "${SWIG_EXECUTABLE}"
+    ARGS "-${SWIG_MODULE_${name}_SWIG_LANGUAGE_FLAG}"
+    ${swig_source_file_flags}
+    ${CMAKE_SWIG_FLAGS}
+    -outdir ${swig_outdir}
+    ${swig_special_flags}
+    ${swig_extra_flags}
+    ${swig_include_dirs}
+    -o "${swig_generated_file_fullname}"
+    "${swig_source_file_fullname}"
+    MAIN_DEPENDENCY "${swig_source_file_fullname}"
+    DEPENDS ${SWIG_MODULE_${name}_EXTRA_DEPS}
+    COMMENT "Swig source")
+  SET_SOURCE_FILES_PROPERTIES("${swig_generated_file_fullname}" ${swig_extra_generated_files}
+    PROPERTIES GENERATED 1)
+  SET(${outfiles} "${swig_generated_file_fullname}" ${swig_extra_generated_files})
+ENDMACRO(SWIG_ADD_SOURCE_TO_MODULE)
+
+#
+# Create Swig module
+#
+MACRO(SWIG_ADD_MODULE name language)
+  SWIG_MODULE_INITIALIZE(${name} ${language})
+  SET(swig_dot_i_sources)
+  SET(swig_other_sources)
+  FOREACH(it ${ARGN})
+    IF(${it} MATCHES ".*\\.i$")
+      SET(swig_dot_i_sources ${swig_dot_i_sources} "${it}")
+    ELSE(${it} MATCHES ".*\\.i$")
+      SET(swig_other_sources ${swig_other_sources} "${it}")
+    ENDIF(${it} MATCHES ".*\\.i$")
+  ENDFOREACH(it)
+
+  SET(swig_generated_sources)
+  FOREACH(it ${swig_dot_i_sources})
+    SWIG_ADD_SOURCE_TO_MODULE(${name} swig_generated_source ${it})
+    SET(swig_generated_sources ${swig_generated_sources} "${swig_generated_source}")
+  ENDFOREACH(it)
+  GET_DIRECTORY_PROPERTY(swig_extra_clean_files ADDITIONAL_MAKE_CLEAN_FILES)
+  SET_DIRECTORY_PROPERTIES(PROPERTIES
+    ADDITIONAL_MAKE_CLEAN_FILES "${swig_extra_clean_files};${swig_generated_sources}")
+  ADD_LIBRARY(${SWIG_MODULE_${name}_REAL_NAME}
+    SHARED
+    ${swig_generated_sources}
+    ${swig_other_sources})
+ENDMACRO(SWIG_ADD_MODULE)
+
+#
+# Like TARGET_LINK_LIBRARIES but for swig modules
+#
+MACRO(SWIG_LINK_LIBRARIES name)
+  IF(SWIG_MODULE_${name}_REAL_NAME)
+    TARGET_LINK_LIBRARIES(${SWIG_MODULE_${name}_REAL_NAME} ${ARGN})
+  ELSE(SWIG_MODULE_${name}_REAL_NAME)
+    MESSAGE(SEND_ERROR "Cannot find Swig library \"${name}\".")
+  ENDIF(SWIG_MODULE_${name}_REAL_NAME)
+ENDMACRO(SWIG_LINK_LIBRARIES name)

Modified: rl/trunk/engine/ai/CMakeLists.txt
===================================================================
--- rl/trunk/engine/ai/CMakeLists.txt	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/engine/ai/CMakeLists.txt	2009-01-03 17:39:30 UTC (rev 4662)
@@ -5,7 +5,8 @@
 ${RL_RULES_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
 ${CEGUI_INCLUDE_DIRS}
-${OGRENEWT_INCLUDE_DIRS})
+${OGRENEWT_INCLUDE_DIRS}
+${OPENSTEER_INCLUDE_DIR})
 
 SET(RlAi_LIB_SRCS
 src/Agent.cpp
@@ -26,6 +27,7 @@
 src/DialogElement.cpp
 src/DialogImplication.cpp
 src/DialogLoader.cpp
+src/DialogLoaderImpl.cpp
 src/DialogManager.cpp
 src/DialogOption.cpp
 src/DialogParagraph.cpp
@@ -45,9 +47,11 @@
 
 ADD_LIBRARY(RlAi SHARED ${RlAi_LIB_SRCS})
 
-TARGET_LINK_LIBRARIES(RlAi ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARIES})
+TARGET_LINK_LIBRARIES(RlAi ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARIES} ${OPENSTEER_LIBRARY})
 
 SET_TARGET_PROPERTIES(RlAi PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLAI_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLAI_EXPORTS)
+
+INSTALL(TARGETS RlAi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Modified: rl/trunk/engine/ai/include/DialogLoaderImpl.h
===================================================================
--- rl/trunk/engine/ai/include/DialogLoaderImpl.h	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/engine/ai/include/DialogLoaderImpl.h	2009-01-03 17:39:30 UTC (rev 4662)
@@ -76,4 +76,5 @@
         std::map<Ogre::String, DialogPrototype*> mDialogs;
 
     };
-}
\ No newline at end of file
+}
+

Modified: rl/trunk/engine/common/CMakeLists.txt
===================================================================
--- rl/trunk/engine/common/CMakeLists.txt	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/engine/common/CMakeLists.txt	2009-01-03 17:39:30 UTC (rev 4662)
@@ -1,5 +1,6 @@
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include
+${XERCESC_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
 ${CEGUI_INCLUDE_DIRS})
 
@@ -25,9 +26,11 @@
 
 ADD_LIBRARY(RlCommon SHARED ${RlCommon_LIB_SRCS})
 
-TARGET_LINK_LIBRARIES(RlCommon ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES})
+TARGET_LINK_LIBRARIES(RlCommon ${XERCESC_LIBRARIES} ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${Boost_FILESYSTEM_LIBRARY})
 
 SET_TARGET_PROPERTIES(RlCommon PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLCOMMON_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLCOMMON_EXPORTS)
+
+INSTALL(TARGETS RlCommon LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Modified: rl/trunk/engine/common/include/WriteableDataStreamFormatTarget.h
===================================================================
--- rl/trunk/engine/common/include/WriteableDataStreamFormatTarget.h	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/engine/common/include/WriteableDataStreamFormatTarget.h	2009-01-03 17:39:30 UTC (rev 4662)
@@ -29,4 +29,5 @@
     protected:
         WriteableDataStreamPtr mStream;
     };
-}
\ No newline at end of file
+}
+

Modified: rl/trunk/engine/core/CMakeLists.txt
===================================================================
--- rl/trunk/engine/core/CMakeLists.txt	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/engine/core/CMakeLists.txt	2009-01-03 17:39:30 UTC (rev 4662)
@@ -87,6 +87,8 @@
 src/nulldriver/NullSound.cpp
 src/nulldriver/NullSoundStitching.cpp)
 
+ADD_DEFINITIONS(-DRL_MODULEDIR="${DATAROOTDIR}/${DATADIRNAME}")
+
 ADD_LIBRARY(RlCore SHARED ${RlCore_LIB_SRCS})
 
 TARGET_LINK_LIBRARIES(RlCore ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARY} ${MESHMAGICK_LIBRARY} ${OIS_LIBRARIES} ${RUBY_LIBRARY})
@@ -94,4 +96,6 @@
 SET_TARGET_PROPERTIES(RlCore PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLCORE_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLCORE_EXPORTS)
+
+INSTALL(TARGETS RlCore LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Modified: rl/trunk/engine/rules/CMakeLists.txt
===================================================================
--- rl/trunk/engine/rules/CMakeLists.txt	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/engine/rules/CMakeLists.txt	2009-01-03 17:39:30 UTC (rev 4662)
@@ -81,4 +81,6 @@
 SET_TARGET_PROPERTIES(RlRules PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLRULES_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLRULES_EXPORTS)
+
+INSTALL(TARGETS RlRules LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Added: rl/trunk/engine/script/CMakeLists.txt
===================================================================
--- rl/trunk/engine/script/CMakeLists.txt	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/engine/script/CMakeLists.txt	2009-01-03 17:39:30 UTC (rev 4662)
@@ -0,0 +1,51 @@
+# Include required cmake macros
+INCLUDE(UseSWIG)
+
+INCLUDE_DIRECTORIES(
+${CMAKE_CURRENT_SOURCE_DIR}/include
+${RL_COMMON_INCLUDE_DIR}
+${RL_CORE_INCLUDE_DIR}
+${RL_RULES_INCLUDE_DIR}
+${RL_AI_INCLUDE_DIR}
+${RL_UI_INCLUDE_DIR}
+${OGRE_INCLUDE_DIRS}
+${CEGUI_INCLUDE_DIRS}
+${OGRENEWT_INCLUDE_DIR}
+${OIS_INCLUDE_DIRS}
+${RUBY_INCLUDE_PATH})
+
+SET_SOURCE_FILES_PROPERTIES(swig/RlExports.i PROPERTIES CPLUSPLUS ON)
+
+SWIG_ADD_MODULE(RlScript RUBY
+swig/RlExports.i
+src/AbstractMapNodeProcessor.cpp
+src/EntityNodeProcessor.cpp
+src/EnvironmentProcessor.cpp
+src/GameObjectNodeProcessor.cpp
+src/LightNodeProcessor.cpp
+src/MapLoader.cpp
+src/ParticleSystemNodeProcessor.cpp
+src/PlaneNodeProcessor.cpp
+src/Scene.cpp
+src/SceneLoader.cpp
+src/SceneManager.cpp
+src/ScriptSubsystem.cpp
+src/ScriptObjectMarker.cpp
+src/SoundNodeProcessor.cpp
+src/TriggerFactory.cpp
+src/WaypointProcessor.cpp
+src/ZoneProcessor.cpp)
+
+SWIG_LINK_LIBRARIES(RlScript ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARY} ${OIS_LIBRARIES} ${RUBY_LIBRARY})
+
+SET_TARGET_PROPERTIES(RlScript PROPERTIES
+	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}
+	DEFINE_SYMBOL RLSCRIPT_EXPORTS)
+
+IF(NOT WIN32)
+	SET_TARGET_PROPERTIES(RlScript PROPERTIES
+		LINK_FLAGS "-Wl,--defsym -Wl,Init_libRlScript=Init_RlScript")
+ENDIF(NOT WIN32)
+
+INSTALL(TARGETS RlScript LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Modified: rl/trunk/engine/script/src/Scene.cpp
===================================================================
--- rl/trunk/engine/script/src/Scene.cpp	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/engine/script/src/Scene.cpp	2009-01-03 17:39:30 UTC (rev 4662)
@@ -125,4 +125,5 @@
     return keys;
 }
 
-}
\ No newline at end of file
+}
+

Added: rl/trunk/engine/startup/CMakeLists.txt
===================================================================
--- rl/trunk/engine/startup/CMakeLists.txt	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/engine/startup/CMakeLists.txt	2009-01-03 17:39:30 UTC (rev 4662)
@@ -0,0 +1,20 @@
+INCLUDE_DIRECTORIES(
+${RL_COMMON_INCLUDE_DIR}
+${RL_CORE_INCLUDE_DIR}
+${RL_RULES_INCLUDE_DIR}
+${RL_AI_INCLUDE_DIR}
+${RL_UI_INCLUDE_DIR}
+${RL_SCRIPT_INCLUDE_DIR}
+${OGRE_INCLUDE_DIRS}
+${CEGUI_INCLUDE_DIRS}
+${OGRENEWT_INCLUDE_DIR}
+${OIS_INCLUDE_DIRS})
+
+SET(Rastullah_APP_SRCS
+src/RastullahMain.cpp)
+
+ADD_EXECUTABLE(rastullah ${Rastullah_APP_SRCS})
+
+TARGET_LINK_LIBRARIES(rastullah RlCommon RlCore RlRules RlAi RlUi RlScript)
+
+INSTALL(TARGETS rastullah RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/${BINDIR})
\ No newline at end of file

Modified: rl/trunk/engine/ui/CMakeLists.txt
===================================================================
--- rl/trunk/engine/ui/CMakeLists.txt	2009-01-03 12:24:31 UTC (rev 4661)
+++ rl/trunk/engine/ui/CMakeLists.txt	2009-01-03 17:39:30 UTC (rev 4662)
@@ -5,15 +5,17 @@
 ${RL_RULES_INCLUDE_DIR}
 ${RL_AI_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
+${OIS_INCLUDE_DIRS}
 ${CEGUI_INCLUDE_DIRS}
+${CEGUIOGRE_INCLUDE_DIR}
 ${OGRENEWT_INCLUDE_DIR}
-${OIS_INCLUDE_DIRS}
 ${RUBY_INCLUDE_PATH})
 
 SET(RlUi_LIB_SRCS
 src/AboutWindow.cpp
 src/ActionChoiceWindow.cpp
 src/AbstractWindow.cpp
+src/CharacterSelectionWindow.cpp
 src/CharacterSheetWindow.cpp
 src/CharacterStateWindow.cpp
 src/CloseConfirmationWindow.cpp
@@ -65,9 +67,11 @@
 
 ADD_LIBRARY(RlUi SHARED ${RlUi_LIB_SRCS})
 
-TARGET_LINK_LIBRARIES(RlUi ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARY} ${RUBY_LIBRARY})
+TARGET_LINK_LIBRARIES(RlUi ${OGRE_LIBRARIES} ${OIS_LIBRARIES} ${CEGUI_LIBRARIES} ${CEGUIOGRE_LIBRARY} ${OGRENEWT_LIBRARY} ${RUBY_LIBRARY})
 
 SET_TARGET_PROPERTIES(RlUi PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLRULES_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLRULES_EXPORTS)
+
+INSTALL(TARGETS RlUi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file



From chrber at mail.berlios.de  Sat Jan  3 20:16:18 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 3 Jan 2009 20:16:18 +0100
Subject: [Dsa-hl-svn] r4663 - in dependencies/OgreNewt: . cmake
Message-ID: <200901031916.n03JGI3e018368@sheep.berlios.de>

Author: chrber
Date: 2009-01-03 20:16:16 +0100 (Sat, 03 Jan 2009)
New Revision: 4663

Modified:
   dependencies/OgreNewt/CMakeLists.txt
   dependencies/OgreNewt/cmake/FindNewton.cmake
   dependencies/OgreNewt/configure.in
Log:
Bumped OgreNewt version to 1.53 to be in sync with required Newton version
Added version extraction to Newton cmake macro


Modified: dependencies/OgreNewt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt/CMakeLists.txt	2009-01-03 17:39:30 UTC (rev 4662)
+++ dependencies/OgreNewt/CMakeLists.txt	2009-01-03 19:16:16 UTC (rev 4663)
@@ -6,9 +6,9 @@
 INCLUDE(FeatureSummary)
 
 # Version information
-SET(OgreNewt_MAJOR_VERSION 0)
-SET(OgreNewt_MINOR_VERSION 0)
-SET(OgreNewt_PATCH_VERSION 7)
+SET(OgreNewt_MAJOR_VERSION 1)
+SET(OgreNewt_MINOR_VERSION 5)
+SET(OgreNewt_PATCH_VERSION 3)
 
 # Add directory with OgreNewt's own macro definitions
 # (checked before ${CMAKE_ROOT}/Modules)
@@ -17,7 +17,7 @@
 # Check for required components
 FIND_PACKAGE(PkgConfig)
 FIND_PACKAGE(OGRE 1.4 REQUIRED)
-FIND_PACKAGE(Newton REQUIRED)
+FIND_PACKAGE(Newton 1.53 REQUIRED)
 
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include/OgreNewt

Modified: dependencies/OgreNewt/cmake/FindNewton.cmake
===================================================================
--- dependencies/OgreNewt/cmake/FindNewton.cmake	2009-01-03 17:39:30 UTC (rev 4662)
+++ dependencies/OgreNewt/cmake/FindNewton.cmake	2009-01-03 19:16:16 UTC (rev 4663)
@@ -46,14 +46,46 @@
              PATHS ${NEWTON_LIBRARY_SEARCH_DIRS}
              PATH_SUFFIXES ${NEWTON_LIB_DIR_SUFFIXES})
 
+SET(NEWTON_INCLUDE_DIR ${NEWTON_INCLUDE_DIR} CACHE STRING "Directory containing Newton header files")
+SET(NEWTON_LIBRARY ${NEWTON_LIBRARY} CACHE STRING "Library name of Newton library")
+
 IF(NEWTON_INCLUDE_DIR AND NEWTON_LIBRARY)
 	SET(NEWTON_FOUND TRUE)
 ENDIF(NEWTON_INCLUDE_DIR AND NEWTON_LIBRARY)
 
+IF(NEWTON_INCLUDE_DIR)
+	# Extract the library version from the header file
+	FILE(READ "${NEWTON_INCLUDE_DIR}/Newton.h" _NEWTON_NEWTON_H_CONTENTS)
+	STRING(REGEX REPLACE ".*#define NEWTON_MAJOR_VERSION ([0-9]+).*" "\\1"
+	       NEWTON_MAJOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
+	STRING(REGEX REPLACE ".*#define NEWTON_MINOR_VERSION ([0-9]+).*" "\\1"
+	       NEWTON_MINOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
+	IF(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+		SET(NEWTON_VERSION "${NEWTON_MAJOR_VERSION}.${NEWTON_MINOR_VERSION}")
+	ELSE(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+		# We assume Newton 1.53
+		SET(NEWTON_VERSION "1.53")
+	ENDIF(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+
+	# Compare installed and required version
+	IF(Newton_FIND_VERSION)
+		# Major and minor version are required
+		IF(NOT DEFINED Newton_FIND_VERSION_MINOR)
+			MESSAGE(SEND_ERROR "When requesting a specific version of Newton, you must provide at least the major and minor version numbers, e.g., 2.0")
+		ENDIF(NOT DEFINED Newton_FIND_VERSION_MINOR)
+
+		IF ("${NEWTON_VERSION}" VERSION_LESS "${Newtion_FIND_VERSION}")
+			SET(NEWTON_FOUND FALSE)
+			MESSAGE(STATUS "Detected version of Newton ${NEWTON_VERSION} is too old. At least version ${Newton_FIND_VERSION} is required.")
+		ENDIF("${NEWTON_VERSION}" VERSION_LESS "${Newtion_FIND_VERSION}")
+	ENDIF(Newton_FIND_VERSION)
+ENDIF(NEWTON_INCLUDE_DIR)
+
 IF(NEWTON_FOUND)
 	IF(NOT NEWTON_FIND_QUIETLY)
 		MESSAGE(STATUS "  libraries: ${NEWTON_LIBRARY}")
 		MESSAGE(STATUS "  includes: ${NEWTON_INCLUDE_DIR}")
+		MESSAGE(STATUS "  version: ${NEWTON_VERSION}")
 	ENDIF(NOT NEWTON_FIND_QUIETLY)
 ELSE(NEWTON_FOUND)
 	IF(NOT NEWTON_LIBRARY)

Modified: dependencies/OgreNewt/configure.in
===================================================================
--- dependencies/OgreNewt/configure.in	2009-01-03 17:39:30 UTC (rev 4662)
+++ dependencies/OgreNewt/configure.in	2009-01-03 19:16:16 UTC (rev 4663)
@@ -2,7 +2,7 @@
 # Process this file with autoconf to produce a configure script.
 
 AC_PREREQ(2.50)
-AC_INIT(OgreNewt, 0.07)
+AC_INIT(OgreNewt, 1.53)
 AC_CONFIG_SRCDIR([config.h.in])
 AC_CONFIG_HEADER([config.h])
 AM_INIT_AUTOMAKE([1.6.1 foreign no-installinfo no-installman subdir-objects])



From chrber at mail.berlios.de  Sat Jan  3 20:20:21 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 3 Jan 2009 20:20:21 +0100
Subject: [Dsa-hl-svn] r4664 - in dependencies/OgreNewt_ngt: . cmake
Message-ID: <200901031920.n03JKL19018719@sheep.berlios.de>

Author: chrber
Date: 2009-01-03 20:20:18 +0100 (Sat, 03 Jan 2009)
New Revision: 4664

Added:
   dependencies/OgreNewt_ngt/CMakeLists.txt
   dependencies/OgreNewt_ngt/OgreNewt.pc.cmake
   dependencies/OgreNewt_ngt/cmake/
   dependencies/OgreNewt_ngt/cmake/FindNewton.cmake
   dependencies/OgreNewt_ngt/cmake/FindOGRE.cmake
Log:
Added infrastructure to build OgreNewt_ngt using cmake


Added: dependencies/OgreNewt_ngt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-03 19:16:16 UTC (rev 4663)
+++ dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-03 19:20:18 UTC (rev 4664)
@@ -0,0 +1,74 @@
+PROJECT(OgreNewt)
+
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
+
+# Include required cmake macros
+INCLUDE(FeatureSummary)
+
+# Version information
+SET(OgreNewt_MAJOR_VERSION 2)
+SET(OgreNewt_MINOR_VERSION 0)
+SET(OgreNewt_PATCH_VERSION 0)
+
+# Add directory with OgreNewt's own macro definitions
+# (checked before ${CMAKE_ROOT}/Modules)
+SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
+
+# Check for required components
+FIND_PACKAGE(PkgConfig)
+FIND_PACKAGE(OGRE 1.4 REQUIRED)
+FIND_PACKAGE(Newton 2.0 REQUIRED)
+
+INCLUDE_DIRECTORIES(
+${CMAKE_CURRENT_SOURCE_DIR}/inc
+${OGRE_INCLUDE_DIRS}
+${NEWTON_INCLUDE_DIR})
+
+SET(OgreNewt_LIB_SRCS
+src/OgreNewt_BasicFrameListener.cpp
+src/OgreNewt_BasicJoints.cpp
+src/OgreNewt_Body.cpp
+src/OgreNewt_Collision.cpp
+src/OgreNewt_CollisionPrimitives.cpp
+src/OgreNewt_CollisionSerializer.cpp
+src/OgreNewt_ContactCallback.cpp
+src/OgreNewt_Debugger.cpp
+src/OgreNewt_Joint.cpp
+src/OgreNewt_MaterialID.cpp
+src/OgreNewt_MaterialPair.cpp
+src/OgreNewt_RayCast.cpp
+src/OgreNewt_Tools.cpp
+src/OgreNewt_Vehicle.cpp
+src/OgreNewt_World.cpp)
+
+ADD_LIBRARY(OgreNewt SHARED ${OgreNewt_LIB_SRCS})
+
+TARGET_LINK_LIBRARIES(OgreNewt ${OGRE_LIBRARIES} ${NEWTON_LIBRARY})
+
+SET_TARGET_PROPERTIES(OgreNewt PROPERTIES
+	VERSION ${OgreNewt_MAJOR_VERSION}.${OgreNewt_MINOR_VERSION}.${OgreNewt_PATCH_VERSION}
+	SOVERSION ${OgreNewt_MAJOR_VERSION}
+	DEFINE_SYMBOL _OGRENEWT_EXPORTS)
+
+CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/OgreNewt.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/OgreNewt.pc)
+
+INSTALL(TARGETS OgreNewt
+        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
+        RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
+        ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
+
+INSTALL(FILES inc/OgreNewt_BasicFrameListener.h inc/OgreNewt_BasicJoints.h
+inc/OgreNewt_Body.h inc/OgreNewt_BodyIterator.h inc/OgreNewt_Collision.h
+inc/OgreNewt_CollisionPrimitives.h inc/OgreNewt_CollisionSerializer.h
+inc/OgreNewt_ContactCallback.h inc/OgreNewt_Debugger.h inc/OgreNewt.h
+inc/OgreNewt_Joint.h inc/OgreNewt_MaterialID.h inc/OgreNewt_MaterialPair.h
+inc/OgreNewt_Prerequisites.h inc/OgreNewt_RayCast.h inc/OgreNewt_Tools.h
+inc/OgreNewt_Vehicle.h inc/OgreNewt_World.h
+DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
+
+IF(NOT WIN32)
+	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/OgreNewt.pc
+	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
+ENDIF(NOT WIN32)
+
+PRINT_ENABLED_FEATURES()
\ No newline at end of file

Added: dependencies/OgreNewt_ngt/OgreNewt.pc.cmake
===================================================================
--- dependencies/OgreNewt_ngt/OgreNewt.pc.cmake	2009-01-03 19:16:16 UTC (rev 4663)
+++ dependencies/OgreNewt_ngt/OgreNewt.pc.cmake	2009-01-03 19:20:18 UTC (rev 4664)
@@ -0,0 +1,11 @@
+prefix=${CMAKE_INSTALL_PREFIX}
+exec_prefix=${CMAKE_INSTALL_PREFIX}
+libdir=${CMAKE_INSTALL_PREFIX}/lib
+includedir=${CMAKE_INSTALL_PREFIX}/include/OgreNewt
+
+Name: OgreNewt
+Description: Ogre Bindings for the Newton Physics SDK
+Requires: OGRE >= 1.4
+Version: ${OgreNewt_MAJOR_VERSION}.${OgreNewt_MINOR_VERSION}.${OgreNewt_PATCH_VERSION}
+Libs: -L${CMAKE_INSTALL_PREFIX}/lib -lOgreNewt
+Cflags: -I${CMAKE_INSTALL_PREFIX}/include/OgreNewt

Added: dependencies/OgreNewt_ngt/cmake/FindNewton.cmake
===================================================================
--- dependencies/OgreNewt_ngt/cmake/FindNewton.cmake	2009-01-03 19:16:16 UTC (rev 4663)
+++ dependencies/OgreNewt_ngt/cmake/FindNewton.cmake	2009-01-03 19:20:18 UTC (rev 4664)
@@ -0,0 +1,97 @@
+# Find Newton
+#
+# This module defines
+#  NEWTON_FOUND
+#  NEWTON_INCLUDE_DIR
+#  NEWTON_LIBRARY
+#
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+# On a new cmake run, we do not need to be verbose
+IF(NEWTON_INCLUDE_DIR AND NEWTON_LIBRARY)
+	SET(NEWTON_FIND_QUIETLY TRUE)
+ENDIF(NEWTON_INCLUDE_DIR AND NEWTON_LIBRARY)
+
+IF(WIN32)
+
+ELSE(WIN32)
+	SET(NEWTON_INCLUDE_SEARCH_DIRS
+	    /usr/include
+	    /usr/local/include
+	    /opt/newton/include
+	    /opt/include INTERNAL)
+	SET(NEWTON_LIBRARY_SEARCH_DIRS
+	    /usr/lib
+	    /usr/lib64
+	    /usr/local/lib
+	    /usr/local/lib64
+	    /opt/newton/lib
+	    /opt/newton/lib64 INTERNAL)
+	SET(NEWTON_INC_DIR_SUFFIXES PATH_SUFFIXES newton)
+ENDIF(WIN32)
+
+IF (NOT NEWTON_FIND_QUIETLY)
+	MESSAGE(STATUS "Checking for Newton")
+ENDIF(NOT NEWTON_FIND_QUIETLY)
+
+# Search for header files and libraries
+FIND_PATH(NEWTON_INCLUDE_DIR Newton.h
+          PATHS ${NEWTON_INCLUDE_SEARCH_DIRS}
+          PATH_SUFFIXES ${NEWTON_INC_DIR_SUFFIXES})
+
+FIND_LIBRARY(NEWTON_LIBRARY Newton
+             PATHS ${NEWTON_LIBRARY_SEARCH_DIRS}
+             PATH_SUFFIXES ${NEWTON_LIB_DIR_SUFFIXES})
+
+SET(NEWTON_INCLUDE_DIR ${NEWTON_INCLUDE_DIR} CACHE STRING "Directory containing Newton header files")
+SET(NEWTON_LIBRARY ${NEWTON_LIBRARY} CACHE STRING "Library name of Newton library")
+
+IF(NEWTON_INCLUDE_DIR AND NEWTON_LIBRARY)
+	SET(NEWTON_FOUND TRUE)
+ENDIF(NEWTON_INCLUDE_DIR AND NEWTON_LIBRARY)
+
+IF(NEWTON_INCLUDE_DIR)
+	# Extract the library version from the header file
+	FILE(READ "${NEWTON_INCLUDE_DIR}/Newton.h" _NEWTON_NEWTON_H_CONTENTS)
+	STRING(REGEX REPLACE ".*#define NEWTON_MAJOR_VERSION ([0-9]+).*" "\\1"
+	       NEWTON_MAJOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
+	STRING(REGEX REPLACE ".*#define NEWTON_MINOR_VERSION ([0-9]+).*" "\\1"
+	       NEWTON_MINOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
+	IF(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+		SET(NEWTON_VERSION "${NEWTON_MAJOR_VERSION}.${NEWTON_MINOR_VERSION}")
+	ELSE(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+		# We assume Newton 1.53
+		SET(NEWTON_VERSION "1.53")
+	ENDIF(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+
+	# Compare installed and required version
+	IF(Newton_FIND_VERSION)
+		# Major and minor version are required
+		IF(NOT DEFINED Newton_FIND_VERSION_MINOR)
+			MESSAGE(SEND_ERROR "When requesting a specific version of Newton, you must provide at least the major and minor version numbers, e.g., 2.0")
+		ENDIF(NOT DEFINED Newton_FIND_VERSION_MINOR)
+
+		IF ("${NEWTON_VERSION}" VERSION_LESS "${Newtion_FIND_VERSION}")
+			SET(NEWTON_FOUND FALSE)
+			MESSAGE(STATUS "Detected version of Newton ${NEWTON_VERSION} is too old. At least version ${Newton_FIND_VERSION} is required.")
+		ENDIF("${NEWTON_VERSION}" VERSION_LESS "${Newtion_FIND_VERSION}")
+	ENDIF(Newton_FIND_VERSION)
+ENDIF(NEWTON_INCLUDE_DIR)
+
+IF(NEWTON_FOUND)
+	IF(NOT NEWTON_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries: ${NEWTON_LIBRARY}")
+		MESSAGE(STATUS "  includes: ${NEWTON_INCLUDE_DIR}")
+		MESSAGE(STATUS "  version: ${NEWTON_VERSION}")
+	ENDIF(NOT NEWTON_FIND_QUIETLY)
+ELSE(NEWTON_FOUND)
+	IF(NOT NEWTON_LIBRARY)
+		MESSAGE(SEND_ERROR, "Newton library could not be found.")
+	ENDIF(NOT NEWTON_LIBRARY)
+	IF(NOT NEWTON_INCLUDE_DIR)
+		MESSAGE(SEND_ERROR "Newton include files could not be found.")
+	ENDIF(NOT NEWTON_INCLUDE_DIR)
+ENDIF(NEWTON_FOUND)
\ No newline at end of file

Added: dependencies/OgreNewt_ngt/cmake/FindOGRE.cmake
===================================================================
--- dependencies/OgreNewt_ngt/cmake/FindOGRE.cmake	2009-01-03 19:16:16 UTC (rev 4663)
+++ dependencies/OgreNewt_ngt/cmake/FindOGRE.cmake	2009-01-03 19:20:18 UTC (rev 4664)
@@ -0,0 +1,102 @@
+# Find OGRE includes and library
+#
+# This module defines
+#  OGRE_INCLUDE_DIRS
+#  OGRE_LIBRARIES, the libraries to link against to use OGRE.
+#  OGRE_LIBRARY_DIRS, the location of the libraries
+#  OGRE_FOUND, If false, do not try to use OGRE
+#
+# Copyright ? 2007-2008, Matt Williams
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+IF (OGRE_LIBRARIES AND OGRE_INCLUDE_DIRS)
+	SET(OGRE_FIND_QUIETLY TRUE) # Already in cache, be silent
+ENDIF (OGRE_LIBRARIES AND OGRE_INCLUDE_DIRS)
+
+#Set the library and include search paths
+#SET(OGRESDK $ENV{OGRE_HOME})
+#STRING(REGEX REPLACE "[\\]" "/" OGRESDK "${OGRESDK}")
+FILE(TO_CMAKE_PATH "$ENV{OGRE_HOME}" OGRESDK)
+SET(OGRE_INCLUDE_SEARCH_DIRS #                 this <-
+	${INCLUDE_SEARCH_DIRS} #TODO Cache this, not ^
+	${CMAKE_LIBRARY_PATH}
+	/usr/include/OGRE
+	/usr/local/include/OGRE
+	/opt/include/OGRE
+	/opt/OGRE/include
+	${OGRESDK}/include
+	${OGRESDK}/OgreMain/include
+	CACHE STRING ""
+)
+
+SET(OGRE_LIBRARY_SEARCH_DIRS
+	${LIBRARY_SEARCH_DIRS}
+	${CMAKE_LIBRARY_PATH}
+	/usr/lib
+	/usr/lib64
+	/usr/local/lib
+	/usr/local/lib64
+	/opt/lib
+	/opt/lib64
+	/opt/OGRE/lib
+	/opt/OGRE/lib64
+	${OGRESDK}/lib
+	${OGRESDK}/lib64
+	CACHE STRING ""
+)
+
+# Allow to set Ogre plugin path manually
+SET(OGRE_PLUGINDIR "" CACHE STRING "Ogre plugin directory")
+
+#Search for the headers and libraries
+IF (WIN32) #Windows
+	MESSAGE(STATUS "Looking for OGRE")
+	FIND_PATH(OGRE_INCLUDE_DIRS Ogre.h ${OGRE_INCLUDE_SEARCH_DIRS})
+	FIND_LIBRARY(OGRE_LIBRARIES debug OgreMain_d optimized OgreMain PATHS ${OGRE_LIBRARY_SEARCH_DIRS})
+ELSE (WIN32) #Unix/OSX
+	FIND_PACKAGE(PkgConfig)
+	IF(PKG_CONFIG_FOUND)
+		PKG_SEARCH_MODULE(OGRE OGRE)
+		IF(NOT PKGCONFIG_FAILED)
+			_PKGCONFIG_INVOKE(OGRE "OGRE" PLUGINDIR "" --variable=plugindir)
+			ADD_DEFINITIONS(-DOGRE_PLUGINDIR="${OGRE_PLUGINDIR}")
+		ENDIF(NOT PKGCONFIG_FAILED)
+		SET(OGRE_INCLUDE_DIRS ${OGRE_INCLUDE_DIRS})
+		SET(OGRE_LIBRARY_DIRS ${OGRE_LIBDIR})
+		SET(OGRE_LIBRARIES ${OGRE_LIBRARIES} CACHE STRING "")
+	ENDIF(PKG_CONFIG_FOUND)
+	IF(NOT OGRE_FOUND) #If PkgConfig couldn't find OGRE...
+		IF (NOT OGRE_FIND_QUIETLY)
+			MESSAGE(STATUS " Manually searching for OGRE")
+		ENDIF (NOT OGRE_FIND_QUIETLY)
+		FIND_PATH(OGRE_INCLUDE_DIRS Ogre.h ${OGRE_INCLUDE_SEARCH_DIRS})
+		FIND_LIBRARY(OGRE_LIBRARIES OgreMain PATHS ${OGRE_LIBRARY_SEARCH_DIRS})
+	ENDIF(NOT OGRE_FOUND)
+ENDIF (WIN32)
+
+#Do some preparation
+SEPARATE_ARGUMENTS(OGRE_INCLUDE_DIRS)
+SEPARATE_ARGUMENTS(OGRE_LIBRARIES)
+
+SET(OGRE_INCLUDE_DIRS ${OGRE_INCLUDE_DIRS})
+SET(OGRE_LIBRARIES ${OGRE_LIBRARIES})
+SET(OGRE_LIBRARY_DIRS ${OGRE_LIBRARY_DIRS})
+
+MARK_AS_ADVANCED(OGRE_INCLUDE_DIRS OGRE_LIBRARIES OGRE_LIBRARY_DIRS) #So they don't show in the default GUI
+
+IF (OGRE_INCLUDE_DIRS AND OGRE_LIBRARIES)
+	SET(OGRE_FOUND TRUE)
+ENDIF (OGRE_INCLUDE_DIRS AND OGRE_LIBRARIES)
+
+IF (OGRE_FOUND)
+	IF (NOT OGRE_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries : ${OGRE_LIBRARIES} from ${OGRE_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes  : ${OGRE_INCLUDE_DIRS}")
+	ENDIF (NOT OGRE_FIND_QUIETLY)
+ELSE (OGRE_FOUND)
+	IF (OGRE_FIND_REQUIRED)
+		MESSAGE(FATAL_ERROR "Could not find OGRE. Make sure you have the OGRE development headers installed. Otherwise, try setting LIBRARY_SEARCH_DIRS and INCLUDE_SEARCH_DIRS to the place OGRE was installed with -DLIBRARY_SEARCH_DIRS=<path/to/lib> -DINCLUDE_SEARCH_DIRS=<path/to/include>")
+	ENDIF (OGRE_FIND_REQUIRED)
+ENDIF (OGRE_FOUND)



From chrber at mail.berlios.de  Sat Jan  3 20:22:14 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 3 Jan 2009 20:22:14 +0100
Subject: [Dsa-hl-svn] r4665 - in rl/trunk: . cmake
Message-ID: <200901031922.n03JMEH3018968@sheep.berlios.de>

Author: chrber
Date: 2009-01-03 20:22:12 +0100 (Sat, 03 Jan 2009)
New Revision: 4665

Modified:
   rl/trunk/CMakeLists.txt
   rl/trunk/cmake/FindFMODEx.cmake
Log:
Corrected an error in the FMODEx macro, resulting in an error message when a minor version of 0 would be given
Search for OgreNewt 1.53


Modified: rl/trunk/CMakeLists.txt
===================================================================
--- rl/trunk/CMakeLists.txt	2009-01-03 19:20:18 UTC (rev 4664)
+++ rl/trunk/CMakeLists.txt	2009-01-03 19:22:12 UTC (rev 4665)
@@ -29,7 +29,7 @@
 FIND_PACKAGE(OIS REQUIRED)
 FIND_PACKAGE(CEGUI REQUIRED)
 FIND_PACKAGE(CEGUIOGRE 1.6 REQUIRED)
-FIND_PACKAGE(OgreNewt REQUIRED)
+FIND_PACKAGE(OgreNewt 1.53 REQUIRED)
 FIND_PACKAGE(OpenSteer REQUIRED)
 FIND_PACKAGE(MeshMagick 0.5 REQUIRED)
 FIND_PACKAGE(Ruby REQUIRED)

Modified: rl/trunk/cmake/FindFMODEx.cmake
===================================================================
--- rl/trunk/cmake/FindFMODEx.cmake	2009-01-03 19:20:18 UTC (rev 4664)
+++ rl/trunk/cmake/FindFMODEx.cmake	2009-01-03 19:22:12 UTC (rev 4665)
@@ -86,9 +86,9 @@
 	# Compare installed and required version
 	IF(FMODEx_FIND_VERSION)
 		# Major and minor version are required
-		IF(NOT FMODEx_FIND_VERSION_MINOR)
+		IF(NOT DEFINED FMODEx_FIND_VERSION_MINOR)
 			MESSAGE(SEND_ERROR "When requesting a specific version of FMODEx, you must provide at least the major and minor version numbers, e.g., 4.20")
-		ENDIF(NOT FMODEx_FIND_VERSION_MINOR)
+		ENDIF(NOT DEFINED FMODEx_FIND_VERSION_MINOR)
 
 		IF ("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
 			SET(FMODEX_FOUND FALSE)



From chrber at mail.berlios.de  Sat Jan  3 21:20:01 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 3 Jan 2009 21:20:01 +0100
Subject: [Dsa-hl-svn] r4666 - in dependencies/OgreNewt: . cmake
Message-ID: <200901032020.n03KK1dR025639@sheep.berlios.de>

Author: chrber
Date: 2009-01-03 21:19:59 +0100 (Sat, 03 Jan 2009)
New Revision: 4666

Modified:
   dependencies/OgreNewt/CMakeLists.txt
   dependencies/OgreNewt/cmake/FindNewton.cmake
Log:
Added support for exact version checks (prevents OgreNewt 1.53 being build using Newton 2.0)
Set version check for Newton to exact


Modified: dependencies/OgreNewt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt/CMakeLists.txt	2009-01-03 19:22:12 UTC (rev 4665)
+++ dependencies/OgreNewt/CMakeLists.txt	2009-01-03 20:19:59 UTC (rev 4666)
@@ -17,7 +17,7 @@
 # Check for required components
 FIND_PACKAGE(PkgConfig)
 FIND_PACKAGE(OGRE 1.4 REQUIRED)
-FIND_PACKAGE(Newton 1.53 REQUIRED)
+FIND_PACKAGE(Newton 1.53 EXACT REQUIRED)
 
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include/OgreNewt

Modified: dependencies/OgreNewt/cmake/FindNewton.cmake
===================================================================
--- dependencies/OgreNewt/cmake/FindNewton.cmake	2009-01-03 19:22:12 UTC (rev 4665)
+++ dependencies/OgreNewt/cmake/FindNewton.cmake	2009-01-03 20:19:59 UTC (rev 4666)
@@ -74,10 +74,18 @@
 			MESSAGE(SEND_ERROR "When requesting a specific version of Newton, you must provide at least the major and minor version numbers, e.g., 2.0")
 		ENDIF(NOT DEFINED Newton_FIND_VERSION_MINOR)
 
-		IF ("${NEWTON_VERSION}" VERSION_LESS "${Newtion_FIND_VERSION}")
-			SET(NEWTON_FOUND FALSE)
-			MESSAGE(STATUS "Detected version of Newton ${NEWTON_VERSION} is too old. At least version ${Newton_FIND_VERSION} is required.")
-		ENDIF("${NEWTON_VERSION}" VERSION_LESS "${Newtion_FIND_VERSION}")
+		# Exact version match requested
+		IF(Newton_FIND_VERSION_EXACT)
+			IF(NOT "${NEWTON_VERSION}" VERSION_EQUAL "${Newton_FIND_VERSION}")
+				SET(NEWTON_FOUND FALSE)
+				MESSAGE(SEND_ERROR "Required version of Newton ${Newton_FIND_VERSION}, but you have Newton ${NEWTON_VERSION} installed.")
+			ENDIF(NOT "${NEWTON_VERSION}" VERSION_EQUAL "${Newton_FIND_VERSION}")
+		ELSE(Newton_FIND_VERSION_EXACT)
+			IF("${NEWTON_VERSION}" VERSION_LESS "${Newton_FIND_VERSION}")
+				SET(NEWTON_FOUND FALSE)
+				MESSAGE(STATUS "Detected version of Newton ${NEWTON_VERSION} is too old. At least version ${Newton_FIND_VERSION} is required.")
+			ENDIF("${NEWTON_VERSION}" VERSION_LESS "${Newton_FIND_VERSION}")
+		ENDIF(Newton_FIND_VERSION_EXACT)
 	ENDIF(Newton_FIND_VERSION)
 ENDIF(NEWTON_INCLUDE_DIR)
 
@@ -94,4 +102,4 @@
 	IF(NOT NEWTON_INCLUDE_DIR)
 		MESSAGE(SEND_ERROR "Newton include files could not be found.")
 	ENDIF(NOT NEWTON_INCLUDE_DIR)
-ENDIF(NEWTON_FOUND)
\ No newline at end of file
+ENDIF(NEWTON_FOUND)



From chrber at mail.berlios.de  Sat Jan  3 21:26:37 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 3 Jan 2009 21:26:37 +0100
Subject: [Dsa-hl-svn] r4667 - dependencies/OgreNewt_ngt/cmake
Message-ID: <200901032026.n03KQbVw026152@sheep.berlios.de>

Author: chrber
Date: 2009-01-03 21:26:36 +0100 (Sat, 03 Jan 2009)
New Revision: 4667

Modified:
   dependencies/OgreNewt_ngt/cmake/FindNewton.cmake
Log:
Added support for exact version checks


Modified: dependencies/OgreNewt_ngt/cmake/FindNewton.cmake
===================================================================
--- dependencies/OgreNewt_ngt/cmake/FindNewton.cmake	2009-01-03 20:19:59 UTC (rev 4666)
+++ dependencies/OgreNewt_ngt/cmake/FindNewton.cmake	2009-01-03 20:26:36 UTC (rev 4667)
@@ -74,10 +74,18 @@
 			MESSAGE(SEND_ERROR "When requesting a specific version of Newton, you must provide at least the major and minor version numbers, e.g., 2.0")
 		ENDIF(NOT DEFINED Newton_FIND_VERSION_MINOR)
 
-		IF ("${NEWTON_VERSION}" VERSION_LESS "${Newtion_FIND_VERSION}")
-			SET(NEWTON_FOUND FALSE)
-			MESSAGE(STATUS "Detected version of Newton ${NEWTON_VERSION} is too old. At least version ${Newton_FIND_VERSION} is required.")
-		ENDIF("${NEWTON_VERSION}" VERSION_LESS "${Newtion_FIND_VERSION}")
+		# Exact version match requested
+		IF(Newton_FIND_VERSION_EXACT)
+			IF(NOT "${NEWTON_VERSION}" VERSION_EQUAL "${Newton_FIND_VERSION}")
+				SET(NEWTON_FOUND FALSE)
+				MESSAGE(SEND_ERROR "Required version of Newton ${Newton_FIND_VERSION}, but you have Newton ${NEWTON_VERSION} installed.")
+			ENDIF(NOT "${NEWTON_VERSION}" VERSION_EQUAL "${Newton_FIND_VERSION}")
+		ELSE(Newton_FIND_VERSION_EXACT)
+			IF("${NEWTON_VERSION}" VERSION_LESS "${Newton_FIND_VERSION}")
+				SET(NEWTON_FOUND FALSE)
+				MESSAGE(STATUS "Detected version of Newton ${NEWTON_VERSION} is too old. At least version ${Newton_FIND_VERSION} is required.")
+			ENDIF("${NEWTON_VERSION}" VERSION_LESS "${Newton_FIND_VERSION}")
+		ENDIF(Newton_FIND_VERSION_EXACT)
 	ENDIF(Newton_FIND_VERSION)
 ENDIF(NEWTON_INCLUDE_DIR)
 
@@ -94,4 +102,4 @@
 	IF(NOT NEWTON_INCLUDE_DIR)
 		MESSAGE(SEND_ERROR "Newton include files could not be found.")
 	ENDIF(NOT NEWTON_INCLUDE_DIR)
-ENDIF(NEWTON_FOUND)
\ No newline at end of file
+ENDIF(NEWTON_FOUND)



From chrber at mail.berlios.de  Sat Jan  3 22:08:39 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 3 Jan 2009 22:08:39 +0100
Subject: [Dsa-hl-svn] r4668 - in rl/trunk: . cmake
Message-ID: <200901032108.n03L8dLM029931@sheep.berlios.de>

Author: chrber
Date: 2009-01-03 22:08:37 +0100 (Sat, 03 Jan 2009)
New Revision: 4668

Modified:
   rl/trunk/CMakeLists.txt
   rl/trunk/cmake/FindFMODEx.cmake
   rl/trunk/cmake/FindMeshMagick.cmake
   rl/trunk/cmake/FindOgreNewt.cmake
Log:
Added support for exact version checks
Other macro updates
Require version of OgreNewt 1.53


Modified: rl/trunk/CMakeLists.txt
===================================================================
--- rl/trunk/CMakeLists.txt	2009-01-03 20:26:36 UTC (rev 4667)
+++ rl/trunk/CMakeLists.txt	2009-01-03 21:08:37 UTC (rev 4668)
@@ -29,7 +29,7 @@
 FIND_PACKAGE(OIS REQUIRED)
 FIND_PACKAGE(CEGUI REQUIRED)
 FIND_PACKAGE(CEGUIOGRE 1.6 REQUIRED)
-FIND_PACKAGE(OgreNewt 1.53 REQUIRED)
+FIND_PACKAGE(OgreNewt 1.53 EXACT REQUIRED)
 FIND_PACKAGE(OpenSteer REQUIRED)
 FIND_PACKAGE(MeshMagick 0.5 REQUIRED)
 FIND_PACKAGE(Ruby REQUIRED)

Modified: rl/trunk/cmake/FindFMODEx.cmake
===================================================================
--- rl/trunk/cmake/FindFMODEx.cmake	2009-01-03 20:26:36 UTC (rev 4667)
+++ rl/trunk/cmake/FindFMODEx.cmake	2009-01-03 21:08:37 UTC (rev 4668)
@@ -1,12 +1,12 @@
 # Find FMODEx
 #
 # This module defines
-# FMODEX_FOUND
-# FMODEX_INCLUDE_DIR
-# FMODEX_LIBRARY
+# FMODEX_FOUND       - FMODEx was found
+# FMODEX_INCLUDE_DIR - Directory containing FMODEx header files
+# FMODEX_LIBRARY     - Library name of FMODEx library
 #
 # Based on the CMakeLists.txt of zdoom and FindFMOD.cmake of openfrag
-# Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
 #
 # Redistribution and use is allowed according to the terms of the BSD license.
 # For details see the accompanying COPYING-CMAKE-SCRIPTS file.
@@ -66,6 +66,9 @@
              PATHS ${FMODEX_LIBRARY_SEARCH_DIRS}
              PATH_SUFFIXES ${FMOD_LIB_DIR_SUFFIXES})
 
+SET(FMODEX_INCLUDE_DIR ${FMODEX_INCLUDE_DIR} CACHE STRING "Directory containing FMODEx header files")
+SET(FMODEX_LIBRARY ${FMODEX_LIBRARY} CACHE STRING "Library name of FMODEx library")
+
 IF(FMODEX_INCLUDE_DIR AND FMODEX_LIBRARY)
 	SET(FMODEX_FOUND TRUE)
 ENDIF(FMODEX_INCLUDE_DIR AND FMODEX_LIBRARY)
@@ -90,10 +93,18 @@
 			MESSAGE(SEND_ERROR "When requesting a specific version of FMODEx, you must provide at least the major and minor version numbers, e.g., 4.20")
 		ENDIF(NOT DEFINED FMODEx_FIND_VERSION_MINOR)
 
-		IF ("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
-			SET(FMODEX_FOUND FALSE)
-			MESSAGE(STATUS "Detected version of FMODEx ${FMODEX_VERSION} is too old. At least version ${FMODEx_FIND_VERSION} is required.")
-		ENDIF("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
+		# Exact version match requested
+		IF(FMODEx_FIND_VERSION_EXACT)
+			IF(NOT "${FMOD_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
+				SET(NEWTON_FOUND FALSE)
+				MESSAGE(SEND_ERROR "Required version of FMODEx ${FMODEx_FIND_VERSION}, but you have FMODEx ${FMOD_VERSION} installed.")
+			ENDIF(NOT "${FMOD_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
+		ELSE(FMODEx_FIND_VERSION_EXACT)
+			IF("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
+				SET(NEWTON_FOUND FALSE)
+				MESSAGE(STATUS "Detected version of FMODEx ${FMODEX_VERSION} is too old. At least version ${FMODEx_FIND_VERSION} is required.")
+			ENDIF("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
+		ENDIF(FMODEx_FIND_VERSION_EXACT)
 	ENDIF(FMODEx_FIND_VERSION)
 ENDIF(FMODEX_INCLUDE_DIR)
 

Modified: rl/trunk/cmake/FindMeshMagick.cmake
===================================================================
--- rl/trunk/cmake/FindMeshMagick.cmake	2009-01-03 20:26:36 UTC (rev 4667)
+++ rl/trunk/cmake/FindMeshMagick.cmake	2009-01-03 21:08:37 UTC (rev 4668)
@@ -5,7 +5,7 @@
 # MESHMAGICK_INCLUDE_DIR - Directory containing MeshMagick header files
 # MESHMAGICK_LIBRARY     - Library name of MeshMagick library
 #
-# Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
 #
 # Redistribution and use is allowed according to the terms of the BSD license.
 # For details see the accompanying COPYING-CMAKE-SCRIPTS file.

Modified: rl/trunk/cmake/FindOgreNewt.cmake
===================================================================
--- rl/trunk/cmake/FindOgreNewt.cmake	2009-01-03 20:26:36 UTC (rev 4667)
+++ rl/trunk/cmake/FindOgreNewt.cmake	2009-01-03 21:08:37 UTC (rev 4668)
@@ -17,8 +17,60 @@
 
 ELSE(WIN32)
 	IF(PKG_CONFIG_FOUND)
-		PKG_SEARCH_MODULE(OGRENEWT OgreNewt)
+		IF(OgreNewt_FIND_VERSION)
+			IF(OgreNewt_FIND_VERSION_EXACT)
+				PKG_SEARCH_MODULE(OGRENEWT REQUIRED OgreNewt=${OgreNewt_FIND_VERSION})
+			ELSE(OgreNewt_FIND_VERSION_EXACT)
+				PKG_SEARCH_MODULE(OGRENEWT REQUIRED OgreNewt>=${OgreNewt_FIND_VERSION})
+			ENDIF(OgreNewt_FIND_VERSION_EXACT)
+		ELSE(OgreNewt_FIND_VERSION)
+			PKG_SEARCH_MODULE(OGRENEWT REQUIRED OgreNewt)
+		ENDIF(OgreNewt_FIND_VERSION)
 		SET(OGRENEWT_INCLUDE_DIR ${OGRENEWT_INCLUDE_DIRS})
 		SET(OGRENEWT_LIBRARY ${OGRENEWT_LIBRARIES})
 	ENDIF(PKG_CONFIG_FOUND)
-ENDIF(WIN32)
\ No newline at end of file
+	IF(NOT OGRENEWT_FOUND)
+		SET(OGRENEWT_INCLUDE_SEARCH_DIRS
+		    /usr/include
+		    /usr/local/include
+		    /opt/include
+		    /opt/OgreNewt/include)
+		SET(OGRENEWT_LIBRARY_SEARCH_DIRS
+		    /usr/lib
+		    /usr/lib64
+		    /usr/local/lib
+		    /usr/local/lib64
+		    /opt/OgreNewt/lib
+		    /opt/OgreNewt/lib64)
+		SET(OGRENEWT_INC_DIR_SUFFIXES PATH_SUFFIXES OgreNewt)
+		FIND_PATH(OGRENEWT_INCLUDE_DIR OgreNewt.h
+		          PATHS ${OGRENEWT_INCLUDE_SEARCH_DIRS}
+		          PATH_SUFFIXES ${OGRENEWT_INC_DIR_SUFFIXES})
+		FIND_LIBRARY(OGRENEWT_LIBRARY OgreNewt
+		             PATHS ${OGRENEWT_LIBRARY_SEARCH_DIRS}
+		             PATH_SUFFIXES ${OGRENEWT_LIB_DIR_SUFFIXES}})
+	ENDIF(NOT OGRENEWT_FOUND)
+ENDIF(WIN32)
+
+SET(OGRENEWT_INCLUDE_DIR ${OGRENEWT_INCLUDE_DIR} CACHE STRING "Directory containing OgreNewt header files")
+SET(OGRENEWT_LIBRARY ${OGRENEWT_LIBRARY} CACHE STRING "Library name of OgreNewt library")
+
+IF(OGRENEWT_INCLUDE_DIR AND OGRENEWT_LIBRARY)
+	SET(OGRENEWT_FOUND TRUE)
+ENDIF(OGRENEWT_INCLUDE_DIR AND OGRENEWT_LIBRARY)
+
+IF(OGRENEWT_FOUND)
+	IF(NOT OGRENEWT_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries: ${OGRENEWT_LIBRARY} from ${OGRENEWT_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes: ${OGRENEWT_INCLUDE_DIR}")
+	ENDIF(NOT OGRENEWT_FIND_QUIETLY)
+ELSE(OGRENEWT_FOUND)
+	IF(OgreNewt_FIND_REQUIRED)
+		IF(NOT OGRENEWT_LIBRARY)
+			MESSAGE(SEND_ERROR, "OgreNewt library could not be found.")
+		ENDIF(NOT OGRENEWT_LIBRARY)
+		IF(NOT OGRENEWT_INCLUDE_DIR)
+			MESSAGE(SEND_ERROR "OgreNewt include files could not be found.")
+		ENDIF(NOT OGRENEWT_INCLUDE_DIR)
+	ENDIF(OgreNewt_FIND_REQUIRED)
+ENDIF(OGRENEWT_FOUND)
\ No newline at end of file



From chrber at mail.berlios.de  Sat Jan  3 22:22:36 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 3 Jan 2009 22:22:36 +0100
Subject: [Dsa-hl-svn] r4669 - in rl/branches/newton20: . cmake engine
	engine/ai engine/ai/include engine/common engine/core
	engine/core/include engine/core/src engine/rules
	engine/script engine/script/src engine/startup engine/ui
Message-ID: <200901032122.n03LMa62030898@sheep.berlios.de>

Author: chrber
Date: 2009-01-03 22:22:24 +0100 (Sat, 03 Jan 2009)
New Revision: 4669

Added:
   rl/branches/newton20/cmake/FindCEGUIOGRE.cmake
   rl/branches/newton20/cmake/FindMeshMagick.cmake
   rl/branches/newton20/cmake/FindOIS.cmake
   rl/branches/newton20/cmake/FindOpenSteer.cmake
   rl/branches/newton20/cmake/FindXercesC.cmake
   rl/branches/newton20/cmake/UseSWIG.cmake
   rl/branches/newton20/engine/CMakeLists.txt
   rl/branches/newton20/engine/rules/CMakeLists.txt
   rl/branches/newton20/engine/script/CMakeLists.txt
   rl/branches/newton20/engine/startup/CMakeLists.txt
   rl/branches/newton20/engine/ui/CMakeLists.txt
Modified:
   rl/branches/newton20/CMakeLists.txt
   rl/branches/newton20/cmake/FindCEGUI.cmake
   rl/branches/newton20/cmake/FindFMODEx.cmake
   rl/branches/newton20/cmake/FindOGRE.cmake
   rl/branches/newton20/cmake/FindOgreNewt.cmake
   rl/branches/newton20/engine/ai/CMakeLists.txt
   rl/branches/newton20/engine/ai/include/DialogLoaderImpl.h
   rl/branches/newton20/engine/common/CMakeLists.txt
   rl/branches/newton20/engine/core/CMakeLists.txt
   rl/branches/newton20/engine/core/include/SaveAble.h
   rl/branches/newton20/engine/core/include/SaveAbleCollection.h
   rl/branches/newton20/engine/core/include/SaveAbleFactory.h
   rl/branches/newton20/engine/core/include/SaveAbleManager.h
   rl/branches/newton20/engine/core/src/SaveAble.cpp
   rl/branches/newton20/engine/core/src/SaveAbleCollection.cpp
   rl/branches/newton20/engine/core/src/SaveAbleFactory.cpp
   rl/branches/newton20/engine/core/src/SaveAbleManager.cpp
   rl/branches/newton20/engine/script/src/Scene.cpp
Log:
Added cmake build system to branch containing all fixes from trunk (hopefully)
Typical bunch of missing line endings for other files


Modified: rl/branches/newton20/CMakeLists.txt
===================================================================
--- rl/branches/newton20/CMakeLists.txt	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
@@ -1,10 +1,7 @@
 PROJECT(RL)
 
-CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2)
 
-# Cmake handles escaping of preprocessor directives
-CMAKE_POLICY(SET CMP0005 OLD)
-
 # Include required cmake macros
 INCLUDE(FeatureSummary)
 
@@ -27,9 +24,15 @@
 
 # Check for required components
 FIND_PACKAGE(PkgConfig)
+FIND_PACKAGE(XercesC REQUIRED)
 FIND_PACKAGE(OGRE 1.6 REQUIRED)
-FIND_PACKAGE(OgreNewt REQUIRED)
+FIND_PACKAGE(OIS REQUIRED)
 FIND_PACKAGE(CEGUI REQUIRED)
+FIND_PACKAGE(CEGUIOGRE 1.6 REQUIRED)
+FIND_PACKAGE(OgreNewt 2.0 REQUIRED)
+FIND_PACKAGE(OpenSteer REQUIRED)
+FIND_PACKAGE(MeshMagick 0.5 REQUIRED)
+FIND_PACKAGE(Ruby REQUIRED)
 FIND_PACKAGE(Boost 1.34 REQUIRED filesystem)
 FIND_PACKAGE(SWIG REQUIRED)
 IF (NOT SWIG_DIR MATCHES -rl$)
@@ -42,12 +45,9 @@
 SET(DATADIRNAME "rastullah" CACHE STRING "change the name of the directory for the read-only architecture-independent game data")
 
 # Game options
-SET(ENABLE_FMOD4 "Enable FMOD 4.xx (FMODex) sound support" ON)
-SET(ENABLE_OPENAL "Enable OpenAL sound support (unsupported)" OFF)
+SET(WITH_FMOD4 ON CACHE BOOL "Enable FMOD 4.xx (FMODex) sound support")
+SET(WITH_OPENAL OFF CACHE BOOL "Enable OpenAL sound support (unsupported)")
 
-# Handle options
-ADD_DEFINITIONS(-DRL_MODULEDIR=\\"${DATAROOTDIR}/${DATADIRNAME}/modules\\")
-
 # Include subdirectories
 ADD_SUBDIRECTORY(engine)
 ADD_SUBDIRECTORY(plugins)

Modified: rl/branches/newton20/cmake/FindCEGUI.cmake
===================================================================
--- rl/branches/newton20/cmake/FindCEGUI.cmake	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/cmake/FindCEGUI.cmake	2009-01-03 21:22:24 UTC (rev 4669)
@@ -53,7 +53,7 @@
 	MESSAGE(STATUS "Looking for CEGUI")
 	FIND_PATH(CEGUI_INCLUDE_DIRS CEGUI.h ${CEGUI_INCLUDE_SEARCH_DIRS})
 	FIND_LIBRARY(CEGUI_LIBRARIES debug CEGUIBase_d optimized CEGUIBase PATHS ${CEGUI_LIBRARY_SEARCH_DIRS})
-	
+
 # 	SET(OGRESOURCE $ENV{OGRE_NEW})
 # 	IF (OGRESDK)
 # 		MESSAGE(STATUS "Using CEGUI in OGRE SDK")
@@ -81,7 +81,6 @@
 	SET(CEGUI_LIBRARY_DIRS ${CEGUI_LIBDIR})
 	SET(CEGUI_LIBRARIES ${CEGUI_LIBRARIES})
 
-	CMAKE_MINIMUM_REQUIRED(VERSION 2.4.7 FATAL_ERROR)
 	FIND_PACKAGE(PkgConfig)
 	IF(PKG_CONFIG_FOUND)
 		PKG_SEARCH_MODULE(CEGUI CEGUI)

Added: rl/branches/newton20/cmake/FindCEGUIOGRE.cmake
===================================================================
--- rl/branches/newton20/cmake/FindCEGUIOGRE.cmake	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/cmake/FindCEGUIOGRE.cmake	2009-01-03 21:22:24 UTC (rev 4669)
@@ -0,0 +1,68 @@
+# Find CEGUI-OGRE (CEGUI Renderer interface module for OGRE)
+#
+# This module defines
+# CEGUIOGRE_FOUND       - OpenSteer was found
+# CEGUIOGRE_INCLUDE_DIR - Directory containing CEGUI-OGRE header files
+# CEGUIOGRE_LIBRARY     - Library name of CEGUI-OGRE library
+#
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+# On a new cmake run, we do not need to be verbose
+IF(CEGUIOGRE_INCLUDE_DIR AND CEGUIOGRE_LIBRARY)
+	SET(CEGUIOGRE_FIND_QUIETLY TRUE)
+ENDIF(CEGUIOGRE_INCLUDE_DIR AND CEGUIOGRE_LIBRARY)
+
+IF(WIN32)
+
+ELSE(WIN32)
+	IF(PKG_CONFIG_FOUND)
+		PKG_SEARCH_MODULE(CEGUIOGRE CEGUI-OGRE)
+		SET(CEGUIOGRE_INCLUDE_DIR ${CEGUIOGRE_INCLUDE_DIRS})
+		SET(CEGUIOGRE_LIBRARY ${CEGUIOGRE_LIBRARIES})
+	ENDIF(PKG_CONFIG_FOUND)
+	IF(NOT CEGUIOGRE_FOUND)
+		SET(CEGUIOGRE_INCLUDE_SEARCH_DIRS
+		    /usr/include
+		    /usr/local/include
+		    /opt/include
+		    /opt/OGRE/include)
+		SET(CEGUIOGRE_LIBRARY_SEARCH_DIRS
+		    /usr/lib
+		    /usr/lib64
+		    /usr/local/lib
+		    /usr/local/lib64
+		    /opt/OGRE/lib
+		    /opt/OGRE/lib64)
+		SET(CEGUIOGRE_INC_DIR_SUFFIXES PATH_SUFFIXES OGRE)
+		FIND_PATH(CEGUIOGRE_INCLUDE_DIR OgreCEGUIRenderer.h
+		          PATHS ${CEGUIOGRE_INCLUDE_SEARCH_DIRS}
+		          PATH_SUFFIXES ${CEGUIOGRE_INC_DIR_SUFFIXES})
+		FIND_LIBRARY(CEGUIOGRE_LIBRARY CEGUIOgreRenderer
+		             PATHS ${CEGUIOGRE_LIBRARY_SEARCH_DIRS}
+		             PATH_SUFFIXES ${CEGUIOGRE_LIB_DIR_SUFFIXES}})
+	ENDIF(NOT CEGUIOGRE_FOUND)
+ENDIF(WIN32)
+
+SET(CEGUIOGRE_INCLUDE_DIR ${CEGUIOGRE_INCLUDE_DIR} CACHE STRING "Directory containing CEGUI-OGRE header files")
+SET(CEGUIOGRE_LIBRARY ${CEGUIOGRE_LIBRARY} CACHE STRING "Library name of CEGRUI-OGRE library")
+
+IF(CEGUIOGRE_INCLUDE_DIR AND CEGUIOGRE_LIBRARY)
+	SET(CEGUIOGRE_FOUND TRUE)
+ENDIF(CEGUIOGRE_INCLUDE_DIR AND CEGUIOGRE_LIBRARY)
+
+IF(CEGUIOGRE_FOUND)
+	IF(NOT CEGUIOGRE_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries: ${CEGUIOGRE_LIBRARY} from ${CEGUIOGRE_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes: ${CEGUIOGRE_INCLUDE_DIR}")
+	ENDIF(NOT CEGUIOGRE_FIND_QUIETLY)
+ELSE(CEGUIOGRE_FOUND)
+	IF(NOT CEGUIOGRE_LIBRARY)
+		MESSAGE(SEND_ERROR, "CEGRUI-OGRE library could not be found.")
+	ENDIF(NOT CEGUIOGRE_LIBRARY)
+	IF(NOT CEGUIOGRE_INCLUDE_DIR)
+		MESSAGE(SEND_ERROR "CEGRUI-OGRE include files could not be found.")
+	ENDIF(NOT CEGUIOGRE_INCLUDE_DIR)
+ENDIF(CEGUIOGRE_FOUND)
\ No newline at end of file

Modified: rl/branches/newton20/cmake/FindFMODEx.cmake
===================================================================
--- rl/branches/newton20/cmake/FindFMODEx.cmake	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/cmake/FindFMODEx.cmake	2009-01-03 21:22:24 UTC (rev 4669)
@@ -1,11 +1,12 @@
 # Find FMODEx
 #
 # This module defines
-# FMODEX_FOUND
-# FMODEX_INCLUDE_DIR
-# FMODEX_LIBRARY
+# FMODEX_FOUND       - FMODEx was found
+# FMODEX_INCLUDE_DIR - Directory containing FMODEx header files
+# FMODEX_LIBRARY     - Library name of FMODEx library
 #
 # Based on the CMakeLists.txt of zdoom and FindFMOD.cmake of openfrag
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
 #
 # Redistribution and use is allowed according to the terms of the BSD license.
 # For details see the accompanying COPYING-CMAKE-SCRIPTS file.
@@ -15,7 +16,7 @@
 	SET(FMODEX_FIND_QUIETLY TRUE)
 ENDIF(FMODEX_INCLUDE_DIR AND FMODEX_LIBRARY)
 
-# Check for for 32/64 bit architecture
+# Check for 32/64 bit architecture
 IF(CMAKE_SIZEOF_VOID_P MATCHES "8")
 	SET(X64 64)
 ENDIF(CMAKE_SIZEOF_VOID_P MATCHES "8")
@@ -27,15 +28,15 @@
 	SET(FMODEX_INCLUDE_SEARCH_DIRS
 	    /usr/include
 	    /usr/local/include
-	    /opt/fmodex/fmodex/include
-            /opt/include)
+	    /opt/fmodex/include
+	    /opt/include INTERNAL)
 	SET(FMODEX_LIBRARY_SEARCH_DIRS
 	    /usr/lib
 	    /usr/lib64
 	    /usr/local/lib
 	    /usr/local/lib64
 	    /opt/fmodex/lib
-	    /opt/fmodex/lib64)
+	    /opt/fmodex/lib64 INTERNAL)
 	SET(FMODEX_INC_DIR_SUFFIXES PATH_SUFFIXES fmodex)
 ENDIF(WIN32)
 
@@ -60,38 +61,22 @@
 FIND_PATH(FMODEX_INCLUDE_DIR fmod.h
           PATHS ${FMODEX_INCLUDE_SEARCH_PATHS}
           PATH_SUFFIXES ${FMODEX_INC_DIR_SUFFIXES})
-IF(FMODEX_INCLUDE_DIR)
-	IF (NOT FMODEX_FIND_QUIETLY)
-		MESSAGE(STATUS "  includes: ${FMODEX_INCLUDE_DIR}")
-	ENDIF(NOT FMODEX_FIND_QUIETLY)
-ELSE(FMODEX_INCLUDE_DIR)
-	MESSAGE(SEND_ERROR "FMODEx include files could not be found.")
-ENDIF(FMODEX_INCLUDE_DIR)
 
 FIND_LIBRARY(FMODEX_LIBRARY ${FMODEX_LIBRARY_NAME}
              PATHS ${FMODEX_LIBRARY_SEARCH_DIRS}
              PATH_SUFFIXES ${FMOD_LIB_DIR_SUFFIXES})
-IF(FMODEX_LIBRARY)
-	IF (NOT FMODEX_FIND_QUIETLY)
-		MESSAGE(STATUS "  libraries: ${FMODEX_LIBRARY}")
-	ENDIF(NOT FMODEX_FIND_QUIETLY)
-ELSE(FMODEX_LIBRARY)
-	MESSAGE(SEND_ERROR, "FMODex library could not be found.")
-ENDIF(FMODEX_LIBRARY)
 
+SET(FMODEX_INCLUDE_DIR ${FMODEX_INCLUDE_DIR} CACHE STRING "Directory containing FMODEx header files")
+SET(FMODEX_LIBRARY ${FMODEX_LIBRARY} CACHE STRING "Library name of FMODEx library")
+
 IF(FMODEX_INCLUDE_DIR AND FMODEX_LIBRARY)
 	SET(FMODEX_FOUND TRUE)
 ENDIF(FMODEX_INCLUDE_DIR AND FMODEX_LIBRARY)
 
-# Allow customisation of paths
-SET(FMODEX_INCLUDE_DIR ${FMODEX_INCLUDE_DIR})
-SET(FMODEX_LIBRARY ${FMODEX_LIBRARY})
-
 IF(FMODEX_INCLUDE_DIR)
 	# Extract the library version from the header file
 	SET(FMODEX_VERSION 0)
-	FILE(READ "${FMODEX_INCLUDE_DIR}/fmod.h"
-	     _FMODEX_FMOD_H_CONTENTS)
+	FILE(READ "${FMODEX_INCLUDE_DIR}/fmod.h" _FMODEX_FMOD_H_CONTENTS)
 	STRING(REGEX REPLACE ".*#define FMOD_VERSION    0x([0-9]+).*" "\\1"
 	       FMODEX_VERSION "${_FMODEX_FMOD_H_CONTENTS}")
 	IF(NOT "${FMODEX_VERSION}" STREQUAL 0)
@@ -104,19 +89,36 @@
 	# Compare installed and required version
 	IF(FMODEx_FIND_VERSION)
 		# Major and minor version are required
-		IF(NOT FMODEx_FIND_VERSION_MINOR)
-			MESSAGE(SEND_ERROR "When requesting a specific version of FMODEx , you must provide at least the major and minor version numbers, e.g., 4.20")
-		ENDIF(NOT FMODEx_FIND_VERSION_MINOR)
+		IF(NOT DEFINED FMODEx_FIND_VERSION_MINOR)
+			MESSAGE(SEND_ERROR "When requesting a specific version of FMODEx, you must provide at least the major and minor version numbers, e.g., 4.20")
+		ENDIF(NOT DEFINED FMODEx_FIND_VERSION_MINOR)
 
-		IF ("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
-			SET(FMODEX_FOUND FALSE)
-			MESSAGE(STATUS "Detected version of FMODEx ${FMODEX_VERSION} is too old. At least version ${FMODEx_FIND_VERSION} is required.")
-		ENDIF("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
+		# Exact version match requested
+		IF(FMODEx_FIND_VERSION_EXACT)
+			IF(NOT "${FMOD_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
+				SET(NEWTON_FOUND FALSE)
+				MESSAGE(SEND_ERROR "Required version of FMODEx ${FMODEx_FIND_VERSION}, but you have FMODEx ${FMOD_VERSION} installed.")
+			ENDIF(NOT "${FMOD_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
+		ELSE(FMODEx_FIND_VERSION_EXACT)
+			IF("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
+				SET(NEWTON_FOUND FALSE)
+				MESSAGE(STATUS "Detected version of FMODEx ${FMODEX_VERSION} is too old. At least version ${FMODEx_FIND_VERSION} is required.")
+			ENDIF("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
+		ENDIF(FMODEx_FIND_VERSION_EXACT)
 	ENDIF(FMODEx_FIND_VERSION)
 ENDIF(FMODEX_INCLUDE_DIR)
 
 IF(FMODEX_FOUND)
 	IF(NOT FMODEX_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries: ${FMODEX_LIBRARY}")
+		MESSAGE(STATUS "  includes: ${FMODEX_INCLUDE_DIR}")
 		MESSAGE(STATUS "  version: ${FMODEX_VERSION}")
 	ENDIF(NOT FMODEX_FIND_QUIETLY)
+ELSE(FMODEX_FOUND)
+	IF(NOT FMODEX_LIBRARY)
+		MESSAGE(SEND_ERROR, "FMODex library could not be found.")
+	ENDIF(NOT FMODEX_LIBRARY)
+	IF(NOT FMODEX_INCLUDE_DIR)
+		MESSAGE(SEND_ERROR "FMODEx include files could not be found.")
+	ENDIF(NOT FMODEX_INCLUDE_DIR)
 ENDIF(FMODEX_FOUND)
\ No newline at end of file

Added: rl/branches/newton20/cmake/FindMeshMagick.cmake
===================================================================
--- rl/branches/newton20/cmake/FindMeshMagick.cmake	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/cmake/FindMeshMagick.cmake	2009-01-03 21:22:24 UTC (rev 4669)
@@ -0,0 +1,71 @@
+# Find MeshMagick
+#
+# This module defines
+# MESHMAGICK_FOUND       - MeshMagick was found
+# MESHMAGICK_INCLUDE_DIR - Directory containing MeshMagick header files
+# MESHMAGICK_LIBRARY     - Library name of MeshMagick library
+#
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+# On a new cmake run, we do not need to be verbose
+IF(MESHMAGICK_INCLUDE_DIR AND MESHMAGICK_LIBRARY)
+	SET(MESHMAGICK_FIND_QUIETLY TRUE)
+ENDIF(MESHMAGICK_INCLUDE_DIR AND MESHMAGICK_LIBRARY)
+
+# Search for headers and libraries
+IF(WIN32)
+
+ELSE(WIN32)
+	IF(PKG_CONFIG_FOUND)
+		PKG_SEARCH_MODULE(MESHMAGICK meshmagick)
+		SET(MESHMAGICK_INCLUDE_DIR ${MESHMAGICK_INCLUDE_DIRS})
+		SET(MESHMAGICK_LIBRARY ${MESHMAGICK_LIBRARIES})
+	ENDIF(PKG_CONFIG_FOUND)
+	IF(NOT MESHMAGICK_FOUND)
+		SET(MESHMAGICK_INCLUDE_SEARCH_DIRS
+		    /usr/include
+		    /usr/local/include
+		    /opt/include
+		    /opt/meshmagick/include)
+		SET(MESHMAGICK_LIBRARY_SEARCH_DIRS
+		    /usr/lib
+		    /usr/lib64
+		    /usr/local/lib
+		    /usr/local/lib64
+		    /opt/meshmagick/lib
+		    /opt/meshmagick/lib64)
+		SET(MESHMAGICK_INC_DIR_SUFFIXES PATH_SUFFIXES meshmagick)
+		FIND_PATH(MESHMAGICK_INCLUDE_DIR MeshMagickPrerequisites.h
+		          PATHS ${MESHMAGICK_INCLUDE_SEARCH_DIRS}
+		          PATH_SUFFIXES ${MESHMAGICK_INC_DIR_SUFFIXES})
+		FIND_LIBRARY(MESHMAGICK_LIBRARY meshmagick
+		             PATHS ${MESHMAGICK_LIBRARY_SEARCH_DIRS}
+		             PATH_SUFFIXES ${MESHMAGICK_LIB_DIR_SUFFIXES}})
+	ENDIF(NOT MESHMAGICK_FOUND)
+ENDIF(WIN32)
+
+SET(MESHMAGICK_INCLUDE_DIR ${MESHMAGICK_INCLUDE_DIR} CACHE STRING "Directory containing MeshMagick header files")
+SET(MESHMAGICK_LIBRARY ${MESHMAGICK_LIBRARY} CACHE STRING "Library name of MeshMagick library")
+
+IF(MESHMAGICK_INCLUDE_DIR AND MESHMAGICK_LIBRARY)
+	SET(MESHMAGICK_FOUND TRUE)
+ENDIF(MESHMAGICK_INCLUDE_DIR AND MESHMAGICK_LIBRARY)
+
+IF(MESHMAGICK_FOUND)
+	IF(NOT MESHMAGICK_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries: ${MESHMAGICK_LIBRARY} from ${MESHMAGICK_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes: ${MESHMAGICK_INCLUDE_DIR}")
+	ENDIF(NOT MESHMAGICK_FIND_QUIETLY)
+ELSE(MESHMAGICK_FOUND)
+	IF(MeshMagick_FIND_REQUIRED)
+		IF(NOT MESHMAGICK_LIBRARY)
+			MESSAGE(SEND_ERROR, "MeshMagick library could not be found.")
+		ENDIF(NOT MESHMAGICK_LIBRARY)
+		IF(NOT MESHMAGICK_INCLUDE_DIR)
+			MESSAGE(SEND_ERROR "MeshMagick include files could not be found.")
+		ENDIF(NOT MESHMAGICK_INCLUDE_DIR)
+	ENDIF(MeshMagick_FIND_REQUIRED)
+ENDIF(MESHMAGICK_FOUND)
\ No newline at end of file

Modified: rl/branches/newton20/cmake/FindOGRE.cmake
===================================================================
--- rl/branches/newton20/cmake/FindOGRE.cmake	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/cmake/FindOGRE.cmake	2009-01-03 21:22:24 UTC (rev 4669)
@@ -58,11 +58,10 @@
 ELSE (WIN32) #Unix/OSX
 	FIND_PACKAGE(PkgConfig)
 	IF(PKG_CONFIG_FOUND)
-		CMAKE_MINIMUM_REQUIRED(VERSION 2.4.7)
 		PKG_SEARCH_MODULE(OGRE OGRE)
 		IF(NOT PKGCONFIG_FAILED)
 			_PKGCONFIG_INVOKE(OGRE "OGRE" PLUGINDIR "" --variable=plugindir)
-			ADD_DEFINITIONS(-DOGRE_PLUGINDIR=\\"${OGRE_PLUGINDIR}\\")
+			ADD_DEFINITIONS(-DOGRE_PLUGINDIR="${OGRE_PLUGINDIR}")
 		ENDIF(NOT PKGCONFIG_FAILED)
 		SET(OGRE_INCLUDE_DIRS ${OGRE_INCLUDE_DIRS})
 		SET(OGRE_LIBRARY_DIRS ${OGRE_LIBDIR})

Added: rl/branches/newton20/cmake/FindOIS.cmake
===================================================================
--- rl/branches/newton20/cmake/FindOIS.cmake	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/cmake/FindOIS.cmake	2009-01-03 21:22:24 UTC (rev 4669)
@@ -0,0 +1,81 @@
+# - Find OIS includes and library
+#
+# This module defines
+#  OIS_INCLUDE_DIRS
+#  OIS_LIBRARIES, the libraries to link against to use OIS.
+#  OIS_LIBRARY_DIRS, the location of the libraries
+#  OIS_FOUND, If false, do not try to use OIS
+#
+# Copyright ? 2007-2008, Matt Williams
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+# On a new cmake run, we do not need to be verbose
+IF(OIS_INCLUDE_DIR AND OIS_LIBRARY)
+	SET(OIS_FIND_QUIETLY TRUE)
+ENDIF(OIS_INCLUDE_DIR AND OIS_LIBRARY)
+
+IF (WIN32)
+	MESSAGE(STATUS "Looking for OIS")
+	SET(OGRESDK $ENV{OGRE_HOME})
+	SET(OGRESOURCE $ENV{OGRE_NEW})
+	IF (OGRESDK)
+		MESSAGE(STATUS "Using OIS in OGRE SDK")
+		SET(OGRESDK $ENV{OGRE_HOME})
+		STRING(REGEX REPLACE "[\\]" "/" OGRESDK "${OGRESDK}")
+		SET(OIS_INCLUDE_DIRS ${OGRESDK}/include)
+		SET(OIS_LIBRARY_DIRS ${OGRESDK}/lib)
+		SET(OIS_LIBRARIES debug OIS_d optimized OIS)
+	ELSEIF (OGRESOURCE)
+		MESSAGE(STATUS "Using OIS in OGRE dependencies")
+		SET(OIS_INCLUDE_DIRS C:/ogrenew/Dependencies/include)
+		SET(OIS_LIBRARY_DIRS C:/ogrenew/Dependencies/lib/Release C:/ogrenew/Dependencies/lib/Debug)
+		SET(OIS_LIBRARIES debug OIS_d optimized OIS)
+	ELSE (OGRESDK)
+		IF (NOT DEPENDENCIES_PATH)
+			MESSAGE(STATUS "Please set DEPENDENCIES_PATH (the directory containing 'common' and 'dependencies')")
+		ELSE (NOT DEPENDENCIES_PATH)
+			SET(CEGUIOGRE_INCLUDE_DIRS ${DEPENDENCIES_PATH}/dependencies/Ogre/OIS)
+			SET(CEGUIOGRE_LIBRARIES optimized OIS debug OIS_d)
+			SET(CEGUIOGRE_LIBRARY_DIRS optimized ${DEPENDENCIES_PATH}/dependencies/lib/release debug ${DEPENDENCIES_PATH}/dependencies/lib/debug)
+		ENDIF (NOT DEPENDENCIES_PATH)
+	ENDIF (OGRESDK)
+ELSE(WIN32)
+	IF(PKG_CONFIG_FOUND)
+		PKG_SEARCH_MODULE(OIS OIS)
+		SET(OIS_INCLUDE_DIR ${OIS_INCLUDE_DIRS})
+		SET(OIS_LIBRARY ${OIS_LIBRARIES})
+	ENDIF(PKG_CONFIG_FOUND)
+	IF(NOT OIS_FOUND)
+
+	ENDIF(NOT OIS_FOUND)
+ENDIF(WIN32)
+
+SET(OIS_INCLUDE_DIR ${OIS_INCLUDE_DIR} CACHE STRING "Directory containing OIS header files")
+SET(OIS_LIBRARY ${OIS_LIBRARY} CACHE STRING "Library name of OIS library")
+
+#Do some preparation
+SEPARATE_ARGUMENTS(OIS_INCLUDE_DIRS)
+SEPARATE_ARGUMENTS(OIS_LIBRARIES)
+
+SET(OIS_INCLUDE_DIRS ${OIS_INCLUDE_DIRS})
+SET(OIS_LIBRARIES ${OIS_LIBRARIES})
+SET(OIS_LIBRARY_DIRS ${OIS_LIBRARY_DIRS})
+
+MARK_AS_ADVANCED(OIS_INCLUDE_DIRS OIS_LIBRARIES OIS_LIBRARY_DIRS)
+
+IF (OIS_INCLUDE_DIR AND OIS_LIBRARY)
+	SET(OIS_FOUND TRUE)
+ENDIF (OIS_INCLUDE_DIR AND OIS_LIBRARY)
+
+IF (OIS_FOUND)
+	IF (NOT OIS_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries : ${OIS_LIBRARY} from ${OIS_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes  : ${OIS_INCLUDE_DIR}")
+	ENDIF (NOT OIS_FIND_QUIETLY)
+ELSE (OIS_FOUND)
+	IF (OIS_FIND_REQUIRED)
+		MESSAGE(FATAL_ERROR "Could not find OIS")
+	ENDIF (OIS_FIND_REQUIRED)
+ENDIF (OIS_FOUND)

Modified: rl/branches/newton20/cmake/FindOgreNewt.cmake
===================================================================
--- rl/branches/newton20/cmake/FindOgreNewt.cmake	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/cmake/FindOgreNewt.cmake	2009-01-03 21:22:24 UTC (rev 4669)
@@ -17,6 +17,60 @@
 
 ELSE(WIN32)
 	IF(PKG_CONFIG_FOUND)
-		PKG_SEARCH_MODULE(OGRENEWT OgreNewt)
+		IF(OgreNewt_FIND_VERSION)
+			IF(OgreNewt_FIND_VERSION_EXACT)
+				PKG_SEARCH_MODULE(OGRENEWT REQUIRED OgreNewt=${OgreNewt_FIND_VERSION})
+			ELSE(OgreNewt_FIND_VERSION_EXACT)
+				PKG_SEARCH_MODULE(OGRENEWT REQUIRED OgreNewt>=${OgreNewt_FIND_VERSION})
+			ENDIF(OgreNewt_FIND_VERSION_EXACT)
+		ELSE(OgreNewt_FIND_VERSION)
+			PKG_SEARCH_MODULE(OGRENEWT REQUIRED OgreNewt)
+		ENDIF(OgreNewt_FIND_VERSION)
+		SET(OGRENEWT_INCLUDE_DIR ${OGRENEWT_INCLUDE_DIRS})
+		SET(OGRENEWT_LIBRARY ${OGRENEWT_LIBRARIES})
 	ENDIF(PKG_CONFIG_FOUND)
-ENDIF(WIN32)
\ No newline at end of file
+	IF(NOT OGRENEWT_FOUND)
+		SET(OGRENEWT_INCLUDE_SEARCH_DIRS
+		    /usr/include
+		    /usr/local/include
+		    /opt/include
+		    /opt/OgreNewt/include)
+		SET(OGRENEWT_LIBRARY_SEARCH_DIRS
+		    /usr/lib
+		    /usr/lib64
+		    /usr/local/lib
+		    /usr/local/lib64
+		    /opt/OgreNewt/lib
+		    /opt/OgreNewt/lib64)
+		SET(OGRENEWT_INC_DIR_SUFFIXES PATH_SUFFIXES OgreNewt)
+		FIND_PATH(OGRENEWT_INCLUDE_DIR OgreNewt.h
+		          PATHS ${OGRENEWT_INCLUDE_SEARCH_DIRS}
+		          PATH_SUFFIXES ${OGRENEWT_INC_DIR_SUFFIXES})
+		FIND_LIBRARY(OGRENEWT_LIBRARY OgreNewt
+		             PATHS ${OGRENEWT_LIBRARY_SEARCH_DIRS}
+		             PATH_SUFFIXES ${OGRENEWT_LIB_DIR_SUFFIXES}})
+	ENDIF(NOT OGRENEWT_FOUND)
+ENDIF(WIN32)
+
+SET(OGRENEWT_INCLUDE_DIR ${OGRENEWT_INCLUDE_DIR} CACHE STRING "Directory containing OgreNewt header files")
+SET(OGRENEWT_LIBRARY ${OGRENEWT_LIBRARY} CACHE STRING "Library name of OgreNewt library")
+
+IF(OGRENEWT_INCLUDE_DIR AND OGRENEWT_LIBRARY)
+	SET(OGRENEWT_FOUND TRUE)
+ENDIF(OGRENEWT_INCLUDE_DIR AND OGRENEWT_LIBRARY)
+
+IF(OGRENEWT_FOUND)
+	IF(NOT OGRENEWT_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries: ${OGRENEWT_LIBRARY} from ${OGRENEWT_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes: ${OGRENEWT_INCLUDE_DIR}")
+	ENDIF(NOT OGRENEWT_FIND_QUIETLY)
+ELSE(OGRENEWT_FOUND)
+	IF(OgreNewt_FIND_REQUIRED)
+		IF(NOT OGRENEWT_LIBRARY)
+			MESSAGE(SEND_ERROR, "OgreNewt library could not be found.")
+		ENDIF(NOT OGRENEWT_LIBRARY)
+		IF(NOT OGRENEWT_INCLUDE_DIR)
+			MESSAGE(SEND_ERROR "OgreNewt include files could not be found.")
+		ENDIF(NOT OGRENEWT_INCLUDE_DIR)
+	ENDIF(OgreNewt_FIND_REQUIRED)
+ENDIF(OGRENEWT_FOUND)
\ No newline at end of file

Added: rl/branches/newton20/cmake/FindOpenSteer.cmake
===================================================================
--- rl/branches/newton20/cmake/FindOpenSteer.cmake	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/cmake/FindOpenSteer.cmake	2009-01-03 21:22:24 UTC (rev 4669)
@@ -0,0 +1,68 @@
+# Find OpenSteer
+#
+# This module defines
+# OPENSTEER_FOUND       - OpenSteer was found
+# OPENSTEER_INCLUDE_DIR - Directory containing OpenSteer header files
+# OPENSTEER_LIBRARY     - Library name of OpenSteer library
+#
+# Copyright (C) 2003-2009 Team Pantheon. http://www.team-pantheon.de
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+# On a new cmake run, we do not need to be verbose
+IF(OPENSTEER_INCLUDE_DIR AND OPENSTEER_LIBRARY)
+	SET(OPENSTEER_FIND_QUIETLY TRUE)
+ENDIF(OPENSTEER_INCLUDE_DIR AND OPENSTEER_LIBRARY)
+
+IF(WIN32)
+
+ELSE(WIN32)
+	IF(PKG_CONFIG_FOUND)
+		PKG_SEARCH_MODULE(OPENSTEER opensteer)
+		SET(OPENSTEER_INCLUDE_DIR ${OPENSTEER_INCLUDE_DIRS})
+		SET(OPENSTEER_LIBRARY ${OPENSTEER_LIBRARIES})
+	ENDIF(PKG_CONFIG_FOUND)
+	IF(NOT OPENSTEER_FOUND)
+		SET(OPENSTEER_INCLUDE_SEARCH_DIRS
+		    /usr/include
+		    /usr/local/include
+		    /opt/include
+		    /opt/OpenSteer/include)
+		SET(OPENSTEER_LIBRARY_SEARCH_DIRS
+		    /usr/lib
+		    /usr/lib64
+		    /usr/local/lib
+		    /usr/local/lib64
+		    /opt/OpenSteer/lib
+		    /opt/OpenSteer/lib64)
+		SET(OPENSTEER_INC_DIR_SUFFIXES PATH_SUFFIXES OpenSteer)
+		FIND_PATH(OPENSTEER_INCLUDE_DIR SteerLibrary.h
+		          PATHS ${OPENSTEER_INCLUDE_SEARCH_DIRS}
+		          PATH_SUFFIXES ${OPENSTEER_INC_DIR_SUFFIXES})
+		FIND_LIBRARY(OPENSTEER_LIBRARY OPENSTEER
+		             PATHS ${OPENSTEER_LIBRARY_SEARCH_DIRS}
+		             PATH_SUFFIXES ${OPENSTEER_LIB_DIR_SUFFIXES}})
+	ENDIF(NOT OPENSTEER_FOUND)
+ENDIF(WIN32)
+
+SET(OPENSTEER_INCLUDE_DIR ${OPENSTEER_INCLUDE_DIR} CACHE STRING "Directory containing OpenSteer header files")
+SET(OPENSTEER_LIBRARY ${OPENSTEER_LIBRARY} CACHE STRING "Library name of OpenSteer library")
+
+IF(OPENSTEER_INCLUDE_DIR AND OPENSTEER_LIBRARY)
+	SET(OPENSTEER_FOUND TRUE)
+ENDIF(OPENSTEER_INCLUDE_DIR AND OPENSTEER_LIBRARY)
+
+IF(OPENSTEER_FOUND)
+	IF(NOT OPENSTEER_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries: ${OPENSTEER_LIBRARY} from ${OPENSTEER_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes: ${OPENSTEER_INCLUDE_DIR}")
+	ENDIF(NOT OPENSTEER_FIND_QUIETLY)
+ELSE(OPENSTEER_FOUND)
+	IF(NOT OPENSTEER_LIBRARY)
+		MESSAGE(SEND_ERROR, "OpenSteer library could not be found.")
+	ENDIF(NOT OPENSTEER_LIBRARY)
+	IF(NOT OPENSTEER_INCLUDE_DIR)
+		MESSAGE(SEND_ERROR "OpenSteer include files could not be found.")
+	ENDIF(NOT OPENSTEER_INCLUDE_DIR)
+ENDIF(OPENSTEER_FOUND)
\ No newline at end of file

Added: rl/branches/newton20/cmake/FindXercesC.cmake
===================================================================
--- rl/branches/newton20/cmake/FindXercesC.cmake	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/cmake/FindXercesC.cmake	2009-01-03 21:22:24 UTC (rev 4669)
@@ -0,0 +1,32 @@
+# - Find Xerces-C
+# Find the Xerces-C includes and library
+#
+#  XERCESC_INCLUDE_DIR - Where to find xercesc include sub-directory.
+#  XERCESC_LIBRARIES   - List of libraries when using Xerces-C.
+#  XERCESC_FOUND       - True if Xerces-C found.
+
+IF (XERCESC_INCLUDE_DIR)
+  # Already in cache, be silent.
+  SET(XERCESC_FIND_QUIETLY TRUE)
+ENDIF (XERCESC_INCLUDE_DIR)
+
+FIND_PATH(XERCESC_INCLUDE_DIR xercesc)
+
+SET(XERCESC_NAMES xerces-c xerces-c_2)
+FIND_LIBRARY(XERCESC_LIBRARY NAMES ${XERCESC_NAMES} )
+
+# Handle the QUIETLY and REQUIRED arguments and set XERCESC_FOUND to
+# TRUE if all listed variables are TRUE.
+INCLUDE(FindPackageHandleStandardArgs)
+FIND_PACKAGE_HANDLE_STANDARD_ARGS(
+  XERCESC DEFAULT_MSG
+  XERCESC_LIBRARY XERCESC_INCLUDE_DIR
+)
+
+IF(XERCESC_FOUND)
+  SET( XERCESC_LIBRARIES ${XERCESC_LIBRARY} )
+ELSE(XERCESC_FOUND)
+  SET( XERCESC_LIBRARIES )
+ENDIF(XERCESC_FOUND)
+
+MARK_AS_ADVANCED( XERCESC_LIBRARY XERCESC_INCLUDE_DIR )

Added: rl/branches/newton20/cmake/UseSWIG.cmake
===================================================================
--- rl/branches/newton20/cmake/UseSWIG.cmake	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/cmake/UseSWIG.cmake	2009-01-03 21:22:24 UTC (rev 4669)
@@ -0,0 +1,206 @@
+# - SWIG module for CMake
+# Defines the following macros:
+#   SWIG_ADD_MODULE(name language [ files ])
+#     - Define swig module with given name and specified language
+#   SWIG_LINK_LIBRARIES(name [ libraries ])
+#     - Link libraries to swig module
+# All other macros are for internal use only.
+# To get the actual name of the swig module,
+# use: ${SWIG_MODULE_name_REAL_NAME}.
+# Set Source files properties such as CPLUSPLUS and SWIG_FLAGS to specify
+# special behavior of SWIG. Also global CMAKE_SWIG_FLAGS can be used to add
+# special flags to all swig calls.
+# Another special variable is CMAKE_SWIG_OUTDIR, it allows one to specify
+# where to write all the swig generated module (swig -outdir option)
+# The name-specific variable SWIG_MODULE_<name>_EXTRA_DEPS may be used
+# to specify extra dependencies for the generated modules.
+#
+# This version was adapted to satisfy the special requirements of the Ruby
+# bindings for Rastullah. It is not identical to the included UseSWIG.cmake
+# file, which is bundeled with cmake.
+
+SET(SWIG_CXX_EXTENSION "cxx")
+SET(SWIG_EXTRA_LIBRARIES "")
+
+SET(SWIG_PYTHON_EXTRA_FILE_EXTENSION "py")
+
+#
+# For given swig module initialize variables associated with it
+#
+MACRO(SWIG_MODULE_INITIALIZE name language)
+  STRING(TOUPPER "${language}" swig_uppercase_language)
+  STRING(TOLOWER "${language}" swig_lowercase_language)
+  SET(SWIG_MODULE_${name}_LANGUAGE "${swig_uppercase_language}")
+  SET(SWIG_MODULE_${name}_SWIG_LANGUAGE_FLAG "${swig_lowercase_language}")
+
+  IF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xUNKNOWNx$")
+    MESSAGE(FATAL_ERROR "SWIG Error: Language \"${language}\" not found")
+  ENDIF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xUNKNOWNx$")
+
+  SET(SWIG_MODULE_${name}_REAL_NAME "${name}")
+  IF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xPYTHONx$")
+    SET(SWIG_MODULE_${name}_REAL_NAME "_${name}")
+  ENDIF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xPYTHONx$")
+  IF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xPERLx$")
+    SET(SWIG_MODULE_${name}_EXTRA_FLAGS "-shadow")
+  ENDIF("x${SWIG_MODULE_${name}_LANGUAGE}x" MATCHES "^xPERLx$")
+ENDMACRO(SWIG_MODULE_INITIALIZE)
+
+#
+# For a given language, input file, and output file, determine extra files that
+# will be generated. This is internal swig macro.
+#
+
+MACRO(SWIG_GET_EXTRA_OUTPUT_FILES language outfiles generatedpath infile)
+  GET_SOURCE_FILE_PROPERTY(SWIG_GET_EXTRA_OUTPUT_FILES_module_basename
+    ${infile} SWIG_MODULE_NAME)
+  IF(SWIG_GET_EXTRA_OUTPUT_FILES_module_basename STREQUAL "NOTFOUND")
+    GET_FILENAME_COMPONENT(SWIG_GET_EXTRA_OUTPUT_FILES_module_basename "${infile}" NAME_WE)
+  ENDIF(SWIG_GET_EXTRA_OUTPUT_FILES_module_basename STREQUAL "NOTFOUND")
+  FOREACH(it ${SWIG_${language}_EXTRA_FILE_EXTENSION})
+    SET(${outfiles} ${${outfiles}}
+      "${generatedpath}/${SWIG_GET_EXTRA_OUTPUT_FILES_module_basename}.${it}")
+  ENDFOREACH(it)
+ENDMACRO(SWIG_GET_EXTRA_OUTPUT_FILES)
+
+#
+# Take swig (*.i) file and add proper custom commands for it
+#
+MACRO(SWIG_ADD_SOURCE_TO_MODULE name outfiles infile)
+  SET(swig_full_infile ${infile})
+  GET_FILENAME_COMPONENT(swig_source_file_path "${infile}" PATH)
+  GET_FILENAME_COMPONENT(swig_source_file_name_we "${infile}" NAME_WE)
+  GET_SOURCE_FILE_PROPERTY(swig_source_file_generated ${infile} GENERATED)
+  GET_SOURCE_FILE_PROPERTY(swig_source_file_cplusplus ${infile} CPLUSPLUS)
+  GET_SOURCE_FILE_PROPERTY(swig_source_file_flags ${infile} SWIG_FLAGS)
+  IF("${swig_source_file_flags}" STREQUAL "NOTFOUND")
+    SET(swig_source_file_flags "")
+  ENDIF("${swig_source_file_flags}" STREQUAL "NOTFOUND")
+  SET(swig_source_file_fullname "${infile}")
+  IF(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_SOURCE_DIR}")
+    STRING(REGEX REPLACE
+      "^${CMAKE_CURRENT_SOURCE_DIR}" ""
+      swig_source_file_relative_path
+      "${swig_source_file_path}")
+  ELSE(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_SOURCE_DIR}")
+    IF(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_BINARY_DIR}")
+      STRING(REGEX REPLACE
+        "^${CMAKE_CURRENT_BINARY_DIR}" ""
+        swig_source_file_relative_path
+        "${swig_source_file_path}")
+      SET(swig_source_file_generated 1)
+    ELSE(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_BINARY_DIR}")
+      SET(swig_source_file_relative_path "${swig_source_file_path}")
+      IF(swig_source_file_generated)
+        SET(swig_source_file_fullname "${CMAKE_CURRENT_BINARY_DIR}/${infile}")
+      ELSE(swig_source_file_generated)
+        SET(swig_source_file_fullname "${CMAKE_CURRENT_SOURCE_DIR}/${infile}")
+      ENDIF(swig_source_file_generated)
+    ENDIF(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_BINARY_DIR}")
+  ENDIF(${swig_source_file_path} MATCHES "^${CMAKE_CURRENT_SOURCE_DIR}")
+
+  SET(swig_generated_file_fullname
+    "${CMAKE_CURRENT_BINARY_DIR}")
+  IF(swig_source_file_relative_path)
+    SET(swig_generated_file_fullname
+      "${swig_generated_file_fullname}/${swig_source_file_relative_path}")
+  ENDIF(swig_source_file_relative_path)
+  # If CMAKE_SWIG_OUTDIR was specified then pass it to -outdir
+  IF(CMAKE_SWIG_OUTDIR)
+    SET(swig_outdir ${CMAKE_SWIG_OUTDIR})
+  ELSE(CMAKE_SWIG_OUTDIR)
+    SET(swig_outdir ${CMAKE_CURRENT_BINARY_DIR})
+  ENDIF(CMAKE_SWIG_OUTDIR)
+  SWIG_GET_EXTRA_OUTPUT_FILES(${SWIG_MODULE_${name}_LANGUAGE}
+    swig_extra_generated_files
+    "${swig_outdir}"
+    "${infile}")
+  # add the language into the name of the file (i.e. TCL_wrap)
+  # this allows for the same .i file to be wrapped into different languages
+  SET(swig_generated_file_fullname
+    "${swig_source_file_name_we}${SWIG_MODULE_${name}_LANGUAGE}_wrap")
+
+  IF(swig_source_file_cplusplus)
+    SET(swig_generated_file_fullname
+      "${swig_generated_file_fullname}.${SWIG_CXX_EXTENSION}")
+  ELSE(swig_source_file_cplusplus)
+    SET(swig_generated_file_fullname
+      "${swig_generated_file_fullname}.c")
+  ENDIF(swig_source_file_cplusplus)
+
+  #MESSAGE("Full path to source file: ${swig_source_file_fullname}")
+  #MESSAGE("Full path to the output file: ${swig_generated_file_fullname}")
+  GET_DIRECTORY_PROPERTY(cmake_include_directories INCLUDE_DIRECTORIES)
+  SET(swig_include_dirs)
+  FOREACH(it ${cmake_include_directories})
+    SET(swig_include_dirs ${swig_include_dirs} "-I${it}")
+  ENDFOREACH(it)
+
+  SET(swig_special_flags)
+  # default is c, so add c++ flag if it is c++
+  IF(swig_source_file_cplusplus)
+    SET(swig_special_flags ${swig_special_flags} "-c++")
+  ENDIF(swig_source_file_cplusplus)
+  SET(swig_extra_flags)
+  IF(SWIG_MODULE_${name}_EXTRA_FLAGS)
+    SET(swig_extra_flags ${swig_extra_flags} ${SWIG_MODULE_${name}_EXTRA_FLAGS})
+  ENDIF(SWIG_MODULE_${name}_EXTRA_FLAGS)
+  ADD_CUSTOM_COMMAND(
+    OUTPUT "${swig_generated_file_fullname}" ${swig_extra_generated_files}
+    COMMAND "${SWIG_EXECUTABLE}"
+    ARGS "-${SWIG_MODULE_${name}_SWIG_LANGUAGE_FLAG}"
+    ${swig_source_file_flags}
+    ${CMAKE_SWIG_FLAGS}
+    -outdir ${swig_outdir}
+    ${swig_special_flags}
+    ${swig_extra_flags}
+    ${swig_include_dirs}
+    -o "${swig_generated_file_fullname}"
+    "${swig_source_file_fullname}"
+    MAIN_DEPENDENCY "${swig_source_file_fullname}"
+    DEPENDS ${SWIG_MODULE_${name}_EXTRA_DEPS}
+    COMMENT "Swig source")
+  SET_SOURCE_FILES_PROPERTIES("${swig_generated_file_fullname}" ${swig_extra_generated_files}
+    PROPERTIES GENERATED 1)
+  SET(${outfiles} "${swig_generated_file_fullname}" ${swig_extra_generated_files})
+ENDMACRO(SWIG_ADD_SOURCE_TO_MODULE)
+
+#
+# Create Swig module
+#
+MACRO(SWIG_ADD_MODULE name language)
+  SWIG_MODULE_INITIALIZE(${name} ${language})
+  SET(swig_dot_i_sources)
+  SET(swig_other_sources)
+  FOREACH(it ${ARGN})
+    IF(${it} MATCHES ".*\\.i$")
+      SET(swig_dot_i_sources ${swig_dot_i_sources} "${it}")
+    ELSE(${it} MATCHES ".*\\.i$")
+      SET(swig_other_sources ${swig_other_sources} "${it}")
+    ENDIF(${it} MATCHES ".*\\.i$")
+  ENDFOREACH(it)
+
+  SET(swig_generated_sources)
+  FOREACH(it ${swig_dot_i_sources})
+    SWIG_ADD_SOURCE_TO_MODULE(${name} swig_generated_source ${it})
+    SET(swig_generated_sources ${swig_generated_sources} "${swig_generated_source}")
+  ENDFOREACH(it)
+  GET_DIRECTORY_PROPERTY(swig_extra_clean_files ADDITIONAL_MAKE_CLEAN_FILES)
+  SET_DIRECTORY_PROPERTIES(PROPERTIES
+    ADDITIONAL_MAKE_CLEAN_FILES "${swig_extra_clean_files};${swig_generated_sources}")
+  ADD_LIBRARY(${SWIG_MODULE_${name}_REAL_NAME}
+    SHARED
+    ${swig_generated_sources}
+    ${swig_other_sources})
+ENDMACRO(SWIG_ADD_MODULE)
+
+#
+# Like TARGET_LINK_LIBRARIES but for swig modules
+#
+MACRO(SWIG_LINK_LIBRARIES name)
+  IF(SWIG_MODULE_${name}_REAL_NAME)
+    TARGET_LINK_LIBRARIES(${SWIG_MODULE_${name}_REAL_NAME} ${ARGN})
+  ELSE(SWIG_MODULE_${name}_REAL_NAME)
+    MESSAGE(SEND_ERROR "Cannot find Swig library \"${name}\".")
+  ENDIF(SWIG_MODULE_${name}_REAL_NAME)
+ENDMACRO(SWIG_LINK_LIBRARIES name)

Added: rl/branches/newton20/engine/CMakeLists.txt
===================================================================
--- rl/branches/newton20/engine/CMakeLists.txt	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
@@ -0,0 +1,10 @@
+# Library directories
+ADD_SUBDIRECTORY(common)
+ADD_SUBDIRECTORY(ai)
+ADD_SUBDIRECTORY(ui)
+ADD_SUBDIRECTORY(core)
+ADD_SUBDIRECTORY(rules)
+ADD_SUBDIRECTORY(script)
+
+# Main program directory
+ADD_SUBDIRECTORY(startup)
\ No newline at end of file

Modified: rl/branches/newton20/engine/ai/CMakeLists.txt
===================================================================
--- rl/branches/newton20/engine/ai/CMakeLists.txt	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/ai/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
@@ -5,7 +5,8 @@
 ${RL_RULES_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
 ${CEGUI_INCLUDE_DIRS}
-${OGRENEWT_INCLUDE_DIRS})
+${OGRENEWT_INCLUDE_DIRS}
+${OPENSTEER_INCLUDE_DIR})
 
 SET(RlAi_LIB_SRCS
 src/Agent.cpp
@@ -26,6 +27,7 @@
 src/DialogElement.cpp
 src/DialogImplication.cpp
 src/DialogLoader.cpp
+src/DialogLoaderImpl.cpp
 src/DialogManager.cpp
 src/DialogOption.cpp
 src/DialogParagraph.cpp
@@ -45,9 +47,11 @@
 
 ADD_LIBRARY(RlAi SHARED ${RlAi_LIB_SRCS})
 
-TARGET_LINK_LIBRARIES(RlAi ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARIES})
+TARGET_LINK_LIBRARIES(RlAi ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARIES} ${OPENSTEER_LIBRARY})
 
 SET_TARGET_PROPERTIES(RlAi PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLAI_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLAI_EXPORTS)
+
+INSTALL(TARGETS RlAi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Modified: rl/branches/newton20/engine/ai/include/DialogLoaderImpl.h
===================================================================
--- rl/branches/newton20/engine/ai/include/DialogLoaderImpl.h	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/ai/include/DialogLoaderImpl.h	2009-01-03 21:22:24 UTC (rev 4669)
@@ -76,4 +76,5 @@
         std::map<Ogre::String, DialogPrototype*> mDialogs;
 
     };
-}
\ No newline at end of file
+}
+

Modified: rl/branches/newton20/engine/common/CMakeLists.txt
===================================================================
--- rl/branches/newton20/engine/common/CMakeLists.txt	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/common/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
@@ -1,5 +1,6 @@
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include
+${XERCESC_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
 ${CEGUI_INCLUDE_DIRS})
 
@@ -25,9 +26,11 @@
 
 ADD_LIBRARY(RlCommon SHARED ${RlCommon_LIB_SRCS})
 
-TARGET_LINK_LIBRARIES(RlCommon ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES})
+TARGET_LINK_LIBRARIES(RlCommon ${XERCESC_LIBRARIES} ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${Boost_FILESYSTEM_LIBRARY})
 
 SET_TARGET_PROPERTIES(RlCommon PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLCOMMON_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLCOMMON_EXPORTS)
+
+INSTALL(TARGETS RlCommon LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Modified: rl/branches/newton20/engine/core/CMakeLists.txt
===================================================================
--- rl/branches/newton20/engine/core/CMakeLists.txt	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/core/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
@@ -1,9 +1,12 @@
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include
+${CMAKE_CURRENT_SOURCE_DIR}/include/nulldriver
 ${RL_COMMON_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
 ${CEGUI_INCLUDE_DIRS}
-${OGRENEWT_INCLUDE_DIRS})
+${OGRENEWT_INCLUDE_DIR}
+${MESHMAGICK_INCLUDE_DIR}
+${RUBY_INCLUDE_PATH})
 
 SET(RlCore_LIB_SRCS
 src/Actor.cpp
@@ -84,11 +87,15 @@
 src/nulldriver/NullSound.cpp
 src/nulldriver/NullSoundStitching.cpp)
 
+ADD_DEFINITIONS(-DRL_MODULEDIR="${DATAROOTDIR}/${DATADIRNAME}")
+
 ADD_LIBRARY(RlCore SHARED ${RlCore_LIB_SRCS})
 
-#TARGET_LINK_LIBRARIES(RlCore ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES})
+TARGET_LINK_LIBRARIES(RlCore ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARY} ${MESHMAGICK_LIBRARY} ${OIS_LIBRARIES} ${RUBY_LIBRARY})
 
 SET_TARGET_PROPERTIES(RlCore PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLCORE_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLCORE_EXPORTS)
+
+INSTALL(TARGETS RlCore LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Modified: rl/branches/newton20/engine/core/include/SaveAble.h
===================================================================
--- rl/branches/newton20/engine/core/include/SaveAble.h	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/core/include/SaveAble.h	2009-01-03 21:22:24 UTC (rev 4669)
@@ -55,4 +55,5 @@
 }
 
 
-#endif
\ No newline at end of file
+#endif
+

Modified: rl/branches/newton20/engine/core/include/SaveAbleCollection.h
===================================================================
--- rl/branches/newton20/engine/core/include/SaveAbleCollection.h	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/core/include/SaveAbleCollection.h	2009-01-03 21:22:24 UTC (rev 4669)
@@ -31,4 +31,5 @@
 		Ogre::String mId;
 	};
 
-}
\ No newline at end of file
+}
+

Modified: rl/branches/newton20/engine/core/include/SaveAbleFactory.h
===================================================================
--- rl/branches/newton20/engine/core/include/SaveAbleFactory.h	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/core/include/SaveAbleFactory.h	2009-01-03 21:22:24 UTC (rev 4669)
@@ -41,3 +41,4 @@
 }
 
 #endif
+

Modified: rl/branches/newton20/engine/core/include/SaveAbleManager.h
===================================================================
--- rl/branches/newton20/engine/core/include/SaveAbleManager.h	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/core/include/SaveAbleManager.h	2009-01-03 21:22:24 UTC (rev 4669)
@@ -41,4 +41,5 @@
 	};
 }
 
-#endif
\ No newline at end of file
+#endif
+

Modified: rl/branches/newton20/engine/core/src/SaveAble.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/SaveAble.cpp	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/core/src/SaveAble.cpp	2009-01-03 21:22:24 UTC (rev 4669)
@@ -55,4 +55,5 @@
 	{
 		return mId;
 	}
-}
\ No newline at end of file
+}
+

Modified: rl/branches/newton20/engine/core/src/SaveAbleCollection.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/SaveAbleCollection.cpp	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/core/src/SaveAbleCollection.cpp	2009-01-03 21:22:24 UTC (rev 4669)
@@ -16,4 +16,5 @@
 
 #include "stdinc.h"
 
-#include "SaveAbleCollection.h"
\ No newline at end of file
+#include "SaveAbleCollection.h"
+

Modified: rl/branches/newton20/engine/core/src/SaveAbleFactory.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/SaveAbleFactory.cpp	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/core/src/SaveAbleFactory.cpp	2009-01-03 21:22:24 UTC (rev 4669)
@@ -16,4 +16,5 @@
 
 #include "stdinc.h"
 
-#include "SaveAbleFactory.h"
\ No newline at end of file
+#include "SaveAbleFactory.h"
+

Modified: rl/branches/newton20/engine/core/src/SaveAbleManager.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/SaveAbleManager.cpp	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/core/src/SaveAbleManager.cpp	2009-01-03 21:22:24 UTC (rev 4669)
@@ -16,4 +16,5 @@
 
 #include "stdinc.h"
 
-#include "SaveAbleManager.h"
\ No newline at end of file
+#include "SaveAbleManager.h"
+

Added: rl/branches/newton20/engine/rules/CMakeLists.txt
===================================================================
--- rl/branches/newton20/engine/rules/CMakeLists.txt	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/rules/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
@@ -0,0 +1,86 @@
+INCLUDE_DIRECTORIES(
+${CMAKE_CURRENT_SOURCE_DIR}/include
+${RL_COMMON_INCLUDE_DIR}
+${RL_CORE_INCLUDE_DIR}
+${OGRE_INCLUDE_DIRS}
+${CEGUI_INCLUDE_DIRS}
+${OGRENEWT_INCLUDE_DIR})
+
+SET(RlRules_LIB_SRCS
+src/Action.cpp
+src/ActionManager.cpp
+src/ApplyDamageJob.cpp
+src/Armor.cpp
+src/Combat.cpp
+src/Combatant.cpp
+src/CombatManager.cpp
+src/Container.cpp
+src/Creature.cpp
+src/CreatureController.cpp
+src/CreatureControllerManager.cpp
+src/Date.cpp
+src/DsaDataLoader.cpp
+src/DsaManager.cpp
+src/Effect.cpp
+src/EffectFactory.cpp
+src/EffectManagementTask.cpp
+src/EffectManager.cpp
+src/Eigenschaft.cpp
+src/EigenschaftenStateSet.cpp
+src/GameEventLog.cpp
+src/GameObject.cpp
+src/GameObjectManager.cpp
+src/GameTimeSource.cpp
+src/GlobalProperties.cpp
+src/GoToJob.cpp
+src/FetchItemJob.cpp
+src/Item.cpp
+src/Inventory.cpp
+src/JournalEntry.cpp
+src/Kampfaktion.cpp
+src/Kampftechnik.cpp
+src/ObjectStateChangeEvent.cpp
+src/ObjectStateChangeEventSource.cpp
+src/ObjectStateChangeListener.cpp
+src/PartyManager.cpp
+src/Quest.cpp
+src/QuestBook.cpp
+src/QuestEvent.cpp
+src/QuestListener.cpp
+src/RulesSubsystem.cpp
+src/SelectionHelper.cpp
+src/Selector.cpp
+src/Slot.cpp
+src/SonderfertigkeitenStateSet.cpp
+src/StateSet.cpp
+src/Talent.cpp
+src/Talentgruppe.cpp
+src/TalentStateSet.cpp
+src/WaitJob.cpp
+src/Weapon.cpp
+src/ZauberStateSet.cpp
+src/FallDownMovement.cpp
+src/JogFastMovement.cpp
+src/JogMovement.cpp
+src/JumpHighMovement.cpp
+src/JumpLongMovement.cpp
+src/JumpToTargetMovement.cpp
+src/LieDownMovement.cpp
+src/RotateMovement.cpp
+src/SneakMovement.cpp
+src/SprintMovement.cpp
+src/StandAroundMovement.cpp
+src/StepRecognitionMovement.cpp
+src/StrafeMovement.cpp
+src/WalkMovement.cpp)
+
+ADD_LIBRARY(RlRules SHARED ${RlRules_LIB_SRCS})
+
+TARGET_LINK_LIBRARIES(RlRules ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARY})
+
+SET_TARGET_PROPERTIES(RlRules PROPERTIES
+	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}
+	DEFINE_SYMBOL RLRULES_EXPORTS)
+
+INSTALL(TARGETS RlRules LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Added: rl/branches/newton20/engine/script/CMakeLists.txt
===================================================================
--- rl/branches/newton20/engine/script/CMakeLists.txt	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/script/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
@@ -0,0 +1,51 @@
+# Include required cmake macros
+INCLUDE(UseSWIG)
+
+INCLUDE_DIRECTORIES(
+${CMAKE_CURRENT_SOURCE_DIR}/include
+${RL_COMMON_INCLUDE_DIR}
+${RL_CORE_INCLUDE_DIR}
+${RL_RULES_INCLUDE_DIR}
+${RL_AI_INCLUDE_DIR}
+${RL_UI_INCLUDE_DIR}
+${OGRE_INCLUDE_DIRS}
+${CEGUI_INCLUDE_DIRS}
+${OGRENEWT_INCLUDE_DIR}
+${OIS_INCLUDE_DIRS}
+${RUBY_INCLUDE_PATH})
+
+SET_SOURCE_FILES_PROPERTIES(swig/RlExports.i PROPERTIES CPLUSPLUS ON)
+
+SWIG_ADD_MODULE(RlScript RUBY
+swig/RlExports.i
+src/AbstractMapNodeProcessor.cpp
+src/EntityNodeProcessor.cpp
+src/EnvironmentProcessor.cpp
+src/GameObjectNodeProcessor.cpp
+src/LightNodeProcessor.cpp
+src/MapLoader.cpp
+src/ParticleSystemNodeProcessor.cpp
+src/PlaneNodeProcessor.cpp
+src/Scene.cpp
+src/SceneLoader.cpp
+src/SceneManager.cpp
+src/ScriptSubsystem.cpp
+src/ScriptObjectMarker.cpp
+src/SoundNodeProcessor.cpp
+src/TriggerFactory.cpp
+src/WaypointProcessor.cpp
+src/ZoneProcessor.cpp)
+
+SWIG_LINK_LIBRARIES(RlScript ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARY} ${OIS_LIBRARIES} ${RUBY_LIBRARY})
+
+SET_TARGET_PROPERTIES(RlScript PROPERTIES
+	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}
+	DEFINE_SYMBOL RLSCRIPT_EXPORTS)
+
+IF(NOT WIN32)
+	SET_TARGET_PROPERTIES(RlScript PROPERTIES
+		LINK_FLAGS "-Wl,--defsym -Wl,Init_libRlScript=Init_RlScript")
+ENDIF(NOT WIN32)
+
+INSTALL(TARGETS RlScript LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Modified: rl/branches/newton20/engine/script/src/Scene.cpp
===================================================================
--- rl/branches/newton20/engine/script/src/Scene.cpp	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/script/src/Scene.cpp	2009-01-03 21:22:24 UTC (rev 4669)
@@ -125,4 +125,5 @@
     return keys;
 }
 
-}
\ No newline at end of file
+}
+

Added: rl/branches/newton20/engine/startup/CMakeLists.txt
===================================================================
--- rl/branches/newton20/engine/startup/CMakeLists.txt	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/startup/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
@@ -0,0 +1,20 @@
+INCLUDE_DIRECTORIES(
+${RL_COMMON_INCLUDE_DIR}
+${RL_CORE_INCLUDE_DIR}
+${RL_RULES_INCLUDE_DIR}
+${RL_AI_INCLUDE_DIR}
+${RL_UI_INCLUDE_DIR}
+${RL_SCRIPT_INCLUDE_DIR}
+${OGRE_INCLUDE_DIRS}
+${CEGUI_INCLUDE_DIRS}
+${OGRENEWT_INCLUDE_DIR}
+${OIS_INCLUDE_DIRS})
+
+SET(Rastullah_APP_SRCS
+src/RastullahMain.cpp)
+
+ADD_EXECUTABLE(rastullah ${Rastullah_APP_SRCS})
+
+TARGET_LINK_LIBRARIES(rastullah RlCommon RlCore RlRules RlAi RlUi RlScript)
+
+INSTALL(TARGETS rastullah RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/${BINDIR})
\ No newline at end of file

Added: rl/branches/newton20/engine/ui/CMakeLists.txt
===================================================================
--- rl/branches/newton20/engine/ui/CMakeLists.txt	2009-01-03 21:08:37 UTC (rev 4668)
+++ rl/branches/newton20/engine/ui/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
@@ -0,0 +1,77 @@
+INCLUDE_DIRECTORIES(
+${CMAKE_CURRENT_SOURCE_DIR}/include
+${RL_COMMON_INCLUDE_DIR}
+${RL_CORE_INCLUDE_DIR}
+${RL_RULES_INCLUDE_DIR}
+${RL_AI_INCLUDE_DIR}
+${OGRE_INCLUDE_DIRS}
+${OIS_INCLUDE_DIRS}
+${CEGUI_INCLUDE_DIRS}
+${CEGUIOGRE_INCLUDE_DIR}
+${OGRENEWT_INCLUDE_DIR}
+${RUBY_INCLUDE_PATH})
+
+SET(RlUi_LIB_SRCS
+src/AboutWindow.cpp
+src/ActionChoiceWindow.cpp
+src/AbstractWindow.cpp
+src/CharacterSelectionWindow.cpp
+src/CharacterSheetWindow.cpp
+src/CharacterStateWindow.cpp
+src/CloseConfirmationWindow.cpp
+src/CombatControlState.cpp
+src/CombatGui.cpp
+src/CombatWindow.cpp
+src/CommandMapper.cpp
+src/ConfigComponent.cpp
+src/ContainerContentWindow.cpp
+src/ControlState.cpp
+src/Console.cpp
+src/CutsceneControlState.cpp
+src/DebugWindow.cpp
+src/DialogControlState.cpp
+src/DialogWindow.cpp
+src/FreeflightControlState.cpp
+src/GameLoggerWindow.cpp
+src/GameObjectInfoWindow.cpp
+src/GameOverWindow.cpp
+src/GameSaveLoadWindow.cpp
+src/GameSettings.cpp
+src/InfoPopup.cpp
+src/InGameMenuWindow.cpp
+src/InputManager.cpp
+src/InventoryWindow.cpp
+src/ItemDragContainer.cpp
+src/ItemDescriptionDragContainer.cpp
+src/ItemIconDragContainer.cpp
+src/JournalWindow.cpp
+src/ListboxWrappedTextItem.cpp
+src/LogWindow.cpp
+src/MainMenuWindow.cpp
+src/MainMenuEngineWindow.cpp
+src/MainMenuLoadWindow.cpp
+src/MessageWindow.cpp
+src/MovementControlState.cpp
+src/ObjectDescriptionWindow.cpp
+src/PlaylistWindow.cpp
+src/ProgressWindow.cpp
+src/PropertiesWindow.cpp
+src/RenderSystemConfigComponent.cpp
+src/SoundConfig.cpp
+src/SoundDriverConfigComponent.cpp
+src/SubtitleWindow.cpp
+src/UiSubsystem.cpp
+src/WindowFactory.cpp
+src/WindowFadeJob.cpp
+src/WindowManager.cpp)
+
+ADD_LIBRARY(RlUi SHARED ${RlUi_LIB_SRCS})
+
+TARGET_LINK_LIBRARIES(RlUi ${OGRE_LIBRARIES} ${OIS_LIBRARIES} ${CEGUI_LIBRARIES} ${CEGUIOGRE_LIBRARY} ${OGRENEWT_LIBRARY} ${RUBY_LIBRARY})
+
+SET_TARGET_PROPERTIES(RlUi PROPERTIES
+	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}
+	DEFINE_SYMBOL RLRULES_EXPORTS)
+
+INSTALL(TARGETS RlUi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file



From chrber at mail.berlios.de  Sat Jan  3 23:40:15 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 3 Jan 2009 23:40:15 +0100
Subject: [Dsa-hl-svn] r4670 - in rl/branches/newton20: cmake engine/ui
	plugins plugins/fmod4driver
Message-ID: <200901032240.n03MeFQ3004723@sheep.berlios.de>

Author: chrber
Date: 2009-01-03 23:40:12 +0100 (Sat, 03 Jan 2009)
New Revision: 4670

Modified:
   rl/branches/newton20/cmake/FindOgreNewt.cmake
   rl/branches/newton20/engine/ui/CMakeLists.txt
   rl/branches/newton20/plugins/CMakeLists.txt
   rl/branches/newton20/plugins/fmod4driver/CMakeLists.txt
Log:
Corrected wrong cache variable resulting in always displaying of library and include variable values for OgreNewt
Added installation of fmod4driver
Copied CMakeLists.txt for plugins from trunk
Corrected the name for the preprocessor libRlUi symbol


Modified: rl/branches/newton20/cmake/FindOgreNewt.cmake
===================================================================
--- rl/branches/newton20/cmake/FindOgreNewt.cmake	2009-01-03 21:22:24 UTC (rev 4669)
+++ rl/branches/newton20/cmake/FindOgreNewt.cmake	2009-01-03 22:40:12 UTC (rev 4670)
@@ -1,17 +1,17 @@
 # Find OgreNewt (Newton physic library bindings for OGRE)
 #
 # This module defines
-# OGRENEWT_FOUND
-# OGRENEWT_INCLUDE_DIR
-# OGRENEWT_LIBRARY
+# OGRENEWT_FOUND       - OgreNewt was found
+# OGRENEWT_INCLUDE_DIR - Directory containing OgreNewt header files
+# OGRENEWT_LIBRARY     - Library name of OgreNewt library
 #
 # Redistribution and use is allowed according to the terms of the BSD license.
 # For details see the accompanying COPYING-CMAKE-SCRIPTS file.
 
 # On a new cmake run, we do not need to be verbose
-IF(OGRENEWT_INCLUDE_DIRS AND OGRENEWT_LIBRARY)
+IF(OGRENEWT_INCLUDE_DIR AND OGRENEWT_LIBRARY)
 	SET(OGRENEWT_FOUND_QUIETLY TRUE)
-ENDIF(OGRENEWT_INCLUDE_DIRS AND OGRENEWT_LIBRARY)
+ENDIF(OGRENEWT_INCLUDE_DIR AND OGRENEWT_LIBRARY)
 
 IF(WIN32)
 

Modified: rl/branches/newton20/engine/ui/CMakeLists.txt
===================================================================
--- rl/branches/newton20/engine/ui/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
+++ rl/branches/newton20/engine/ui/CMakeLists.txt	2009-01-03 22:40:12 UTC (rev 4670)
@@ -72,6 +72,6 @@
 SET_TARGET_PROPERTIES(RlUi PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLRULES_EXPORTS)
+	DEFINE_SYMBOL RLUI_EXPORTS)
 
 INSTALL(TARGETS RlUi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Modified: rl/branches/newton20/plugins/CMakeLists.txt
===================================================================
--- rl/branches/newton20/plugins/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
+++ rl/branches/newton20/plugins/CMakeLists.txt	2009-01-03 22:40:12 UTC (rev 4670)
@@ -1,13 +1,13 @@
-IF (ENABLE_FMOD4)
+IF (WITH_FMOD4)
 	FIND_PACKAGE(FMODEx 4.20)
 	IF (FMODEX_FOUND)
 		ADD_SUBDIRECTORY(fmod4driver)
 	ENDIF (FMODEX_FOUND)
-ENDIF (ENABLE_FMOD4)
+ENDIF (WITH_FMOD4)
 
-IF (ENABLE_OPENAL)
+IF (WITH_OPENAL)
 	FIND_PACKAGE(OpenAL)
 	IF (OPENAL_FOUND)
 		ADD_SUBDIRECTORY(openaldriver)
 	ENDIF (OPENAL_FOUND)
-ENDIF (ENABLE_OPENAL)
\ No newline at end of file
+ENDIF (WITH_OPENAL)
\ No newline at end of file

Modified: rl/branches/newton20/plugins/fmod4driver/CMakeLists.txt
===================================================================
--- rl/branches/newton20/plugins/fmod4driver/CMakeLists.txt	2009-01-03 21:22:24 UTC (rev 4669)
+++ rl/branches/newton20/plugins/fmod4driver/CMakeLists.txt	2009-01-03 22:40:12 UTC (rev 4670)
@@ -1,11 +1,11 @@
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include
+${RL_COMMON_INCLUDE_DIR}
+${RL_CORE_INCLUDE_DIR}
+${RL_UI_INCLUDE_DIR}
 ${FMODEX_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
-${CEGUI_INCLUDE_DIRS}
-${RL_COMMON_INCLUDE_DIR}
-${RL_CORE_INCLUDE_DIR}
-${RL_UI_INCLUDE_DIR})
+${CEGUI_INCLUDE_DIRS})
 
 SET(RlFmod4Driver_LIB_SRCS
 src/Fmod4ConfigComponent.cpp
@@ -14,4 +14,13 @@
 src/Fmod4Listener.cpp
 src/Fmod4Sound.cpp)
 
-ADD_LIBRARY(RlFmod4Driver SHARED ${RlFmod4Driver_LIB_SRCS})
\ No newline at end of file
+ADD_LIBRARY(RlFmod4Driver SHARED ${RlFmod4Driver_LIB_SRCS})
+
+TARGET_LINK_LIBRARIES(RlFmod4Driver ${FMODEX_LIBRARY} ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES})
+
+SET_TARGET_PROPERTIES(RlFmod4Driver PROPERTIES
+	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}
+	DEFINE_SYMBOL RLFMOD4DRIVER_EXPORTS)
+
+INSTALL(TARGETS RlFmod4Driver LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file



From chrber at mail.berlios.de  Sat Jan  3 23:41:15 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 3 Jan 2009 23:41:15 +0100
Subject: [Dsa-hl-svn] r4671 - in rl/trunk: . cmake engine/ui
	plugins/fmod4driver
Message-ID: <200901032241.n03MfFOL004848@sheep.berlios.de>

Author: chrber
Date: 2009-01-03 23:41:13 +0100 (Sat, 03 Jan 2009)
New Revision: 4671

Modified:
   rl/trunk/CMakeLists.txt
   rl/trunk/cmake/FindOgreNewt.cmake
   rl/trunk/engine/ui/CMakeLists.txt
   rl/trunk/plugins/fmod4driver/CMakeLists.txt
Log:
Corrected wrong cache variable resulting in always displaying of library and include variable values for OgreNewt
Added installation of fmod4driver
Copied CMakeLists.txt for plugins from trunk
Corrected the name for the preprocessor libRlUi symbol


Modified: rl/trunk/CMakeLists.txt
===================================================================
--- rl/trunk/CMakeLists.txt	2009-01-03 22:40:12 UTC (rev 4670)
+++ rl/trunk/CMakeLists.txt	2009-01-03 22:41:13 UTC (rev 4671)
@@ -1,6 +1,6 @@
 PROJECT(RL)
 
-CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2)
 
 # Include required cmake macros
 INCLUDE(FeatureSummary)

Modified: rl/trunk/cmake/FindOgreNewt.cmake
===================================================================
--- rl/trunk/cmake/FindOgreNewt.cmake	2009-01-03 22:40:12 UTC (rev 4670)
+++ rl/trunk/cmake/FindOgreNewt.cmake	2009-01-03 22:41:13 UTC (rev 4671)
@@ -1,17 +1,17 @@
 # Find OgreNewt (Newton physic library bindings for OGRE)
 #
 # This module defines
-# OGRENEWT_FOUND
-# OGRENEWT_INCLUDE_DIR
-# OGRENEWT_LIBRARY
+# OGRENEWT_FOUND       - OgreNewt was found
+# OGRENEWT_INCLUDE_DIR - Directory containing OgreNewt header files
+# OGRENEWT_LIBRARY     - Library name of OgreNewt library
 #
 # Redistribution and use is allowed according to the terms of the BSD license.
 # For details see the accompanying COPYING-CMAKE-SCRIPTS file.
 
 # On a new cmake run, we do not need to be verbose
-IF(OGRENEWT_INCLUDE_DIRS AND OGRENEWT_LIBRARY)
+IF(OGRENEWT_INCLUDE_DIR AND OGRENEWT_LIBRARY)
 	SET(OGRENEWT_FOUND_QUIETLY TRUE)
-ENDIF(OGRENEWT_INCLUDE_DIRS AND OGRENEWT_LIBRARY)
+ENDIF(OGRENEWT_INCLUDE_DIR AND OGRENEWT_LIBRARY)
 
 IF(WIN32)
 

Modified: rl/trunk/engine/ui/CMakeLists.txt
===================================================================
--- rl/trunk/engine/ui/CMakeLists.txt	2009-01-03 22:40:12 UTC (rev 4670)
+++ rl/trunk/engine/ui/CMakeLists.txt	2009-01-03 22:41:13 UTC (rev 4671)
@@ -72,6 +72,6 @@
 SET_TARGET_PROPERTIES(RlUi PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLRULES_EXPORTS)
+	DEFINE_SYMBOL RLUI_EXPORTS)
 
 INSTALL(TARGETS RlUi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Modified: rl/trunk/plugins/fmod4driver/CMakeLists.txt
===================================================================
--- rl/trunk/plugins/fmod4driver/CMakeLists.txt	2009-01-03 22:40:12 UTC (rev 4670)
+++ rl/trunk/plugins/fmod4driver/CMakeLists.txt	2009-01-03 22:41:13 UTC (rev 4671)
@@ -1,11 +1,11 @@
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include
+${RL_COMMON_INCLUDE_DIR}
+${RL_CORE_INCLUDE_DIR}
+${RL_UI_INCLUDE_DIR}
 ${FMODEX_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
-${CEGUI_INCLUDE_DIRS}
-${RL_COMMON_INCLUDE_DIR}
-${RL_CORE_INCLUDE_DIR}
-${RL_UI_INCLUDE_DIR})
+${CEGUI_INCLUDE_DIRS})
 
 SET(RlFmod4Driver_LIB_SRCS
 src/Fmod4ConfigComponent.cpp
@@ -14,4 +14,13 @@
 src/Fmod4Listener.cpp
 src/Fmod4Sound.cpp)
 
-ADD_LIBRARY(RlFmod4Driver SHARED ${RlFmod4Driver_LIB_SRCS})
\ No newline at end of file
+ADD_LIBRARY(RlFmod4Driver SHARED ${RlFmod4Driver_LIB_SRCS})
+
+TARGET_LINK_LIBRARIES(RlFmod4Driver ${FMODEX_LIBRARY} ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES})
+
+SET_TARGET_PROPERTIES(RlFmod4Driver PROPERTIES
+	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}
+	DEFINE_SYMBOL RLFMOD4DRIVER_EXPORTS)
+
+INSTALL(TARGETS RlFmod4Driver LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file



From chrber at mail.berlios.de  Sun Jan  4 15:31:29 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 15:31:29 +0100
Subject: [Dsa-hl-svn] r4672 - rl/trunk
Message-ID: <200901041431.n04EVTdn029148@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 15:31:27 +0100 (Sun, 04 Jan 2009)
New Revision: 4672

Modified:
   rl/trunk/CMakeLists.txt
Log:
Made cmake 2.6.2 mandatory


Modified: rl/trunk/CMakeLists.txt
===================================================================
--- rl/trunk/CMakeLists.txt	2009-01-03 22:41:13 UTC (rev 4671)
+++ rl/trunk/CMakeLists.txt	2009-01-04 14:31:27 UTC (rev 4672)
@@ -1,6 +1,6 @@
 PROJECT(RL)
 
-CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2)
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
 
 # Include required cmake macros
 INCLUDE(FeatureSummary)
@@ -52,4 +52,4 @@
 ADD_SUBDIRECTORY(engine)
 ADD_SUBDIRECTORY(plugins)
 
-PRINT_ENABLED_FEATURES()
\ No newline at end of file
+PRINT_ENABLED_FEATURES()



From chrber at mail.berlios.de  Sun Jan  4 15:32:07 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 15:32:07 +0100
Subject: [Dsa-hl-svn] r4673 - rl/branches/newton20
Message-ID: <200901041432.n04EW70Y029179@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 15:32:06 +0100 (Sun, 04 Jan 2009)
New Revision: 4673

Modified:
   rl/branches/newton20/CMakeLists.txt
Log:
Made cmake 2.6.2 mandatory


Modified: rl/branches/newton20/CMakeLists.txt
===================================================================
--- rl/branches/newton20/CMakeLists.txt	2009-01-04 14:31:27 UTC (rev 4672)
+++ rl/branches/newton20/CMakeLists.txt	2009-01-04 14:32:06 UTC (rev 4673)
@@ -1,6 +1,6 @@
 PROJECT(RL)
 
-CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2)
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
 
 # Include required cmake macros
 INCLUDE(FeatureSummary)
@@ -52,4 +52,4 @@
 ADD_SUBDIRECTORY(engine)
 ADD_SUBDIRECTORY(plugins)
 
-PRINT_ENABLED_FEATURES()
\ No newline at end of file
+PRINT_ENABLED_FEATURES()



From chrber at mail.berlios.de  Sun Jan  4 15:44:45 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 15:44:45 +0100
Subject: [Dsa-hl-svn] r4674 - in rl/trunk: . docs docs/src engine engine/ai
	engine/ai/include engine/ai/src engine/common
	engine/common/include engine/common/src engine/core
	engine/core/include engine/core/src engine/rules
	engine/rules/include engine/rules/src engine/script
	engine/script/include engine/script/src engine/script/swig
	engine/startup engine/startup/src engine/ui engine/ui/include
	engine/ui/src plugins plugins/fmod4driver
	plugins/fmod4driver/include plugins/fmod4driver/src tests
	tests/RlDialogTests tests/coretests tests/multimediatests
	tests/rulestests tools
Message-ID: <200901041444.n04EijNg030264@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 15:44:24 +0100 (Sun, 04 Jan 2009)
New Revision: 4674

Removed:
   rl/trunk/Makefile.am
   rl/trunk/bootstrap
   rl/trunk/configure.in
   rl/trunk/docs/Makefile.am
   rl/trunk/docs/src/Makefile.am
   rl/trunk/engine/Makefile.am
   rl/trunk/engine/ai/Makefile.am
   rl/trunk/engine/ai/include/Makefile.am
   rl/trunk/engine/ai/src/Makefile.am
   rl/trunk/engine/common/Makefile.am
   rl/trunk/engine/common/include/Makefile.am
   rl/trunk/engine/common/src/Makefile.am
   rl/trunk/engine/core/Makefile.am
   rl/trunk/engine/core/include/Makefile.am
   rl/trunk/engine/core/src/Makefile.am
   rl/trunk/engine/rules/Makefile.am
   rl/trunk/engine/rules/include/Makefile.am
   rl/trunk/engine/rules/src/Makefile.am
   rl/trunk/engine/script/Makefile.am
   rl/trunk/engine/script/include/Makefile.am
   rl/trunk/engine/script/src/Makefile.am
   rl/trunk/engine/script/swig/Makefile.am
   rl/trunk/engine/startup/Makefile.am
   rl/trunk/engine/startup/src/Makefile.am
   rl/trunk/engine/ui/Makefile.am
   rl/trunk/engine/ui/include/Makefile.am
   rl/trunk/engine/ui/src/Makefile.am
   rl/trunk/m4/
   rl/trunk/plugins/Makefile.am
   rl/trunk/plugins/fmod4driver/Makefile.am
   rl/trunk/plugins/fmod4driver/include/Makefile.am
   rl/trunk/plugins/fmod4driver/src/Makefile.am
   rl/trunk/tests/Makefile.am
   rl/trunk/tests/RlDialogTests/Makefile.am
   rl/trunk/tests/coretests/Makefile.am
   rl/trunk/tests/multimediatests/Makefile.am
   rl/trunk/tests/rulestests/Makefile.am
   rl/trunk/tools/Makefile.am
Log:
Removed autotools build system


Deleted: rl/trunk/Makefile.am
===================================================================
--- rl/trunk/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,7 +0,0 @@
-SUBDIRS =   engine plugins tools docs
-if with_tests 
-  SUBDIRS += tests
-endif
-
-doc:
-	cd docs; ${MAKE} doc

Deleted: rl/trunk/bootstrap
===================================================================
--- rl/trunk/bootstrap	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/bootstrap	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,6 +0,0 @@
-#!/bin/sh
-echo "Bootstrap..."
-
-# Fire up autotools
-libtoolize --force && aclocal -I m4 $ACLOCAL_FLAGS && autoheader && automake --include-deps --add-missing --foreign && autoconf 
-

Deleted: rl/trunk/configure.in
===================================================================
--- rl/trunk/configure.in	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/configure.in	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,200 +0,0 @@
-AC_PREREQ(2.50)
-
-AC_INIT(RL, 0.3.0)
-AC_CANONICAL_TARGET
-AM_INIT_AUTOMAKE([1.6.1 foreign no-installinfo no-installman subdir-objects])
-AC_CONFIG_HEADER(engine/common/include/config.h)
-AC_CONFIG_MACRO_DIR([m4])
-
-##AC_CANONICAL_TARGET
-
-dnl Check for programs
-AC_LANG([C++])
-AC_PROG_CXX
-AC_PROG_INSTALL
-AM_PROG_LIBTOOL
-
-
-# ***** DEBUGGING
-AC_ARG_ENABLE(debug,AS_HELP_STRING([--enable-debug],[enable debugging @<:@default=no@:>@]))
-if test "$enable_debug" = "yes"; then
-    CXXFLAGS="$CXXFLAGS -g -O0 -DDEBUG"
-else
-    CXXFLAGS="$CXXFLAGS -O2 -DNDEBUG -s"
-    INSTALL="$INSTALL -s"
-fi
-# ***** PROFILING
-AC_ARG_ENABLE([profiling], AS_HELP_STRING([--enable-profiling], [enable profiling @<:@default=no@:>@]))
-if test "$enable_profiling" = "yes"; then
-    CXXFLAGS="$CXXFLAGS -pg -g"
-    LDFLAGS="$LDFLAGS -pg -g"
-fi
-
-# Pthreads
-CXXFLAGS="$CXXFLAGS -pthread -DRL_USE_PCH"
-
-#AC_ARG_ENABLE(test-coverage,[  --enable-test-coverage  enable coverage testing [default=no]])
-#if test "$enable_test_coverage" = "yes"; then
-#    CXXFLAGS="$CXXFLAGS -fprofile-arcs -ftest-coverage"
-#fi
-
-AC_ARG_ENABLE(tests,[  --enable-tests  enable unit testing [default=no]])
-if test "$enable_tests" = "yes"; then
-    AM_PATH_CPPUNIT(1.0.0, [],
-        [
-            AM_CONDITIONAL(with_tests, [false])
-              AC_MSG_ERROR([Cannot find cppunit libs needed for testing])
-        ])
-    AM_CONDITIONAL(with_tests, [true])
-else
-    AM_CONDITIONAL(with_tests, [false])
-fi
-
-# fmod4
-AC_ARG_ENABLE([fmod4], [AS_HELP_STRING([--enable-fmod4], [enable fmod 4.xx (FMODex) support @<:@default=check@:>@])],,[enable_fmod4=check])
-AS_IF([test "x$enable_fmod4" != xno],
-      [AC_CHECK_LIB([fmodex], [main],
-          [AC_CHECK_HEADER([fmodex/fmod.hpp],
-              [AC_SUBST([RL_AUDIOPLUGINS], ["$RL_AUDIOPLUGINS fmod4driver"])]
-              [AC_SUBST([enable_fmod4], ["yes"])],
-              [if test "x$enable_fmod4" != xcheck; then
-                  AC_MSG_ERROR([fmod 4.xx support was explicitly enabled, but headers were not found])
-              fi])
-          ],
-          [if test "x$enable_fmod4" != xcheck; then
-              AC_MSG_ERROR([fmod 4.xx support was explicitly enabled, but libraries were not found])
-           fi]
-          [AC_SUBST([enable_fmod4], ["no"])])
-      ])
-
-# Ogre
-PKG_CHECK_MODULES([OGRE], [OGRE >= 1.4.0], [OGRE_VERSION=`pkg-config OGRE --modversion`])
-AC_ARG_WITH([ogre-plugins], [AS_HELP_STRING([--with-ogre-plugins=@<:@=DIR@:>@], [set location of Ogre plugins])] ,[OGRE_PLUGINDIR="$withval"], [OGRE_PLUGINDIR=`pkg-config OGRE --variable=plugindir`])
-AC_SUBST(OGRE_PLUGINDIR)
-
-# CEGUI
-PKG_CHECK_MODULES([CEGUI], [CEGUI >= 0.6.0])
-PKG_CHECK_MODULES([CEGUIOGRE], [CEGUI-OGRE])
-
-dnl Other stuff we need
-AC_CHECK_PROG(HAVE_DOXYGEN_PROG, doxygen, `which doxygen`, false)
-
-# Newton
-AC_CHECK_LIB([Newton], [fopen], [], AC_MSG_ERROR([Can't find libNewton]) )
-AC_CHECK_HEADERS([Newton.h], , AC_MSG_ERROR([Can't find Newton headers]))
-
-# OgreNewt
-PKG_CHECK_MODULES([OgreNewt], [OgreNewt >= 0.07])
-
-# OpenSteer
-PKG_CHECK_MODULES([OpenSteer], [opensteer >= 0.0.9])
-
-# meshmagick libraries
-PKG_CHECK_MODULES(meshmagick, meshmagick >= 0.4.0)
-
-# XERCES
-AC_CHECK_HEADERS(xercesc/util/XercesVersion.hpp, ,
-    [AC_MSG_ERROR([cannot find libxerces headers]) ])
-AC_CHECK_LIB(xerces-c,main,,
-    [AC_MSG_ERROR([cannot find the libxerces library]) ])
-
-# OIS
-PKG_CHECK_MODULES(OIS, OIS >= 1.0.0)
-
-# Boost
-AX_BOOST_BASE(1.34)
-AX_BOOST_FILESYSTEM()
-
-dnl --------------------------------------------
-dnl       determine location of RUBY (auto)
-dnl --------------------------------------------
-
-dnl determine location of ruby
-AC_PATH_PROG(ruby_path, ruby, no)
-if test $ruby_path = no; then
-    AC_MSG_ERROR(Cannot find Ruby! This program requires Ruby-1.8.0)
-fi
-
-dnl determine if the installed Ruby is suitable for us
-if `$ruby_path -e 'exit 1 if VERSION >= "1.8.0"'` ; then
-    AC_MSG_ERROR(Your Ruby is too old! At least Ruby-1.8.0 is required)
-fi
-
-dnl locate "ruby.h", "intern.h"
-ruby_h_dir=`$ruby_path -r mkmf -e 'print Config::CONFIG[["archdir"]]'`
-RUBY_CFLAGS="-I$ruby_h_dir"
-
-dnl locate libruby-static.a + extra libraries (libcrypt)
-ruby_lib=`$ruby_path -r mkmf -e 'c=Config::CONFIG; libs=c[["libdir"]]+"/"+c[["LIBRUBY"]]+" "+c[["LIBS"]]; print libs'`
-RUBY_LIBS=$ruby_lib
-
-AC_SUBST(RUBY_CFLAGS)
-AC_SUBST(RUBY_LIBS)
-
-#dnl Test for swig version
-SWIG_PROG(1.3.31-rl)
-SWIG_ENABLE_CXX
-SWIG_RUBY
-
-dnl Define the directory, where RL should look for modules
-if test "x${prefix}" = "xNONE"; then
-    prefix=${ac_default_prefix}
-fi
-dnl Must double eval here, to replace ${datadir} and after that ${prefix}
-eval RL_MODULEDIR="${datadir}"
-eval RL_MODULEDIR="${RL_MODULEDIR}/rastullah"
-AC_SUBST(RL_MODULEDIR)
-
-
-dnl Create the makefiles
-AC_CONFIG_FILES([Makefile \
-        docs/Makefile docs/src/Makefile \
-        engine/Makefile \
-        engine/ai/Makefile engine/ai/src/Makefile engine/ai/include/Makefile\
-        engine/common/Makefile engine/common/src/Makefile engine/common/include/Makefile \
-        engine/core/Makefile engine/core/src/Makefile engine/core/include/Makefile \
-        engine/ui/Makefile engine/ui/src/Makefile engine/ui/include/Makefile \
-        engine/rules/Makefile engine/rules/src/Makefile engine/rules/include/Makefile \
-        engine/script/Makefile engine/script/swig/Makefile engine/script/src/Makefile engine/script/include/Makefile \
-        engine/startup/Makefile engine/startup/src/Makefile \
-        tests/Makefile tests/coretests/Makefile tests/rulestests/Makefile \
-        tests/multimediatests/Makefile tests/RlDialogTests/Makefile \
-        plugins/Makefile \
-        plugins/fmod4driver/Makefile plugins/fmod4driver/include/Makefile plugins/fmod4driver/src/Makefile \
-        tools/Makefile
-    ])
-
-AC_OUTPUT
-
-eval RL_GAMEDIR="${bindir}"
-eval RL_GAMEDIR="${RL_GAMEDIR}"
-
-dnl Show a summary about important directories
-echo
-echo "***********************************************************"
-echo "* Rastullahs Lockenpracht - Configuration Results Summary *"
-echo "***********************************************************"
-echo
-echo " Code options:"
-echo "       Building RL in debug mode:          ${enable_debug-no}"
-echo "       Enable unit testing:                ${enable_tests-no}"
-echo
-echo " Sound plugins:"
-echo "       FMOD 4 plugin:                      ${enable_fmod4-no}"
-echo
-echo " Directory settings:"
-echo "       rastullah binary will be placed in: ${RL_GAMEDIR}"
-echo "       Module directory:                   ${RL_MODULEDIR}"
-echo
-
-# Remove dots from version to allow integer comparision
-OGRE_INTVERSION=`echo $OGRE_VERSION | sed -r "s@\.@@g"`
-if [[ $OGRE_INTVERSION -lt 145 ]]; then
-    echo "Your OGRE version is $OGRE_VERSION. The Rastullah team recommends"
-    echo "using version 1.4.5, which supports LiSPSM Shadows."
-    echo "Rastullah will run nevertheless, but the shadow's quality"
-    echo "will be decreased."
-fi
-
-echo
-echo "Type make && make install and pray!"

Deleted: rl/trunk/docs/Makefile.am
===================================================================
--- rl/trunk/docs/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/docs/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,11 +0,0 @@
-SUBDIRS = src
-
-doc:
-	cd src; ${MAKE} doc
-	
-deactivated-install-data-local: doc
-	install -d ${pkgdatadir}/docs/html
-	install -m 644 api/html/*.html ${pkgdatadir}/docs/html
-	install -m 644 api/html/*.png ${pkgdatadir}/docs/html
-	install -m 644 api/html/*.css ${pkgdatadir}/docs/html
-	
\ No newline at end of file

Deleted: rl/trunk/docs/src/Makefile.am
===================================================================
--- rl/trunk/docs/src/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/docs/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,8 +0,0 @@
-
-
-
-all:
-	@echo Nothing to do.
-	
-doc: 
-	$(HAVE_DOXYGEN_PROG) html.cfg

Deleted: rl/trunk/engine/Makefile.am
===================================================================
--- rl/trunk/engine/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,2 +0,0 @@
-SUBDIRS = common ai ui core rules script startup
-

Deleted: rl/trunk/engine/ai/Makefile.am
===================================================================
--- rl/trunk/engine/ai/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/ai/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,3 +0,0 @@
-SUBDIRS = include src
-
-

Deleted: rl/trunk/engine/ai/include/Makefile.am
===================================================================
--- rl/trunk/engine/ai/include/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/ai/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,45 +0,0 @@
-noinst_HEADERS =
-	Agent.h \
-	AgentManager.h \
-	AgentCombatState.h \
-	AgentDialogState.h \
-	AgentState.h \
-	AgentSteeringState.h \
-	AiPrerequisites.h \
-	AiSubsystem.h \
-	AiWorld.h \
-	AStarCosts.h \
-	AStar.h \
-	AStarHeuristic.h \
-	AStarNodePool.h \
-	AStarWayPointNode.h \
-	CreatureWalkPathJob.h \
-	Dialog.h \
-	DialogCondition.h \
-	DialogElement.h \
-	DialogElementSelection.h \
-	DialogImplication.h \
-	DialogLoader.h \
-	DialogLoaderImpl.h \
-	DialogManager.h \
-	DialogOption.h \
-	DialogResponse.h \
-	DialogVariable.h \
-	FuzzyState.h \
-	FuzzyStateMachine.h \
-	Landmark.h \
-	LandmarkPath.h \
-	PhysicalObstacle.h \
-	SimpleVehicle.h \
-	SteeringMachine.h \
-	SteeringVehicle.h \
-	WalkPathBehaviour.h \
-	WayPointNode.h \
-	WayPointGraph.h \
-	WayPointGraphManager.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/trunk/engine/ai/src/Makefile.am
===================================================================
--- rl/trunk/engine/ai/src/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/ai/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,41 +0,0 @@
-INCLUDES = $(OGRE_CFLAGS) $(OgreNewt_CFLAGS) $(STLPORT_CFLAGS) $(CEGUIOGRE_CFLAGS) $(BOOST_CPPFLAGS) $(OpenSteer_CFLAGS) \
-	-I../include -I ../../core/include -I ../../common/include -I ../../dialog/include -I ../../rules/include -I../include/predicates
-
-lib_LTLIBRARIES = libRlAi.la
-libRlAi_la_LDFLAGS = $(OgreNewt_LIBS) $(OpenSteer_LIBS) $(LIBS)
-libRlAi_la_SOURCES = \
-	Agent.cpp \
-	AgentCombatState.cpp \
-	AgentDialogState.cpp \
-	AgentManager.cpp \
-	AgentSteeringState.cpp \
-	AiSubsystem.cpp \
-	AiWorld.cpp \
-	AStarCosts.cpp \
-	AStar.cpp \
-	AStarHeuristic.cpp \
-	AStarNodePool.cpp \
-	AStarWayPointNode.cpp \
-	CreatureWalkPathJob.cpp \
-	Dialog.cpp \
-	DialogCondition.cpp \
-	DialogElement.cpp \
-	DialogImplication.cpp \
-	DialogLoader.cpp \
-	DialogLoaderImpl.cpp \
-	DialogManager.cpp \
-	DialogOption.cpp \
-	DialogParagraph.cpp \
-	DialogResponse.cpp \
-	DialogVariable.cpp \
-	FuzzyState.cpp \
-	FuzzyStateMachine.cpp \
-	Landmark.cpp \
-	LandmarkPath.cpp \
-	PhysicalObstacle.cpp \
-	SimpleVehicle.cpp \
-	SteeringVehicle.cpp \
-	WalkPathBehaviour.cpp \
-	WayPointNode.cpp \
-	WayPointGraph.cpp \
-	WayPointGraphManager.cpp

Deleted: rl/trunk/engine/common/Makefile.am
===================================================================
--- rl/trunk/engine/common/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/common/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,3 +0,0 @@
-SUBDIRS = include src
-
-

Deleted: rl/trunk/engine/common/include/Makefile.am
===================================================================
--- rl/trunk/engine/common/include/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/common/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,33 +0,0 @@
-noinst_HEADERS =
-	CommonPrerequisites.h \
-	ConfigFile.h \
-	config.h \
-	EventCaster.h \
-	EventListener.h \
-	EventObject.h \
-	EventSource.h \
-	Exception.h \
-	FixRubyHeaders.h \
-	GameTask.h \
-	Logger.h \
-	MathUtil.h \
-	OgreXercesInput.h \
-    Properties.h \
-    Property.h \
-    RastullahPrerequisites.h \
-    ScriptWrapper.h \
-	Sleep.h \
-	Tripel.h \
-	WriteableDataStream.h \
-	WriteableDataStreamFormatTarget.h \
-	WriteableFileSystemArchiv.h \
-	XmlProcessor.h \
-    XmlPropertyReader.h \
-	XmlPropertyWriter.h \
-	XmlResource.h \
-	XmlResourceManager.h
-
-CLEANFILES = stdinc.h.gch
-all-local: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h 

Deleted: rl/trunk/engine/common/src/Makefile.am
===================================================================
--- rl/trunk/engine/common/src/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/common/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,24 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(STLPORT_CFLAGS) $(CEGUI_CFLAGS) $(BOOST_CPPFLAGS) -I../include -I../../core/include
-
-lib_LTLIBRARIES = libRlCommon.la
-libRlCommon_la_LDFLAGS = $(RUBY_LIBS) $(OGRE_LIBS) $(CEGUI_LIBS) $(BOOST_FILESYSTEM_LIB) $(LIBS)
-libRlCommon_la_SOURCES = \
-  ../include/stdinc.h \
-  ConfigFile.cpp \
-  EventObject.cpp \
-  EventSource.cpp \
-  GameTask.cpp \
-  Logger.cpp \
-  MathUtil.cpp \
-  OgreXercesInput.cpp \
-  Properties.cpp \
-  Property.cpp \
-  ScriptWrapper.cpp \
-  WriteableDataStream.cpp \
-  WriteableDataStreamFormatTarget.cpp \
-  WriteableFileSystemArchiv.cpp \
-  XmlProcessor.cpp \
-  XmlPropertyReader.cpp \
-  XmlPropertyWriter.cpp \
-  XmlResource.cpp \
-  XmlResourceManager.cpp   

Deleted: rl/trunk/engine/core/Makefile.am
===================================================================
--- rl/trunk/engine/core/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/core/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1 +0,0 @@
-SUBDIRS = include src

Deleted: rl/trunk/engine/core/include/Makefile.am
===================================================================
--- rl/trunk/engine/core/include/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/core/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,93 +0,0 @@
- noinst_HEADERS = \
-	Actor.h \
-	ActorControlledObject.h \
-	ActorManager.h \
-	AnimationManager.h \
-	BaseAnimation.h \
-	BoxPrimitive.h \
-	CameraObject.h \
-	ConfigurationManager.h \
-	ContentLoader.h \
-	ContentModule.h \
-	CoreDefines.h \
-	CoreMessages.h \
-	CorePrerequisites.h \
-	CoreSubsystem.h \
-	DebugVisualisable.h \
-	DebugVisualsManager.h\
-	DotSceneLoader.h \
-	DotSceneOctreeWorld.h \
-	FadeAnimation.h \
-	GameAreaEvent.h \
-	GameAreaEventSource.h \
-	GameAreaListener.h \
-	GameAreaTypes.h \
-	GameEventManager.h \
-	GameLoop.h \
-	Job.h \
-	JobListener.h \
-	JobQueue.h \
-	JobScheduler.h \
-	LightFadeJob.h \
-	LightObject.h \
-	LineSetPrimitive.h \
-	LinearSoundFadeFunctor.h \
-	ListenerMovable.h \
-	ListenerObject.h \
-	MergeableMeshObject.h \
-	MessageObject.h \
-	MessagePump.h \
-	MessageType.h \
-	MeshAnimation.h \
-	MeshObject.h \
-	MovableText.h \
-	ParticleSystemObject.h \
-	PhysicsContactListener.h \
-	PhysicalObject.h \
-	PhysicalThing.h \
-	PhysicsGenericContactCallback.h \
-	PhysicsController.h \
-	PhysicsManager.h \
-	PhysicsMaterialRaycast.h \
-	PlayAnimationJob.h \
-	PlaySoundJob.h \
-	PolynomicSoundFadeFunctor.h \
-	PrimitiveObject.h \
-	QuadTree.h \
-	RubyInterpreter.h \
-	SaveAble.h \
-	SaveAbleCollection.h \
-	SaveAbleFactory.h \
-	SaveAbleManager.h \
-	SaveGameFile.h \
-	SaveGameFileReader.h \
-	SaveGameFileWriter.h \
-	SaveGameManager.h \
-	SceneQuery.h \
-	Sound.h \
-	SoundDriver.h \
-	SoundEvents.h \
-	SoundManager.h \
-	SoundObject.h \
-	SoundResource.h \
-	SoundFadeJob.h \
-	SoundFadeFunctor.h \
-	SoundStitching.h \
-	SoundStitchingObject.h \
-	StartAnimationJob.h \
-	TimeSource.h \
-	TrackAnimation.h \
-	Trigger.h \
-	World.h \
-	Zone.h \
-	ZoneManager.h \
-	nulldriver/NullDriver.h \
-	nulldriver/NullSound.h \
-	nulldriver/NullListener.h \
-	nulldriver/NullSoundStitching.h
-	
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/trunk/engine/core/src/Makefile.am
===================================================================
--- rl/trunk/engine/core/src/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/core/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,86 +0,0 @@
-# Default values, if configuration file is missing (hard coded)
-AM_CPPFLAGS = -DRL_MODULEDIR=\"$(RL_MODULEDIR)\" -DOGRE_PLUGINDIR=\"$(OGRE_PLUGINDIR)\"
-
-INCLUDES = -I../include $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(CEGUI_CFLAGS) $(STLPORT_CFLAGS) $(BOOST_CPPFLAGS) $(OgreNewt_CFLAGS) \
-           -I../../common/include -I../include/nulldriver $(meshmagick_CFLAGS)
-
-lib_LTLIBRARIES = libRlCore.la
-libRlCore_la_LDFLAGS = $(OGRE_LIBS) $(CEGUI_LIBS) $(RUBY_LIBS) $(LIBS) $(meshmagick_LIBS) $(OgreNewt_LIBS)
-libRlCore_la_SOURCES = \
-	Actor.cpp \
-	ActorControlledObject.cpp \
-	ActorManager.cpp \
-	AnimationManager.cpp \
-	BaseAnimation.cpp \
-	BoxPrimitive.cpp \
-	CameraObject.cpp \
-	ConfigurationManager.cpp \
-	ContentLoader.cpp \
-	ContentModule.cpp \
-	CoreSubsystem.cpp \
-	DebugVisualisable.cpp \
-	DebugVisualsManager.cpp \
-	DotSceneLoader.cpp \
-	DotSceneOctreeWorld.cpp \
-	FadeAnimation.cpp \
-	GameAreaEvent.cpp \
-	GameAreaEventSource.cpp \
-	GameAreaListener.cpp \
-	GameAreaTypes.cpp \
-	GameEventManager.cpp \
-	GameLoop.cpp \
-	Job.cpp \
-	JobQueue.cpp \
-	JobScheduler.cpp \
-	LightObject.cpp \
-	LightFadeJob.cpp \
-	LineSetPrimitive.cpp \
-	ListenerObject.cpp \
-	ListenerMovable.cpp \
-	LinearSoundFadeFunctor.cpp \
-	MergeableMeshObject.cpp \
-	MeshAnimation.cpp \
-	MeshObject.cpp \
-	MessagePump.cpp \
-	MovableText.cpp \
-	ParticleSystemObject.cpp \
-	PhysicsContactListener.cpp \
-	PhysicalThing.cpp \
-	PhysicsGenericContactCallback.cpp \
-	PhysicsManager.cpp \
-	PhysicsMaterialRaycast.cpp \
-	PlayAnimationJob.cpp \
-	PlaySoundJob.cpp \
-	PolynomicSoundFadeFunctor.cpp \
-	PrimitiveObject.cpp \
-	RubyInterpreter.cpp \
-	SaveAble.cpp \
-	SaveAbleCollection.cpp \
-	SaveAbleFactory.cpp \
-	SaveAbleManager.cpp \
-	SaveGameFile.cpp \
-	SaveGameFileReader.cpp \
-	SaveGameFileWriter.cpp \
-	SaveGameManager.cpp \
-	SceneQuery.cpp \
-	SoundManager.cpp \
-	SoundObject.cpp \
-	SoundDriver.cpp \
-	Sound.cpp \
-	SoundEvents.cpp \
-	SoundResource.cpp \
-	SoundFadeJob.cpp \
-	SoundFadeFunctor.cpp \
-	SoundStitching.cpp \
-	SoundStitchingObject.cpp \
-	StartAnimationJob.cpp \
-	TimeSource.cpp \
-	Trigger.cpp \
-	TrackAnimation.cpp \
-	World.cpp \
-	Zone.cpp \
-	ZoneManager.cpp \
-	nulldriver/NullDriver.cpp \
-	nulldriver/NullListener.cpp \
-	nulldriver/NullSound.cpp \
-	nulldriver/NullSoundStitching.cpp

Deleted: rl/trunk/engine/rules/Makefile.am
===================================================================
--- rl/trunk/engine/rules/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/rules/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1 +0,0 @@
-SUBDIRS = include src

Deleted: rl/trunk/engine/rules/include/Makefile.am
===================================================================
--- rl/trunk/engine/rules/include/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/rules/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,76 +0,0 @@
-noinst_HEADERS = \
-	Action.h \
-	ActionManager.h \
-	Armor.h \
-	Combat.h \
-	Combatant.h \
-	CombatManager.h \
-	Container.h \
-	Creature.h \
-	CreatureController.h \
-	CreatureControllerManager.h \
-	Date.h \
-	DsaDataLoader.h \
-	DsaManager.h \
-	Effect.h \
-	EffectFactory.h \
-	EffectManagementTask.h \
-	EffectManager.h \
-	Eigenschaft.h \
-	EigenschaftenStateSet.h \
-	GameEventLog.h \
-	GameObject.h \
-	GameObjectStateListener.h \
-	GameTimeSource.h \
-	GlobalProperties.h \
-	GoToJob.h \
-	Item.h \
-	Inventory.h \
-	JournalEntry.h \
-	Kampftechnik.h \
-	ObjectStateChangeEvent.h \
-	ObjectStateChangeEventSource.h \
-	ObjectStateChangeListener.h \
-	PartyManager.h \
-	Quest.h \
-	QuestBook.h \
-	QuestEvent.h \
-	QuestListener.h \
-	RulesPrerequisites.h \
-	RulesSubsystem.h \
-	SelectionHelper.h \
-	Selector.h \
-	Slot.h \
-	StateSet.h \
-	SonderfertigkeitenStateSet.h \
-	Talent.h \
-	Talentgruppe.h \
-	TalentInputIterator.h \
-	TalentStateSet.h \
-	WaitJob.h \
-	Weapon.h \
-	ZauberStateSet.h \
-	AbstractMovement.h \
-	FallDownMovement.h \
-	JogBackwardsMovement.h \
-	JogFastMovement.h \
-	JogMovement.h \
-	JumpHighMovement.h \
-	JumpLongMovement.h \
-	JumpToTargetMovement.h \
-	LieDownMovement.h \
-	RotateMovement.h \
-	SneakMovement.h \
-	SprintMovement.h \
-	StandAroundMovement.h \
-	StepRecognitionMovement.h \
-	StrafeMovement.h \
-	WalkBackwardsMovement.h \
-	WalkMovement.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h
-

Deleted: rl/trunk/engine/rules/src/Makefile.am
===================================================================
--- rl/trunk/engine/rules/src/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/rules/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,71 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(CEGUI_CFLAGS) $(STLPORT_CFLAGS) $(BOOST_CPPFLAGS) $(OgreNewt_CFLAGS) -I../include -I../../common/include -I../../core/include
-
-lib_LTLIBRARIES = libRlRules.la
-libRlRules_la_LDFLAGS = $(RUBY_LIBS) $(OGRE_LIBS) $(CEGUI_LIBS) $(LIBS) $(OgreNewt_LIBS)
-libRlRules_la_SOURCES = \
-	Action.cpp \
-	ActionManager.cpp \
-	ApplyDamageJob.cpp \
-	Armor.cpp \
-	Combat.cpp \
-	Combatant.cpp \
-	CombatManager.cpp \
-	Container.cpp \
-	Creature.cpp \
-	CreatureController.cpp \
-	CreatureControllerManager.cpp \
-	Date.cpp \
-	DsaDataLoader.cpp \
-	DsaManager.cpp \
-	Effect.cpp \
-	EffectFactory.cpp \
-	EffectManagementTask.cpp \
-	EffectManager.cpp \
-	Eigenschaft.cpp \
-	EigenschaftenStateSet.cpp \
-	GameEventLog.cpp \
-	GameObject.cpp \
-	GameObjectManager.cpp \
-	GameTimeSource.cpp \
-	GlobalProperties.cpp \
-	GoToJob.cpp \
-	FetchItemJob.cpp \
-	Item.cpp \
-	Inventory.cpp \
-	JournalEntry.cpp \
-	Kampfaktion.cpp \
-	Kampftechnik.cpp \
-	ObjectStateChangeEvent.cpp \
-	ObjectStateChangeEventSource.cpp \
-	ObjectStateChangeListener.cpp \
-	PartyManager.cpp \
-	Quest.cpp \
-	QuestBook.cpp \
-	QuestEvent.cpp \
-	QuestListener.cpp \
-	RulesSubsystem.cpp \
-	SelectionHelper.cpp \
-	Selector.cpp \
-	Slot.cpp \
-	SonderfertigkeitenStateSet.cpp \
-	StateSet.cpp \
-	Talent.cpp \
-	Talentgruppe.cpp \
-	TalentStateSet.cpp \
-	WaitJob.cpp \
-	Weapon.cpp \
-	ZauberStateSet.cpp \
-	FallDownMovement.cpp \
-	JogFastMovement.cpp \
-	JogMovement.cpp \
-	JumpHighMovement.cpp \
-	JumpLongMovement.cpp \
-	JumpToTargetMovement.cpp \
-	LieDownMovement.cpp \
-	RotateMovement.cpp \
-	SneakMovement.cpp \
-	SprintMovement.cpp \
-	StandAroundMovement.cpp \
-	StepRecognitionMovement.cpp \
-	StrafeMovement.cpp \
-	WalkMovement.cpp

Deleted: rl/trunk/engine/script/Makefile.am
===================================================================
--- rl/trunk/engine/script/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/script/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1 +0,0 @@
-SUBDIRS = swig src
\ No newline at end of file

Deleted: rl/trunk/engine/script/include/Makefile.am
===================================================================
--- rl/trunk/engine/script/include/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/script/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,26 +0,0 @@
-noinst_HEADERS = \
-	AbstractMapNodeProcessor.h \
-	EntityNodeProcessor.h \
-	EnvironmentProcessor.h \
-	GameObjectNodeProcessor.h \
-	LightNodeProcessor.h \
-	MapLoader.h \
-	ParticleSystemNodeProcessor.h \
-	PlaneNodeProcessor.h \
-	TriggerFactory.h \
-	Scene.h \
-	SceneLoader.h \
-	SceneManager.h \
-	ScriptObjectMarker.h \
-	ScriptPrerequisites.h \
-	ScriptSubsystem.h \
-	SoundNodeProcessor.h \
-	WaypointProcessor.h \
-	UnifiedFactory.h \
-	ZoneProcessor.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/trunk/engine/script/src/Makefile.am
===================================================================
--- rl/trunk/engine/script/src/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/script/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,33 +0,0 @@
-INCLUDES = $(CEGUI_CFLAGS) $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(OgreNewt_CFLAGS) $(OIS_CFLAGS) \
-	$(STLPORT_CFLAGS) $(BOOST_CPPFLAGS) -I../include -I../../common/include \
-	-I../../core/include -I../../rules/include -I../../ui/include \
-	-I../../ai/include
-
-lib_LTLIBRARIES = libRlScript.la
-libRlScript_la_LDFLAGS = \
-    $(top_builddir)/engine/common/src/libRlCommon.la \
-    $(top_builddir)/engine/core/src/libRlCore.la \
-    $(top_builddir)/engine/ui/src/libRlUi.la \
-    $(top_builddir)/engine/rules/src/libRlRules.la \
-    $(CEGUI_LIBS) $(OGRE_LIBS) $(RUBY_LIBS) $(LIBS) \
-    -Wl,--defsym -Wl,Init_libRlScript=Init_RlScript
-	
-libRlScript_la_SOURCES = \
-	AbstractMapNodeProcessor.cpp \
-	EntityNodeProcessor.cpp \
-	EnvironmentProcessor.cpp \
-	GameObjectNodeProcessor.cpp \
-	LightNodeProcessor.cpp \
-	MapLoader.cpp \
-	ParticleSystemNodeProcessor.cpp \
-	PlaneNodeProcessor.cpp \
-	Scene.cpp \
-	SceneLoader.cpp \
-	SceneManager.cpp \
-	ScriptSubsystem.cpp \
-	ScriptObjectMarker.cpp \
-	SoundNodeProcessor.cpp \
-	TriggerFactory.cpp \
-	WaypointProcessor.cpp \
-	ZoneProcessor.cpp \
-	../swig/RlExports.cxx 

Deleted: rl/trunk/engine/script/swig/Makefile.am
===================================================================
--- rl/trunk/engine/script/swig/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/script/swig/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,15 +0,0 @@
-CLEANFILES = RlExports.cxx
-
-all: RlExports.cxx
-
-RlExports.cxx: RlCore.head.swig RlCore.swig RlRules.head.swig \
- RlRules.swig RlUi.head.swig RlUi.swig RlAi.head.swig RlAi.swig \
- RlScript.head.swig RlScript.swig RlCommon.head.swig RlCommon.swig \
- RlExports.i TypeMaps.i RlExports.i \
- TypeDynamicDirector.swig TypeOgreColourValue.swig TypeOgreQuaternion.swig \
- TypeOgreRadian.swig TypeOgreReal.swig TypeOgreString.swig TypeOgreStringVector.swig \
- TypeOgreVector3.swig TypeRlCeGuiString.swig TypeRlCeGuiStringVector.swig \
- TypeRlProperty.swig TypeRlPropertyKeys.swig TypeStdPairIntInt.swig
- 
-.i.cxx:
-	$(SWIG) $(SWIG_RUBY_OPT) -o $@ $<

Deleted: rl/trunk/engine/startup/Makefile.am
===================================================================
--- rl/trunk/engine/startup/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/startup/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,2 +0,0 @@
-SUBDIRS = src
-

Deleted: rl/trunk/engine/startup/src/Makefile.am
===================================================================
--- rl/trunk/engine/startup/src/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/startup/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,17 +0,0 @@
-INCLUDES = $(CEGUI_CFLAGS) $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(OIS_CFLAGS) $(STLPORT_CFLAGS) \
-	$(BOOST_CPPFLAGS) -I../../common/include -I../../core/include -I../../rules/include \
-	-I../../ui/include -I../../script/include -I../../ai/include $(OgreNewt_CFLAGS)
-
-bin_PROGRAMS = rastullah
-rastullah_SOURCES = RastullahMain.cpp
-rastullah_LDADD = \
-    $(top_builddir)/engine/common/src/libRlCommon.la \
-    $(top_builddir)/engine/core/src/libRlCore.la \
-    $(top_builddir)/engine/ui/src/libRlUi.la \
-    $(top_builddir)/engine/rules/src/libRlRules.la \
-    $(top_builddir)/engine/script/src/libRlScript.la \
-    $(top_builddir)/engine/ai/src/libRlAi.la \
-    $(RUBY_LIBS) $(LIBS) $(CEGUI_LIBS) $(OGRE_LIBS) $(OgreNewt_LIBS)
-
-
-

Deleted: rl/trunk/engine/ui/Makefile.am
===================================================================
--- rl/trunk/engine/ui/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/ui/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,2 +0,0 @@
-SUBDIRS =  include src
-

Deleted: rl/trunk/engine/ui/include/Makefile.am
===================================================================
--- rl/trunk/engine/ui/include/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/ui/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,59 +0,0 @@
-noinst_HEADERS = \
-    AboutWindow.h \
-    ActionChoiceWindow.h \
-    AbstractWindow.h \
-    CeGuiHelper.h \
-    CharacterSheetWindow.h \
-    CharacterStateWindow.h \
-    CloseConfirmationWindow.h \
-    CombatControlState.h \
-    CombatGui.h \
-	CombatWindow.h \
-    CommandMapper.h \
-    ConfigComponent.h \
-    Console.h \
-    ContainerContentWindow.h \
-    ControlState.h \
-    CutsceneControlState.h \
-    DebugWindow.h \
-    DialogWindow.h \
-    DialogControlState.h \
-    FreeflightControlState.h \
-    GameLoggerWindow.h \
-    GameObjectInfoWindow.h \
-	GameOverWindow.h \
-	GameSaveLoadWindow.h \
-    GameSettings.h \
-    InfoPopup.h \
-    InGameMenuWindow.h \
-    InputManager.h \
-    InventoryWindow.h \
-    ItemDragContainer.h \
-    ItemDescriptionDragContainer.h \
-    ItemIconDragContainer.h \
-    JournalWindow.h \
-    ListboxWrappedTextItem.h \
-    LogWindow.h \
-    MainMenuWindow.h \
-    MainMenuEngineWindow.h \
-	MainMenuLoadWindow.h \
-    MessageWindow.h \
-    MovementControlState.h \
-    ObjectDescriptionWindow.h \
-    PlaylistWindow.h \
-    ProgressWindow.h \
-    PropertiesWindow.h \
-    RenderSystemConfigComponent.h \
-    SoundDriverConfigComponent.h \
-    SubtitleWindow.h \
-    UiPrerequisites.h \
-    UiSubsystem.h \
-    WindowFactory.h \
-    WindowFadeJob.h \
-    WindowManager.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/trunk/engine/ui/src/Makefile.am
===================================================================
--- rl/trunk/engine/ui/src/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/engine/ui/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,61 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(CEGUI_CFLAGS) $(CEGUIOGRE_CFLAGS) $(OgreNewt_CFLAGS) \
-    $(STLPORT_CFLAGS) $(OIS_CFLAGS) $(BOOST_CPPFLAGS) -I../include -I../../common/include  -I../../core/include \
-    -I../../rules/include -I../components/include -I../../dialog/include \
-    -I../../startup/include  -I../../ai/include
-
-lib_LTLIBRARIES = libRlUi.la
-libRlUi_la_LIBADD = \
-    $(RUBY_LIBS) $(LIBS) $(CEGUI_LIBS) $(OGRE_LIBS) $(CEGUIOGRE_LIBS) $(OIS_LIBS) $(OgreNewt_LIBS)
-
-libRlUi_la_SOURCES = \
-    AboutWindow.cpp \
-    ActionChoiceWindow.cpp \
-    AbstractWindow.cpp \
-    CharacterSheetWindow.cpp \
-    CharacterStateWindow.cpp \
-    CloseConfirmationWindow.cpp \
-    CombatControlState.cpp \
-    CombatGui.cpp \
-    CombatWindow.cpp \
-    CommandMapper.cpp \
-    ConfigComponent.cpp \
-    ContainerContentWindow.cpp \
-    ControlState.cpp \
-    Console.cpp \
-    CutsceneControlState.cpp \
-    DebugWindow.cpp \
-    DialogControlState.cpp \
-    DialogWindow.cpp \
-    FreeflightControlState.cpp \
-    GameLoggerWindow.cpp \
-    GameObjectInfoWindow.cpp \
-	GameOverWindow.cpp \
-	GameSaveLoadWindow.cpp \
-    GameSettings.cpp \
-    InfoPopup.cpp \
-    InGameMenuWindow.cpp \
-    InputManager.cpp \
-    InventoryWindow.cpp \
-    ItemDragContainer.cpp \
-    ItemDescriptionDragContainer.cpp \
-    ItemIconDragContainer.cpp \
-    JournalWindow.cpp \
-    ListboxWrappedTextItem.cpp \
-    LogWindow.cpp \
-    MainMenuWindow.cpp \
-    MainMenuEngineWindow.cpp \
-	MainMenuLoadWindow.cpp \
-    MessageWindow.cpp \
-    MovementControlState.cpp \
-    ObjectDescriptionWindow.cpp \
-    PlaylistWindow.cpp \
-    ProgressWindow.cpp \
-    PropertiesWindow.cpp \
-    RenderSystemConfigComponent.cpp \
-    SoundConfig.cpp \
-    SoundDriverConfigComponent.cpp \
-    SubtitleWindow.cpp \
-    UiSubsystem.cpp \
-    WindowFactory.cpp \
-    WindowFadeJob.cpp \
-    WindowManager.cpp

Deleted: rl/trunk/plugins/Makefile.am
===================================================================
--- rl/trunk/plugins/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/plugins/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1 +0,0 @@
-SUBDIRS = $(RL_AUDIOPLUGINS)

Deleted: rl/trunk/plugins/fmod4driver/Makefile.am
===================================================================
--- rl/trunk/plugins/fmod4driver/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/plugins/fmod4driver/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1 +0,0 @@
-SUBDIRS = include src

Deleted: rl/trunk/plugins/fmod4driver/include/Makefile.am
===================================================================
--- rl/trunk/plugins/fmod4driver/include/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/plugins/fmod4driver/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,7 +0,0 @@
-noinst_HEADERS = \
-	Fmod4ConfigComponent.h \
-	Fmod4Driver.h \
-	Fmod4DriverPrerequisites.h \
-	Fmod4Listener.h \
-	Fmod4Sound.h 
-	

Deleted: rl/trunk/plugins/fmod4driver/src/Makefile.am
===================================================================
--- rl/trunk/plugins/fmod4driver/src/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/plugins/fmod4driver/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,18 +0,0 @@
-INCLUDES = $(OGRE_CFLAGS) $(CEGUI_CFLAGS) $(RUBY_CFLAGS) $(BOOST_CPPFLAGS) \
-	-I../include -I../../../engine/ui/include -I../../../engine/core/include \
-	-I../../../engine/common/include
-
-lib_LTLIBRARIES = libRlFmod4Driver.la
-libRlFmod4Driver_la_LDFLAGS = \
-     $(top_builddir)/engine/common/src/libRlCommon.la \
-     $(top_builddir)/engine/core/src/libRlCore.la \
-     $(top_builddir)/engine/ui/src/libRlUi.la \
-     -lfmodex $(OGRE_LIBS) $(CEGUIOGRE_LIBS) $(LIBS)
-
-libRlFmod4Driver_la_SOURCES = \
-	Fmod4ConfigComponent.cpp \
-	Fmod4Driver.cpp \
-	Fmod4DriverDllMain.cpp \
-	Fmod4Listener.cpp \
-	Fmod4Sound.cpp
-	

Deleted: rl/trunk/tests/Makefile.am
===================================================================
--- rl/trunk/tests/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/tests/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,2 +0,0 @@
-SUBDIRS =  coretests rulestests multimediatests RlDialogTests
-

Deleted: rl/trunk/tests/RlDialogTests/Makefile.am
===================================================================
--- rl/trunk/tests/RlDialogTests/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/tests/RlDialogTests/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,15 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(CEGUI_CFLAGS) $(OGRE_CFLAGS) $(CEGUIOGRE_CFLAGS) $(STLPORT_CFLAGS) \
-	$(Plugin_TheoraVideoSystem_CFLAGS) -I../../engine/multimedia/include -I../../engine/core/include -I../../engine/ui/include \
-	-I../../engine/rules/include -I../../engine/dialog/include -I../../engine/script/include
-
-noinst_PROGRAMS = testdialog
-testdialog_LDFLAGS = -L../../engine/common/src -L../../engine/multimedia/src -L../../engine/core/src \
-	-L../../engine/ui/src -L../../engine/rules/src -L../../engine/dialog/src \
-	-L../../engine/rules/src -L../../engine/script/src -L../../engine/ui/src
-testdialog_LDADD = $(RUBY_LIBS) $(CEGUI_LIBS) $(OGRE_LIBS) $(CPPUNIT_LIBS) $(LIBS) \
-	  -lRlCommon -lRlMultimedia -lvorbis -logg $(Plugin_TheoraVideoSystem_LIBS) \
-	  -lRlUi -lRlScript -lRlRules
-testdialog_SOURCES = \
-	TestDialog.cpp 
-
-	
\ No newline at end of file

Deleted: rl/trunk/tests/coretests/Makefile.am
===================================================================
--- rl/trunk/tests/coretests/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/tests/coretests/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,14 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(STLPORT_CFLAGS) -I../include \
- 	  -I../../engine/core/include -I../../engine/common/include -I../../engine/multimedia/include -I../../engine/dialog/include  \
- 	  -I../../engine/ui/include -I../../engine/rules/include -I../../engine/script/include  $(CEGUI_CFLAGS)
-
-noinst_PROGRAMS = testcore
-testcore_LDFLAGS = -L../../engine/common/src -L../../engine/multimedia/src -L../../engine/dialog/src -L../../engine/rules/src \
-	  -L../../engine/ui/src -L../../engine/core/src -L../../engine/script/src
-testcore_LDADD = $(RUBY_LIBS) $(CPPUNIT_LIBS) $(OGRE_LIBS) $(CEGUI_LIBS) $(LIBS) \
-	  -lRlCommon -lRlCore -lRlMultimedia -lRlUi -lRlRules -lRlDialog -lRlScript \
-	  -lvorbis -logg -lboost_thread $(Plugin_TheoraVideoSystem_LIBS)
-testcore_SOURCES = \
-	TestCore.cpp \
-	CoreTests.cpp
-

Deleted: rl/trunk/tests/multimediatests/Makefile.am
===================================================================
--- rl/trunk/tests/multimediatests/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/tests/multimediatests/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,31 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(CEGUI_CFLAGS) $(OGRE_CFLAGS) $(CEGUIOGRE_CFLAGS) $(STLPORT_CFLAGS) \
-	$(Plugin_TheoraVideoSystem_CFLAGS) -I../../engine/multimedia/include -I../../engine/core/include \
-	-I../../engine/ui/include -I../../engine/dialog/include -I../../engine/rules/include \
-	-I../../engine/script/include
-
-noinst_PROGRAMS = testsound testvideo
-testsound_LDFLAGS = -L../../engine/common/src -L../../engine/multimedia/src -L../../engine/core/src \
-	-L../../engine/ui/src -L../../engine/rules/src -L../../engine/dialog/src \
-	-L../../engine/script/src 
-testsound_LDADD = $(RUBY_LIBS) $(CEGUI_LIBS) $(OGRE_LIBS) $(CPPUNIT_LIBS) $(LIBS) \
-	  -lRlCommon -lRlMultimedia -lvorbis -logg $(Plugin_TheoraVideoSystem_LIBS) \
-	  -lRlUi -lRlScript -lRlRules -lRlDialog -lRlCore
-testsound_SOURCES = \
-	SoundTest1.cpp \
-	SoundTest2.cpp \
-	SoundTest3.cpp \
-	SoundTest4.cpp \
-	SoundTest5.cpp \
-	SoundTest6.cpp \
-	SoundTest7.cpp \
-	SoundTest8.cpp \
-	TestStartup.cpp 
-
-testvideo_LDFLAGS = -L../../engine/common/src -L../../engine/multimedia/src -L../../engine/core/src \
-	-L../../engine/ui/src -L../../engine/rules/src -L../../engine/dialog/src
-testvideo_SOURCES = \
-	VideoTest.cpp
-testvideo_LDADD = $(CEGUI_LIBS) $(OGRE_LIBS) $(LIBS) -lvorbis -logg -lboost_thread\
-	$(Plugin_TheoraVideoSystem_LIBS)  $(CEGUIOGRE_LIBS) -lRlMultimedia -lRlCommon -lRlCore \
-	$(RUBY_LIBS)
-	
\ No newline at end of file

Deleted: rl/trunk/tests/rulestests/Makefile.am
===================================================================
--- rl/trunk/tests/rulestests/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/tests/rulestests/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,9 +0,0 @@
-INCLUDES = $(CEGUI_CFLAGS) $(RUBY_CFLAGS) $(OPENALPP_CFLAGS) $(OGRE_CFLAGS) $(STLPORT_CFLAGS) -I../../engine/rules/include -I../../engine/core/include
-
-noinst_PROGRAMS = testrules
-testrules_SOURCES = Main.cpp
-testrules_LDFLAGS = -L../../engine/core/src  -L../../engine/common/src -L../../engine/rules/src
-testrules_LDADD = $(LIBS) $(CPPUNIT_LIBS) $(OGRE_LIBS) $(CEGUIOGRE_LIBS) \
-	 $(RUBY_LIBS) -lRlCore -lRlCommon -lRlRules -lvorbis -lvorbisfile -logg -lboost_thread \
-	 $(Plugin_TheoraVideoSystem_LIBS)
-

Deleted: rl/trunk/tools/Makefile.am
===================================================================
--- rl/trunk/tools/Makefile.am	2009-01-04 14:32:06 UTC (rev 4673)
+++ rl/trunk/tools/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
@@ -1,2 +0,0 @@
-SUBDIRS = 
-



From chrber at mail.berlios.de  Sun Jan  4 15:45:57 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 15:45:57 +0100
Subject: [Dsa-hl-svn] r4675 - in rl/branches/newton20: . docs docs/src
	engine engine/ai engine/ai/include engine/ai/src
	engine/common engine/common/include engine/common/src
	engine/core engine/core/include engine/core/src engine/rules
	engine/rules/include engine/rules/src engine/script
	engine/script/include engine/script/src engine/script/swig
	engine/startup engine/startup/src engine/ui engine/ui/include
	engine/ui/src plugins plugins/fmod4driver
	plugins/fmod4driver/include plugins/fmod4driver/src tests
	tests/RlDialogTests tests/coretests tests/multimediatests
	tests/rulestests tools
Message-ID: <200901041445.n04Ejvuw030365@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 15:45:40 +0100 (Sun, 04 Jan 2009)
New Revision: 4675

Removed:
   rl/branches/newton20/Makefile.am
   rl/branches/newton20/bootstrap
   rl/branches/newton20/configure.in
   rl/branches/newton20/docs/Makefile.am
   rl/branches/newton20/docs/src/Makefile.am
   rl/branches/newton20/engine/Makefile.am
   rl/branches/newton20/engine/ai/Makefile.am
   rl/branches/newton20/engine/ai/include/Makefile.am
   rl/branches/newton20/engine/ai/src/Makefile.am
   rl/branches/newton20/engine/common/Makefile.am
   rl/branches/newton20/engine/common/include/Makefile.am
   rl/branches/newton20/engine/common/src/Makefile.am
   rl/branches/newton20/engine/core/Makefile.am
   rl/branches/newton20/engine/core/include/Makefile.am
   rl/branches/newton20/engine/core/src/Makefile.am
   rl/branches/newton20/engine/rules/Makefile.am
   rl/branches/newton20/engine/rules/include/Makefile.am
   rl/branches/newton20/engine/rules/src/Makefile.am
   rl/branches/newton20/engine/script/Makefile.am
   rl/branches/newton20/engine/script/include/Makefile.am
   rl/branches/newton20/engine/script/src/Makefile.am
   rl/branches/newton20/engine/script/swig/Makefile.am
   rl/branches/newton20/engine/startup/Makefile.am
   rl/branches/newton20/engine/startup/src/Makefile.am
   rl/branches/newton20/engine/ui/Makefile.am
   rl/branches/newton20/engine/ui/include/Makefile.am
   rl/branches/newton20/engine/ui/src/Makefile.am
   rl/branches/newton20/m4/
   rl/branches/newton20/plugins/Makefile.am
   rl/branches/newton20/plugins/fmod4driver/Makefile.am
   rl/branches/newton20/plugins/fmod4driver/include/Makefile.am
   rl/branches/newton20/plugins/fmod4driver/src/Makefile.am
   rl/branches/newton20/tests/Makefile.am
   rl/branches/newton20/tests/RlDialogTests/Makefile.am
   rl/branches/newton20/tests/coretests/Makefile.am
   rl/branches/newton20/tests/multimediatests/Makefile.am
   rl/branches/newton20/tests/rulestests/Makefile.am
   rl/branches/newton20/tools/Makefile.am
Log:
Removed autotools build system


Deleted: rl/branches/newton20/Makefile.am
===================================================================
--- rl/branches/newton20/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,7 +0,0 @@
-SUBDIRS =   engine plugins tools docs
-if with_tests 
-  SUBDIRS += tests
-endif
-
-doc:
-	cd docs; ${MAKE} doc

Deleted: rl/branches/newton20/bootstrap
===================================================================
--- rl/branches/newton20/bootstrap	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/bootstrap	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,6 +0,0 @@
-#!/bin/sh
-echo "Bootstrap..."
-
-# Fire up autotools
-libtoolize --force && aclocal -I m4 $ACLOCAL_FLAGS && autoheader && automake --include-deps --add-missing --foreign && autoconf 
-

Deleted: rl/branches/newton20/configure.in
===================================================================
--- rl/branches/newton20/configure.in	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/configure.in	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,200 +0,0 @@
-AC_PREREQ(2.50)
-
-AC_INIT(RL, 0.3.0)
-AC_CANONICAL_TARGET
-AM_INIT_AUTOMAKE([1.6.1 foreign no-installinfo no-installman subdir-objects])
-AC_CONFIG_HEADER(engine/common/include/config.h)
-AC_CONFIG_MACRO_DIR([m4])
-
-##AC_CANONICAL_TARGET
-
-dnl Check for programs
-AC_LANG([C++])
-AC_PROG_CXX
-AC_PROG_INSTALL
-AM_PROG_LIBTOOL
-
-
-# ***** DEBUGGING
-AC_ARG_ENABLE(debug,AS_HELP_STRING([--enable-debug],[enable debugging @<:@default=no@:>@]))
-if test "$enable_debug" = "yes"; then
-    CXXFLAGS="$CXXFLAGS -g -O0 -DDEBUG"
-else
-    CXXFLAGS="$CXXFLAGS -O2 -DNDEBUG -s"
-    INSTALL="$INSTALL -s"
-fi
-# ***** PROFILING
-AC_ARG_ENABLE([profiling], AS_HELP_STRING([--enable-profiling], [enable profiling @<:@default=no@:>@]))
-if test "$enable_profiling" = "yes"; then
-    CXXFLAGS="$CXXFLAGS -pg -g"
-    LDFLAGS="$LDFLAGS -pg -g"
-fi
-
-# Pthreads
-CXXFLAGS="$CXXFLAGS -pthread -DRL_USE_PCH"
-
-#AC_ARG_ENABLE(test-coverage,[  --enable-test-coverage  enable coverage testing [default=no]])
-#if test "$enable_test_coverage" = "yes"; then
-#    CXXFLAGS="$CXXFLAGS -fprofile-arcs -ftest-coverage"
-#fi
-
-AC_ARG_ENABLE(tests,[  --enable-tests  enable unit testing [default=no]])
-if test "$enable_tests" = "yes"; then
-    AM_PATH_CPPUNIT(1.0.0, [],
-        [
-            AM_CONDITIONAL(with_tests, [false])
-              AC_MSG_ERROR([Cannot find cppunit libs needed for testing])
-        ])
-    AM_CONDITIONAL(with_tests, [true])
-else
-    AM_CONDITIONAL(with_tests, [false])
-fi
-
-# fmod4
-AC_ARG_ENABLE([fmod4], [AS_HELP_STRING([--enable-fmod4], [enable fmod 4.xx (FMODex) support @<:@default=check@:>@])],,[enable_fmod4=check])
-AS_IF([test "x$enable_fmod4" != xno],
-      [AC_CHECK_LIB([fmodex], [main],
-          [AC_CHECK_HEADER([fmodex/fmod.hpp],
-              [AC_SUBST([RL_AUDIOPLUGINS], ["$RL_AUDIOPLUGINS fmod4driver"])]
-              [AC_SUBST([enable_fmod4], ["yes"])],
-              [if test "x$enable_fmod4" != xcheck; then
-                  AC_MSG_ERROR([fmod 4.xx support was explicitly enabled, but headers were not found])
-              fi])
-          ],
-          [if test "x$enable_fmod4" != xcheck; then
-              AC_MSG_ERROR([fmod 4.xx support was explicitly enabled, but libraries were not found])
-           fi]
-          [AC_SUBST([enable_fmod4], ["no"])])
-      ])
-
-# Ogre
-PKG_CHECK_MODULES([OGRE], [OGRE >= 1.4.0], [OGRE_VERSION=`pkg-config OGRE --modversion`])
-AC_ARG_WITH([ogre-plugins], [AS_HELP_STRING([--with-ogre-plugins=@<:@=DIR@:>@], [set location of Ogre plugins])] ,[OGRE_PLUGINDIR="$withval"], [OGRE_PLUGINDIR=`pkg-config OGRE --variable=plugindir`])
-AC_SUBST(OGRE_PLUGINDIR)
-
-# CEGUI
-PKG_CHECK_MODULES([CEGUI], [CEGUI >= 0.6.0])
-PKG_CHECK_MODULES([CEGUIOGRE], [CEGUI-OGRE])
-
-dnl Other stuff we need
-AC_CHECK_PROG(HAVE_DOXYGEN_PROG, doxygen, `which doxygen`, false)
-
-# Newton
-AC_CHECK_LIB([Newton], [fopen], [], AC_MSG_ERROR([Can't find libNewton]) )
-AC_CHECK_HEADERS([Newton.h], , AC_MSG_ERROR([Can't find Newton headers]))
-
-# OgreNewt
-PKG_CHECK_MODULES([OgreNewt], [OgreNewt >= 0.07])
-
-# OpenSteer
-PKG_CHECK_MODULES([OpenSteer], [opensteer >= 0.0.9])
-
-# meshmagick libraries
-PKG_CHECK_MODULES(meshmagick, meshmagick >= 0.4.0)
-
-# XERCES
-AC_CHECK_HEADERS(xercesc/util/XercesVersion.hpp, ,
-    [AC_MSG_ERROR([cannot find libxerces headers]) ])
-AC_CHECK_LIB(xerces-c,main,,
-    [AC_MSG_ERROR([cannot find the libxerces library]) ])
-
-# OIS
-PKG_CHECK_MODULES(OIS, OIS >= 1.0.0)
-
-# Boost
-AX_BOOST_BASE(1.34)
-AX_BOOST_FILESYSTEM()
-
-dnl --------------------------------------------
-dnl       determine location of RUBY (auto)
-dnl --------------------------------------------
-
-dnl determine location of ruby
-AC_PATH_PROG(ruby_path, ruby, no)
-if test $ruby_path = no; then
-    AC_MSG_ERROR(Cannot find Ruby! This program requires Ruby-1.8.0)
-fi
-
-dnl determine if the installed Ruby is suitable for us
-if `$ruby_path -e 'exit 1 if VERSION >= "1.8.0"'` ; then
-    AC_MSG_ERROR(Your Ruby is too old! At least Ruby-1.8.0 is required)
-fi
-
-dnl locate "ruby.h", "intern.h"
-ruby_h_dir=`$ruby_path -r mkmf -e 'print Config::CONFIG[["archdir"]]'`
-RUBY_CFLAGS="-I$ruby_h_dir"
-
-dnl locate libruby-static.a + extra libraries (libcrypt)
-ruby_lib=`$ruby_path -r mkmf -e 'c=Config::CONFIG; libs=c[["libdir"]]+"/"+c[["LIBRUBY"]]+" "+c[["LIBS"]]; print libs'`
-RUBY_LIBS=$ruby_lib
-
-AC_SUBST(RUBY_CFLAGS)
-AC_SUBST(RUBY_LIBS)
-
-#dnl Test for swig version
-SWIG_PROG(1.3.31-rl)
-SWIG_ENABLE_CXX
-SWIG_RUBY
-
-dnl Define the directory, where RL should look for modules
-if test "x${prefix}" = "xNONE"; then
-    prefix=${ac_default_prefix}
-fi
-dnl Must double eval here, to replace ${datadir} and after that ${prefix}
-eval RL_MODULEDIR="${datadir}"
-eval RL_MODULEDIR="${RL_MODULEDIR}/rastullah"
-AC_SUBST(RL_MODULEDIR)
-
-
-dnl Create the makefiles
-AC_CONFIG_FILES([Makefile \
-        docs/Makefile docs/src/Makefile \
-        engine/Makefile \
-        engine/ai/Makefile engine/ai/src/Makefile engine/ai/include/Makefile\
-        engine/common/Makefile engine/common/src/Makefile engine/common/include/Makefile \
-        engine/core/Makefile engine/core/src/Makefile engine/core/include/Makefile \
-        engine/ui/Makefile engine/ui/src/Makefile engine/ui/include/Makefile \
-        engine/rules/Makefile engine/rules/src/Makefile engine/rules/include/Makefile \
-        engine/script/Makefile engine/script/swig/Makefile engine/script/src/Makefile engine/script/include/Makefile \
-        engine/startup/Makefile engine/startup/src/Makefile \
-        tests/Makefile tests/coretests/Makefile tests/rulestests/Makefile \
-        tests/multimediatests/Makefile tests/RlDialogTests/Makefile \
-        plugins/Makefile \
-        plugins/fmod4driver/Makefile plugins/fmod4driver/include/Makefile plugins/fmod4driver/src/Makefile \
-        tools/Makefile
-    ])
-
-AC_OUTPUT
-
-eval RL_GAMEDIR="${bindir}"
-eval RL_GAMEDIR="${RL_GAMEDIR}"
-
-dnl Show a summary about important directories
-echo
-echo "***********************************************************"
-echo "* Rastullahs Lockenpracht - Configuration Results Summary *"
-echo "***********************************************************"
-echo
-echo " Code options:"
-echo "       Building RL in debug mode:          ${enable_debug-no}"
-echo "       Enable unit testing:                ${enable_tests-no}"
-echo
-echo " Sound plugins:"
-echo "       FMOD 4 plugin:                      ${enable_fmod4-no}"
-echo
-echo " Directory settings:"
-echo "       rastullah binary will be placed in: ${RL_GAMEDIR}"
-echo "       Module directory:                   ${RL_MODULEDIR}"
-echo
-
-# Remove dots from version to allow integer comparision
-OGRE_INTVERSION=`echo $OGRE_VERSION | sed -r "s@\.@@g"`
-if [[ $OGRE_INTVERSION -lt 145 ]]; then
-    echo "Your OGRE version is $OGRE_VERSION. The Rastullah team recommends"
-    echo "using version 1.4.5, which supports LiSPSM Shadows."
-    echo "Rastullah will run nevertheless, but the shadow's quality"
-    echo "will be decreased."
-fi
-
-echo
-echo "Type make && make install and pray!"

Deleted: rl/branches/newton20/docs/Makefile.am
===================================================================
--- rl/branches/newton20/docs/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/docs/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,11 +0,0 @@
-SUBDIRS = src
-
-doc:
-	cd src; ${MAKE} doc
-	
-deactivated-install-data-local: doc
-	install -d ${pkgdatadir}/docs/html
-	install -m 644 api/html/*.html ${pkgdatadir}/docs/html
-	install -m 644 api/html/*.png ${pkgdatadir}/docs/html
-	install -m 644 api/html/*.css ${pkgdatadir}/docs/html
-	
\ No newline at end of file

Deleted: rl/branches/newton20/docs/src/Makefile.am
===================================================================
--- rl/branches/newton20/docs/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/docs/src/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,8 +0,0 @@
-
-
-
-all:
-	@echo Nothing to do.
-	
-doc: 
-	$(HAVE_DOXYGEN_PROG) html.cfg

Deleted: rl/branches/newton20/engine/Makefile.am
===================================================================
--- rl/branches/newton20/engine/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,2 +0,0 @@
-SUBDIRS = common ai ui core rules script startup
-

Deleted: rl/branches/newton20/engine/ai/Makefile.am
===================================================================
--- rl/branches/newton20/engine/ai/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/ai/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,3 +0,0 @@
-SUBDIRS = include src
-
-

Deleted: rl/branches/newton20/engine/ai/include/Makefile.am
===================================================================
--- rl/branches/newton20/engine/ai/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/ai/include/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,45 +0,0 @@
-noinst_HEADERS =
-	Agent.h \
-	AgentManager.h \
-	AgentCombatState.h \
-	AgentDialogState.h \
-	AgentState.h \
-	AgentSteeringState.h \
-	AiPrerequisites.h \
-	AiSubsystem.h \
-	AiWorld.h \
-	AStarCosts.h \
-	AStar.h \
-	AStarHeuristic.h \
-	AStarNodePool.h \
-	AStarWayPointNode.h \
-	CreatureWalkPathJob.h \
-	Dialog.h \
-	DialogCondition.h \
-	DialogElement.h \
-	DialogElementSelection.h \
-	DialogImplication.h \
-	DialogLoader.h \
-	DialogLoaderImpl.h \
-	DialogManager.h \
-	DialogOption.h \
-	DialogResponse.h \
-	DialogVariable.h \
-	FuzzyState.h \
-	FuzzyStateMachine.h \
-	Landmark.h \
-	LandmarkPath.h \
-	PhysicalObstacle.h \
-	SimpleVehicle.h \
-	SteeringMachine.h \
-	SteeringVehicle.h \
-	WalkPathBehaviour.h \
-	WayPointNode.h \
-	WayPointGraph.h \
-	WayPointGraphManager.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/branches/newton20/engine/ai/src/Makefile.am
===================================================================
--- rl/branches/newton20/engine/ai/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/ai/src/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,41 +0,0 @@
-INCLUDES = $(OGRE_CFLAGS) $(OgreNewt_CFLAGS) $(STLPORT_CFLAGS) $(CEGUIOGRE_CFLAGS) $(BOOST_CPPFLAGS) $(OpenSteer_CFLAGS) \
-	-I../include -I ../../core/include -I ../../common/include -I ../../dialog/include -I ../../rules/include -I../include/predicates
-
-lib_LTLIBRARIES = libRlAi.la
-libRlAi_la_LDFLAGS = $(OgreNewt_LIBS) $(OpenSteer_LIBS) $(LIBS)
-libRlAi_la_SOURCES = \
-	Agent.cpp \
-	AgentCombatState.cpp \
-	AgentDialogState.cpp \
-	AgentManager.cpp \
-	AgentSteeringState.cpp \
-	AiSubsystem.cpp \
-	AiWorld.cpp \
-	AStarCosts.cpp \
-	AStar.cpp \
-	AStarHeuristic.cpp \
-	AStarNodePool.cpp \
-	AStarWayPointNode.cpp \
-	CreatureWalkPathJob.cpp \
-	Dialog.cpp \
-	DialogCondition.cpp \
-	DialogElement.cpp \
-	DialogImplication.cpp \
-	DialogLoader.cpp \
-	DialogLoaderImpl.cpp \
-	DialogManager.cpp \
-	DialogOption.cpp \
-	DialogParagraph.cpp \
-	DialogResponse.cpp \
-	DialogVariable.cpp \
-	FuzzyState.cpp \
-	FuzzyStateMachine.cpp \
-	Landmark.cpp \
-	LandmarkPath.cpp \
-	PhysicalObstacle.cpp \
-	SimpleVehicle.cpp \
-	SteeringVehicle.cpp \
-	WalkPathBehaviour.cpp \
-	WayPointNode.cpp \
-	WayPointGraph.cpp \
-	WayPointGraphManager.cpp

Deleted: rl/branches/newton20/engine/common/Makefile.am
===================================================================
--- rl/branches/newton20/engine/common/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/common/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,3 +0,0 @@
-SUBDIRS = include src
-
-

Deleted: rl/branches/newton20/engine/common/include/Makefile.am
===================================================================
--- rl/branches/newton20/engine/common/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/common/include/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,33 +0,0 @@
-noinst_HEADERS =
-	CommonPrerequisites.h \
-	ConfigFile.h \
-	config.h \
-	EventCaster.h \
-	EventListener.h \
-	EventObject.h \
-	EventSource.h \
-	Exception.h \
-	FixRubyHeaders.h \
-	GameTask.h \
-	Logger.h \
-	MathUtil.h \
-	OgreXercesInput.h \
-    Properties.h \
-    Property.h \
-    RastullahPrerequisites.h \
-    ScriptWrapper.h \
-	Sleep.h \
-	Tripel.h \
-	WriteableDataStream.h \
-	WriteableDataStreamFormatTarget.h \
-	WriteableFileSystemArchiv.h \
-	XmlProcessor.h \
-    XmlPropertyReader.h \
-	XmlPropertyWriter.h \
-	XmlResource.h \
-	XmlResourceManager.h
-
-CLEANFILES = stdinc.h.gch
-all-local: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h 

Deleted: rl/branches/newton20/engine/common/src/Makefile.am
===================================================================
--- rl/branches/newton20/engine/common/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/common/src/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,24 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(STLPORT_CFLAGS) $(CEGUI_CFLAGS) $(BOOST_CPPFLAGS) -I../include -I../../core/include
-
-lib_LTLIBRARIES = libRlCommon.la
-libRlCommon_la_LDFLAGS = $(RUBY_LIBS) $(OGRE_LIBS) $(CEGUI_LIBS) $(BOOST_FILESYSTEM_LIB) $(LIBS)
-libRlCommon_la_SOURCES = \
-  ../include/stdinc.h \
-  ConfigFile.cpp \
-  EventObject.cpp \
-  EventSource.cpp \
-  GameTask.cpp \
-  Logger.cpp \
-  MathUtil.cpp \
-  OgreXercesInput.cpp \
-  Properties.cpp \
-  Property.cpp \
-  ScriptWrapper.cpp \
-  WriteableDataStream.cpp \
-  WriteableDataStreamFormatTarget.cpp \
-  WriteableFileSystemArchiv.cpp \
-  XmlProcessor.cpp \
-  XmlPropertyReader.cpp \
-  XmlPropertyWriter.cpp \
-  XmlResource.cpp \
-  XmlResourceManager.cpp   

Deleted: rl/branches/newton20/engine/core/Makefile.am
===================================================================
--- rl/branches/newton20/engine/core/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/core/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1 +0,0 @@
-SUBDIRS = include src

Deleted: rl/branches/newton20/engine/core/include/Makefile.am
===================================================================
--- rl/branches/newton20/engine/core/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/core/include/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,93 +0,0 @@
- noinst_HEADERS = \
-	Actor.h \
-	ActorControlledObject.h \
-	ActorManager.h \
-	AnimationManager.h \
-	BaseAnimation.h \
-	BoxPrimitive.h \
-	CameraObject.h \
-	ConfigurationManager.h \
-	ContentLoader.h \
-	ContentModule.h \
-	CoreDefines.h \
-	CoreMessages.h \
-	CorePrerequisites.h \
-	CoreSubsystem.h \
-	DebugVisualisable.h \
-	DebugVisualsManager.h\
-	DotSceneLoader.h \
-	DotSceneOctreeWorld.h \
-	FadeAnimation.h \
-	GameAreaEvent.h \
-	GameAreaEventSource.h \
-	GameAreaListener.h \
-	GameAreaTypes.h \
-	GameEventManager.h \
-	GameLoop.h \
-	Job.h \
-	JobListener.h \
-	JobQueue.h \
-	JobScheduler.h \
-	LightFadeJob.h \
-	LightObject.h \
-	LineSetPrimitive.h \
-	LinearSoundFadeFunctor.h \
-	ListenerMovable.h \
-	ListenerObject.h \
-	MergeableMeshObject.h \
-	MessageObject.h \
-	MessagePump.h \
-	MessageType.h \
-	MeshAnimation.h \
-	MeshObject.h \
-	MovableText.h \
-	ParticleSystemObject.h \
-	PhysicsContactListener.h \
-	PhysicalObject.h \
-	PhysicalThing.h \
-	PhysicsGenericContactCallback.h \
-	PhysicsController.h \
-	PhysicsManager.h \
-	PhysicsMaterialRaycast.h \
-	PlayAnimationJob.h \
-	PlaySoundJob.h \
-	PolynomicSoundFadeFunctor.h \
-	PrimitiveObject.h \
-	QuadTree.h \
-	RubyInterpreter.h \
-	SaveAble.h \
-	SaveAbleCollection.h \
-	SaveAbleFactory.h \
-	SaveAbleManager.h \
-	SaveGameFile.h \
-	SaveGameFileReader.h \
-	SaveGameFileWriter.h \
-	SaveGameManager.h \
-	SceneQuery.h \
-	Sound.h \
-	SoundDriver.h \
-	SoundEvents.h \
-	SoundManager.h \
-	SoundObject.h \
-	SoundResource.h \
-	SoundFadeJob.h \
-	SoundFadeFunctor.h \
-	SoundStitching.h \
-	SoundStitchingObject.h \
-	StartAnimationJob.h \
-	TimeSource.h \
-	TrackAnimation.h \
-	Trigger.h \
-	World.h \
-	Zone.h \
-	ZoneManager.h \
-	nulldriver/NullDriver.h \
-	nulldriver/NullSound.h \
-	nulldriver/NullListener.h \
-	nulldriver/NullSoundStitching.h
-	
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/branches/newton20/engine/core/src/Makefile.am
===================================================================
--- rl/branches/newton20/engine/core/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/core/src/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,86 +0,0 @@
-# Default values, if configuration file is missing (hard coded)
-AM_CPPFLAGS = -DRL_MODULEDIR=\"$(RL_MODULEDIR)\" -DOGRE_PLUGINDIR=\"$(OGRE_PLUGINDIR)\"
-
-INCLUDES = -I../include $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(CEGUI_CFLAGS) $(STLPORT_CFLAGS) $(BOOST_CPPFLAGS) $(OgreNewt_CFLAGS) \
-           -I../../common/include -I../include/nulldriver $(meshmagick_CFLAGS)
-
-lib_LTLIBRARIES = libRlCore.la
-libRlCore_la_LDFLAGS = $(OGRE_LIBS) $(CEGUI_LIBS) $(RUBY_LIBS) $(LIBS) $(meshmagick_LIBS) $(OgreNewt_LIBS)
-libRlCore_la_SOURCES = \
-	Actor.cpp \
-	ActorControlledObject.cpp \
-	ActorManager.cpp \
-	AnimationManager.cpp \
-	BaseAnimation.cpp \
-	BoxPrimitive.cpp \
-	CameraObject.cpp \
-	ConfigurationManager.cpp \
-	ContentLoader.cpp \
-	ContentModule.cpp \
-	CoreSubsystem.cpp \
-	DebugVisualisable.cpp \
-	DebugVisualsManager.cpp \
-	DotSceneLoader.cpp \
-	DotSceneOctreeWorld.cpp \
-	FadeAnimation.cpp \
-	GameAreaEvent.cpp \
-	GameAreaEventSource.cpp \
-	GameAreaListener.cpp \
-	GameAreaTypes.cpp \
-	GameEventManager.cpp \
-	GameLoop.cpp \
-	Job.cpp \
-	JobQueue.cpp \
-	JobScheduler.cpp \
-	LightObject.cpp \
-	LightFadeJob.cpp \
-	LineSetPrimitive.cpp \
-	ListenerObject.cpp \
-	ListenerMovable.cpp \
-	LinearSoundFadeFunctor.cpp \
-	MergeableMeshObject.cpp \
-	MeshAnimation.cpp \
-	MeshObject.cpp \
-	MessagePump.cpp \
-	MovableText.cpp \
-	ParticleSystemObject.cpp \
-	PhysicsContactListener.cpp \
-	PhysicalThing.cpp \
-	PhysicsGenericContactCallback.cpp \
-	PhysicsManager.cpp \
-	PhysicsMaterialRaycast.cpp \
-	PlayAnimationJob.cpp \
-	PlaySoundJob.cpp \
-	PolynomicSoundFadeFunctor.cpp \
-	PrimitiveObject.cpp \
-	RubyInterpreter.cpp \
-	SaveAble.cpp \
-	SaveAbleCollection.cpp \
-	SaveAbleFactory.cpp \
-	SaveAbleManager.cpp \
-	SaveGameFile.cpp \
-	SaveGameFileReader.cpp \
-	SaveGameFileWriter.cpp \
-	SaveGameManager.cpp \
-	SceneQuery.cpp \
-	SoundManager.cpp \
-	SoundObject.cpp \
-	SoundDriver.cpp \
-	Sound.cpp \
-	SoundEvents.cpp \
-	SoundResource.cpp \
-	SoundFadeJob.cpp \
-	SoundFadeFunctor.cpp \
-	SoundStitching.cpp \
-	SoundStitchingObject.cpp \
-	StartAnimationJob.cpp \
-	TimeSource.cpp \
-	Trigger.cpp \
-	TrackAnimation.cpp \
-	World.cpp \
-	Zone.cpp \
-	ZoneManager.cpp \
-	nulldriver/NullDriver.cpp \
-	nulldriver/NullListener.cpp \
-	nulldriver/NullSound.cpp \
-	nulldriver/NullSoundStitching.cpp

Deleted: rl/branches/newton20/engine/rules/Makefile.am
===================================================================
--- rl/branches/newton20/engine/rules/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/rules/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1 +0,0 @@
-SUBDIRS = include src

Deleted: rl/branches/newton20/engine/rules/include/Makefile.am
===================================================================
--- rl/branches/newton20/engine/rules/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/rules/include/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,77 +0,0 @@
-noinst_HEADERS = \
-	Action.h \
-	ActionManager.h \
-	Armor.h \
-	Combat.h \
-	Combatant.h \
-	CombatManager.h \
-	Container.h \
-	Creature.h \
-	CreatureController.h \
-	CreatureControllerManager.h \
-	Date.h \
-	DsaDataLoader.h \
-	DsaManager.h \
-	Effect.h \
-	EffectFactory.h \
-	EffectManagementTask.h \
-	EffectManager.h \
-	Eigenschaft.h \
-	EigenschaftenStateSet.h \
-	FetchItemJob.h \
-	GameEventLog.h \
-	GameObject.h \
-	GameObjectStateListener.h \
-	GameTimeSource.h \
-	GlobalProperties.h \
-	GoToJob.h \
-	Item.h \
-	Inventory.h \
-	JournalEntry.h \
-	Kampftechnik.h \
-	ObjectStateChangeEvent.h \
-	ObjectStateChangeEventSource.h \
-	ObjectStateChangeListener.h \
-	PartyManager.h \
-	Quest.h \
-	QuestBook.h \
-	QuestEvent.h \
-	QuestListener.h \
-	RulesPrerequisites.h \
-	RulesSubsystem.h \
-	SelectionHelper.h \
-	Selector.h \
-	Slot.h \
-	StateSet.h \
-	SonderfertigkeitenStateSet.h \
-	Talent.h \
-	Talentgruppe.h \
-	TalentInputIterator.h \
-	TalentStateSet.h \
-	WaitJob.h \
-	Weapon.h \
-	ZauberStateSet.h \
-	AbstractMovement.h \
-	FallDownMovement.h \
-	JogBackwardsMovement.h \
-	JogFastMovement.h \
-	JogMovement.h \
-	JumpHighMovement.h \
-	JumpLongMovement.h \
-	JumpToTargetMovement.h \
-	LieDownMovement.h \
-	RotateMovement.h \
-	SneakMovement.h \
-	SprintMovement.h \
-	StandAroundMovement.h \
-	StepRecognitionMovement.h \
-	StrafeMovement.h \
-	WalkBackwardsMovement.h \
-	WalkMovement.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h
-

Deleted: rl/branches/newton20/engine/rules/src/Makefile.am
===================================================================
--- rl/branches/newton20/engine/rules/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/rules/src/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,71 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(CEGUI_CFLAGS) $(STLPORT_CFLAGS) $(BOOST_CPPFLAGS) $(OgreNewt_CFLAGS) -I../include -I../../common/include -I../../core/include
-
-lib_LTLIBRARIES = libRlRules.la
-libRlRules_la_LDFLAGS = $(RUBY_LIBS) $(OGRE_LIBS) $(CEGUI_LIBS) $(LIBS) $(OgreNewt_LIBS)
-libRlRules_la_SOURCES = \
-	Action.cpp \
-	ActionManager.cpp \
-	ApplyDamageJob.cpp \
-	Armor.cpp \
-	Combat.cpp \
-	Combatant.cpp \
-	CombatManager.cpp \
-	Container.cpp \
-	Creature.cpp \
-	CreatureController.cpp \
-	CreatureControllerManager.cpp \
-	Date.cpp \
-	DsaDataLoader.cpp \
-	DsaManager.cpp \
-	Effect.cpp \
-	EffectFactory.cpp \
-	EffectManagementTask.cpp \
-	EffectManager.cpp \
-	Eigenschaft.cpp \
-	EigenschaftenStateSet.cpp \
-	FetchItemJob.cpp \
-	GameEventLog.cpp \
-	GameObject.cpp \
-	GameObjectManager.cpp \
-	GameTimeSource.cpp \
-	GlobalProperties.cpp \
-	GoToJob.cpp \
-	Item.cpp \
-	Inventory.cpp \
-	JournalEntry.cpp \
-	Kampfaktion.cpp \
-	Kampftechnik.cpp \
-	ObjectStateChangeEvent.cpp \
-	ObjectStateChangeEventSource.cpp \
-	ObjectStateChangeListener.cpp \
-	PartyManager.cpp \
-	Quest.cpp \
-	QuestBook.cpp \
-	QuestEvent.cpp \
-	QuestListener.cpp \
-	RulesSubsystem.cpp \
-	SelectionHelper.cpp \
-	Selector.cpp \
-	Slot.cpp \
-	SonderfertigkeitenStateSet.cpp \
-	StateSet.cpp \
-	Talent.cpp \
-	Talentgruppe.cpp \
-	TalentStateSet.cpp \
-	WaitJob.cpp \
-	Weapon.cpp \
-	ZauberStateSet.cpp \
-	FallDownMovement.cpp \
-	JogFastMovement.cpp \
-	JogMovement.cpp \
-	JumpHighMovement.cpp \
-	JumpLongMovement.cpp \
-	JumpToTargetMovement.cpp \
-	LieDownMovement.cpp \
-	RotateMovement.cpp \
-	SneakMovement.cpp \
-	SprintMovement.cpp \
-	StandAroundMovement.cpp \
-	StepRecognitionMovement.cpp \
-	StrafeMovement.cpp \
-	WalkMovement.cpp

Deleted: rl/branches/newton20/engine/script/Makefile.am
===================================================================
--- rl/branches/newton20/engine/script/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/script/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1 +0,0 @@
-SUBDIRS = swig src
\ No newline at end of file

Deleted: rl/branches/newton20/engine/script/include/Makefile.am
===================================================================
--- rl/branches/newton20/engine/script/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/script/include/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,26 +0,0 @@
-noinst_HEADERS = \
-	AbstractMapNodeProcessor.h \
-	EntityNodeProcessor.h \
-	EnvironmentProcessor.h \
-	GameObjectNodeProcessor.h \
-	LightNodeProcessor.h \
-	MapLoader.h \
-	ParticleSystemNodeProcessor.h \
-	PlaneNodeProcessor.h \
-	TriggerFactory.h \
-	Scene.h \
-	SceneLoader.h \
-	SceneManager.h \
-	ScriptObjectMarker.h \
-	ScriptPrerequisites.h \
-	ScriptSubsystem.h \
-	SoundNodeProcessor.h \
-	WaypointProcessor.h \
-	UnifiedFactory.h \
-	ZoneProcessor.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/branches/newton20/engine/script/src/Makefile.am
===================================================================
--- rl/branches/newton20/engine/script/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/script/src/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,33 +0,0 @@
-INCLUDES = $(CEGUI_CFLAGS) $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(OgreNewt_CFLAGS) $(OIS_CFLAGS) \
-	$(STLPORT_CFLAGS) $(BOOST_CPPFLAGS) -I../include -I../../common/include \
-	-I../../core/include -I../../rules/include -I../../ui/include \
-	-I../../ai/include
-
-lib_LTLIBRARIES = libRlScript.la
-libRlScript_la_LDFLAGS = \
-    $(top_builddir)/engine/common/src/libRlCommon.la \
-    $(top_builddir)/engine/core/src/libRlCore.la \
-    $(top_builddir)/engine/ui/src/libRlUi.la \
-    $(top_builddir)/engine/rules/src/libRlRules.la \
-    $(CEGUI_LIBS) $(OGRE_LIBS) $(RUBY_LIBS) $(LIBS) \
-    -Wl,--defsym -Wl,Init_libRlScript=Init_RlScript
-	
-libRlScript_la_SOURCES = \
-	AbstractMapNodeProcessor.cpp \
-	EntityNodeProcessor.cpp \
-	EnvironmentProcessor.cpp \
-	GameObjectNodeProcessor.cpp \
-	LightNodeProcessor.cpp \
-	MapLoader.cpp \
-	ParticleSystemNodeProcessor.cpp \
-	PlaneNodeProcessor.cpp \
-	Scene.cpp \
-	SceneLoader.cpp \
-	SceneManager.cpp \
-	ScriptSubsystem.cpp \
-	ScriptObjectMarker.cpp \
-	SoundNodeProcessor.cpp \
-	TriggerFactory.cpp \
-	WaypointProcessor.cpp \
-	ZoneProcessor.cpp \
-	../swig/RlExports.cxx 

Deleted: rl/branches/newton20/engine/script/swig/Makefile.am
===================================================================
--- rl/branches/newton20/engine/script/swig/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/script/swig/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,15 +0,0 @@
-CLEANFILES = RlExports.cxx
-
-all: RlExports.cxx
-
-RlExports.cxx: RlCore.head.swig RlCore.swig RlRules.head.swig \
- RlRules.swig RlUi.head.swig RlUi.swig RlAi.head.swig RlAi.swig \
- RlScript.head.swig RlScript.swig RlCommon.head.swig RlCommon.swig \
- RlExports.i TypeMaps.i RlExports.i \
- TypeDynamicDirector.swig TypeOgreColourValue.swig TypeOgreQuaternion.swig \
- TypeOgreRadian.swig TypeOgreReal.swig TypeOgreString.swig TypeOgreStringVector.swig \
- TypeOgreVector3.swig TypeRlCeGuiString.swig TypeRlCeGuiStringVector.swig \
- TypeRlProperty.swig TypeRlPropertyKeys.swig TypeStdPairIntInt.swig
- 
-.i.cxx:
-	$(SWIG) $(SWIG_RUBY_OPT) -o $@ $<

Deleted: rl/branches/newton20/engine/startup/Makefile.am
===================================================================
--- rl/branches/newton20/engine/startup/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/startup/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,2 +0,0 @@
-SUBDIRS = src
-

Deleted: rl/branches/newton20/engine/startup/src/Makefile.am
===================================================================
--- rl/branches/newton20/engine/startup/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/startup/src/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,17 +0,0 @@
-INCLUDES = $(CEGUI_CFLAGS) $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(OIS_CFLAGS) $(STLPORT_CFLAGS) \
-	$(BOOST_CPPFLAGS) -I../../common/include -I../../core/include -I../../rules/include \
-	-I../../ui/include -I../../script/include -I../../ai/include $(OgreNewt_CFLAGS)
-
-bin_PROGRAMS = rastullah
-rastullah_SOURCES = RastullahMain.cpp
-rastullah_LDADD = \
-    $(top_builddir)/engine/common/src/libRlCommon.la \
-    $(top_builddir)/engine/core/src/libRlCore.la \
-    $(top_builddir)/engine/ui/src/libRlUi.la \
-    $(top_builddir)/engine/rules/src/libRlRules.la \
-    $(top_builddir)/engine/script/src/libRlScript.la \
-    $(top_builddir)/engine/ai/src/libRlAi.la \
-    $(RUBY_LIBS) $(LIBS) $(CEGUI_LIBS) $(OGRE_LIBS) $(OgreNewt_LIBS)
-
-
-

Deleted: rl/branches/newton20/engine/ui/Makefile.am
===================================================================
--- rl/branches/newton20/engine/ui/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/ui/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,2 +0,0 @@
-SUBDIRS =  include src
-

Deleted: rl/branches/newton20/engine/ui/include/Makefile.am
===================================================================
--- rl/branches/newton20/engine/ui/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/ui/include/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,60 +0,0 @@
-noinst_HEADERS = \
-    AboutWindow.h \
-    ActionChoiceWindow.h \
-    AbstractWindow.h \
-    CeGuiHelper.h \
-    CharacterSheetWindow.h \
-    CharacterStateWindow.h \
-	CharacterSelectionWindow.h \
-    CloseConfirmationWindow.h \
-    CombatControlState.h \
-    CombatGui.h \
-	CombatWindow.h \
-    CommandMapper.h \
-    ConfigComponent.h \
-    Console.h \
-    ContainerContentWindow.h \
-    ControlState.h \
-    CutsceneControlState.h \
-    DebugWindow.h \
-    DialogWindow.h \
-    DialogControlState.h \
-    FreeflightControlState.h \
-    GameLoggerWindow.h \
-    GameObjectInfoWindow.h \
-	GameOverWindow.h \
-	GameSaveLoadWindow.h \
-    GameSettings.h \
-    InfoPopup.h \
-    InGameMenuWindow.h \
-    InputManager.h \
-    InventoryWindow.h \
-    ItemDragContainer.h \
-    ItemDescriptionDragContainer.h \
-    ItemIconDragContainer.h \
-    JournalWindow.h \
-    ListboxWrappedTextItem.h \
-    LogWindow.h \
-    MainMenuWindow.h \
-    MainMenuEngineWindow.h \
-	MainMenuLoadWindow.h \
-    MessageWindow.h \
-    MovementControlState.h \
-    ObjectDescriptionWindow.h \
-    PlaylistWindow.h \
-    ProgressWindow.h \
-    PropertiesWindow.h \
-    RenderSystemConfigComponent.h \
-    SoundDriverConfigComponent.h \
-    SubtitleWindow.h \
-    UiPrerequisites.h \
-    UiSubsystem.h \
-    WindowFactory.h \
-    WindowFadeJob.h \
-    WindowManager.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/branches/newton20/engine/ui/src/Makefile.am
===================================================================
--- rl/branches/newton20/engine/ui/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/engine/ui/src/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,62 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(CEGUI_CFLAGS) $(CEGUIOGRE_CFLAGS) $(OgreNewt_CFLAGS) \
-    $(STLPORT_CFLAGS) $(OIS_CFLAGS) $(BOOST_CPPFLAGS) -I../include -I../../common/include  -I../../core/include \
-    -I../../rules/include -I../components/include -I../../dialog/include \
-    -I../../startup/include  -I../../ai/include
-
-lib_LTLIBRARIES = libRlUi.la
-libRlUi_la_LIBADD = \
-    $(RUBY_LIBS) $(LIBS) $(CEGUI_LIBS) $(OGRE_LIBS) $(CEGUIOGRE_LIBS) $(OIS_LIBS) $(OgreNewt_LIBS)
-
-libRlUi_la_SOURCES = \
-    AboutWindow.cpp \
-    ActionChoiceWindow.cpp \
-    AbstractWindow.cpp \
-    CharacterSheetWindow.cpp \
-    CharacterStateWindow.cpp \
-	CharacterSelectionWindow.cpp \
-    CloseConfirmationWindow.cpp \
-    CombatControlState.cpp \
-    CombatGui.cpp \
-    CombatWindow.cpp \
-    CommandMapper.cpp \
-    ConfigComponent.cpp \
-    ContainerContentWindow.cpp \
-    ControlState.cpp \
-    Console.cpp \
-    CutsceneControlState.cpp \
-    DebugWindow.cpp \
-    DialogControlState.cpp \
-    DialogWindow.cpp \
-    FreeflightControlState.cpp \
-    GameLoggerWindow.cpp \
-    GameObjectInfoWindow.cpp \
-	GameOverWindow.cpp \
-	GameSaveLoadWindow.cpp \
-    GameSettings.cpp \
-    InfoPopup.cpp \
-    InGameMenuWindow.cpp \
-    InputManager.cpp \
-    InventoryWindow.cpp \
-    ItemDragContainer.cpp \
-    ItemDescriptionDragContainer.cpp \
-    ItemIconDragContainer.cpp \
-    JournalWindow.cpp \
-    ListboxWrappedTextItem.cpp \
-    LogWindow.cpp \
-    MainMenuWindow.cpp \
-    MainMenuEngineWindow.cpp \
-	MainMenuLoadWindow.cpp \
-    MessageWindow.cpp \
-    MovementControlState.cpp \
-    ObjectDescriptionWindow.cpp \
-    PlaylistWindow.cpp \
-    ProgressWindow.cpp \
-    PropertiesWindow.cpp \
-    RenderSystemConfigComponent.cpp \
-    SoundConfig.cpp \
-    SoundDriverConfigComponent.cpp \
-    SubtitleWindow.cpp \
-    UiSubsystem.cpp \
-    WindowFactory.cpp \
-    WindowFadeJob.cpp \
-    WindowManager.cpp

Deleted: rl/branches/newton20/plugins/Makefile.am
===================================================================
--- rl/branches/newton20/plugins/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/plugins/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1 +0,0 @@
-SUBDIRS = $(RL_AUDIOPLUGINS)

Deleted: rl/branches/newton20/plugins/fmod4driver/Makefile.am
===================================================================
--- rl/branches/newton20/plugins/fmod4driver/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/plugins/fmod4driver/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1 +0,0 @@
-SUBDIRS = include src

Deleted: rl/branches/newton20/plugins/fmod4driver/include/Makefile.am
===================================================================
--- rl/branches/newton20/plugins/fmod4driver/include/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/plugins/fmod4driver/include/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,7 +0,0 @@
-noinst_HEADERS = \
-	Fmod4ConfigComponent.h \
-	Fmod4Driver.h \
-	Fmod4DriverPrerequisites.h \
-	Fmod4Listener.h \
-	Fmod4Sound.h 
-	

Deleted: rl/branches/newton20/plugins/fmod4driver/src/Makefile.am
===================================================================
--- rl/branches/newton20/plugins/fmod4driver/src/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/plugins/fmod4driver/src/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,18 +0,0 @@
-INCLUDES = $(OGRE_CFLAGS) $(CEGUI_CFLAGS) $(RUBY_CFLAGS) $(BOOST_CPPFLAGS) \
-	-I../include -I../../../engine/ui/include -I../../../engine/core/include \
-	-I../../../engine/common/include
-
-lib_LTLIBRARIES = libRlFmod4Driver.la
-libRlFmod4Driver_la_LDFLAGS = \
-     $(top_builddir)/engine/common/src/libRlCommon.la \
-     $(top_builddir)/engine/core/src/libRlCore.la \
-     $(top_builddir)/engine/ui/src/libRlUi.la \
-     -lfmodex $(OGRE_LIBS) $(CEGUIOGRE_LIBS) $(LIBS)
-
-libRlFmod4Driver_la_SOURCES = \
-	Fmod4ConfigComponent.cpp \
-	Fmod4Driver.cpp \
-	Fmod4DriverDllMain.cpp \
-	Fmod4Listener.cpp \
-	Fmod4Sound.cpp
-	

Deleted: rl/branches/newton20/tests/Makefile.am
===================================================================
--- rl/branches/newton20/tests/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/tests/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,2 +0,0 @@
-SUBDIRS =  coretests rulestests multimediatests RlDialogTests
-

Deleted: rl/branches/newton20/tests/RlDialogTests/Makefile.am
===================================================================
--- rl/branches/newton20/tests/RlDialogTests/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/tests/RlDialogTests/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,15 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(CEGUI_CFLAGS) $(OGRE_CFLAGS) $(CEGUIOGRE_CFLAGS) $(STLPORT_CFLAGS) \
-	$(Plugin_TheoraVideoSystem_CFLAGS) -I../../engine/multimedia/include -I../../engine/core/include -I../../engine/ui/include \
-	-I../../engine/rules/include -I../../engine/dialog/include -I../../engine/script/include
-
-noinst_PROGRAMS = testdialog
-testdialog_LDFLAGS = -L../../engine/common/src -L../../engine/multimedia/src -L../../engine/core/src \
-	-L../../engine/ui/src -L../../engine/rules/src -L../../engine/dialog/src \
-	-L../../engine/rules/src -L../../engine/script/src -L../../engine/ui/src
-testdialog_LDADD = $(RUBY_LIBS) $(CEGUI_LIBS) $(OGRE_LIBS) $(CPPUNIT_LIBS) $(LIBS) \
-	  -lRlCommon -lRlMultimedia -lvorbis -logg $(Plugin_TheoraVideoSystem_LIBS) \
-	  -lRlUi -lRlScript -lRlRules
-testdialog_SOURCES = \
-	TestDialog.cpp 
-
-	
\ No newline at end of file

Deleted: rl/branches/newton20/tests/coretests/Makefile.am
===================================================================
--- rl/branches/newton20/tests/coretests/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/tests/coretests/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,14 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(STLPORT_CFLAGS) -I../include \
- 	  -I../../engine/core/include -I../../engine/common/include -I../../engine/multimedia/include -I../../engine/dialog/include  \
- 	  -I../../engine/ui/include -I../../engine/rules/include -I../../engine/script/include  $(CEGUI_CFLAGS)
-
-noinst_PROGRAMS = testcore
-testcore_LDFLAGS = -L../../engine/common/src -L../../engine/multimedia/src -L../../engine/dialog/src -L../../engine/rules/src \
-	  -L../../engine/ui/src -L../../engine/core/src -L../../engine/script/src
-testcore_LDADD = $(RUBY_LIBS) $(CPPUNIT_LIBS) $(OGRE_LIBS) $(CEGUI_LIBS) $(LIBS) \
-	  -lRlCommon -lRlCore -lRlMultimedia -lRlUi -lRlRules -lRlDialog -lRlScript \
-	  -lvorbis -logg -lboost_thread $(Plugin_TheoraVideoSystem_LIBS)
-testcore_SOURCES = \
-	TestCore.cpp \
-	CoreTests.cpp
-

Deleted: rl/branches/newton20/tests/multimediatests/Makefile.am
===================================================================
--- rl/branches/newton20/tests/multimediatests/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/tests/multimediatests/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,31 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(CEGUI_CFLAGS) $(OGRE_CFLAGS) $(CEGUIOGRE_CFLAGS) $(STLPORT_CFLAGS) \
-	$(Plugin_TheoraVideoSystem_CFLAGS) -I../../engine/multimedia/include -I../../engine/core/include \
-	-I../../engine/ui/include -I../../engine/dialog/include -I../../engine/rules/include \
-	-I../../engine/script/include
-
-noinst_PROGRAMS = testsound testvideo
-testsound_LDFLAGS = -L../../engine/common/src -L../../engine/multimedia/src -L../../engine/core/src \
-	-L../../engine/ui/src -L../../engine/rules/src -L../../engine/dialog/src \
-	-L../../engine/script/src 
-testsound_LDADD = $(RUBY_LIBS) $(CEGUI_LIBS) $(OGRE_LIBS) $(CPPUNIT_LIBS) $(LIBS) \
-	  -lRlCommon -lRlMultimedia -lvorbis -logg $(Plugin_TheoraVideoSystem_LIBS) \
-	  -lRlUi -lRlScript -lRlRules -lRlDialog -lRlCore
-testsound_SOURCES = \
-	SoundTest1.cpp \
-	SoundTest2.cpp \
-	SoundTest3.cpp \
-	SoundTest4.cpp \
-	SoundTest5.cpp \
-	SoundTest6.cpp \
-	SoundTest7.cpp \
-	SoundTest8.cpp \
-	TestStartup.cpp 
-
-testvideo_LDFLAGS = -L../../engine/common/src -L../../engine/multimedia/src -L../../engine/core/src \
-	-L../../engine/ui/src -L../../engine/rules/src -L../../engine/dialog/src
-testvideo_SOURCES = \
-	VideoTest.cpp
-testvideo_LDADD = $(CEGUI_LIBS) $(OGRE_LIBS) $(LIBS) -lvorbis -logg -lboost_thread\
-	$(Plugin_TheoraVideoSystem_LIBS)  $(CEGUIOGRE_LIBS) -lRlMultimedia -lRlCommon -lRlCore \
-	$(RUBY_LIBS)
-	
\ No newline at end of file

Deleted: rl/branches/newton20/tests/rulestests/Makefile.am
===================================================================
--- rl/branches/newton20/tests/rulestests/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/tests/rulestests/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,9 +0,0 @@
-INCLUDES = $(CEGUI_CFLAGS) $(RUBY_CFLAGS) $(OPENALPP_CFLAGS) $(OGRE_CFLAGS) $(STLPORT_CFLAGS) -I../../engine/rules/include -I../../engine/core/include
-
-noinst_PROGRAMS = testrules
-testrules_SOURCES = Main.cpp
-testrules_LDFLAGS = -L../../engine/core/src  -L../../engine/common/src -L../../engine/rules/src
-testrules_LDADD = $(LIBS) $(CPPUNIT_LIBS) $(OGRE_LIBS) $(CEGUIOGRE_LIBS) \
-	 $(RUBY_LIBS) -lRlCore -lRlCommon -lRlRules -lvorbis -lvorbisfile -logg -lboost_thread \
-	 $(Plugin_TheoraVideoSystem_LIBS)
-

Deleted: rl/branches/newton20/tools/Makefile.am
===================================================================
--- rl/branches/newton20/tools/Makefile.am	2009-01-04 14:44:24 UTC (rev 4674)
+++ rl/branches/newton20/tools/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
@@ -1,2 +0,0 @@
-SUBDIRS = 
-



From chrber at mail.berlios.de  Sun Jan  4 15:50:28 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 15:50:28 +0100
Subject: [Dsa-hl-svn] r4676 - in dependencies/OgreNewt: . include src
Message-ID: <200901041450.n04EoSkM030798@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 15:50:22 +0100 (Sun, 04 Jan 2009)
New Revision: 4676

Removed:
   dependencies/OgreNewt/Makefile.am
   dependencies/OgreNewt/OgreNewt.pc.in
   dependencies/OgreNewt/bootstrap
   dependencies/OgreNewt/config.h.in
   dependencies/OgreNewt/configure.in
   dependencies/OgreNewt/include/Makefile.am
   dependencies/OgreNewt/src/Makefile.am
Modified:
   dependencies/OgreNewt/CMakeLists.txt
Log:
Removed autotools build system
Made cmake 2.6.2 mandatory


Modified: dependencies/OgreNewt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt/CMakeLists.txt	2009-01-04 14:45:40 UTC (rev 4675)
+++ dependencies/OgreNewt/CMakeLists.txt	2009-01-04 14:50:22 UTC (rev 4676)
@@ -1,6 +1,6 @@
 PROJECT(OgreNewt)
 
-CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
 
 # Include required cmake macros
 INCLUDE(FeatureSummary)
@@ -72,4 +72,4 @@
 	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
 ENDIF(NOT WIN32)
 
-PRINT_ENABLED_FEATURES()
\ No newline at end of file
+PRINT_ENABLED_FEATURES()

Deleted: dependencies/OgreNewt/Makefile.am
===================================================================
--- dependencies/OgreNewt/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
+++ dependencies/OgreNewt/Makefile.am	2009-01-04 14:50:22 UTC (rev 4676)
@@ -1,4 +0,0 @@
-SUBDIRS = include src
-
-pkgconfigdir = $(libdir)/pkgconfig
-pkgconfig_DATA = OgreNewt.pc

Deleted: dependencies/OgreNewt/OgreNewt.pc.in
===================================================================
--- dependencies/OgreNewt/OgreNewt.pc.in	2009-01-04 14:45:40 UTC (rev 4675)
+++ dependencies/OgreNewt/OgreNewt.pc.in	2009-01-04 14:50:22 UTC (rev 4676)
@@ -1,11 +0,0 @@
-prefix=@prefix@
-exec_prefix=@exec_prefix@
-libdir=@libdir@
-includedir=@includedir@
-
-Name: OgreNewt
-Description: Ogre Bindings for the Newton Physics SDK
-Requires: OGRE >= 1.4
-Version: @VERSION@
-Libs: -L${libdir} -lOgreNewt
-Cflags: -I${includedir}/OgreNewt

Deleted: dependencies/OgreNewt/bootstrap
===================================================================
--- dependencies/OgreNewt/bootstrap	2009-01-04 14:45:40 UTC (rev 4675)
+++ dependencies/OgreNewt/bootstrap	2009-01-04 14:50:22 UTC (rev 4676)
@@ -1,34 +0,0 @@
-#!/bin/sh
-
-# Check for proper versions of autotools
-# We require:
-#  - autoconf 2.50+
-#  - automake 1.6+
-#  - libtool 1.4+
-
-# Deal with some gentoo-specific issues
-export WANT_AUTOMAKE='1.7'
-export WANT_AUTOCONF_2_5=1
-
-## Using prereq in autoconf rather than here, mostly for the debian systems at
-## this point
-if test -z "`autoconf --version 2>&1|head -n 2|egrep '2.[5-9]'`"; then
-	echo "Autoconf 2.50 or above is required. Aborting build...";
-    exit 1;
-fi
-
-if test -z "`automake --version 2>&1|head -n 1|egrep '1.([6-9]|[1-9][0-9])'`"; then
-	echo "Automake 1.6 or above is required. Aborting build...";
-	exit 1;
-fi
-
-if test -z "`libtool --version 2>&1|head -n 1|egrep '1.[4-5]'`"; then
-	echo "Libtool 1.4 or above is required. Aborting build...";
-	exit 1;
-fi
-
-echo "Bootstrap..."
-
-# Fire up autotools
-libtoolize --force && aclocal $ACLOCAL_FLAGS && automake --include-deps --add-missing --copy && autoconf
-

Deleted: dependencies/OgreNewt/config.h.in
===================================================================
--- dependencies/OgreNewt/config.h.in	2009-01-04 14:45:40 UTC (rev 4675)
+++ dependencies/OgreNewt/config.h.in	2009-01-04 14:50:22 UTC (rev 4676)
@@ -1,82 +0,0 @@
-/* config.h.in.  Generated from configure.in by autoheader.  */
-
-/* Define to 1 if you have the <dlfcn.h> header file. */
-#undef HAVE_DLFCN_H
-
-/* Define to 1 if you have the <inttypes.h> header file. */
-#undef HAVE_INTTYPES_H
-
-/* Define to 1 if you have the `Newton' library (-lNewton). */
-#undef HAVE_LIBNEWTON
-
-/* Define to 1 if you have the <memory.h> header file. */
-#undef HAVE_MEMORY_H
-
-/* Define to 1 if you have the <Newton.h> header file. */
-#undef HAVE_NEWTON_H
-
-/* Define to 1 if stdbool.h conforms to C99. */
-#undef HAVE_STDBOOL_H
-
-/* Define to 1 if you have the <stddef.h> header file. */
-#undef HAVE_STDDEF_H
-
-/* Define to 1 if you have the <stdint.h> header file. */
-#undef HAVE_STDINT_H
-
-/* Define to 1 if you have the <stdlib.h> header file. */
-#undef HAVE_STDLIB_H
-
-/* Define to 1 if you have the <strings.h> header file. */
-#undef HAVE_STRINGS_H
-
-/* Define to 1 if you have the <string.h> header file. */
-#undef HAVE_STRING_H
-
-/* Define to 1 if you have the <sys/stat.h> header file. */
-#undef HAVE_SYS_STAT_H
-
-/* Define to 1 if you have the <sys/types.h> header file. */
-#undef HAVE_SYS_TYPES_H
-
-/* Define to 1 if you have the <unistd.h> header file. */
-#undef HAVE_UNISTD_H
-
-/* Define to 1 if the system has the type `_Bool'. */
-#undef HAVE__BOOL
-
-/* Name of package */
-#undef PACKAGE
-
-/* Define to the address where bug reports for this package should be sent. */
-#undef PACKAGE_BUGREPORT
-
-/* Define to the full name of this package. */
-#undef PACKAGE_NAME
-
-/* Define to the full name and version of this package. */
-#undef PACKAGE_STRING
-
-/* Define to the one symbol short name of this package. */
-#undef PACKAGE_TARNAME
-
-/* Define to the version of this package. */
-#undef PACKAGE_VERSION
-
-/* Define to 1 if you have the ANSI C header files. */
-#undef STDC_HEADERS
-
-/* Version number of package */
-#undef VERSION
-
-/* Define to empty if `const' does not conform to ANSI C. */
-#undef const
-
-/* Define to `__inline__' or `__inline' if that's what the C compiler
-   calls it, or to nothing if 'inline' is not supported under any name.  */
-#ifndef __cplusplus
-#undef inline
-#endif
-
-/* Define to `unsigned int' if <sys/types.h> does not define. */
-#undef size_t

Deleted: dependencies/OgreNewt/configure.in
===================================================================
--- dependencies/OgreNewt/configure.in	2009-01-04 14:45:40 UTC (rev 4675)
+++ dependencies/OgreNewt/configure.in	2009-01-04 14:50:22 UTC (rev 4676)
@@ -1,43 +0,0 @@
-#                                               -*- Autoconf -*-
-# Process this file with autoconf to produce a configure script.
-
-AC_PREREQ(2.50)
-AC_INIT(OgreNewt, 1.53)
-AC_CONFIG_SRCDIR([config.h.in])
-AC_CONFIG_HEADER([config.h])
-AM_INIT_AUTOMAKE([1.6.1 foreign no-installinfo no-installman subdir-objects])
-
-# Checks for programs.
-AC_LANG([C++])
-AC_PROG_CXX
-AC_PROG_CC
-AC_PROG_INSTALL
-AC_PROG_LIBTOOL
-
-# Checks for libraries.
-
-# Checks for header files.
-AC_HEADER_STDC
-AC_CHECK_HEADERS([memory.h stddef.h])
-
-# Checks for typedefs, structures, and compiler characteristics.
-AC_HEADER_STDBOOL
-AC_C_CONST
-AC_C_INLINE
-AC_TYPE_SIZE_T
-
-# Checks for library functions.
-AC_FUNC_MEMCMP
-
-# Check for Ogre
-PKG_CHECK_MODULES(OGRE, OGRE >= 1.4.0)
-
-# Check for Newton
-AC_CHECK_LIB([Newton], [fopen], [], AC_MSG_ERROR([Can't find libNewton]))
-AC_CHECK_HEADERS([Newton.h], , AC_MSG_ERROR([Can't find Newton headers]))
-
-AC_CONFIG_FILES([Makefile
-                 include/Makefile
-                 src/Makefile
-                 OgreNewt.pc])
-AC_OUTPUT

Deleted: dependencies/OgreNewt/include/Makefile.am
===================================================================
--- dependencies/OgreNewt/include/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
+++ dependencies/OgreNewt/include/Makefile.am	2009-01-04 14:50:22 UTC (rev 4676)
@@ -1,20 +0,0 @@
-nobase_include_HEADERS = \
-	OgreNewt/FastDelegate.h \
-	OgreNewt/line3D.h \
-	OgreNewt/OgreNewt_BasicJoints.h \
-	OgreNewt/OgreNewt_Body.h \
-	OgreNewt/OgreNewt_BodyIterator.h \
-	OgreNewt/OgreNewt_Collision.h \
-	OgreNewt/OgreNewt_CollisionPrimitives.h \
-	OgreNewt/OgreNewt_ContactCallback.h \
-	OgreNewt/OgreNewt_Debugger.h \
-	OgreNewt/OgreNewt.h \
-	OgreNewt/OgreNewt_Joint.h \
-	OgreNewt/OgreNewt_MaterialID.h \
-	OgreNewt/OgreNewt_MaterialPair.h \
-	OgreNewt/OgreNewt_Prerequisites.h \
-	OgreNewt/OgreNewt_RayCast.h \
-	OgreNewt/OgreNewt_Tools.h \
-	OgreNewt/OgreNewt_TreeCollisionSerializer.h \
-	OgreNewt/OgreNewt_Vehicle.h \
-	OgreNewt/OgreNewt_World.h

Deleted: dependencies/OgreNewt/src/Makefile.am
===================================================================
--- dependencies/OgreNewt/src/Makefile.am	2009-01-04 14:45:40 UTC (rev 4675)
+++ dependencies/OgreNewt/src/Makefile.am	2009-01-04 14:50:22 UTC (rev 4676)
@@ -1,19 +0,0 @@
-INCLUDES = $(OGRE_CFLAGS) -I../include/OgreNewt
-
-lib_LTLIBRARIES = libOgreNewt.la
-libOgreNewt_la_LDFLAGS = $(OGRE_LIBS) $(LIBS)
-libOgreNewt_la_SOURCES = \
-	OgreNewt_BasicJoints.cpp \
-	OgreNewt_Body.cpp \
-	OgreNewt_Collision.cpp \
-	OgreNewt_CollisionPrimitives.cpp \
-	OgreNewt_ContactCallback.cpp \
-	OgreNewt_Debugger.cpp \
-	OgreNewt_Joint.cpp \
-	OgreNewt_MaterialID.cpp \
-	OgreNewt_MaterialPair.cpp \
-	OgreNewt_RayCast.cpp \
-	OgreNewt_Tools.cpp \
-	OgreNewt_TreeCollisionSerializer.cpp \
-	OgreNewt_Vehicle.cpp \
-	OgreNewt_World.cpp



From chrber at mail.berlios.de  Sun Jan  4 15:51:39 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 15:51:39 +0100
Subject: [Dsa-hl-svn] r4677 - in dependencies/OgreNewt_ngt: . inc src
Message-ID: <200901041451.n04EpdBO030900@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 15:51:35 +0100 (Sun, 04 Jan 2009)
New Revision: 4677

Removed:
   dependencies/OgreNewt_ngt/Makefile.am
   dependencies/OgreNewt_ngt/OgreNewt.pc.in
   dependencies/OgreNewt_ngt/bootstrap
   dependencies/OgreNewt_ngt/config.h.in
   dependencies/OgreNewt_ngt/configure.in
   dependencies/OgreNewt_ngt/inc/Makefile.am
   dependencies/OgreNewt_ngt/src/Makefile.am
Modified:
   dependencies/OgreNewt_ngt/CMakeLists.txt
Log:
Removed autotools build system
Made cmake 2.6.2 mandatory


Modified: dependencies/OgreNewt_ngt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-04 14:50:22 UTC (rev 4676)
+++ dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-04 14:51:35 UTC (rev 4677)
@@ -1,6 +1,6 @@
 PROJECT(OgreNewt)
 
-CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
 
 # Include required cmake macros
 INCLUDE(FeatureSummary)
@@ -71,4 +71,4 @@
 	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
 ENDIF(NOT WIN32)
 
-PRINT_ENABLED_FEATURES()
\ No newline at end of file
+PRINT_ENABLED_FEATURES()

Deleted: dependencies/OgreNewt_ngt/Makefile.am
===================================================================
--- dependencies/OgreNewt_ngt/Makefile.am	2009-01-04 14:50:22 UTC (rev 4676)
+++ dependencies/OgreNewt_ngt/Makefile.am	2009-01-04 14:51:35 UTC (rev 4677)
@@ -1,4 +0,0 @@
-SUBDIRS = inc src
-
-pkgconfigdir = $(libdir)/pkgconfig
-pkgconfig_DATA = OgreNewt.pc

Deleted: dependencies/OgreNewt_ngt/OgreNewt.pc.in
===================================================================
--- dependencies/OgreNewt_ngt/OgreNewt.pc.in	2009-01-04 14:50:22 UTC (rev 4676)
+++ dependencies/OgreNewt_ngt/OgreNewt.pc.in	2009-01-04 14:51:35 UTC (rev 4677)
@@ -1,11 +0,0 @@
-prefix=@prefix@
-exec_prefix=@exec_prefix@
-libdir=@libdir@
-includedir=@includedir@
-
-Name: OgreNewt
-Description: Ogre Bindings for the Newton Physics SDK
-Requires: OGRE
-Version: @VERSION@
-Libs: -L${libdir} -lOgreNewt
-Cflags: -I${includedir}/OgreNewt

Deleted: dependencies/OgreNewt_ngt/bootstrap
===================================================================
--- dependencies/OgreNewt_ngt/bootstrap	2009-01-04 14:50:22 UTC (rev 4676)
+++ dependencies/OgreNewt_ngt/bootstrap	2009-01-04 14:51:35 UTC (rev 4677)
@@ -1,34 +0,0 @@
-#!/bin/sh
-
-# Check for proper versions of autotools
-# We require:
-#  - autoconf 2.50+
-#  - automake 1.6+
-#  - libtool 1.4+
-
-# Deal with some gentoo-specific issues
-export WANT_AUTOMAKE='1.7'
-export WANT_AUTOCONF_2_5=1
-
-## Using prereq in autoconf rather than here, mostly for the debian systems at
-## this point
-if test -z "`autoconf --version 2>&1|head -n 2|egrep '2.[5-9]'`"; then
-	echo "Autoconf 2.50 or above is required. Aborting build...";
-    exit 1;
-fi
-
-if test -z "`automake --version 2>&1|head -n 1|egrep '1.([6-9]|[1-9][0-9])'`"; then
-	echo "Automake 1.6 or above is required. Aborting build...";
-	exit 1;
-fi
-
-if test -z "`libtool --version 2>&1|head -n 1|egrep '1.[4-5]'`"; then
-	echo "Libtool 1.4 or above is required. Aborting build...";
-	exit 1;
-fi
-
-echo "Bootstrap..."
-
-# Fire up autotools
-libtoolize --force && aclocal $ACLOCAL_FLAGS && automake --include-deps --add-missing --copy && autoconf
-

Deleted: dependencies/OgreNewt_ngt/config.h.in
===================================================================
--- dependencies/OgreNewt_ngt/config.h.in	2009-01-04 14:50:22 UTC (rev 4676)
+++ dependencies/OgreNewt_ngt/config.h.in	2009-01-04 14:51:35 UTC (rev 4677)
@@ -1,79 +0,0 @@
-/* config.h.in.  Generated from configure.in by autoheader.  */
-
-/* Define to 1 if you have the <dlfcn.h> header file. */
-#undef HAVE_DLFCN_H
-
-/* Define to 1 if you have the <inttypes.h> header file. */
-#undef HAVE_INTTYPES_H
-
-/* Define to 1 if you have the <memory.h> header file. */
-#undef HAVE_MEMORY_H
-
-/* Define to 1 if you have the <Newton.h> header file. */
-#undef HAVE_NEWTON_H
-
-/* Define to 1 if stdbool.h conforms to C99. */
-#undef HAVE_STDBOOL_H
-
-/* Define to 1 if you have the <stddef.h> header file. */
-#undef HAVE_STDDEF_H
-
-/* Define to 1 if you have the <stdint.h> header file. */
-#undef HAVE_STDINT_H
-
-/* Define to 1 if you have the <stdlib.h> header file. */
-#undef HAVE_STDLIB_H
-
-/* Define to 1 if you have the <strings.h> header file. */
-#undef HAVE_STRINGS_H
-
-/* Define to 1 if you have the <string.h> header file. */
-#undef HAVE_STRING_H
-
-/* Define to 1 if you have the <sys/stat.h> header file. */
-#undef HAVE_SYS_STAT_H
-
-/* Define to 1 if you have the <sys/types.h> header file. */
-#undef HAVE_SYS_TYPES_H
-
-/* Define to 1 if you have the <unistd.h> header file. */
-#undef HAVE_UNISTD_H
-
-/* Define to 1 if the system has the type `_Bool'. */
-#undef HAVE__BOOL
-
-/* Name of package */
-#undef PACKAGE
-
-/* Define to the address where bug reports for this package should be sent. */
-#undef PACKAGE_BUGREPORT
-
-/* Define to the full name of this package. */
-#undef PACKAGE_NAME
-
-/* Define to the full name and version of this package. */
-#undef PACKAGE_STRING
-
-/* Define to the one symbol short name of this package. */
-#undef PACKAGE_TARNAME
-
-/* Define to the version of this package. */
-#undef PACKAGE_VERSION
-
-/* Define to 1 if you have the ANSI C header files. */
-#undef STDC_HEADERS
-
-/* Version number of package */
-#undef VERSION
-
-/* Define to empty if `const' does not conform to ANSI C. */
-#undef const
-
-/* Define to `__inline__' or `__inline' if that's what the C compiler
-   calls it, or to nothing if 'inline' is not supported under any name.  */
-#ifndef __cplusplus
-#undef inline
-#endif
-
-/* Define to `unsigned int' if <sys/types.h> does not define. */
-#undef size_t

Deleted: dependencies/OgreNewt_ngt/configure.in
===================================================================
--- dependencies/OgreNewt_ngt/configure.in	2009-01-04 14:50:22 UTC (rev 4676)
+++ dependencies/OgreNewt_ngt/configure.in	2009-01-04 14:51:35 UTC (rev 4677)
@@ -1,42 +0,0 @@
-#                                               -*- Autoconf -*-
-# Process this file with autoconf to produce a configure script.
-
-AC_PREREQ(2.50)
-AC_INIT(OgreNewt, 0.07)
-AC_CONFIG_SRCDIR([config.h.in])
-AC_CONFIG_HEADER([config.h])
-AM_INIT_AUTOMAKE([1.6.1 foreign no-installinfo no-installman subdir-objects])
-
-# Checks for programs.
-AC_LANG([C++])
-AC_PROG_CXX
-AC_PROG_CC
-AC_PROG_INSTALL
-AC_PROG_LIBTOOL
-
-# Checks for libraries.
-
-# Checks for header files.
-AC_HEADER_STDC
-AC_CHECK_HEADERS([memory.h stddef.h])
-
-# Checks for typedefs, structures, and compiler characteristics.
-AC_HEADER_STDBOOL
-AC_C_CONST
-AC_C_INLINE
-AC_TYPE_SIZE_T
-
-# Checks for library functions.
-AC_FUNC_MEMCMP
-
-# Check for Ogre
-PKG_CHECK_MODULES(OGRE, OGRE >= 1.4.0)
-
-# Check for Newton header
-AC_CHECK_HEADERS(Newton.h, , AC_MSG_ERROR([Can't find Newton headers]))
-
-AC_CONFIG_FILES([Makefile
-                 inc/Makefile
-                 src/Makefile
-                 OgreNewt.pc])
-AC_OUTPUT

Deleted: dependencies/OgreNewt_ngt/inc/Makefile.am
===================================================================
--- dependencies/OgreNewt_ngt/inc/Makefile.am	2009-01-04 14:50:22 UTC (rev 4676)
+++ dependencies/OgreNewt_ngt/inc/Makefile.am	2009-01-04 14:51:35 UTC (rev 4677)
@@ -1,19 +0,0 @@
-nobase_include_HEADERS = \
-	OgreNewt_BasicFrameListener.h \
-	OgreNewt_BasicJoints.h \
-	OgreNewt_Body.h \
-	OgreNewt_BodyIterator.h \
-	OgreNewt_Collision.h \
-	OgreNewt_CollisionPrimitives.h \
-	OgreNewt_CollisionSerializer.h \
-	OgreNewt_ContactCallback.h \
-	OgreNewt_Debugger.h \
-	OgreNewt.h \
-	OgreNewt_Joint.h \
-	OgreNewt_MaterialID.h \
-	OgreNewt_MaterialPair.h \
-	OgreNewt_Prerequisites.h \
-	OgreNewt_RayCast.h \
-	OgreNewt_Tools.h \
-	OgreNewt_Vehicle.h \
-	OgreNewt_World.h

Deleted: dependencies/OgreNewt_ngt/src/Makefile.am
===================================================================
--- dependencies/OgreNewt_ngt/src/Makefile.am	2009-01-04 14:50:22 UTC (rev 4676)
+++ dependencies/OgreNewt_ngt/src/Makefile.am	2009-01-04 14:51:35 UTC (rev 4677)
@@ -1,20 +0,0 @@
-INCLUDES = $(OGRE_CFLAGS) -I../inc/
-
-lib_LTLIBRARIES = libOgreNewt.la
-libOgreNewt_la_LDFLAGS = $(OGRE_LIBS)
-libOgreNewt_la_SOURCES = \
-	OgreNewt_BasicFrameListener.cpp \
-	OgreNewt_BasicJoints.cpp \
-	OgreNewt_Body.cpp \
-	OgreNewt_Collision.cpp \
-	OgreNewt_CollisionPrimitives.cpp \
-	OgreNewt_CollisionSerializer.cpp \
-	OgreNewt_ContactCallback.cpp \
-	OgreNewt_Debugger.cpp \
-	OgreNewt_Joint.cpp \
-	OgreNewt_MaterialID.cpp \
-	OgreNewt_MaterialPair.cpp \
-	OgreNewt_RayCast.cpp \
-	OgreNewt_Tools.cpp \
-	OgreNewt_Vehicle.cpp \
-	OgreNewt_World.cpp



From chrber at mail.berlios.de  Sun Jan  4 16:45:58 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 16:45:58 +0100
Subject: [Dsa-hl-svn] r4678 - in dependencies/opensteer: . cmake include src
Message-ID: <200901041545.n04FjwVm003253@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 16:45:54 +0100 (Sun, 04 Jan 2009)
New Revision: 4678

Added:
   dependencies/opensteer/CMakeLists.txt
   dependencies/opensteer/cmake/
   dependencies/opensteer/cmake/FindOGRE.cmake
   dependencies/opensteer/opensteer.pc.cmake
Removed:
   dependencies/opensteer/Makefile.am
   dependencies/opensteer/bootstrap
   dependencies/opensteer/configure.in
   dependencies/opensteer/include/Makefile.am
   dependencies/opensteer/opensteer.pc.in
   dependencies/opensteer/src/Makefile.am
Log:
Removed autotools build system
Added cmake build system


Added: dependencies/opensteer/CMakeLists.txt
===================================================================
--- dependencies/opensteer/CMakeLists.txt	2009-01-04 14:51:35 UTC (rev 4677)
+++ dependencies/opensteer/CMakeLists.txt	2009-01-04 15:45:54 UTC (rev 4678)
@@ -0,0 +1,77 @@
+PROJECT(OpenSteer)
+
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)
+
+# Include required cmake macros
+INCLUDE(FeatureSummary)
+
+# Version information
+SET(OpenSteer_MAJOR_VERSION 0)
+SET(OpenSteer_MINOR_VERSION 9)
+SET(OpenSteer_PATCH_VERSION 0)
+
+# Add directory with OpenSteer's own macro definitions
+# (checked before ${CMAKE_ROOT}/Modules)
+SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
+
+# Check for required components
+FIND_PACKAGE(PkgConfig)
+FIND_PACKAGE(OGRE 1.4 REQUIRED)
+
+INCLUDE_DIRECTORIES(
+${CMAKE_CURRENT_SOURCE_DIR}/include
+${OGRE_INCLUDE_DIRS})
+
+SET(OpenSteer_LIB_SRCS
+src/lq.c
+src/Clock.cpp
+src/Color.cpp
+src/Obstacle.cpp
+src/OldPathway.cpp
+src/Path.cpp
+src/Pathway.cpp
+src/PlugIn.cpp
+src/PolylineSegmentedPath.cpp
+src/PolylineSegmentedPathwaySingleRadius.cpp
+src/SegmentedPath.cpp
+src/SegmentedPathway.cpp
+src/SimpleVehicle.cpp
+src/Vec3.cpp
+src/Vec3Utilities.cpp)
+
+ADD_LIBRARY(OpenSteer SHARED ${OpenSteer_LIB_SRCS})
+
+TARGET_LINK_LIBRARIES(OpenSteer ${OGRE_LIBRARIES})
+
+SET_TARGET_PROPERTIES(OpenSteer PROPERTIES
+	VERSION ${OpenSteer_MAJOR_VERSION}.${OpenSteer_MINOR_VERSION}.${OpenSteer_PATCH_VERSION}
+	SOVERSION ${OpenSteer_MAJOR_VERSION})
+
+CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/opensteer.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/opensteer.pc)
+
+INSTALL(TARGETS OpenSteer
+        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
+        RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
+        ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
+
+INSTALL(FILES include/OpenSteer/AbstractVehicle.h include/OpenSteer/Annotation.h
+include/OpenSteer/Clock.h include/OpenSteer/Color.h include/OpenSteer/LocalSpace.h
+include/OpenSteer/lq.h include/OpenSteer/Obstacle.h include/OpenSteer/OldPathway.h
+include/OpenSteer/Path.h include/OpenSteer/Pathway.h include/OpenSteer/PlugIn.h
+include/OpenSteer/PolylineSegmentedPath.h include/OpenSteer/PolylineSegmentedPathwaySegmentRadii.h
+include/OpenSteer/PolylineSegmentedPathwaySingleRadius.h include/OpenSteer/Proximity.h
+include/OpenSteer/QueryPathAlike.h include/OpenSteer/QueryPathAlikeBaseDataExtractionPolicies.h
+include/OpenSteer/QueryPathAlikeMappings.h include/OpenSteer/QueryPathAlikeUtilities.h
+include/OpenSteer/SegmentedPath.h include/OpenSteer/SegmentedPathAlikeUtilities.h
+include/OpenSteer/SegmentedPathway.h include/OpenSteer/SharedPointer.h
+include/OpenSteer/StandardTypes.h include/OpenSteer/SteerLibrary.h
+include/OpenSteer/UnusedParameter.h include/OpenSteer/Utilities.h
+include/OpenSteer/Vec3.h include/OpenSteer/Vec3Utilities.h
+DESTINATION ${CMAKE_INSTALL_PREFIX}/include/OpenSteer)
+
+IF(NOT WIN32)
+	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/opensteer.pc
+	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
+ENDIF(NOT WIN32)
+
+PRINT_ENABLED_FEATURES()

Deleted: dependencies/opensteer/Makefile.am
===================================================================
--- dependencies/opensteer/Makefile.am	2009-01-04 14:51:35 UTC (rev 4677)
+++ dependencies/opensteer/Makefile.am	2009-01-04 15:45:54 UTC (rev 4678)
@@ -1,5 +0,0 @@
-SUBDIRS =  src include
-
-pkgconfigdir = $(libdir)/pkgconfig
-pkgconfig_DATA = opensteer.pc
-EXTRA_DIST = opensteer.pc.in

Deleted: dependencies/opensteer/bootstrap
===================================================================
--- dependencies/opensteer/bootstrap	2009-01-04 14:51:35 UTC (rev 4677)
+++ dependencies/opensteer/bootstrap	2009-01-04 15:45:54 UTC (rev 4678)
@@ -1,34 +0,0 @@
-#!/bin/sh
-
-# Check for proper versions of autotools
-# We require:
-#  - autoconf 2.50+
-#  - automake 1.6+
-#  - libtool 1.4+
-
-# Deal with some gentoo-specific issues
-export WANT_AUTOMAKE='1.7'
-export WANT_AUTOCONF_2_5=1
-
-## Using prereq in autoconf rather than here, mostly for the debian systems at
-## this point
-if test -z "`autoconf --version 2>&1|head -n 2|egrep '2.[5-9]'`"; then
-	echo "Autoconf 2.50 or above is required. Aborting build...";
-    exit 1;
-fi
-
-if test -z "`automake --version 2>&1|head -n 1|egrep '1.([6-9]|[1-9][0-9])'`"; then
-	echo "Automake 1.6 or above is required. Aborting build...";
-	exit 1;
-fi
-
-if test -z "`libtool --version 2>&1|head -n 1|egrep '1.[4-5]'`"; then
-	echo "Libtool 1.4 or above is required. Aborting build...";
-	exit 1;
-fi
-
-echo "Bootstrap..."
-
-# Fire up autotools
-libtoolize --force && aclocal $ACLOCAL_FLAGS && automake --include-deps --add-missing --foreign && autoconf
-

Added: dependencies/opensteer/cmake/FindOGRE.cmake
===================================================================
--- dependencies/opensteer/cmake/FindOGRE.cmake	2009-01-04 14:51:35 UTC (rev 4677)
+++ dependencies/opensteer/cmake/FindOGRE.cmake	2009-01-04 15:45:54 UTC (rev 4678)
@@ -0,0 +1,102 @@
+# Find OGRE includes and library
+#
+# This module defines
+#  OGRE_INCLUDE_DIRS
+#  OGRE_LIBRARIES, the libraries to link against to use OGRE.
+#  OGRE_LIBRARY_DIRS, the location of the libraries
+#  OGRE_FOUND, If false, do not try to use OGRE
+#
+# Copyright ? 2007-2008, Matt Williams
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+IF (OGRE_LIBRARIES AND OGRE_INCLUDE_DIRS)
+	SET(OGRE_FIND_QUIETLY TRUE) # Already in cache, be silent
+ENDIF (OGRE_LIBRARIES AND OGRE_INCLUDE_DIRS)
+
+#Set the library and include search paths
+#SET(OGRESDK $ENV{OGRE_HOME})
+#STRING(REGEX REPLACE "[\\]" "/" OGRESDK "${OGRESDK}")
+FILE(TO_CMAKE_PATH "$ENV{OGRE_HOME}" OGRESDK)
+SET(OGRE_INCLUDE_SEARCH_DIRS #                 this <-
+	${INCLUDE_SEARCH_DIRS} #TODO Cache this, not ^
+	${CMAKE_LIBRARY_PATH}
+	/usr/include/OGRE
+	/usr/local/include/OGRE
+	/opt/include/OGRE
+	/opt/OGRE/include
+	${OGRESDK}/include
+	${OGRESDK}/OgreMain/include
+	CACHE STRING ""
+)
+
+SET(OGRE_LIBRARY_SEARCH_DIRS
+	${LIBRARY_SEARCH_DIRS}
+	${CMAKE_LIBRARY_PATH}
+	/usr/lib
+	/usr/lib64
+	/usr/local/lib
+	/usr/local/lib64
+	/opt/lib
+	/opt/lib64
+	/opt/OGRE/lib
+	/opt/OGRE/lib64
+	${OGRESDK}/lib
+	${OGRESDK}/lib64
+	CACHE STRING ""
+)
+
+# Allow to set Ogre plugin path manually
+SET(OGRE_PLUGINDIR "" CACHE STRING "Ogre plugin directory")
+
+#Search for the headers and libraries
+IF (WIN32) #Windows
+	MESSAGE(STATUS "Looking for OGRE")
+	FIND_PATH(OGRE_INCLUDE_DIRS Ogre.h ${OGRE_INCLUDE_SEARCH_DIRS})
+	FIND_LIBRARY(OGRE_LIBRARIES debug OgreMain_d optimized OgreMain PATHS ${OGRE_LIBRARY_SEARCH_DIRS})
+ELSE (WIN32) #Unix/OSX
+	FIND_PACKAGE(PkgConfig)
+	IF(PKG_CONFIG_FOUND)
+		PKG_SEARCH_MODULE(OGRE OGRE)
+		IF(NOT PKGCONFIG_FAILED)
+			_PKGCONFIG_INVOKE(OGRE "OGRE" PLUGINDIR "" --variable=plugindir)
+			ADD_DEFINITIONS(-DOGRE_PLUGINDIR="${OGRE_PLUGINDIR}")
+		ENDIF(NOT PKGCONFIG_FAILED)
+		SET(OGRE_INCLUDE_DIRS ${OGRE_INCLUDE_DIRS})
+		SET(OGRE_LIBRARY_DIRS ${OGRE_LIBDIR})
+		SET(OGRE_LIBRARIES ${OGRE_LIBRARIES} CACHE STRING "")
+	ENDIF(PKG_CONFIG_FOUND)
+	IF(NOT OGRE_FOUND) #If PkgConfig couldn't find OGRE...
+		IF (NOT OGRE_FIND_QUIETLY)
+			MESSAGE(STATUS " Manually searching for OGRE")
+		ENDIF (NOT OGRE_FIND_QUIETLY)
+		FIND_PATH(OGRE_INCLUDE_DIRS Ogre.h ${OGRE_INCLUDE_SEARCH_DIRS})
+		FIND_LIBRARY(OGRE_LIBRARIES OgreMain PATHS ${OGRE_LIBRARY_SEARCH_DIRS})
+	ENDIF(NOT OGRE_FOUND)
+ENDIF (WIN32)
+
+#Do some preparation
+SEPARATE_ARGUMENTS(OGRE_INCLUDE_DIRS)
+SEPARATE_ARGUMENTS(OGRE_LIBRARIES)
+
+SET(OGRE_INCLUDE_DIRS ${OGRE_INCLUDE_DIRS})
+SET(OGRE_LIBRARIES ${OGRE_LIBRARIES})
+SET(OGRE_LIBRARY_DIRS ${OGRE_LIBRARY_DIRS})
+
+MARK_AS_ADVANCED(OGRE_INCLUDE_DIRS OGRE_LIBRARIES OGRE_LIBRARY_DIRS) #So they don't show in the default GUI
+
+IF (OGRE_INCLUDE_DIRS AND OGRE_LIBRARIES)
+	SET(OGRE_FOUND TRUE)
+ENDIF (OGRE_INCLUDE_DIRS AND OGRE_LIBRARIES)
+
+IF (OGRE_FOUND)
+	IF (NOT OGRE_FIND_QUIETLY)
+		MESSAGE(STATUS "  libraries : ${OGRE_LIBRARIES} from ${OGRE_LIBRARY_DIRS}")
+		MESSAGE(STATUS "  includes  : ${OGRE_INCLUDE_DIRS}")
+	ENDIF (NOT OGRE_FIND_QUIETLY)
+ELSE (OGRE_FOUND)
+	IF (OGRE_FIND_REQUIRED)
+		MESSAGE(FATAL_ERROR "Could not find OGRE. Make sure you have the OGRE development headers installed. Otherwise, try setting LIBRARY_SEARCH_DIRS and INCLUDE_SEARCH_DIRS to the place OGRE was installed with -DLIBRARY_SEARCH_DIRS=<path/to/lib> -DINCLUDE_SEARCH_DIRS=<path/to/include>")
+	ENDIF (OGRE_FIND_REQUIRED)
+ENDIF (OGRE_FOUND)

Deleted: dependencies/opensteer/configure.in
===================================================================
--- dependencies/opensteer/configure.in	2009-01-04 14:51:35 UTC (rev 4677)
+++ dependencies/opensteer/configure.in	2009-01-04 15:45:54 UTC (rev 4678)
@@ -1,45 +0,0 @@
-AC_PREREQ(2.50)
-
-AC_INIT(OpenSteer, 0.9.0)
-AC_CANONICAL_TARGET
-AM_INIT_AUTOMAKE([1.6.1 foreign no-installinfo no-installman subdir-objects])
-
-dnl Check for programs
-AC_LANG([C++])
-AC_PROG_CC
-AC_PROG_CXX
-AM_PROG_CC_C_O
-AC_PROG_INSTALL
-AM_PROG_LIBTOOL
-
-CXXFLAGS="$CXXFLAGS -DNOT_OPENSTEERDEMO -DOPENSTEER -Wall "
-
-# ***** DEBUGGING
-AC_ARG_ENABLE(debug,[  --enable-debug          enable debugging [default=no]])
-if test "$enable_debug" = "yes"; then
-    CXXFLAGS="$CXXFLAGS -g -O0 -DDEBUG -DVERBOSE -DSTATS "
-else
-	CXXFLAGS="$CXXFLAGS "
-fi
-
-AC_ARG_ENABLE(optimize,[  --enable-optimize       enable optimized build [default=no]])
-if test "$enable_optimize" = "yes"; then
- 	CXXFLAGS="$CXXFLAGS -ffast-math -O2"
-else
-    CXXFLAGS="$CXXFLAGS -ffast-math -O3"
-fi
-
-# Pthreads
-CXXFLAGS="$CXXFLAGS -pthread"
-
-# Ogre
-PKG_CHECK_MODULES([OGRE], [OGRE >= 1.4.0])
-
-dnl Create the makefiles
-AC_CONFIG_FILES([Makefile
-		 src/Makefile
-                 include/Makefile
-                 opensteer.pc])
-
-AC_OUTPUT
-

Deleted: dependencies/opensteer/include/Makefile.am
===================================================================
--- dependencies/opensteer/include/Makefile.am	2009-01-04 14:51:35 UTC (rev 4677)
+++ dependencies/opensteer/include/Makefile.am	2009-01-04 15:45:54 UTC (rev 4678)
@@ -1,32 +0,0 @@
-
-nobase_include_HEADERS = \
-	OpenSteer/AbstractVehicle.h \
-	OpenSteer/Annotation.h \
-	OpenSteer/Clock.h \
-	OpenSteer/Color.h \
-	OpenSteer/LocalSpace.h \
-	OpenSteer/lq.h \
-	OpenSteer/Obstacle.h \
-	OpenSteer/OldPathway.h \
-	OpenSteer/Path.h \
-	OpenSteer/Pathway.h \
-	OpenSteer/PlugIn.h \
-	OpenSteer/PolylineSegmentedPath.h \
-	OpenSteer/PolylineSegmentedPathwaySegmentRadii.h \
-	OpenSteer/PolylineSegmentedPathwaySingleRadius.h \
-	OpenSteer/Proximity.h \
-	OpenSteer/QueryPathAlike.h \
-	OpenSteer/QueryPathAlikeBaseDataExtractionPolicies.h \
-	OpenSteer/QueryPathAlikeMappings.h \
-	OpenSteer/QueryPathAlikeUtilities.h \
-	OpenSteer/SegmentedPath.h \
-	OpenSteer/SegmentedPathAlikeUtilities.h \
-	OpenSteer/SegmentedPathway.h \
-	OpenSteer/SharedPointer.h \
-	OpenSteer/StandardTypes.h \
-	OpenSteer/SteerLibrary.h \
-	OpenSteer/UnusedParameter.h \
-	OpenSteer/Utilities.h \
-	OpenSteer/Vec3.h \
-	OpenSteer/Vec3Utilities.h
-	
\ No newline at end of file

Added: dependencies/opensteer/opensteer.pc.cmake
===================================================================
--- dependencies/opensteer/opensteer.pc.cmake	2009-01-04 14:51:35 UTC (rev 4677)
+++ dependencies/opensteer/opensteer.pc.cmake	2009-01-04 15:45:54 UTC (rev 4678)
@@ -0,0 +1,11 @@
+prefix=${CMAKE_INSTALL_PREFIX}
+exec_prefix=${CMAKE_INSTALL_PREFIX}
+libdir=${CMAKE_INSTALL_PREFIX}/lib
+includedir=${CMAKE_INSTALL_PREFIX}/include/OpenSteer
+
+Name: OpenSteer
+Description: C++ steering behavior library
+Requires: OGRE >= 1.4
+Version: ${OpenSteer_MAJOR_VERSION}.${OpenSteer_MINOR_VERSION}.${OpenSteer_PATCH_VERSION}
+Libs: -L${CMAKE_INSTALL_PREFIX}/lib -lOpenSteer
+Cflags: -I${CMAKE_INSTALL_PREFIX}/include/OpenSteer

Deleted: dependencies/opensteer/opensteer.pc.in
===================================================================
--- dependencies/opensteer/opensteer.pc.in	2009-01-04 14:51:35 UTC (rev 4677)
+++ dependencies/opensteer/opensteer.pc.in	2009-01-04 15:45:54 UTC (rev 4678)
@@ -1,11 +0,0 @@
-prefix=@prefix@
-exec_prefix=@exec_prefix@
-libdir=@libdir@
-includedir=@includedir@
-
-Name: OpenSteer
-Description: C++ steering behavior library
-Version: @VERSION@
-Requires: OGRE
-Libs: -L${libdir} -lOpenSteer
-Cflags: -I${includedir}/@PACKAGE@

Deleted: dependencies/opensteer/src/Makefile.am
===================================================================
--- dependencies/opensteer/src/Makefile.am	2009-01-04 14:51:35 UTC (rev 4677)
+++ dependencies/opensteer/src/Makefile.am	2009-01-04 15:45:54 UTC (rev 4678)
@@ -1,20 +0,0 @@
-INCLUDES =  -I. -I../include $(OGRE_CFLAGS)
-
-lib_LTLIBRARIES = libOpenSteer.la
-libOpenSteer_la_LDFLAGS =  $(LIBS) -version-number 0:9:0
-libOpenSteer_la_SOURCES = \
-	lq.c \
-	Clock.cpp \
-	Color.cpp \
-	Obstacle.cpp \
-	OldPathway.cpp \
-	Path.cpp \
-	Pathway.cpp \
-	PlugIn.cpp \
-	PolylineSegmentedPath.cpp \
-	PolylineSegmentedPathwaySingleRadius.cpp \
-	SegmentedPath.cpp \
-	SegmentedPathway.cpp \
-	SimpleVehicle.cpp \
-	Vec3.cpp \
-	Vec3Utilities.cpp 



From chrber at mail.berlios.de  Sun Jan  4 19:12:27 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 19:12:27 +0100
Subject: [Dsa-hl-svn] r4679 - dependencies/opensteer
Message-ID: <200901041812.n04ICRws002284@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 19:12:25 +0100 (Sun, 04 Jan 2009)
New Revision: 4679

Modified:
   dependencies/opensteer/CMakeLists.txt
Log:
Added the preprocessor symbol NOT_OPENSTEERDEMO to build correctly


Modified: dependencies/opensteer/CMakeLists.txt
===================================================================
--- dependencies/opensteer/CMakeLists.txt	2009-01-04 15:45:54 UTC (rev 4678)
+++ dependencies/opensteer/CMakeLists.txt	2009-01-04 18:12:25 UTC (rev 4679)
@@ -45,7 +45,8 @@
 
 SET_TARGET_PROPERTIES(OpenSteer PROPERTIES
 	VERSION ${OpenSteer_MAJOR_VERSION}.${OpenSteer_MINOR_VERSION}.${OpenSteer_PATCH_VERSION}
-	SOVERSION ${OpenSteer_MAJOR_VERSION})
+	SOVERSION ${OpenSteer_MAJOR_VERSION}
+	DEFINE_SYMBOL NOT_OPENSTEERDEMO) 
 
 CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/opensteer.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/opensteer.pc)
 



From chrber at mail.berlios.de  Sun Jan  4 19:23:32 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 19:23:32 +0100
Subject: [Dsa-hl-svn] r4680 - rl/branches/newton20/cmake
Message-ID: <200901041823.n04INW77013885@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 19:23:31 +0100 (Sun, 04 Jan 2009)
New Revision: 4680

Modified:
   rl/branches/newton20/cmake/FindFMODEx.cmake
Log:
Corrected wrong variable name which resulted FMODEx version always being too old


Modified: rl/branches/newton20/cmake/FindFMODEx.cmake
===================================================================
--- rl/branches/newton20/cmake/FindFMODEx.cmake	2009-01-04 18:12:25 UTC (rev 4679)
+++ rl/branches/newton20/cmake/FindFMODEx.cmake	2009-01-04 18:23:31 UTC (rev 4680)
@@ -95,15 +95,15 @@
 
 		# Exact version match requested
 		IF(FMODEx_FIND_VERSION_EXACT)
-			IF(NOT "${FMOD_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
+			IF(NOT "${FMODEX_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
 				SET(NEWTON_FOUND FALSE)
 				MESSAGE(SEND_ERROR "Required version of FMODEx ${FMODEx_FIND_VERSION}, but you have FMODEx ${FMOD_VERSION} installed.")
-			ENDIF(NOT "${FMOD_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
+			ENDIF(NOT "${FMODEX_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
 		ELSE(FMODEx_FIND_VERSION_EXACT)
-			IF("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
+			IF("${FMODEX_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
 				SET(NEWTON_FOUND FALSE)
 				MESSAGE(STATUS "Detected version of FMODEx ${FMODEX_VERSION} is too old. At least version ${FMODEx_FIND_VERSION} is required.")
-			ENDIF("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
+			ENDIF("${FMODEX_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
 		ENDIF(FMODEx_FIND_VERSION_EXACT)
 	ENDIF(FMODEx_FIND_VERSION)
 ENDIF(FMODEX_INCLUDE_DIR)



From chrber at mail.berlios.de  Sun Jan  4 19:25:07 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 19:25:07 +0100
Subject: [Dsa-hl-svn] r4681 - rl/trunk/cmake
Message-ID: <200901041825.n04IP76P014831@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 19:25:05 +0100 (Sun, 04 Jan 2009)
New Revision: 4681

Modified:
   rl/trunk/cmake/FindFMODEx.cmake
Log:
Corrected wrong variable name which resulted FMODEx version always being too old


Modified: rl/trunk/cmake/FindFMODEx.cmake
===================================================================
--- rl/trunk/cmake/FindFMODEx.cmake	2009-01-04 18:23:31 UTC (rev 4680)
+++ rl/trunk/cmake/FindFMODEx.cmake	2009-01-04 18:25:05 UTC (rev 4681)
@@ -95,15 +95,15 @@
 
 		# Exact version match requested
 		IF(FMODEx_FIND_VERSION_EXACT)
-			IF(NOT "${FMOD_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
+			IF(NOT "${FMODEX_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
 				SET(NEWTON_FOUND FALSE)
 				MESSAGE(SEND_ERROR "Required version of FMODEx ${FMODEx_FIND_VERSION}, but you have FMODEx ${FMOD_VERSION} installed.")
-			ENDIF(NOT "${FMOD_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
+			ENDIF(NOT "${FMODEX_VERSION}" VERSION_EQUAL "${FMODEx_FIND_VERSION}")
 		ELSE(FMODEx_FIND_VERSION_EXACT)
-			IF("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
+			IF("${FMODEX_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
 				SET(NEWTON_FOUND FALSE)
 				MESSAGE(STATUS "Detected version of FMODEx ${FMODEX_VERSION} is too old. At least version ${FMODEx_FIND_VERSION} is required.")
-			ENDIF("${FMOD_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
+			ENDIF("${FMODEX_VERSION}" VERSION_LESS "${FMODEx_FIND_VERSION}")
 		ENDIF(FMODEx_FIND_VERSION_EXACT)
 	ENDIF(FMODEx_FIND_VERSION)
 ENDIF(FMODEX_INCLUDE_DIR)



From chrber at mail.berlios.de  Sun Jan  4 20:12:08 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 20:12:08 +0100
Subject: [Dsa-hl-svn] r4682 - in dependencies/OgreNewt: . cmake
Message-ID: <200901041912.n04JC8g3013956@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 20:12:06 +0100 (Sun, 04 Jan 2009)
New Revision: 4682

Modified:
   dependencies/OgreNewt/CMakeLists.txt
   dependencies/OgreNewt/cmake/FindNewton.cmake
Log:
Fixed version number
Fixed version check when looking for Newton


Modified: dependencies/OgreNewt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt/CMakeLists.txt	2009-01-04 18:25:05 UTC (rev 4681)
+++ dependencies/OgreNewt/CMakeLists.txt	2009-01-04 19:12:06 UTC (rev 4682)
@@ -7,8 +7,8 @@
 
 # Version information
 SET(OgreNewt_MAJOR_VERSION 1)
-SET(OgreNewt_MINOR_VERSION 5)
-SET(OgreNewt_PATCH_VERSION 3)
+SET(OgreNewt_MINOR_VERSION 53)
+SET(OgreNewt_PATCH_VERSION 0)
 
 # Add directory with OgreNewt's own macro definitions
 # (checked before ${CMAKE_ROOT}/Modules)

Modified: dependencies/OgreNewt/cmake/FindNewton.cmake
===================================================================
--- dependencies/OgreNewt/cmake/FindNewton.cmake	2009-01-04 18:25:05 UTC (rev 4681)
+++ dependencies/OgreNewt/cmake/FindNewton.cmake	2009-01-04 19:12:06 UTC (rev 4682)
@@ -56,16 +56,20 @@
 IF(NEWTON_INCLUDE_DIR)
 	# Extract the library version from the header file
 	FILE(READ "${NEWTON_INCLUDE_DIR}/Newton.h" _NEWTON_NEWTON_H_CONTENTS)
-	STRING(REGEX REPLACE ".*#define NEWTON_MAJOR_VERSION ([0-9]+).*" "\\1"
-	       NEWTON_MAJOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
-	STRING(REGEX REPLACE ".*#define NEWTON_MINOR_VERSION ([0-9]+).*" "\\1"
-	       NEWTON_MINOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
-	IF(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+	# Check if header contains version information
+	STRING(REGEX MATCH "NEWTON_MAJOR_VERSION"
+	       NEWTON_VERSION_EXISTS "${_NEWTON_NEWTON_H_CONTENTS}")
+	IF("${NEWTON_VERSION_EXISTS}" STREQUAL "NEWTON_MAJOR_VERSION")
+		MESSAGE(STATUS "We should be here if NEWTON_VERSION_EXISTS is not empty")
+		STRING(REGEX REPLACE ".*#define NEWTON_MAJOR_VERSION ([0-9]+).*" "\\1"
+		       NEWTON_MAJOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
+		STRING(REGEX REPLACE ".*#define NEWTON_MINOR_VERSION ([0-9]+).*" "\\1"
+		       NEWTON_MINOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
 		SET(NEWTON_VERSION "${NEWTON_MAJOR_VERSION}.${NEWTON_MINOR_VERSION}")
-	ELSE(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+	ELSE("${NEWTON_VERSION_EXISTS}" STREQUAL "NEWTON_MAJOR_VERSION")
 		# We assume Newton 1.53
 		SET(NEWTON_VERSION "1.53")
-	ENDIF(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+	ENDIF("${NEWTON_VERSION_EXISTS}" STREQUAL "NEWTON_MAJOR_VERSION")
 
 	# Compare installed and required version
 	IF(Newton_FIND_VERSION)
@@ -87,6 +91,7 @@
 			ENDIF("${NEWTON_VERSION}" VERSION_LESS "${Newton_FIND_VERSION}")
 		ENDIF(Newton_FIND_VERSION_EXACT)
 	ENDIF(Newton_FIND_VERSION)
+
 ENDIF(NEWTON_INCLUDE_DIR)
 
 IF(NEWTON_FOUND)



From chrber at mail.berlios.de  Sun Jan  4 20:12:41 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sun, 4 Jan 2009 20:12:41 +0100
Subject: [Dsa-hl-svn] r4683 - dependencies/OgreNewt_ngt/cmake
Message-ID: <200901041912.n04JCf2W013987@sheep.berlios.de>

Author: chrber
Date: 2009-01-04 20:12:40 +0100 (Sun, 04 Jan 2009)
New Revision: 4683

Modified:
   dependencies/OgreNewt_ngt/cmake/FindNewton.cmake
Log:
Fixed version check when looking for Newton


Modified: dependencies/OgreNewt_ngt/cmake/FindNewton.cmake
===================================================================
--- dependencies/OgreNewt_ngt/cmake/FindNewton.cmake	2009-01-04 19:12:06 UTC (rev 4682)
+++ dependencies/OgreNewt_ngt/cmake/FindNewton.cmake	2009-01-04 19:12:40 UTC (rev 4683)
@@ -56,16 +56,20 @@
 IF(NEWTON_INCLUDE_DIR)
 	# Extract the library version from the header file
 	FILE(READ "${NEWTON_INCLUDE_DIR}/Newton.h" _NEWTON_NEWTON_H_CONTENTS)
-	STRING(REGEX REPLACE ".*#define NEWTON_MAJOR_VERSION ([0-9]+).*" "\\1"
-	       NEWTON_MAJOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
-	STRING(REGEX REPLACE ".*#define NEWTON_MINOR_VERSION ([0-9]+).*" "\\1"
-	       NEWTON_MINOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
-	IF(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+	# Check if header contains version information
+	STRING(REGEX MATCH "NEWTON_MAJOR_VERSION"
+	       NEWTON_VERSION_EXISTS "${_NEWTON_NEWTON_H_CONTENTS}")
+	IF("${NEWTON_VERSION_EXISTS}" STREQUAL "NEWTON_MAJOR_VERSION")
+		MESSAGE(STATUS "We should be here if NEWTON_VERSION_EXISTS is not empty")
+		STRING(REGEX REPLACE ".*#define NEWTON_MAJOR_VERSION ([0-9]+).*" "\\1"
+		       NEWTON_MAJOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
+		STRING(REGEX REPLACE ".*#define NEWTON_MINOR_VERSION ([0-9]+).*" "\\1"
+		       NEWTON_MINOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
 		SET(NEWTON_VERSION "${NEWTON_MAJOR_VERSION}.${NEWTON_MINOR_VERSION}")
-	ELSE(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+	ELSE("${NEWTON_VERSION_EXISTS}" STREQUAL "NEWTON_MAJOR_VERSION")
 		# We assume Newton 1.53
 		SET(NEWTON_VERSION "1.53")
-	ENDIF(NOT "${NEWTON_MAJOR_VERSION}" STREQUAL 0)
+	ENDIF("${NEWTON_VERSION_EXISTS}" STREQUAL "NEWTON_MAJOR_VERSION")
 
 	# Compare installed and required version
 	IF(Newton_FIND_VERSION)
@@ -87,6 +91,7 @@
 			ENDIF("${NEWTON_VERSION}" VERSION_LESS "${Newton_FIND_VERSION}")
 		ENDIF(Newton_FIND_VERSION_EXACT)
 	ENDIF(Newton_FIND_VERSION)
+
 ENDIF(NEWTON_INCLUDE_DIR)
 
 IF(NEWTON_FOUND)



From alassion at mail.berlios.de  Sun Jan  4 22:05:15 2009
From: alassion at mail.berlios.de (alassion at mail.berlios.de)
Date: Sun, 4 Jan 2009 22:05:15 +0100
Subject: [Dsa-hl-svn] r4684 - dependencies/OgreNewt_ngt
Message-ID: <200901042105.n04L5Fv3022693@sheep.berlios.de>

Author: alassion
Date: 2009-01-04 22:04:54 +0100 (Sun, 04 Jan 2009)
New Revision: 4684

Modified:
   dependencies/OgreNewt_ngt/CMakeLists.txt
Log:
PROJECT(OgreNewt)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)

# Include required cmake macros
INCLUDE(FeatureSummary)

# === CPack packaging ===
  #Include packaging information
   INCLUDE(InstallRequiredSystemLibraries)

  #Enable absolute paths
   SET(CPACK_SET_DESTDIR "ON")

  # General package-information [mandatory]
   SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "OgreNewt stellt die Funktionen der Newton Bibliothek f?\195?\188r OGRE3D bereit")
   SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
   SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")

  # General package-information [optional]
   SET(CPACK_PACKAGE_NAME "ogreNewt")
   #SET(CPACK_PACKAGE_FILE_NAME "name-version-something-else-to-add")

  # Package version information [mandatory]
   SET(CPACK_PACKAGE_VERSION_MAJOR "2")
   SET(CPACK_PACKAGE_VERSION_MINOR "0")
   SET(CPACK_PACKAGE_VERSION_PATCH "0")

  # Architecture and Platform [mandatory]
   IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
   ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
   ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")

  # ReadMe/License/Copyright etc... [optional]
   #SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
   #SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt")

# === CMake Main ===

# Version information
SET(OgreNewt_MAJOR_VERSION 2)
SET(OgreNewt_MINOR_VERSION 0)
SET(OgreNewt_PATCH_VERSION 0)

# Add directory with OgreNewt's own macro definitions
# (checked before ${CMAKE_ROOT}/Modules)
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)

# Check for required components
FIND_PACKAGE(PkgConfig)
FIND_PACKAGE(OGRE 1.4 REQUIRED)
FIND_PACKAGE(Newton 2.0 REQUIRED)

INCLUDE_DIRECTORIES(
${CMAKE_CURRENT_SOURCE_DIR}/inc
${OGRE_INCLUDE_DIRS}
${NEWTON_INCLUDE_DIR})

SET(OgreNewt_LIB_SRCS
src/OgreNewt_BasicFrameListener.cpp
src/OgreNewt_BasicJoints.cpp
src/OgreNewt_Body.cpp
src/OgreNewt_Collision.cpp
src/OgreNewt_CollisionPrimitives.cpp
src/OgreNewt_CollisionSerializer.cpp
src/OgreNewt_ContactCallback.cpp
src/OgreNewt_Debugger.cpp
src/OgreNewt_Joint.cpp
src/OgreNewt_MaterialID.cpp
src/OgreNewt_MaterialPair.cpp
src/OgreNewt_RayCast.cpp
src/OgreNewt_Tools.cpp
src/OgreNewt_Vehicle.cpp
src/OgreNewt_World.cpp)

ADD_LIBRARY(OgreNewt SHARED ${OgreNewt_LIB_SRCS})

TARGET_LINK_LIBRARIES(OgreNewt ${OGRE_LIBRARIES} ${NEWTON_LIBRARY})

SET_TARGET_PROPERTIES(OgreNewt PROPERTIES
	VERSION ${OgreNewt_MAJOR_VERSION}.${OgreNewt_MINOR_VERSION}.${OgreNewt_PATCH_VERSION}
	SOVERSION ${OgreNewt_MAJOR_VERSION}
	DEFINE_SYMBOL _OGRENEWT_EXPORTS)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/OgreNewt.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/OgreNewt.pc)

INSTALL(TARGETS OgreNewt
        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
        RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
        ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

INSTALL(FILES inc/OgreNewt_BasicFrameListener.h inc/OgreNewt_BasicJoints.h
inc/OgreNewt_Body.h inc/OgreNewt_BodyIterator.h inc/OgreNewt_Collision.h
inc/OgreNewt_CollisionPrimitives.h inc/OgreNewt_CollisionSerializer.h
inc/OgreNewt_ContactCallback.h inc/OgreNewt_Debugger.h inc/OgreNewt.h
inc/OgreNewt_Joint.h inc/OgreNewt_MaterialID.h inc/OgreNewt_MaterialPair.h
inc/OgreNewt_Prerequisites.h inc/OgreNewt_RayCast.h inc/OgreNewt_Tools.h
inc/OgreNewt_Vehicle.h inc/OgreNewt_World.h
DESTINATION ${CMAKE_INSTALL_PREFIX}/include)

IF(NOT WIN32)
	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/OgreNewt.pc
	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
ENDIF(NOT WIN32)

# === CPack package creation / installation ===

  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
  #SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "OgreNewt 2.0")
  IF(WIN32 AND NOT UNIX)
    # TEMPLATE - Not Tested!
    # There is a bug in NSI that does not handle full unix paths properly. Make
    # sure there is at least one set of four (4) backlasshes.
    SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
    SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\OgreNewt2_setup.exe")
    SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} OgreNewt2")
    SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
    SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
    SET(CPACK_NSIS_CONTACT "contact at rastullahs-lockenpracht.de")
    SET(CPACK_NSIS_MODIFY_PATH ON)
  ELSE(WIN32 AND NOT UNIX)
    SET(CPACK_STRIP_FILES "bin/OgrewNewt")
    SET(CPACK_SOURCE_STRIP_FILES "")
  ENDIF(WIN32 AND NOT UNIX)

#SET(CPACK_PACKAGE_EXECUTABLES "OgreNewt" "OgreNewt2.0")

INCLUDE(CPack)

PRINT_ENABLED_FEATURES()


Modified: dependencies/OgreNewt_ngt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-04 19:12:40 UTC (rev 4683)
+++ dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-04 21:04:54 UTC (rev 4684)
@@ -5,6 +5,40 @@
 # Include required cmake macros
 INCLUDE(FeatureSummary)
 
+# === CPack packaging ===
+  #Include packaging information
+   INCLUDE(InstallRequiredSystemLibraries)
+
+  #Enable absolute paths
+   SET(CPACK_SET_DESTDIR "ON")
+
+  # General package-information [mandatory]
+   SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "OgreNewt stellt die Funktionen der Newton Bibliothek f?r OGRE3D bereit")
+   SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
+   SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")
+
+  # General package-information [optional]
+   SET(CPACK_PACKAGE_NAME "ogreNewt")
+   #SET(CPACK_PACKAGE_FILE_NAME "name-version-something-else-to-add")
+
+  # Package version information [mandatory]
+   SET(CPACK_PACKAGE_VERSION_MAJOR "2")
+   SET(CPACK_PACKAGE_VERSION_MINOR "0")
+   SET(CPACK_PACKAGE_VERSION_PATCH "0")
+
+  # Architecture and Platform [mandatory]
+   IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
+   ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
+     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
+   ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+
+  # ReadMe/License/Copyright etc... [optional]
+   #SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
+   #SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt")
+
+# === CMake Main ===
+
 # Version information
 SET(OgreNewt_MAJOR_VERSION 2)
 SET(OgreNewt_MINOR_VERSION 0)
@@ -71,4 +105,28 @@
 	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
 ENDIF(NOT WIN32)
 
+# === CPack package creation / installation ===
+
+  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
+  #SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "OgreNewt 2.0")
+  IF(WIN32 AND NOT UNIX)
+    # TEMPLATE - Not Tested!
+    # There is a bug in NSI that does not handle full unix paths properly. Make
+    # sure there is at least one set of four (4) backlasshes.
+    SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
+    SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\OgreNewt2_setup.exe")
+    SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} OgreNewt2")
+    SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
+    SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
+    SET(CPACK_NSIS_CONTACT "contact at rastullahs-lockenpracht.de")
+    SET(CPACK_NSIS_MODIFY_PATH ON)
+  ELSE(WIN32 AND NOT UNIX)
+    SET(CPACK_STRIP_FILES "bin/OgrewNewt")
+    SET(CPACK_SOURCE_STRIP_FILES "")
+  ENDIF(WIN32 AND NOT UNIX)
+
+#SET(CPACK_PACKAGE_EXECUTABLES "OgreNewt" "OgreNewt2.0")
+
+INCLUDE(CPack)
+
 PRINT_ENABLED_FEATURES()



From alassion at mail.berlios.de  Sun Jan  4 22:06:04 2009
From: alassion at mail.berlios.de (alassion at mail.berlios.de)
Date: Sun, 4 Jan 2009 22:06:04 +0100
Subject: [Dsa-hl-svn] r4685 - dependencies/opensteer
Message-ID: <200901042106.n04L64aF022752@sheep.berlios.de>

Author: alassion
Date: 2009-01-04 22:06:03 +0100 (Sun, 04 Jan 2009)
New Revision: 4685

Modified:
   dependencies/opensteer/CMakeLists.txt
Log:
PROJECT(OpenSteer)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)

# Include required cmake macros
INCLUDE(FeatureSummary)

# === CPack packaging ===
  #Include packaging information
   INCLUDE(InstallRequiredSystemLibraries)

  #Enable absolute paths
   SET(CPACK_SET_DESTDIR "ON")

  # General package-information [mandatory]
   SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "opensteer info")
   SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
   SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")

  # General package-information [optional]
   SET(CPACK_PACKAGE_NAME "opensteer")
   #SET(CPACK_PACKAGE_FILE_NAME "name-version-something-else-to-add")

  # Package version information [mandatory]
   SET(CPACK_PACKAGE_VERSION_MAJOR "0")
   SET(CPACK_PACKAGE_VERSION_MINOR "9")
   SET(CPACK_PACKAGE_VERSION_PATCH "0")

  # Architecture and Platform [mandatory]
   IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
   ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
   ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")

  # ReadMe/License/Copyright etc... [optional]
   #SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
   #SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt")

# === CMake Main ===


# Version information
SET(OpenSteer_MAJOR_VERSION 0)
SET(OpenSteer_MINOR_VERSION 9)
SET(OpenSteer_PATCH_VERSION 0)

# Add directory with OpenSteer's own macro definitions
# (checked before ${CMAKE_ROOT}/Modules)
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)

# Check for required components
FIND_PACKAGE(PkgConfig)
FIND_PACKAGE(OGRE 1.4 REQUIRED)

INCLUDE_DIRECTORIES(
${CMAKE_CURRENT_SOURCE_DIR}/include
${OGRE_INCLUDE_DIRS})

SET(OpenSteer_LIB_SRCS
src/lq.c
src/Clock.cpp
src/Color.cpp
src/Obstacle.cpp
src/OldPathway.cpp
src/Path.cpp
src/Pathway.cpp
src/PlugIn.cpp
src/PolylineSegmentedPath.cpp
src/PolylineSegmentedPathwaySingleRadius.cpp
src/SegmentedPath.cpp
src/SegmentedPathway.cpp
src/SimpleVehicle.cpp
src/Vec3.cpp
src/Vec3Utilities.cpp)

ADD_LIBRARY(OpenSteer SHARED ${OpenSteer_LIB_SRCS})

TARGET_LINK_LIBRARIES(OpenSteer ${OGRE_LIBRARIES})

SET_TARGET_PROPERTIES(OpenSteer PROPERTIES
	VERSION ${OpenSteer_MAJOR_VERSION}.${OpenSteer_MINOR_VERSION}.${OpenSteer_PATCH_VERSION}
	SOVERSION ${OpenSteer_MAJOR_VERSION}
	DEFINE_SYMBOL NOT_OPENSTEERDEMO) 

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/opensteer.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/opensteer.pc)

INSTALL(TARGETS OpenSteer
        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
        RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
        ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

INSTALL(FILES include/OpenSteer/AbstractVehicle.h include/OpenSteer/Annotation.h
include/OpenSteer/Clock.h include/OpenSteer/Color.h include/OpenSteer/LocalSpace.h
include/OpenSteer/lq.h include/OpenSteer/Obstacle.h include/OpenSteer/OldPathway.h
include/OpenSteer/Path.h include/OpenSteer/Pathway.h include/OpenSteer/PlugIn.h
include/OpenSteer/PolylineSegmentedPath.h include/OpenSteer/PolylineSegmentedPathwaySegmentRadii.h
include/OpenSteer/PolylineSegmentedPathwaySingleRadius.h include/OpenSteer/Proximity.h
include/OpenSteer/QueryPathAlike.h include/OpenSteer/QueryPathAlikeBaseDataExtractionPolicies.h
include/OpenSteer/QueryPathAlikeMappings.h include/OpenSteer/QueryPathAlikeUtilities.h
include/OpenSteer/SegmentedPath.h include/OpenSteer/SegmentedPathAlikeUtilities.h
include/OpenSteer/SegmentedPathway.h include/OpenSteer/SharedPointer.h
include/OpenSteer/StandardTypes.h include/OpenSteer/SteerLibrary.h
include/OpenSteer/UnusedParameter.h include/OpenSteer/Utilities.h
include/OpenSteer/Vec3.h include/OpenSteer/Vec3Utilities.h
DESTINATION ${CMAKE_INSTALL_PREFIX}/include/OpenSteer)

IF(NOT WIN32)
	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/opensteer.pc
	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
ENDIF(NOT WIN32)

# === CPack package creation / installation ===

  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
  #SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "opensteer 0.9.0")
  IF(WIN32 AND NOT UNIX)
    # TEMPLATE - Not Tested!
    # There is a bug in NSI that does not handle full unix paths properly. Make
    # sure there is at least one set of four (4) backlasshes.
    SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
    SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\opensteer_setup.exe")
    SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} opensteer")
    SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
    SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
    SET(CPACK_NSIS_CONTACT "teall.hartmann at web.de")
    SET(CPACK_NSIS_MODIFY_PATH ON)
  ELSE(WIN32 AND NOT UNIX)
    SET(CPACK_STRIP_FILES "bin/opensteer")
    SET(CPACK_SOURCE_STRIP_FILES "")
  ENDIF(WIN32 AND NOT UNIX)

#SET(CPACK_PACKAGE_EXECUTABLES "opensteer" "opensteer")

INCLUDE(CPack)

PRINT_ENABLED_FEATURES()


Modified: dependencies/opensteer/CMakeLists.txt
===================================================================
--- dependencies/opensteer/CMakeLists.txt	2009-01-04 21:04:54 UTC (rev 4684)
+++ dependencies/opensteer/CMakeLists.txt	2009-01-04 21:06:03 UTC (rev 4685)
@@ -5,6 +5,41 @@
 # Include required cmake macros
 INCLUDE(FeatureSummary)
 
+# === CPack packaging ===
+  #Include packaging information
+   INCLUDE(InstallRequiredSystemLibraries)
+
+  #Enable absolute paths
+   SET(CPACK_SET_DESTDIR "ON")
+
+  # General package-information [mandatory]
+   SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "opensteer info")
+   SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
+   SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")
+
+  # General package-information [optional]
+   SET(CPACK_PACKAGE_NAME "opensteer")
+   #SET(CPACK_PACKAGE_FILE_NAME "name-version-something-else-to-add")
+
+  # Package version information [mandatory]
+   SET(CPACK_PACKAGE_VERSION_MAJOR "0")
+   SET(CPACK_PACKAGE_VERSION_MINOR "9")
+   SET(CPACK_PACKAGE_VERSION_PATCH "0")
+
+  # Architecture and Platform [mandatory]
+   IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
+   ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
+     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
+   ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+
+  # ReadMe/License/Copyright etc... [optional]
+   #SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
+   #SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt")
+
+# === CMake Main ===
+
+
 # Version information
 SET(OpenSteer_MAJOR_VERSION 0)
 SET(OpenSteer_MINOR_VERSION 9)
@@ -75,4 +110,28 @@
 	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
 ENDIF(NOT WIN32)
 
+# === CPack package creation / installation ===
+
+  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
+  #SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "opensteer 0.9.0")
+  IF(WIN32 AND NOT UNIX)
+    # TEMPLATE - Not Tested!
+    # There is a bug in NSI that does not handle full unix paths properly. Make
+    # sure there is at least one set of four (4) backlasshes.
+    SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
+    SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\opensteer_setup.exe")
+    SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} opensteer")
+    SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
+    SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
+    SET(CPACK_NSIS_CONTACT "teall.hartmann at web.de")
+    SET(CPACK_NSIS_MODIFY_PATH ON)
+  ELSE(WIN32 AND NOT UNIX)
+    SET(CPACK_STRIP_FILES "bin/opensteer")
+    SET(CPACK_SOURCE_STRIP_FILES "")
+  ENDIF(WIN32 AND NOT UNIX)
+
+#SET(CPACK_PACKAGE_EXECUTABLES "opensteer" "opensteer")
+
+INCLUDE(CPack)
+
 PRINT_ENABLED_FEATURES()



From alassion at mail.berlios.de  Sun Jan  4 22:06:17 2009
From: alassion at mail.berlios.de (alassion at mail.berlios.de)
Date: Sun, 4 Jan 2009 22:06:17 +0100
Subject: [Dsa-hl-svn] r4686 - rl/branches/newton20
Message-ID: <200901042106.n04L6HJW022777@sheep.berlios.de>

Author: alassion
Date: 2009-01-04 22:06:16 +0100 (Sun, 04 Jan 2009)
New Revision: 4686

Modified:
   rl/branches/newton20/CMakeLists.txt
Log:
PROJECT(RL)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)

# Include required cmake macros
INCLUDE(FeatureSummary)

# === CPack packaging ===
  #Include packaging information
   INCLUDE(InstallRequiredSystemLibraries)

  #Enable absolute paths
   SET(CPACK_SET_DESTDIR "ON")

  # General package-information [mandatory]
   SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Rastullahs Lockenpracht ist ein auf DSA Regeln basierendes (Rollen-)Spiel")
   SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
   SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")

  # General package-information [optional]
   SET(CPACK_PACKAGE_NAME "rastullah")
   #SET(CPACK_PACKAGE_FILE_NAME "rastullah-0.3.0-something-else-to-add")

  # Package version information [mandatory]
   SET(CPACK_PACKAGE_VERSION_MAJOR "0")
   SET(CPACK_PACKAGE_VERSION_MINOR "3")
   SET(CPACK_PACKAGE_VERSION_PATCH "0")

  # Architecture and Platform [mandatory]
   IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
   ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
   ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")

  # ReadMe/License/Copyright etc... [optional]
   #SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
   #SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt")

# === CMake Main ===


# Version information
SET(RL_MAJOR_VERSION 0)
SET(RL_MINOR_VERSION 3)
SET(RL_PATCH_VERSION 0)

# Add directory with RL's own macro definitions
# (checked before ${CMAKE_ROOT}/Modules)
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)

# Set convenience variables for Rastullah's own include directories
SET(RL_AI_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/engine/ai/include INTERNAL)
SET(RL_COMMON_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/engine/common/include INTERNAL)
SET(RL_CORE_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/engine/core/include INTERNAL)
SET(RL_RULES_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/engine/rules/include INTERNAL)
SET(RL_SCRIPT_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/engine/script/include INTERNAL)
SET(RL_UI_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/engine/ui/include INTERNAL)

# Check for required components
FIND_PACKAGE(PkgConfig)
FIND_PACKAGE(XercesC REQUIRED)
FIND_PACKAGE(OGRE 1.6 REQUIRED)
FIND_PACKAGE(OIS REQUIRED)
FIND_PACKAGE(CEGUI REQUIRED)
FIND_PACKAGE(CEGUIOGRE 1.6 REQUIRED)
FIND_PACKAGE(OgreNewt 2.0 REQUIRED)
FIND_PACKAGE(OpenSteer REQUIRED)
FIND_PACKAGE(MeshMagick 0.5 REQUIRED)
FIND_PACKAGE(Ruby REQUIRED)
FIND_PACKAGE(Boost 1.34 REQUIRED filesystem)
FIND_PACKAGE(SWIG REQUIRED)
IF (NOT SWIG_DIR MATCHES -rl$)
	SET_FEATURE_INFO(SWIG "" "" "You use an unsupported version of SWIG.")
ENDIF(NOT SWIG_DIR MATCHES -rl$)

# Path options
SET(BINDIR "bin" CACHE STRING "Where to install binaries")
SET(DATAROOTDIR "${CMAKE_INSTALL_PREFIX}/share" CACHE STRING "Sets the root of data directories to a non-default location")
SET(DATADIRNAME "rastullah" CACHE STRING "change the name of the directory for the read-only architecture-independent game data")

# Game options
SET(WITH_FMOD4 ON CACHE BOOL "Enable FMOD 4.xx (FMODex) sound support")
SET(WITH_OPENAL OFF CACHE BOOL "Enable OpenAL sound support (unsupported)")

# Include subdirectories
ADD_SUBDIRECTORY(engine)
ADD_SUBDIRECTORY(plugins)

# === CPack package creation / installation ===

  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
  #SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "Rastullahs Lockenpracht 0.3")
  IF(WIN32 AND NOT UNIX)
    # TEMPLATE - Not Tested!
    # There is a bug in NSI that does not handle full unix paths properly. Make
    # sure there is at least one set of four (4) backlasshes.
    SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
    SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\rastullah_setup.exe")
    SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} rastullah")
    SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
    SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
    SET(CPACK_NSIS_CONTACT "contact at rastullahs-lockenpracht.de")
    SET(CPACK_NSIS_MODIFY_PATH ON)
  ELSE(WIN32 AND NOT UNIX)
    SET(CPACK_STRIP_FILES "bin/rastullah")
    SET(CPACK_SOURCE_STRIP_FILES "")
  ENDIF(WIN32 AND NOT UNIX)

#SET(CPACK_PACKAGE_EXECUTABLES "rastullah" "rastullah")

INCLUDE(CPack)

PRINT_ENABLED_FEATURES()


Modified: rl/branches/newton20/CMakeLists.txt
===================================================================
--- rl/branches/newton20/CMakeLists.txt	2009-01-04 21:06:03 UTC (rev 4685)
+++ rl/branches/newton20/CMakeLists.txt	2009-01-04 21:06:16 UTC (rev 4686)
@@ -5,6 +5,41 @@
 # Include required cmake macros
 INCLUDE(FeatureSummary)
 
+# === CPack packaging ===
+  #Include packaging information
+   INCLUDE(InstallRequiredSystemLibraries)
+
+  #Enable absolute paths
+   SET(CPACK_SET_DESTDIR "ON")
+
+  # General package-information [mandatory]
+   SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Rastullahs Lockenpracht ist ein auf DSA Regeln basierendes (Rollen-)Spiel")
+   SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
+   SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")
+
+  # General package-information [optional]
+   SET(CPACK_PACKAGE_NAME "rastullah")
+   #SET(CPACK_PACKAGE_FILE_NAME "rastullah-0.3.0-something-else-to-add")
+
+  # Package version information [mandatory]
+   SET(CPACK_PACKAGE_VERSION_MAJOR "0")
+   SET(CPACK_PACKAGE_VERSION_MINOR "3")
+   SET(CPACK_PACKAGE_VERSION_PATCH "0")
+
+  # Architecture and Platform [mandatory]
+   IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
+   ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
+     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
+   ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+
+  # ReadMe/License/Copyright etc... [optional]
+   #SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
+   #SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt")
+
+# === CMake Main ===
+
+
 # Version information
 SET(RL_MAJOR_VERSION 0)
 SET(RL_MINOR_VERSION 3)
@@ -52,4 +87,28 @@
 ADD_SUBDIRECTORY(engine)
 ADD_SUBDIRECTORY(plugins)
 
+# === CPack package creation / installation ===
+
+  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
+  #SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "Rastullahs Lockenpracht 0.3")
+  IF(WIN32 AND NOT UNIX)
+    # TEMPLATE - Not Tested!
+    # There is a bug in NSI that does not handle full unix paths properly. Make
+    # sure there is at least one set of four (4) backlasshes.
+    SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
+    SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\rastullah_setup.exe")
+    SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} rastullah")
+    SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
+    SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
+    SET(CPACK_NSIS_CONTACT "contact at rastullahs-lockenpracht.de")
+    SET(CPACK_NSIS_MODIFY_PATH ON)
+  ELSE(WIN32 AND NOT UNIX)
+    SET(CPACK_STRIP_FILES "bin/rastullah")
+    SET(CPACK_SOURCE_STRIP_FILES "")
+  ENDIF(WIN32 AND NOT UNIX)
+
+#SET(CPACK_PACKAGE_EXECUTABLES "rastullah" "rastullah")
+
+INCLUDE(CPack)
+
 PRINT_ENABLED_FEATURES()



From alassion at mail.berlios.de  Sun Jan  4 22:32:20 2009
From: alassion at mail.berlios.de (alassion at mail.berlios.de)
Date: Sun, 4 Jan 2009 22:32:20 +0100
Subject: [Dsa-hl-svn] r4687 - dependencies/OgreNewt_ngt
Message-ID: <200901042132.n04LWKbl027107@sheep.berlios.de>

Author: alassion
Date: 2009-01-04 22:32:19 +0100 (Sun, 04 Jan 2009)
New Revision: 4687

Modified:
   dependencies/OgreNewt_ngt/CMakeLists.txt
Log:
PROJECT(OgreNewt)

CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)

# Include required cmake macros
INCLUDE(FeatureSummary)

# === CPack packaging ===
  #Include packaging information
   INCLUDE(InstallRequiredSystemLibraries)

  #Enable absolute paths
   SET(CPACK_SET_DESTDIR "ON")

  # General package-information [mandatory]
   SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "OgreNewt stellt die Funktionen der Newton Bibliothek f?\195?\188r OGRE3D bereit")
   SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
   SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")

  # General package-information [optional]
   SET(CPACK_PACKAGE_NAME "OgreNewt")
   #SET(CPACK_PACKAGE_FILE_NAME "name-version-something-else-to-add")

  # Package version information [mandatory]
   SET(CPACK_PACKAGE_VERSION_MAJOR "2")
   SET(CPACK_PACKAGE_VERSION_MINOR "0")
   SET(CPACK_PACKAGE_VERSION_PATCH "0")

  # Architecture and Platform [mandatory]
   IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
   ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
   ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")

  # ReadMe/License/Copyright etc... [optional]
   #SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
   #SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt")

# === CMake Main ===

# Version information
SET(OgreNewt_MAJOR_VERSION 2)
SET(OgreNewt_MINOR_VERSION 0)
SET(OgreNewt_PATCH_VERSION 0)

# Add directory with OgreNewt's own macro definitions
# (checked before ${CMAKE_ROOT}/Modules)
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)

# Check for required components
FIND_PACKAGE(PkgConfig)
FIND_PACKAGE(OGRE 1.4 REQUIRED)
FIND_PACKAGE(Newton 2.0 REQUIRED)

INCLUDE_DIRECTORIES(
${CMAKE_CURRENT_SOURCE_DIR}/inc
${OGRE_INCLUDE_DIRS}
${NEWTON_INCLUDE_DIR})

SET(OgreNewt_LIB_SRCS
src/OgreNewt_BasicFrameListener.cpp
src/OgreNewt_BasicJoints.cpp
src/OgreNewt_Body.cpp
src/OgreNewt_Collision.cpp
src/OgreNewt_CollisionPrimitives.cpp
src/OgreNewt_CollisionSerializer.cpp
src/OgreNewt_ContactCallback.cpp
src/OgreNewt_Debugger.cpp
src/OgreNewt_Joint.cpp
src/OgreNewt_MaterialID.cpp
src/OgreNewt_MaterialPair.cpp
src/OgreNewt_RayCast.cpp
src/OgreNewt_Tools.cpp
src/OgreNewt_Vehicle.cpp
src/OgreNewt_World.cpp)

ADD_LIBRARY(OgreNewt SHARED ${OgreNewt_LIB_SRCS})

TARGET_LINK_LIBRARIES(OgreNewt ${OGRE_LIBRARIES} ${NEWTON_LIBRARY})

SET_TARGET_PROPERTIES(OgreNewt PROPERTIES
	VERSION ${OgreNewt_MAJOR_VERSION}.${OgreNewt_MINOR_VERSION}.${OgreNewt_PATCH_VERSION}
	SOVERSION ${OgreNewt_MAJOR_VERSION}
	DEFINE_SYMBOL _OGRENEWT_EXPORTS)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/OgreNewt.pc.cmake ${CMAKE_CURRENT_BINARY_DIR}/OgreNewt.pc)

INSTALL(TARGETS OgreNewt
        LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
        RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
        ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

INSTALL(FILES inc/OgreNewt_BasicFrameListener.h inc/OgreNewt_BasicJoints.h
inc/OgreNewt_Body.h inc/OgreNewt_BodyIterator.h inc/OgreNewt_Collision.h
inc/OgreNewt_CollisionPrimitives.h inc/OgreNewt_CollisionSerializer.h
inc/OgreNewt_ContactCallback.h inc/OgreNewt_Debugger.h inc/OgreNewt.h
inc/OgreNewt_Joint.h inc/OgreNewt_MaterialID.h inc/OgreNewt_MaterialPair.h
inc/OgreNewt_Prerequisites.h inc/OgreNewt_RayCast.h inc/OgreNewt_Tools.h
inc/OgreNewt_Vehicle.h inc/OgreNewt_World.h
DESTINATION ${CMAKE_INSTALL_PREFIX}/include)

IF(NOT WIN32)
	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/OgreNewt.pc
	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
ENDIF(NOT WIN32)

# === CPack package creation / installation ===

  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
  #SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "OgreNewt 2.0")
  IF(WIN32 AND NOT UNIX)
    # TEMPLATE - Not Tested!
    # There is a bug in NSI that does not handle full unix paths properly. Make
    # sure there is at least one set of four (4) backlasshes.
    SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
    SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\OgreNewt2_setup.exe")
    SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} OgreNewt2")
    SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
    SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
    SET(CPACK_NSIS_CONTACT "contact at rastullahs-lockenpracht.de")
    SET(CPACK_NSIS_MODIFY_PATH ON)
  ELSE(WIN32 AND NOT UNIX)
    SET(CPACK_STRIP_FILES "bin/OgrewNewt")
    SET(CPACK_SOURCE_STRIP_FILES "")
  ENDIF(WIN32 AND NOT UNIX)

#SET(CPACK_PACKAGE_EXECUTABLES "OgreNewt" "OgreNewt2.0")

INCLUDE(CPack)

PRINT_ENABLED_FEATURES()


Modified: dependencies/OgreNewt_ngt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-04 21:06:16 UTC (rev 4686)
+++ dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-04 21:32:19 UTC (rev 4687)
@@ -18,7 +18,7 @@
    SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")
 
   # General package-information [optional]
-   SET(CPACK_PACKAGE_NAME "ogreNewt")
+   SET(CPACK_PACKAGE_NAME "OgreNewt")
    #SET(CPACK_PACKAGE_FILE_NAME "name-version-something-else-to-add")
 
   # Package version information [mandatory]



From timm at mail.berlios.de  Sun Jan  4 23:10:00 2009
From: timm at mail.berlios.de (timm at mail.berlios.de)
Date: Sun, 4 Jan 2009 23:10:00 +0100
Subject: [Dsa-hl-svn] r4688 - in rl/branches/persistence: . ai ai/include
	ai/src common common/include common/src core core/include
	core/src rules rules/include rules/src script script/include
	script/src script/swig startup startup/src ui ui/include ui/src
Message-ID: <200901042210.n04MA0Sc030354@sheep.berlios.de>

Author: timm
Date: 2009-01-04 23:09:44 +0100 (Sun, 04 Jan 2009)
New Revision: 4688

Added:
   rl/branches/persistence/script/CMakeLists.txt
   rl/branches/persistence/startup/CMakeLists.txt
Removed:
   rl/branches/persistence/Makefile.am
   rl/branches/persistence/ai/Makefile.am
   rl/branches/persistence/ai/include/Makefile.am
   rl/branches/persistence/ai/src/Makefile.am
   rl/branches/persistence/common/Makefile.am
   rl/branches/persistence/common/include/Makefile.am
   rl/branches/persistence/common/src/Makefile.am
   rl/branches/persistence/core/Makefile.am
   rl/branches/persistence/core/include/Makefile.am
   rl/branches/persistence/core/src/Makefile.am
   rl/branches/persistence/rules/Makefile.am
   rl/branches/persistence/rules/include/Makefile.am
   rl/branches/persistence/rules/src/Makefile.am
   rl/branches/persistence/script/Makefile.am
   rl/branches/persistence/script/include/Makefile.am
   rl/branches/persistence/script/src/Makefile.am
   rl/branches/persistence/script/swig/Makefile.am
   rl/branches/persistence/startup/Makefile.am
   rl/branches/persistence/startup/src/Makefile.am
   rl/branches/persistence/ui/Makefile.am
   rl/branches/persistence/ui/include/Makefile.am
   rl/branches/persistence/ui/src/Makefile.am
Modified:
   rl/branches/persistence/ai/CMakeLists.txt
   rl/branches/persistence/ai/include/DialogLoaderImpl.h
   rl/branches/persistence/common/CMakeLists.txt
   rl/branches/persistence/core/CMakeLists.txt
   rl/branches/persistence/rules/CMakeLists.txt
   rl/branches/persistence/ui/CMakeLists.txt
Log:
merged cmake files from trunk

Deleted: rl/branches/persistence/Makefile.am
===================================================================
--- rl/branches/persistence/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,2 +0,0 @@
-SUBDIRS = common ai ui core rules script startup
-

Modified: rl/branches/persistence/ai/CMakeLists.txt
===================================================================
--- rl/branches/persistence/ai/CMakeLists.txt	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/ai/CMakeLists.txt	2009-01-04 22:09:44 UTC (rev 4688)
@@ -5,7 +5,8 @@
 ${RL_RULES_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
 ${CEGUI_INCLUDE_DIRS}
-${OGRENEWT_INCLUDE_DIRS})
+${OGRENEWT_INCLUDE_DIRS}
+${OPENSTEER_INCLUDE_DIR})
 
 SET(RlAi_LIB_SRCS
 src/Agent.cpp
@@ -26,6 +27,7 @@
 src/DialogElement.cpp
 src/DialogImplication.cpp
 src/DialogLoader.cpp
+src/DialogLoaderImpl.cpp
 src/DialogManager.cpp
 src/DialogOption.cpp
 src/DialogParagraph.cpp
@@ -45,9 +47,11 @@
 
 ADD_LIBRARY(RlAi SHARED ${RlAi_LIB_SRCS})
 
-TARGET_LINK_LIBRARIES(RlAi ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARIES})
+TARGET_LINK_LIBRARIES(RlAi ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARIES} ${OPENSTEER_LIBRARY})
 
 SET_TARGET_PROPERTIES(RlAi PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLAI_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLAI_EXPORTS)
+
+INSTALL(TARGETS RlAi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Deleted: rl/branches/persistence/ai/Makefile.am
===================================================================
--- rl/branches/persistence/ai/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/ai/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,3 +0,0 @@
-SUBDIRS = include src
-
-

Modified: rl/branches/persistence/ai/include/DialogLoaderImpl.h
===================================================================
--- rl/branches/persistence/ai/include/DialogLoaderImpl.h	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/ai/include/DialogLoaderImpl.h	2009-01-04 22:09:44 UTC (rev 4688)
@@ -76,4 +76,5 @@
         std::map<Ogre::String, DialogPrototype*> mDialogs;
 
     };
-}
\ No newline at end of file
+}
+

Deleted: rl/branches/persistence/ai/include/Makefile.am
===================================================================
--- rl/branches/persistence/ai/include/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/ai/include/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,45 +0,0 @@
-noinst_HEADERS =
-	Agent.h \
-	AgentManager.h \
-	AgentCombatState.h \
-	AgentDialogState.h \
-	AgentState.h \
-	AgentSteeringState.h \
-	AiPrerequisites.h \
-	AiSubsystem.h \
-	AiWorld.h \
-	AStarCosts.h \
-	AStar.h \
-	AStarHeuristic.h \
-	AStarNodePool.h \
-	AStarWayPointNode.h \
-	CreatureWalkPathJob.h \
-	Dialog.h \
-	DialogCondition.h \
-	DialogElement.h \
-	DialogElementSelection.h \
-	DialogImplication.h \
-	DialogLoader.h \
-	DialogLoaderImpl.h \
-	DialogManager.h \
-	DialogOption.h \
-	DialogResponse.h \
-	DialogVariable.h \
-	FuzzyState.h \
-	FuzzyStateMachine.h \
-	Landmark.h \
-	LandmarkPath.h \
-	PhysicalObstacle.h \
-	SimpleVehicle.h \
-	SteeringMachine.h \
-	SteeringVehicle.h \
-	WalkPathBehaviour.h \
-	WayPointNode.h \
-	WayPointGraph.h \
-	WayPointGraphManager.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/branches/persistence/ai/src/Makefile.am
===================================================================
--- rl/branches/persistence/ai/src/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/ai/src/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,41 +0,0 @@
-INCLUDES = $(OGRE_CFLAGS) $(OgreNewt_CFLAGS) $(STLPORT_CFLAGS) $(CEGUIOGRE_CFLAGS) $(BOOST_CPPFLAGS) $(OpenSteer_CFLAGS) \
-	-I../include -I ../../core/include -I ../../common/include -I ../../dialog/include -I ../../rules/include -I../include/predicates
-
-lib_LTLIBRARIES = libRlAi.la
-libRlAi_la_LDFLAGS = $(OgreNewt_LIBS) $(OpenSteer_LIBS) $(LIBS)
-libRlAi_la_SOURCES = \
-	Agent.cpp \
-	AgentCombatState.cpp \
-	AgentDialogState.cpp \
-	AgentManager.cpp \
-	AgentSteeringState.cpp \
-	AiSubsystem.cpp \
-	AiWorld.cpp \
-	AStarCosts.cpp \
-	AStar.cpp \
-	AStarHeuristic.cpp \
-	AStarNodePool.cpp \
-	AStarWayPointNode.cpp \
-	CreatureWalkPathJob.cpp \
-	Dialog.cpp \
-	DialogCondition.cpp \
-	DialogElement.cpp \
-	DialogImplication.cpp \
-	DialogLoader.cpp \
-	DialogLoaderImpl.cpp \
-	DialogManager.cpp \
-	DialogOption.cpp \
-	DialogParagraph.cpp \
-	DialogResponse.cpp \
-	DialogVariable.cpp \
-	FuzzyState.cpp \
-	FuzzyStateMachine.cpp \
-	Landmark.cpp \
-	LandmarkPath.cpp \
-	PhysicalObstacle.cpp \
-	SimpleVehicle.cpp \
-	SteeringVehicle.cpp \
-	WalkPathBehaviour.cpp \
-	WayPointNode.cpp \
-	WayPointGraph.cpp \
-	WayPointGraphManager.cpp

Modified: rl/branches/persistence/common/CMakeLists.txt
===================================================================
--- rl/branches/persistence/common/CMakeLists.txt	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/common/CMakeLists.txt	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,5 +1,6 @@
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include
+${XERCESC_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
 ${CEGUI_INCLUDE_DIRS})
 
@@ -25,9 +26,11 @@
 
 ADD_LIBRARY(RlCommon SHARED ${RlCommon_LIB_SRCS})
 
-TARGET_LINK_LIBRARIES(RlCommon ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES})
+TARGET_LINK_LIBRARIES(RlCommon ${XERCESC_LIBRARIES} ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${Boost_FILESYSTEM_LIBRARY})
 
 SET_TARGET_PROPERTIES(RlCommon PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLCOMMON_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLCOMMON_EXPORTS)
+
+INSTALL(TARGETS RlCommon LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Deleted: rl/branches/persistence/common/Makefile.am
===================================================================
--- rl/branches/persistence/common/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/common/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,3 +0,0 @@
-SUBDIRS = include src
-
-

Deleted: rl/branches/persistence/common/include/Makefile.am
===================================================================
--- rl/branches/persistence/common/include/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/common/include/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,34 +0,0 @@
-noinst_HEADERS =
-	CommonPrerequisites.h \
-	ConfigFile.h \
-	config.h \
-	EventCaster.h \
-	EventListener.h \
-	EventObject.h \
-	EventSource.h \
-	Exception.h \
-	FixRubyHeaders.h \
-	GameTask.h \
-	Logger.h \
-	MathUtil.h \
-	OgreXercesInput.h \
-    Properties.h \
-    Property.h \
-    RastullahPrerequisites.h \
-	ScriptSerializer.h \
-    ScriptWrapper.h \
-	Sleep.h \
-	Tripel.h \
-	WriteableDataStream.h \
-	WriteableDataStreamFormatTarget.h \
-	WriteableFileSystemArchiv.h \
-	XmlProcessor.h \
-    XmlPropertyReader.h \
-	XmlPropertyWriter.h \
-	XmlResource.h \
-	XmlResourceManager.h
-
-CLEANFILES = stdinc.h.gch
-all-local: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h 

Deleted: rl/branches/persistence/common/src/Makefile.am
===================================================================
--- rl/branches/persistence/common/src/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/common/src/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,25 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(STLPORT_CFLAGS) $(CEGUI_CFLAGS) $(BOOST_CPPFLAGS) -I../include -I../../core/include
-
-lib_LTLIBRARIES = libRlCommon.la
-libRlCommon_la_LDFLAGS = $(RUBY_LIBS) $(OGRE_LIBS) $(CEGUI_LIBS) $(BOOST_FILESYSTEM_LIB) $(LIBS)
-libRlCommon_la_SOURCES = \
-  ../include/stdinc.h \
-  ConfigFile.cpp \
-  EventObject.cpp \
-  EventSource.cpp \
-  GameTask.cpp \
-  Logger.cpp \
-  MathUtil.cpp \
-  OgreXercesInput.cpp \
-  Properties.cpp \
-  Property.cpp \
-  ScriptWrapper.cpp \
-  ScriptSerializer.cpp \
-  WriteableDataStream.cpp \
-  WriteableDataStreamFormatTarget.cpp \
-  WriteableFileSystemArchiv.cpp \
-  XmlProcessor.cpp \
-  XmlPropertyReader.cpp \
-  XmlPropertyWriter.cpp \
-  XmlResource.cpp \
-  XmlResourceManager.cpp   

Modified: rl/branches/persistence/core/CMakeLists.txt
===================================================================
--- rl/branches/persistence/core/CMakeLists.txt	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/core/CMakeLists.txt	2009-01-04 22:09:44 UTC (rev 4688)
@@ -87,6 +87,8 @@
 src/nulldriver/NullSound.cpp
 src/nulldriver/NullSoundStitching.cpp)
 
+ADD_DEFINITIONS(-DRL_MODULEDIR="${DATAROOTDIR}/${DATADIRNAME}")
+
 ADD_LIBRARY(RlCore SHARED ${RlCore_LIB_SRCS})
 
 TARGET_LINK_LIBRARIES(RlCore ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARY} ${MESHMAGICK_LIBRARY} ${OIS_LIBRARIES} ${RUBY_LIBRARY})
@@ -94,4 +96,6 @@
 SET_TARGET_PROPERTIES(RlCore PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLCORE_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLCORE_EXPORTS)
+
+INSTALL(TARGETS RlCore LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Deleted: rl/branches/persistence/core/Makefile.am
===================================================================
--- rl/branches/persistence/core/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/core/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1 +0,0 @@
-SUBDIRS = include src

Deleted: rl/branches/persistence/core/include/Makefile.am
===================================================================
--- rl/branches/persistence/core/include/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/core/include/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,95 +0,0 @@
- noinst_HEADERS = \
-	Actor.h \
-	ActorControlledObject.h \
-	ActorManager.h \
-	AnimationManager.h \
-	BaseAnimation.h \
-	BoxPrimitive.h \
-	CameraObject.h \
-	ConfigurationManager.h \
-	ContentLoader.h \
-	ContentModule.h \
-	CoreDefines.h \
-	CoreMessages.h \
-	CorePrerequisites.h \
-	CoreSubsystem.h \
-	DebugVisualisable.h \
-	DebugVisualsManager.h\
-	DotSceneLoader.h \
-	DotSceneOctreeWorld.h \
-	FadeAnimation.h \
-	GameAreaEvent.h \
-	GameAreaEventSource.h \
-	GameAreaListener.h \
-	GameAreaTypes.h \
-	GameEventManager.h \
-	GameLoop.h \
-	Job.h \
-	JobListener.h \
-	JobQueue.h \
-	JobScheduler.h \
-	LightFadeJob.h \
-	LightObject.h \
-	LineSetPrimitive.h \
-	LinearSoundFadeFunctor.h \
-	ListenerMovable.h \
-	ListenerObject.h \
-	MergeableMeshObject.h \
-	MessageObject.h \
-	MessagePump.h \
-	MessageType.h \
-	MeshAnimation.h \
-	MeshObject.h \
-	MovableText.h \
-	ParticleSystemObject.h \
-	PhysicsContactListener.h \
-	PhysicalObject.h \
-	PhysicalThing.h \
-	PhysicsGenericContactCallback.h \
-	PhysicsController.h \
-	PhysicsManager.h \
-	PhysicsMaterialRaycast.h \
-	PlayAnimationJob.h \
-	PlaySoundJob.h \
-	PolynomicSoundFadeFunctor.h \
-	PrimitiveObject.h \
-	QuadTree.h \
-	RubyInterpreter.h \
-	SaveAble.h \
-	SaveAbleCollection.h \
-	SaveAbleFactory.h \
-	SaveAbleManager.h \
-	SaveAbleSerializer.h \
-	SaveGameData.h \
-	SaveGameFile.h \
-	SaveGameFileReader.h \
-	SaveGameFileWriter.h \
-	SaveGameManager.h \
-	SceneQuery.h \
-	Sound.h \
-	SoundDriver.h \
-	SoundEvents.h \
-	SoundManager.h \
-	SoundObject.h \
-	SoundResource.h \
-	SoundFadeJob.h \
-	SoundFadeFunctor.h \
-	SoundStitching.h \
-	SoundStitchingObject.h \
-	StartAnimationJob.h \
-	TimeSource.h \
-	TrackAnimation.h \
-	Trigger.h \
-	World.h \
-	Zone.h \
-	ZoneManager.h \
-	nulldriver/NullDriver.h \
-	nulldriver/NullSound.h \
-	nulldriver/NullListener.h \
-	nulldriver/NullSoundStitching.h
-	
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/branches/persistence/core/src/Makefile.am
===================================================================
--- rl/branches/persistence/core/src/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/core/src/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,87 +0,0 @@
-# Default values, if configuration file is missing (hard coded)
-AM_CPPFLAGS = -DRL_MODULEDIR=\"$(RL_MODULEDIR)\" -DOGRE_PLUGINDIR=\"$(OGRE_PLUGINDIR)\"
-
-INCLUDES = -I../include $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(CEGUI_CFLAGS) $(STLPORT_CFLAGS) $(BOOST_CPPFLAGS) $(OgreNewt_CFLAGS) \
-           -I../../common/include -I../include/nulldriver $(meshmagick_CFLAGS)
-
-lib_LTLIBRARIES = libRlCore.la
-libRlCore_la_LDFLAGS = $(OGRE_LIBS) $(CEGUI_LIBS) $(RUBY_LIBS) $(LIBS) $(meshmagick_LIBS) $(OgreNewt_LIBS)
-libRlCore_la_SOURCES = \
-	Actor.cpp \
-	ActorControlledObject.cpp \
-	ActorManager.cpp \
-	AnimationManager.cpp \
-	BaseAnimation.cpp \
-	BoxPrimitive.cpp \
-	CameraObject.cpp \
-	ConfigurationManager.cpp \
-	ContentLoader.cpp \
-	ContentModule.cpp \
-	CoreSubsystem.cpp \
-	DebugVisualisable.cpp \
-	DebugVisualsManager.cpp \
-	DotSceneLoader.cpp \
-	DotSceneOctreeWorld.cpp \
-	FadeAnimation.cpp \
-	GameAreaEvent.cpp \
-	GameAreaEventSource.cpp \
-	GameAreaListener.cpp \
-	GameAreaTypes.cpp \
-	GameEventManager.cpp \
-	GameLoop.cpp \
-	Job.cpp \
-	JobQueue.cpp \
-	JobScheduler.cpp \
-	LightObject.cpp \
-	LightFadeJob.cpp \
-	LineSetPrimitive.cpp \
-	ListenerObject.cpp \
-	ListenerMovable.cpp \
-	LinearSoundFadeFunctor.cpp \
-	MergeableMeshObject.cpp \
-	MeshAnimation.cpp \
-	MeshObject.cpp \
-	MessagePump.cpp \
-	MovableText.cpp \
-	ParticleSystemObject.cpp \
-	PhysicsContactListener.cpp \
-	PhysicalThing.cpp \
-	PhysicsGenericContactCallback.cpp \
-	PhysicsManager.cpp \
-	PhysicsMaterialRaycast.cpp \
-	PlayAnimationJob.cpp \
-	PlaySoundJob.cpp \
-	PolynomicSoundFadeFunctor.cpp \
-	PrimitiveObject.cpp \
-	RubyInterpreter.cpp \
-	SaveAble.cpp \
-	SaveAbleCollection.cpp \
-	SaveAbleFactory.cpp \
-	SaveAbleManager.cpp \
-	SaveAbleSerializer.cpp \
-	SaveGameFile.cpp \
-	SaveGameFileReader.cpp \
-	SaveGameFileWriter.cpp \
-	SaveGameManager.cpp \
-	SceneQuery.cpp \
-	SoundManager.cpp \
-	SoundObject.cpp \
-	SoundDriver.cpp \
-	Sound.cpp \
-	SoundEvents.cpp \
-	SoundResource.cpp \
-	SoundFadeJob.cpp \
-	SoundFadeFunctor.cpp \
-	SoundStitching.cpp \
-	SoundStitchingObject.cpp \
-	StartAnimationJob.cpp \
-	TimeSource.cpp \
-	Trigger.cpp \
-	TrackAnimation.cpp \
-	World.cpp \
-	Zone.cpp \
-	ZoneManager.cpp \
-	nulldriver/NullDriver.cpp \
-	nulldriver/NullListener.cpp \
-	nulldriver/NullSound.cpp \
-	nulldriver/NullSoundStitching.cpp

Modified: rl/branches/persistence/rules/CMakeLists.txt
===================================================================
--- rl/branches/persistence/rules/CMakeLists.txt	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/rules/CMakeLists.txt	2009-01-04 22:09:44 UTC (rev 4688)
@@ -81,4 +81,6 @@
 SET_TARGET_PROPERTIES(RlRules PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLRULES_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLRULES_EXPORTS)
+
+INSTALL(TARGETS RlRules LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Deleted: rl/branches/persistence/rules/Makefile.am
===================================================================
--- rl/branches/persistence/rules/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/rules/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1 +0,0 @@
-SUBDIRS = include src

Deleted: rl/branches/persistence/rules/include/Makefile.am
===================================================================
--- rl/branches/persistence/rules/include/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/rules/include/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,76 +0,0 @@
-noinst_HEADERS = \
-	Action.h \
-	ActionManager.h \
-	Armor.h \
-	Combat.h \
-	Combatant.h \
-	CombatManager.h \
-	Container.h \
-	Creature.h \
-	CreatureController.h \
-	CreatureControllerManager.h \
-	Date.h \
-	DsaDataLoader.h \
-	DsaManager.h \
-	Effect.h \
-	EffectFactory.h \
-	EffectManagementTask.h \
-	EffectManager.h \
-	Eigenschaft.h \
-	EigenschaftenStateSet.h \
-	GameEventLog.h \
-	GameObject.h \
-	GameObjectStateListener.h \
-	GameTimeSource.h \
-	GlobalProperties.h \
-	GoToJob.h \
-	Item.h \
-	Inventory.h \
-	JournalEntry.h \
-	Kampftechnik.h \
-	ObjectStateChangeEvent.h \
-	ObjectStateChangeEventSource.h \
-	ObjectStateChangeListener.h \
-	PartyManager.h \
-	Quest.h \
-	QuestBook.h \
-	QuestEvent.h \
-	QuestListener.h \
-	RulesPrerequisites.h \
-	RulesSubsystem.h \
-	SelectionHelper.h \
-	Selector.h \
-	Slot.h \
-	StateSet.h \
-	SonderfertigkeitenStateSet.h \
-	Talent.h \
-	Talentgruppe.h \
-	TalentInputIterator.h \
-	TalentStateSet.h \
-	WaitJob.h \
-	Weapon.h \
-	ZauberStateSet.h \
-	AbstractMovement.h \
-	FallDownMovement.h \
-	JogBackwardsMovement.h \
-	JogFastMovement.h \
-	JogMovement.h \
-	JumpHighMovement.h \
-	JumpLongMovement.h \
-	JumpToTargetMovement.h \
-	LieDownMovement.h \
-	RotateMovement.h \
-	SneakMovement.h \
-	SprintMovement.h \
-	StandAroundMovement.h \
-	StepRecognitionMovement.h \
-	StrafeMovement.h \
-	WalkBackwardsMovement.h \
-	WalkMovement.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h
-

Deleted: rl/branches/persistence/rules/src/Makefile.am
===================================================================
--- rl/branches/persistence/rules/src/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/rules/src/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,71 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(CEGUI_CFLAGS) $(STLPORT_CFLAGS) $(BOOST_CPPFLAGS) $(OgreNewt_CFLAGS) -I../include -I../../common/include -I../../core/include
-
-lib_LTLIBRARIES = libRlRules.la
-libRlRules_la_LDFLAGS = $(RUBY_LIBS) $(OGRE_LIBS) $(CEGUI_LIBS) $(LIBS) $(OgreNewt_LIBS)
-libRlRules_la_SOURCES = \
-	Action.cpp \
-	ActionManager.cpp \
-	ApplyDamageJob.cpp \
-	Armor.cpp \
-	Combat.cpp \
-	Combatant.cpp \
-	CombatManager.cpp \
-	Container.cpp \
-	Creature.cpp \
-	CreatureController.cpp \
-	CreatureControllerManager.cpp \
-	Date.cpp \
-	DsaDataLoader.cpp \
-	DsaManager.cpp \
-	Effect.cpp \
-	EffectFactory.cpp \
-	EffectManagementTask.cpp \
-	EffectManager.cpp \
-	Eigenschaft.cpp \
-	EigenschaftenStateSet.cpp \
-	GameEventLog.cpp \
-	GameObject.cpp \
-	GameObjectManager.cpp \
-	GameTimeSource.cpp \
-	GlobalProperties.cpp \
-	GoToJob.cpp \
-	FetchItemJob.cpp \
-	Item.cpp \
-	Inventory.cpp \
-	JournalEntry.cpp \
-	Kampfaktion.cpp \
-	Kampftechnik.cpp \
-	ObjectStateChangeEvent.cpp \
-	ObjectStateChangeEventSource.cpp \
-	ObjectStateChangeListener.cpp \
-	PartyManager.cpp \
-	Quest.cpp \
-	QuestBook.cpp \
-	QuestEvent.cpp \
-	QuestListener.cpp \
-	RulesSubsystem.cpp \
-	SelectionHelper.cpp \
-	Selector.cpp \
-	Slot.cpp \
-	SonderfertigkeitenStateSet.cpp \
-	StateSet.cpp \
-	Talent.cpp \
-	Talentgruppe.cpp \
-	TalentStateSet.cpp \
-	WaitJob.cpp \
-	Weapon.cpp \
-	ZauberStateSet.cpp \
-	FallDownMovement.cpp \
-	JogFastMovement.cpp \
-	JogMovement.cpp \
-	JumpHighMovement.cpp \
-	JumpLongMovement.cpp \
-	JumpToTargetMovement.cpp \
-	LieDownMovement.cpp \
-	RotateMovement.cpp \
-	SneakMovement.cpp \
-	SprintMovement.cpp \
-	StandAroundMovement.cpp \
-	StepRecognitionMovement.cpp \
-	StrafeMovement.cpp \
-	WalkMovement.cpp

Copied: rl/branches/persistence/script/CMakeLists.txt (from rev 4687, rl/trunk/engine/script/CMakeLists.txt)

Deleted: rl/branches/persistence/script/Makefile.am
===================================================================
--- rl/branches/persistence/script/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/script/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1 +0,0 @@
-SUBDIRS = swig src
\ No newline at end of file

Deleted: rl/branches/persistence/script/include/Makefile.am
===================================================================
--- rl/branches/persistence/script/include/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/script/include/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,26 +0,0 @@
-noinst_HEADERS = \
-	AbstractMapNodeProcessor.h \
-	EntityNodeProcessor.h \
-	EnvironmentProcessor.h \
-	GameObjectNodeProcessor.h \
-	LightNodeProcessor.h \
-	MapLoader.h \
-	ParticleSystemNodeProcessor.h \
-	PlaneNodeProcessor.h \
-	TriggerFactory.h \
-	Scene.h \
-	SceneLoader.h \
-	SceneManager.h \
-	ScriptObjectMarker.h \
-	ScriptPrerequisites.h \
-	ScriptSubsystem.h \
-	SoundNodeProcessor.h \
-	WaypointProcessor.h \
-	UnifiedFactory.h \
-	ZoneProcessor.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/branches/persistence/script/src/Makefile.am
===================================================================
--- rl/branches/persistence/script/src/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/script/src/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,33 +0,0 @@
-INCLUDES = $(CEGUI_CFLAGS) $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(OgreNewt_CFLAGS) $(OIS_CFLAGS) \
-	$(STLPORT_CFLAGS) $(BOOST_CPPFLAGS) -I../include -I../../common/include \
-	-I../../core/include -I../../rules/include -I../../ui/include \
-	-I../../ai/include
-
-lib_LTLIBRARIES = libRlScript.la
-libRlScript_la_LDFLAGS = \
-    $(top_builddir)/engine/common/src/libRlCommon.la \
-    $(top_builddir)/engine/core/src/libRlCore.la \
-    $(top_builddir)/engine/ui/src/libRlUi.la \
-    $(top_builddir)/engine/rules/src/libRlRules.la \
-    $(CEGUI_LIBS) $(OGRE_LIBS) $(RUBY_LIBS) $(LIBS) \
-    -Wl,--defsym -Wl,Init_libRlScript=Init_RlScript
-	
-libRlScript_la_SOURCES = \
-	AbstractMapNodeProcessor.cpp \
-	EntityNodeProcessor.cpp \
-	EnvironmentProcessor.cpp \
-	GameObjectNodeProcessor.cpp \
-	LightNodeProcessor.cpp \
-	MapLoader.cpp \
-	ParticleSystemNodeProcessor.cpp \
-	PlaneNodeProcessor.cpp \
-	Scene.cpp \
-	SceneLoader.cpp \
-	SceneManager.cpp \
-	ScriptSubsystem.cpp \
-	ScriptObjectMarker.cpp \
-	SoundNodeProcessor.cpp \
-	TriggerFactory.cpp \
-	WaypointProcessor.cpp \
-	ZoneProcessor.cpp \
-	../swig/RlExports.cxx 

Deleted: rl/branches/persistence/script/swig/Makefile.am
===================================================================
--- rl/branches/persistence/script/swig/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/script/swig/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,15 +0,0 @@
-CLEANFILES = RlExports.cxx
-
-all: RlExports.cxx
-
-RlExports.cxx: RlCore.head.swig RlCore.swig RlRules.head.swig \
- RlRules.swig RlUi.head.swig RlUi.swig RlAi.head.swig RlAi.swig \
- RlScript.head.swig RlScript.swig RlCommon.head.swig RlCommon.swig \
- RlExports.i TypeMaps.i RlExports.i \
- TypeDynamicDirector.swig TypeOgreColourValue.swig TypeOgreQuaternion.swig \
- TypeOgreRadian.swig TypeOgreReal.swig TypeOgreString.swig TypeOgreStringVector.swig \
- TypeOgreVector3.swig TypeRlCeGuiString.swig TypeRlCeGuiStringVector.swig \
- TypeRlProperty.swig TypeRlPropertyKeys.swig TypeStdPairIntInt.swig
- 
-.i.cxx:
-	$(SWIG) $(SWIG_RUBY_OPT) -o $@ $<

Copied: rl/branches/persistence/startup/CMakeLists.txt (from rev 4687, rl/trunk/engine/startup/CMakeLists.txt)

Deleted: rl/branches/persistence/startup/Makefile.am
===================================================================
--- rl/branches/persistence/startup/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/startup/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,2 +0,0 @@
-SUBDIRS = src
-

Deleted: rl/branches/persistence/startup/src/Makefile.am
===================================================================
--- rl/branches/persistence/startup/src/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/startup/src/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,17 +0,0 @@
-INCLUDES = $(CEGUI_CFLAGS) $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(OIS_CFLAGS) $(STLPORT_CFLAGS) \
-	$(BOOST_CPPFLAGS) -I../../common/include -I../../core/include -I../../rules/include \
-	-I../../ui/include -I../../script/include -I../../ai/include $(OgreNewt_CFLAGS)
-
-bin_PROGRAMS = rastullah
-rastullah_SOURCES = RastullahMain.cpp
-rastullah_LDADD = \
-    $(top_builddir)/engine/common/src/libRlCommon.la \
-    $(top_builddir)/engine/core/src/libRlCore.la \
-    $(top_builddir)/engine/ui/src/libRlUi.la \
-    $(top_builddir)/engine/rules/src/libRlRules.la \
-    $(top_builddir)/engine/script/src/libRlScript.la \
-    $(top_builddir)/engine/ai/src/libRlAi.la \
-    $(RUBY_LIBS) $(LIBS) $(CEGUI_LIBS) $(OGRE_LIBS) $(OgreNewt_LIBS)
-
-
-

Modified: rl/branches/persistence/ui/CMakeLists.txt
===================================================================
--- rl/branches/persistence/ui/CMakeLists.txt	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/ui/CMakeLists.txt	2009-01-04 22:09:44 UTC (rev 4688)
@@ -5,15 +5,17 @@
 ${RL_RULES_INCLUDE_DIR}
 ${RL_AI_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
+${OIS_INCLUDE_DIRS}
 ${CEGUI_INCLUDE_DIRS}
+${CEGUIOGRE_INCLUDE_DIR}
 ${OGRENEWT_INCLUDE_DIR}
-${OIS_INCLUDE_DIRS}
 ${RUBY_INCLUDE_PATH})
 
 SET(RlUi_LIB_SRCS
 src/AboutWindow.cpp
 src/ActionChoiceWindow.cpp
 src/AbstractWindow.cpp
+src/CharacterSelectionWindow.cpp
 src/CharacterSheetWindow.cpp
 src/CharacterStateWindow.cpp
 src/CloseConfirmationWindow.cpp
@@ -65,9 +67,11 @@
 
 ADD_LIBRARY(RlUi SHARED ${RlUi_LIB_SRCS})
 
-TARGET_LINK_LIBRARIES(RlUi ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARY} ${RUBY_LIBRARY})
+TARGET_LINK_LIBRARIES(RlUi ${OGRE_LIBRARIES} ${OIS_LIBRARIES} ${CEGUI_LIBRARIES} ${CEGUIOGRE_LIBRARY} ${OGRENEWT_LIBRARY} ${RUBY_LIBRARY})
 
 SET_TARGET_PROPERTIES(RlUi PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
-	DEFINE_SYMBOL RLRULES_EXPORTS)
\ No newline at end of file
+	DEFINE_SYMBOL RLUI_EXPORTS)
+
+INSTALL(TARGETS RlUi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file

Deleted: rl/branches/persistence/ui/Makefile.am
===================================================================
--- rl/branches/persistence/ui/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/ui/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,2 +0,0 @@
-SUBDIRS =  include src
-

Deleted: rl/branches/persistence/ui/include/Makefile.am
===================================================================
--- rl/branches/persistence/ui/include/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/ui/include/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,59 +0,0 @@
-noinst_HEADERS = \
-    AboutWindow.h \
-    ActionChoiceWindow.h \
-    AbstractWindow.h \
-    CeGuiHelper.h \
-    CharacterSheetWindow.h \
-    CharacterStateWindow.h \
-    CloseConfirmationWindow.h \
-    CombatControlState.h \
-    CombatGui.h \
-	CombatWindow.h \
-    CommandMapper.h \
-    ConfigComponent.h \
-    Console.h \
-    ContainerContentWindow.h \
-    ControlState.h \
-    CutsceneControlState.h \
-    DebugWindow.h \
-    DialogWindow.h \
-    DialogControlState.h \
-    FreeflightControlState.h \
-    GameLoggerWindow.h \
-    GameObjectInfoWindow.h \
-	GameOverWindow.h \
-	GameSaveLoadWindow.h \
-    GameSettings.h \
-    InfoPopup.h \
-    InGameMenuWindow.h \
-    InputManager.h \
-    InventoryWindow.h \
-    ItemDragContainer.h \
-    ItemDescriptionDragContainer.h \
-    ItemIconDragContainer.h \
-    JournalWindow.h \
-    ListboxWrappedTextItem.h \
-    LogWindow.h \
-    MainMenuWindow.h \
-    MainMenuEngineWindow.h \
-	MainMenuLoadWindow.h \
-    MessageWindow.h \
-    MovementControlState.h \
-    ObjectDescriptionWindow.h \
-    PlaylistWindow.h \
-    ProgressWindow.h \
-    PropertiesWindow.h \
-    RenderSystemConfigComponent.h \
-    SoundDriverConfigComponent.h \
-    SubtitleWindow.h \
-    UiPrerequisites.h \
-    UiSubsystem.h \
-    WindowFactory.h \
-    WindowFadeJob.h \
-    WindowManager.h
-
-CLEANFILES = stdinc.h.gch
-all-local: stdinc.h.gch
-stdinc.h.gch: $(noinst_HEADERS) stdinc.h
-	@echo Creating GCH file
-	g++ -I. stdinc.h

Deleted: rl/branches/persistence/ui/src/Makefile.am
===================================================================
--- rl/branches/persistence/ui/src/Makefile.am	2009-01-04 21:32:19 UTC (rev 4687)
+++ rl/branches/persistence/ui/src/Makefile.am	2009-01-04 22:09:44 UTC (rev 4688)
@@ -1,61 +0,0 @@
-INCLUDES = $(RUBY_CFLAGS) $(OGRE_CFLAGS) $(CEGUI_CFLAGS) $(CEGUIOGRE_CFLAGS) $(OgreNewt_CFLAGS) \
-    $(STLPORT_CFLAGS) $(OIS_CFLAGS) $(BOOST_CPPFLAGS) -I../include -I../../common/include  -I../../core/include \
-    -I../../rules/include -I../components/include -I../../dialog/include \
-    -I../../startup/include  -I../../ai/include
-
-lib_LTLIBRARIES = libRlUi.la
-libRlUi_la_LIBADD = \
-    $(RUBY_LIBS) $(LIBS) $(CEGUI_LIBS) $(OGRE_LIBS) $(CEGUIOGRE_LIBS) $(OIS_LIBS) $(OgreNewt_LIBS)
-
-libRlUi_la_SOURCES = \
-    AboutWindow.cpp \
-    ActionChoiceWindow.cpp \
-    AbstractWindow.cpp \
-    CharacterSheetWindow.cpp \
-    CharacterStateWindow.cpp \
-    CloseConfirmationWindow.cpp \
-    CombatControlState.cpp \
-    CombatGui.cpp \
-    CombatWindow.cpp \
-    CommandMapper.cpp \
-    ConfigComponent.cpp \
-    ContainerContentWindow.cpp \
-    ControlState.cpp \
-    Console.cpp \
-    CutsceneControlState.cpp \
-    DebugWindow.cpp \
-    DialogControlState.cpp \
-    DialogWindow.cpp \
-    FreeflightControlState.cpp \
-    GameLoggerWindow.cpp \
-    GameObjectInfoWindow.cpp \
-	GameOverWindow.cpp \
-	GameSaveLoadWindow.cpp \
-    GameSettings.cpp \
-    InfoPopup.cpp \
-    InGameMenuWindow.cpp \
-    InputManager.cpp \
-    InventoryWindow.cpp \
-    ItemDragContainer.cpp \
-    ItemDescriptionDragContainer.cpp \
-    ItemIconDragContainer.cpp \
-    JournalWindow.cpp \
-    ListboxWrappedTextItem.cpp \
-    LogWindow.cpp \
-    MainMenuWindow.cpp \
-    MainMenuEngineWindow.cpp \
-	MainMenuLoadWindow.cpp \
-    MessageWindow.cpp \
-    MovementControlState.cpp \
-    ObjectDescriptionWindow.cpp \
-    PlaylistWindow.cpp \
-    ProgressWindow.cpp \
-    PropertiesWindow.cpp \
-    RenderSystemConfigComponent.cpp \
-    SoundConfig.cpp \
-    SoundDriverConfigComponent.cpp \
-    SubtitleWindow.cpp \
-    UiSubsystem.cpp \
-    WindowFactory.cpp \
-    WindowFadeJob.cpp \
-    WindowManager.cpp



From chrber at mail.berlios.de  Mon Jan  5 13:03:33 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Mon, 5 Jan 2009 13:03:33 +0100
Subject: [Dsa-hl-svn] r4689 - in dependencies/OgreNewt_ngt: . cmake
Message-ID: <200901051203.n05C3XOg030589@sheep.berlios.de>

Author: chrber
Date: 2009-01-05 13:03:25 +0100 (Mon, 05 Jan 2009)
New Revision: 4689

Modified:
   dependencies/OgreNewt_ngt/CMakeLists.txt
   dependencies/OgreNewt_ngt/cmake/FindNewton.cmake
Log:
Removed a debug statement
Reordered cpack defintions
Added compile settings for different build types


Modified: dependencies/OgreNewt_ngt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-04 22:09:44 UTC (rev 4688)
+++ dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-05 12:03:25 UTC (rev 4689)
@@ -2,48 +2,53 @@
 
 CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
 
-# Include required cmake macros
-INCLUDE(FeatureSummary)
+# Package and version information
+SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Ogre Bindings for the Newton Physics SDK")
+SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
+SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")
 
-# === CPack packaging ===
-  #Include packaging information
-   INCLUDE(InstallRequiredSystemLibraries)
+SET(OgreNewt_MAJOR_VERSION 2)
+SET(OgreNewt_MINOR_VERSION 0)
+SET(OgreNewt_PATCH_VERSION 0)
 
-  #Enable absolute paths
-   SET(CPACK_SET_DESTDIR "ON")
+SET(CPACK_PACKAGE_VERSION_MAJOR ${OgreNewt_MAJOR_VERSION})
+SET(CPACK_PACKAGE_VERSION_MINOR ${OgreNewt_MINOR_VERSION})
+SET(CPACK_PACKAGE_VERSION_PATCH ${OgreNewt_PATCH_VERSION})
 
-  # General package-information [mandatory]
-   SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "OgreNewt stellt die Funktionen der Newton Bibliothek f?r OGRE3D bereit")
-   SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
-   SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")
+IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+	SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
+ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
+	SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
+ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
 
-  # General package-information [optional]
-   SET(CPACK_PACKAGE_NAME "OgreNewt")
-   #SET(CPACK_PACKAGE_FILE_NAME "name-version-something-else-to-add")
+SET(CPACK_SOURCE_GENERATOR "TBZ2;ZIP")
+SET(CPACK_SOURCE_PACKAGE_FILE_NAME
+"${CMAKE_PROJECT_NAME}-${OgreNewt_MAJOR_VERSION}.${OgreNewt_MINOR_VERSION}.${OgreNewt_PATCH_VERSION}")
 
-  # Package version information [mandatory]
-   SET(CPACK_PACKAGE_VERSION_MAJOR "2")
-   SET(CPACK_PACKAGE_VERSION_MINOR "0")
-   SET(CPACK_PACKAGE_VERSION_PATCH "0")
+IF(WIN32 AND NOT UNIX)
+	# TEMPLATE - Not Tested!
+	# There is a bug in NSI that does not handle full unix paths properly. Make
+	# sure there is at least one set of four (4) backlasshes.
+	SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
+	SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\OgreNewt2_setup.exe")
+	SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} OgreNewt2")
+	SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
+	SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
+	SET(CPACK_NSIS_CONTACT "contact at rastullahs-lockenpracht.de")
+	SET(CPACK_NSIS_MODIFY_PATH ON)
+ELSE(WIN32 AND NOT UNIX)
+	SET(CPACK_STRIP_FILES "bin/OgrewNewt")
+	SET(CPACK_SOURCE_STRIP_FILES "")
+ENDIF(WIN32 AND NOT UNIX)
 
-  # Architecture and Platform [mandatory]
-   IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
-     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
-   ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
-     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
-   ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+#Enable absolute paths
+SET(CPACK_SET_DESTDIR "ON")
 
-  # ReadMe/License/Copyright etc... [optional]
-   #SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
-   #SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt")
+# Include required cmake macros
+INCLUDE(FeatureSummary)
+INCLUDE(InstallRequiredSystemLibraries)
+INCLUDE(CPack)
 
-# === CMake Main ===
-
-# Version information
-SET(OgreNewt_MAJOR_VERSION 2)
-SET(OgreNewt_MINOR_VERSION 0)
-SET(OgreNewt_PATCH_VERSION 0)
-
 # Add directory with OgreNewt's own macro definitions
 # (checked before ${CMAKE_ROOT}/Modules)
 SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
@@ -53,6 +58,11 @@
 FIND_PACKAGE(OGRE 1.4 REQUIRED)
 FIND_PACKAGE(Newton 2.0 REQUIRED)
 
+# Compile settings for build types
+SET(CMAKE_CXX_FLAGS_DEBUG "-O0 -g3 -fno-inline")
+SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g3")
+SET(CMAKE_CXX_FLAGS_MINSIZEREL "-Os")
+
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/inc
 ${OGRE_INCLUDE_DIRS}
@@ -98,35 +108,11 @@
 inc/OgreNewt_Joint.h inc/OgreNewt_MaterialID.h inc/OgreNewt_MaterialPair.h
 inc/OgreNewt_Prerequisites.h inc/OgreNewt_RayCast.h inc/OgreNewt_Tools.h
 inc/OgreNewt_Vehicle.h inc/OgreNewt_World.h
-DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
+DESTINATION ${CMAKE_INSTALL_PREFIX}/include/OgreNewt)
 
 IF(NOT WIN32)
 	INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/OgreNewt.pc
 	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
 ENDIF(NOT WIN32)
 
-# === CPack package creation / installation ===
-
-  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
-  #SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "OgreNewt 2.0")
-  IF(WIN32 AND NOT UNIX)
-    # TEMPLATE - Not Tested!
-    # There is a bug in NSI that does not handle full unix paths properly. Make
-    # sure there is at least one set of four (4) backlasshes.
-    SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
-    SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\OgreNewt2_setup.exe")
-    SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} OgreNewt2")
-    SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
-    SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
-    SET(CPACK_NSIS_CONTACT "contact at rastullahs-lockenpracht.de")
-    SET(CPACK_NSIS_MODIFY_PATH ON)
-  ELSE(WIN32 AND NOT UNIX)
-    SET(CPACK_STRIP_FILES "bin/OgrewNewt")
-    SET(CPACK_SOURCE_STRIP_FILES "")
-  ENDIF(WIN32 AND NOT UNIX)
-
-#SET(CPACK_PACKAGE_EXECUTABLES "OgreNewt" "OgreNewt2.0")
-
-INCLUDE(CPack)
-
 PRINT_ENABLED_FEATURES()

Modified: dependencies/OgreNewt_ngt/cmake/FindNewton.cmake
===================================================================
--- dependencies/OgreNewt_ngt/cmake/FindNewton.cmake	2009-01-04 22:09:44 UTC (rev 4688)
+++ dependencies/OgreNewt_ngt/cmake/FindNewton.cmake	2009-01-05 12:03:25 UTC (rev 4689)
@@ -60,7 +60,6 @@
 	STRING(REGEX MATCH "NEWTON_MAJOR_VERSION"
 	       NEWTON_VERSION_EXISTS "${_NEWTON_NEWTON_H_CONTENTS}")
 	IF("${NEWTON_VERSION_EXISTS}" STREQUAL "NEWTON_MAJOR_VERSION")
-		MESSAGE(STATUS "We should be here if NEWTON_VERSION_EXISTS is not empty")
 		STRING(REGEX REPLACE ".*#define NEWTON_MAJOR_VERSION ([0-9]+).*" "\\1"
 		       NEWTON_MAJOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
 		STRING(REGEX REPLACE ".*#define NEWTON_MINOR_VERSION ([0-9]+).*" "\\1"



From alassion at mail.berlios.de  Mon Jan  5 18:00:49 2009
From: alassion at mail.berlios.de (alassion at mail.berlios.de)
Date: Mon, 5 Jan 2009 18:00:49 +0100
Subject: [Dsa-hl-svn] r4690 - dependencies/opensteer
Message-ID: <200901051700.n05H0nEY007374@sheep.berlios.de>

Author: alassion
Date: 2009-01-05 18:00:47 +0100 (Mon, 05 Jan 2009)
New Revision: 4690

Modified:
   dependencies/opensteer/CMakeLists.txt
Log:


Modified: dependencies/opensteer/CMakeLists.txt
===================================================================
--- dependencies/opensteer/CMakeLists.txt	2009-01-05 12:03:25 UTC (rev 4689)
+++ dependencies/opensteer/CMakeLists.txt	2009-01-05 17:00:47 UTC (rev 4690)
@@ -1,50 +1,54 @@
 PROJECT(OpenSteer)
 
-CMAKE_MINIMUM_REQUIRED(VERSION 2.6 FATAL_ERROR)
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
 
-# Include required cmake macros
-INCLUDE(FeatureSummary)
+# Package and version information
+SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "OpenSteer Info goes here")
+SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
+SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")
 
-# === CPack packaging ===
-  #Include packaging information
-   INCLUDE(InstallRequiredSystemLibraries)
+SET(OpenSteer_MAJOR_VERSION 0)
+SET(OpenSteer_MINOR_VERSION 9)
+SET(OpenSteer_PATCH_VERSION 0)
 
-  #Enable absolute paths
-   SET(CPACK_SET_DESTDIR "ON")
+SET(CPACK_PACKAGE_VERSION_MAJOR ${OpenSteer_MAJOR_VERSION})
+SET(CPACK_PACKAGE_VERSION_MINOR ${OpenSteer_MINOR_VERSION})
+SET(CPACK_PACKAGE_VERSION_PATCH ${OpenSteer_PATCH_VERSION})
 
-  # General package-information [mandatory]
-   SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "opensteer info")
-   SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
-   SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")
+IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+	SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
+ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
+	SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
+ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
 
-  # General package-information [optional]
-   SET(CPACK_PACKAGE_NAME "opensteer")
-   #SET(CPACK_PACKAGE_FILE_NAME "name-version-something-else-to-add")
+SET(CPACK_SOURCE_GENERATOR "TBZ2;ZIP")
+SET(CPACK_SOURCE_PACKAGE_FILE_NAME
+"${CMAKE_PROJECT_NAME}-${OpenSteer_MAJOR_VERSION}.${OpenSteer_MINOR_VERSION}.${OpenSteer_PATCH_VERSION}")
 
-  # Package version information [mandatory]
-   SET(CPACK_PACKAGE_VERSION_MAJOR "0")
-   SET(CPACK_PACKAGE_VERSION_MINOR "9")
-   SET(CPACK_PACKAGE_VERSION_PATCH "0")
+IF(WIN32 AND NOT UNIX)
+	# TEMPLATE - Not Tested!
+	# There is a bug in NSI that does not handle full unix paths properly. Make
+	# sure there is at least one set of four (4) backlasshes.
+	SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
+	SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\OpenSteer_setup.exe")
+	SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} OpenSteer")
+	SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
+	SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
+	SET(CPACK_NSIS_CONTACT "contact at rastullahs-lockenpracht.de")
+	SET(CPACK_NSIS_MODIFY_PATH ON)
+ELSE(WIN32 AND NOT UNIX)
+	SET(CPACK_STRIP_FILES "bin/OpenSteer")
+	SET(CPACK_SOURCE_STRIP_FILES "")
+ENDIF(WIN32 AND NOT UNIX)
 
-  # Architecture and Platform [mandatory]
-   IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
-     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
-   ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
-     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
-   ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+#Enable absolute paths
+SET(CPACK_SET_DESTDIR "ON")
 
-  # ReadMe/License/Copyright etc... [optional]
-   #SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
-   #SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt")
+# Include required cmake macros
+INCLUDE(FeatureSummary)
+INCLUDE(InstallRequiredSystemLibraries)
+INCLUDE(CPack)
 
-# === CMake Main ===
-
-
-# Version information
-SET(OpenSteer_MAJOR_VERSION 0)
-SET(OpenSteer_MINOR_VERSION 9)
-SET(OpenSteer_PATCH_VERSION 0)
-
 # Add directory with OpenSteer's own macro definitions
 # (checked before ${CMAKE_ROOT}/Modules)
 SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
@@ -110,28 +114,4 @@
 	        DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/pkgconfig)
 ENDIF(NOT WIN32)
 
-# === CPack package creation / installation ===
-
-  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
-  #SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "opensteer 0.9.0")
-  IF(WIN32 AND NOT UNIX)
-    # TEMPLATE - Not Tested!
-    # There is a bug in NSI that does not handle full unix paths properly. Make
-    # sure there is at least one set of four (4) backlasshes.
-    SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
-    SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\opensteer_setup.exe")
-    SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} opensteer")
-    SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
-    SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
-    SET(CPACK_NSIS_CONTACT "teall.hartmann at web.de")
-    SET(CPACK_NSIS_MODIFY_PATH ON)
-  ELSE(WIN32 AND NOT UNIX)
-    SET(CPACK_STRIP_FILES "bin/opensteer")
-    SET(CPACK_SOURCE_STRIP_FILES "")
-  ENDIF(WIN32 AND NOT UNIX)
-
-#SET(CPACK_PACKAGE_EXECUTABLES "opensteer" "opensteer")
-
-INCLUDE(CPack)
-
 PRINT_ENABLED_FEATURES()



From tedil at mail.berlios.de  Mon Jan  5 18:15:17 2009
From: tedil at mail.berlios.de (tedil at mail.berlios.de)
Date: Mon, 5 Jan 2009 18:15:17 +0100
Subject: [Dsa-hl-svn] r4691 - rl/branches/newton20
Message-ID: <200901051715.n05HFHXL010848@sheep.berlios.de>

Author: tedil
Date: 2009-01-05 18:15:11 +0100 (Mon, 05 Jan 2009)
New Revision: 4691

Modified:
   rl/branches/newton20/CMakeLists.txt
Log:
Cleaned up cmake package generation. Binary packages can now be 
generated by invoking 'cpack -G DEB" for debian-based systems resp. 
'cpack -G RPM' for rpm using systems. Source packages can be generated 
via 'make package_source'


Modified: rl/branches/newton20/CMakeLists.txt
===================================================================
--- rl/branches/newton20/CMakeLists.txt	2009-01-05 17:00:47 UTC (rev 4690)
+++ rl/branches/newton20/CMakeLists.txt	2009-01-05 17:15:11 UTC (rev 4691)
@@ -2,49 +2,53 @@
 
 CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
 
-# Include required cmake macros
-INCLUDE(FeatureSummary)
+# Package and version information
+SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Rastullahs Lockenpracht ist ein auf DSA Regeln basierendes (Rollen-)Spiel")
+SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
+SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")
 
-# === CPack packaging ===
-  #Include packaging information
-   INCLUDE(InstallRequiredSystemLibraries)
+SET(RL_MAJOR_VERSION 0)
+SET(RL_MINOR_VERSION 3)
+SET(RL_PATCH_VERSION 0)
 
-  #Enable absolute paths
-   SET(CPACK_SET_DESTDIR "ON")
+SET(CPACK_PACKAGE_VERSION_MAJOR ${RL_MAJOR_VERSION})
+SET(CPACK_PACKAGE_VERSION_MINOR ${RL_MINOR_VERSION})
+SET(CPACK_PACKAGE_VERSION_PATCH ${RL_PATCH_VERSION})
 
-  # General package-information [mandatory]
-   SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Rastullahs Lockenpracht ist ein auf DSA Regeln basierendes (Rollen-)Spiel")
-   SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
-   SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")
+IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+	SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
+ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
+	SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
+ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
 
-  # General package-information [optional]
-   SET(CPACK_PACKAGE_NAME "rastullah")
-   #SET(CPACK_PACKAGE_FILE_NAME "rastullah-0.3.0-something-else-to-add")
+SET(CPACK_SOURCE_GENERATOR "TBZ2;ZIP")
+SET(CPACK_SOURCE_PACKAGE_FILE_NAME
+"${CMAKE_PROJECT_NAME}-${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}")
 
-  # Package version information [mandatory]
-   SET(CPACK_PACKAGE_VERSION_MAJOR "0")
-   SET(CPACK_PACKAGE_VERSION_MINOR "3")
-   SET(CPACK_PACKAGE_VERSION_PATCH "0")
+IF(WIN32 AND NOT UNIX)
+	# TEMPLATE - Not Tested!
+	# There is a bug in NSI that does not handle full unix paths properly. Make
+	# sure there is at least one set of four (4) backlasshes.
+	SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
+	SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\RL_setup.exe")
+	SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} RL")
+	SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
+	SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
+	SET(CPACK_NSIS_CONTACT "contact at rastullahs-lockenpracht.de")
+	SET(CPACK_NSIS_MODIFY_PATH ON)
+ELSE(WIN32 AND NOT UNIX)
+	SET(CPACK_STRIP_FILES "bin/RL")
+	SET(CPACK_SOURCE_STRIP_FILES "")
+ENDIF(WIN32 AND NOT UNIX)
 
-  # Architecture and Platform [mandatory]
-   IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
-     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
-   ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
-     SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
-   ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+#Enable absolute paths
+SET(CPACK_SET_DESTDIR "ON")
 
-  # ReadMe/License/Copyright etc... [optional]
-   #SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/ReadMe.txt")
-   #SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/Copyright.txt")
+# Include required cmake macros
+INCLUDE(FeatureSummary)
+INCLUDE(InstallRequiredSystemLibraries)
+INCLUDE(CPack)
 
-# === CMake Main ===
-
-
-# Version information
-SET(RL_MAJOR_VERSION 0)
-SET(RL_MINOR_VERSION 3)
-SET(RL_PATCH_VERSION 0)
-
 # Add directory with RL's own macro definitions
 # (checked before ${CMAKE_ROOT}/Modules)
 SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
@@ -87,28 +91,4 @@
 ADD_SUBDIRECTORY(engine)
 ADD_SUBDIRECTORY(plugins)
 
-# === CPack package creation / installation ===
-
-  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
-  #SET(CPACK_PACKAGE_INSTALL_REGISTRY_KEY "Rastullahs Lockenpracht 0.3")
-  IF(WIN32 AND NOT UNIX)
-    # TEMPLATE - Not Tested!
-    # There is a bug in NSI that does not handle full unix paths properly. Make
-    # sure there is at least one set of four (4) backlasshes.
-    SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
-    SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\rastullah_setup.exe")
-    SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} rastullah")
-    SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
-    SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
-    SET(CPACK_NSIS_CONTACT "contact at rastullahs-lockenpracht.de")
-    SET(CPACK_NSIS_MODIFY_PATH ON)
-  ELSE(WIN32 AND NOT UNIX)
-    SET(CPACK_STRIP_FILES "bin/rastullah")
-    SET(CPACK_SOURCE_STRIP_FILES "")
-  ENDIF(WIN32 AND NOT UNIX)
-
-#SET(CPACK_PACKAGE_EXECUTABLES "rastullah" "rastullah")
-
-INCLUDE(CPack)
-
 PRINT_ENABLED_FEATURES()



From chrber at mail.berlios.de  Mon Jan  5 20:56:43 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Mon, 5 Jan 2009 20:56:43 +0100
Subject: [Dsa-hl-svn] r4692 - rl/trunk/engine
Message-ID: <200901051956.n05Juhcd011305@sheep.berlios.de>

Author: chrber
Date: 2009-01-05 20:56:42 +0100 (Mon, 05 Jan 2009)
New Revision: 4692

Added:
   rl/trunk/engine/CMakeLists.txt
Log:
Added missing cmake file (Rastullah should compile now)


Added: rl/trunk/engine/CMakeLists.txt
===================================================================
--- rl/trunk/engine/CMakeLists.txt	2009-01-05 17:15:11 UTC (rev 4691)
+++ rl/trunk/engine/CMakeLists.txt	2009-01-05 19:56:42 UTC (rev 4692)
@@ -0,0 +1,10 @@
+# Library directories
+ADD_SUBDIRECTORY(common)
+ADD_SUBDIRECTORY(ai)
+ADD_SUBDIRECTORY(ui)
+ADD_SUBDIRECTORY(core)
+ADD_SUBDIRECTORY(rules)
+ADD_SUBDIRECTORY(script)
+
+# Main program directory
+ADD_SUBDIRECTORY(startup)
\ No newline at end of file



From timm at mail.berlios.de  Mon Jan  5 21:52:40 2009
From: timm at mail.berlios.de (timm at mail.berlios.de)
Date: Mon, 5 Jan 2009 21:52:40 +0100
Subject: [Dsa-hl-svn] r4693 - modules/kanalisation/maps
Message-ID: <200901052052.n05Kqedl016840@sheep.berlios.de>

Author: timm
Date: 2009-01-05 21:52:33 +0100 (Mon, 05 Jan 2009)
New Revision: 4693

Modified:
   modules/kanalisation/maps/kanalisation.material
Log:
added whitespaces

Modified: modules/kanalisation/maps/kanalisation.material
===================================================================
--- modules/kanalisation/maps/kanalisation.material	2009-01-05 19:56:42 UTC (rev 4692)
+++ modules/kanalisation/maps/kanalisation.material	2009-01-05 20:52:33 UTC (rev 4693)
@@ -1,7 +1,7 @@
 import Basic_Normalmapping_kana from Normalmapping.program
 import Wassershader_Kanalisation from Wassershader_Kanalisation.program
 
-material matschboden/SOLID/TEX/boden_kana.png: Basic_Normalmapping_kana
+material matschboden/SOLID/TEX/boden_kana.png : Basic_Normalmapping_kana
 {
 set_texture_alias DiffuseMap boden_kana.png
 set_texture_alias NormalMap boden_kana_normal.png
@@ -26,18 +26,19 @@
 	    filtering linear linear linear 
          } 
       } 
-   } 
-material wurzeln_02/SOLID/TEX/baumstamm_kana.png: Basic_Normalmapping_kana
+   } 
+}
+material wurzeln_02/SOLID/TEX/baumstamm_kana.png : Basic_Normalmapping_kana
 {
 set_texture_alias DiffuseMap baumstamm_kana.png
 set_texture_alias NormalMap baumstamm_kana_normal.png
 }
-material treppe_02/SOLID/TEX/wand_kana.png: Basic_Normalmapping_kana
+material treppe_02/SOLID/TEX/wand_kana.png : Basic_Normalmapping_kana
 {
 set_texture_alias DiffuseMap wand_kana.png
 set_texture_alias NormalMap wand_kana_normal.png
 }
-material fass_stehend/SOLID/TEX/fass_kanalisation.png: Basic_Normalmapping_kana
+material fass_stehend/SOLID/TEX/fass_kanalisation.png : Basic_Normalmapping_kana
 {
 set_texture_alias DiffuseMap fass_kanalisation.png
 set_texture_alias NormalMap fass_kanalisation_normal.png



From tedil at mail.berlios.de  Mon Jan  5 22:55:58 2009
From: tedil at mail.berlios.de (tedil at mail.berlios.de)
Date: Mon, 5 Jan 2009 22:55:58 +0100
Subject: [Dsa-hl-svn] r4694 - dependencies/OgreNewt
Message-ID: <200901052155.n05LtwEh022423@sheep.berlios.de>

Author: tedil
Date: 2009-01-05 22:55:57 +0100 (Mon, 05 Jan 2009)
New Revision: 4694

Modified:
   dependencies/OgreNewt/CMakeLists.txt
Log:
Added CPack packaging support.
(Reminder: .debs can be build by invoking 'cpack -G DEB', source 
archives through 'make package_source')


Modified: dependencies/OgreNewt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt/CMakeLists.txt	2009-01-05 20:52:33 UTC (rev 4693)
+++ dependencies/OgreNewt/CMakeLists.txt	2009-01-05 21:55:57 UTC (rev 4694)
@@ -1,15 +1,54 @@
-PROJECT(OgreNewt)
+cd ..PROJECT(OgreNewt)
 
 CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
 
-# Include required cmake macros
-INCLUDE(FeatureSummary)
+# Package and version information
+SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Ogre Bindings for the Newton Physics SDK")
+SET(CPACK_PACKAGE_VENDOR "Team Pantheon")
+SET(CPACK_PACKAGE_CONTACT "contact at rastullahs-lockenpracht.de")
 
-# Version information
 SET(OgreNewt_MAJOR_VERSION 1)
 SET(OgreNewt_MINOR_VERSION 53)
 SET(OgreNewt_PATCH_VERSION 0)
 
+SET(CPACK_PACKAGE_VERSION_MAJOR ${OgreNewt_MAJOR_VERSION})
+SET(CPACK_PACKAGE_VERSION_MINOR ${OgreNewt_MINOR_VERSION})
+SET(CPACK_PACKAGE_VERSION_PATCH ${OgreNewt_PATCH_VERSION})
+
+IF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+	SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE amd64)
+ELSEIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
+	SET(CPACK_DEBIAN_PACKAGE_ARCHITECTURE i386)
+ENDIF(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64")
+
+SET(CPACK_SOURCE_GENERATOR "TBZ2;ZIP")
+SET(CPACK_SOURCE_PACKAGE_FILE_NAME
+"${CMAKE_PROJECT_NAME}-${OgreNewt_MAJOR_VERSION}.${OgreNewt_MINOR_VERSION}.${OgreNewt_PATCH_VERSION}")
+
+IF(WIN32 AND NOT UNIX)
+	# TEMPLATE - Not Tested!
+	# There is a bug in NSI that does not handle full unix paths properly. Make
+	# sure there is at least one set of four (4) backlasshes.
+	SET(CPACK_PACKAGE_ICON "${CMake_SOURCE_DIR}/Utilities/Release\\\\InstallIcon.bmp")
+	SET(CPACK_NSIS_INSTALLED_ICON_NAME "bin\\\\OgreNewt2_setup.exe")
+	SET(CPACK_NSIS_DISPLAY_NAME "${CPACK_PACKAGE_INSTALL_DIRECTORY} OgreNewt2")
+	SET(CPACK_NSIS_HELP_LINK "http:\\\\\\\\www.rastullahs-lockenpracht.de")
+	SET(CPACK_NSIS_URL_INFO_ABOUT "http:\\\\\\\\www.wiki.team-pantheon.de")
+	SET(CPACK_NSIS_CONTACT "contact at rastullahs-lockenpracht.de")
+	SET(CPACK_NSIS_MODIFY_PATH ON)
+ELSE(WIN32 AND NOT UNIX)
+	SET(CPACK_STRIP_FILES "bin/OgrewNewt")
+	SET(CPACK_SOURCE_STRIP_FILES "")
+ENDIF(WIN32 AND NOT UNIX)
+
+#Enable absolute paths
+SET(CPACK_SET_DESTDIR "ON")
+
+# Include required cmake macros
+INCLUDE(FeatureSummary)
+INCLUDE(InstallRequiredSystemLibraries)
+INCLUDE(CPack)
+
 # Add directory with OgreNewt's own macro definitions
 # (checked before ${CMAKE_ROOT}/Modules)
 SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)



From timm at mail.berlios.de  Tue Jan  6 16:35:46 2009
From: timm at mail.berlios.de (timm at mail.berlios.de)
Date: Tue, 6 Jan 2009 16:35:46 +0100
Subject: [Dsa-hl-svn] r4695 - rl/branches/persistence
Message-ID: <200901061535.n06FZkv6018056@sheep.berlios.de>

Author: timm
Date: 2009-01-06 16:35:32 +0100 (Tue, 06 Jan 2009)
New Revision: 4695

Added:
   rl/branches/persistence/CMakeLists.txt
Log:
added missing file

Copied: rl/branches/persistence/CMakeLists.txt (from rev 4694, rl/trunk/engine/CMakeLists.txt)



From chrber at mail.berlios.de  Wed Jan  7 12:25:13 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Wed, 7 Jan 2009 12:25:13 +0100
Subject: [Dsa-hl-svn] r4696 - in dependencies/OgreNewt_ngt: cmake inc src
Message-ID: <200901071125.n07BPDuP029973@sheep.berlios.de>

Author: chrber
Date: 2009-01-07 12:25:11 +0100 (Wed, 07 Jan 2009)
New Revision: 4696

Modified:
   dependencies/OgreNewt_ngt/cmake/FindNewton.cmake
   dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h
   dependencies/OgreNewt_ngt/src/OgreNewt_CollisionSerializer.cpp
Log:
Added a check for the Newton beta19 (as we only support this version now)
Adapted Newton 2.0-beta19 API changes


Modified: dependencies/OgreNewt_ngt/cmake/FindNewton.cmake
===================================================================
--- dependencies/OgreNewt_ngt/cmake/FindNewton.cmake	2009-01-06 15:35:32 UTC (rev 4695)
+++ dependencies/OgreNewt_ngt/cmake/FindNewton.cmake	2009-01-07 11:25:11 UTC (rev 4696)
@@ -65,6 +65,15 @@
 		STRING(REGEX REPLACE ".*#define NEWTON_MINOR_VERSION ([0-9]+).*" "\\1"
 		       NEWTON_MINOR_VERSION "${_NEWTON_NEWTON_H_CONTENTS}")
 		SET(NEWTON_VERSION "${NEWTON_MAJOR_VERSION}.${NEWTON_MINOR_VERSION}")
+
+		# Newton API beta version checks
+		STRING(REGEX MATCH "NewtonCollisionGetUserID"
+		       NEWTON_BETA19_API "${_NEWTON_NEWTON_H_CONTENTS}")
+		IF(NOT "${NEWTON_BETA19_API}" STREQUAL "NewtonCollisionGetUserID")
+			MESSAGE(SEND_ERROR "Newton 2.0 versions before beta19 are not supported.")
+		ELSE(NOT "${NEWTON_BETA19_API}" STREQUAL "NewtonCollisionGetUserID")
+			SET(NEWTON_VERSION "${NEWTON_VERSION}-beta19")
+		ENDIF(NOT "${NEWTON_BETA19_API}" STREQUAL "NewtonCollisionGetUserID")
 	ELSE("${NEWTON_VERSION_EXISTS}" STREQUAL "NEWTON_MAJOR_VERSION")
 		# We assume Newton 1.53
 		SET(NEWTON_VERSION "1.53")

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h	2009-01-06 15:35:32 UTC (rev 4695)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h	2009-01-07 11:25:11 UTC (rev 4696)
@@ -54,10 +54,10 @@
 		you can set different IDs for each piece in a compound collision object, and then use these IDs in a collision callback to
 		determine which part is currently colliding.
 	*/
-	void setUserID( unsigned id ) const { NewtonConvexCollisionSetUserID( m_col, id); }
+	void setUserID( unsigned id ) const { NewtonCollisionSetUserID( m_col, id); }
 
 	//! get user ID, for collision callback identification
-	unsigned getUserID() const { return NewtonConvexCollisionGetUserID( m_col ); }
+	unsigned getUserID() const { return NewtonCollisionGetUserID( m_col ); }
 
 	//! make unique
 	void makeUnique() { NewtonCollisionMakeUnique( m_world->getNewtonWorld(), m_col ); }

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_CollisionSerializer.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_CollisionSerializer.cpp	2009-01-06 15:35:32 UTC (rev 4695)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_CollisionSerializer.cpp	2009-01-07 11:25:11 UTC (rev 4696)
@@ -22,7 +22,7 @@
     {
       OGRE_EXCEPT(Ogre::Exception::ERR_INVALIDPARAMS, "Unable to open file " + filename + " for writing","CollisionSerializer::exportTreeCollision");
     }
-    NewtonCollisionSerialize(collision->getNewtonCollision(), &CollisionSerializer::_newtonSerializeCallback, this);
+    NewtonCollisionSerialize(collision->getWorld()->getNewtonWorld(), collision->getNewtonCollision(), &CollisionSerializer::_newtonSerializeCallback, this);
   }
 
 



From tedil at mail.berlios.de  Wed Jan  7 17:11:58 2009
From: tedil at mail.berlios.de (tedil at mail.berlios.de)
Date: Wed, 7 Jan 2009 17:11:58 +0100
Subject: [Dsa-hl-svn] r4697 - in modules/common/gui: imagesets schemes
Message-ID: <200901071611.n07GBw0b011694@sheep.berlios.de>

Author: tedil
Date: 2009-01-07 17:11:53 +0100 (Wed, 07 Jan 2009)
New Revision: 4697

Modified:
   modules/common/gui/imagesets/RastullahLook.imageset
   modules/common/gui/imagesets/RastullahLook.png
   modules/common/gui/schemes/RastullahLook.looknfeel
Log:
Replaced old gui with WIP metal/wood one, as to prevent data-loss as was 
experienced some time ago...


Modified: modules/common/gui/imagesets/RastullahLook.imageset
===================================================================
--- modules/common/gui/imagesets/RastullahLook.imageset	2009-01-07 11:25:11 UTC (rev 4696)
+++ modules/common/gui/imagesets/RastullahLook.imageset	2009-01-07 16:11:53 UTC (rev 4697)
@@ -1,305 +1,115 @@
-<?xml version="1.0" ?>
-<Imageset Name="RastullahLook-Images" Imagefile="RastullahLook.png" >
+<?xml version="1.0" encoding="UTF-8"?>
 
-    <!-- new in cegui0.5 -->
-    <Image Name="GenericBrush"  XPos="40" YPos="350" Width="1" Height="1" />
-
-    <!-- Rastullah/FrameWindow -->
-    <Image Name="WindowBackground" XPos="40" YPos="295" Width="5" Height="5" />    
-    <Image Name="WindowLeftEdge" XPos="30" YPos="302" Width="18" Height="2" />
-    <Image Name="WindowRightEdge" XPos="56" YPos="302" Width="18" Height="2" />
-    <Image Name="WindowTopEdge" XPos="51" YPos="281" Width="2" Height="18"  />
-    <Image Name="WindowBottomEdge" XPos="51" YPos="307" Width="2" Height="18" />
-    <Image Name="WindowTopLeft" XPos="30" YPos="281" Width="18" Height="18"   />
-    <Image Name="WindowTopRight" XPos="56" YPos="281" Width="18" Height="18"    />
-    <Image Name="WindowBottomLeft" XPos="30" YPos="307" Width="18" Height="18"   />
-    <Image Name="WindowBottomRight" XPos="56" YPos="307" Width="18" Height="18"   />
-    
-    <!-- Rastullah/Button -->
-    <Image Name="ButtonLeftNormal" XPos="78" YPos="281" Width="7" Height="17" />
-    <Image Name="ButtonMiddleNormal" XPos="88" YPos="281" Width="4" Height="17" />
-    <Image Name="ButtonRightNormal" XPos="95" YPos="281" Width="12" Height="17" />
-    <Image Name="ButtonLeftPushed"  XPos="78" YPos="301" Width="7" Height="17" />
-    <Image Name="ButtonMiddlePushed" XPos="88" YPos="301" Width="4" Height="17" />
-    <Image Name="ButtonRightPushed" XPos="95" YPos="301" Width="12" Height="17" />
-    <!-- Rastullah/Button (new with cegui0.5)-->
-    <Image Name="ButtonLeftHighlight" XPos="78" YPos="281" Width="7" Height="17" />
-    <Image Name="ButtonMiddleHighlight" XPos="88" YPos="281" Width="4" Height="17" />
-    <Image Name="ButtonRightHighlight" XPos="95" YPos="281" Width="12" Height="17" />
-    
-    <!-- Rastullah/Editbox -->
+<Imageset Name="RastullahLook-Images" Imagefile="RastullahLook.png" NativeHorzRes="800" NativeVertRes="600" >
+    <Image Name="MenuBar" XPos="325" YPos="260" Width="1" Height="26" />
+    <Image Name="MenuTop" XPos="2" YPos="1" Width="4" Height="4" />
+    <Image Name="MenuLeft" XPos="2" YPos="1" Width="4" Height="4" />
+    <Image Name="Container" XPos="290" YPos="260" Width="31" Height="31" />
+    <Image Name="MenuRight" XPos="2" YPos="1" Width="4" Height="4" />
+    <Image Name="StaticTop" XPos="112" YPos="257" Width="2" Height="4" />
+    <Image Name="Background" XPos="2" YPos="1" Width="4" Height="4" />
+    <Image Name="ListboxTop" XPos="112" YPos="257" Width="2" Height="4" />
+    <Image Name="MenuBottom" XPos="2" YPos="1" Width="4" Height="4" />
+    <Image Name="MenuMiddle" XPos="2" YPos="1" Width="4" Height="4" />
+    <Image Name="MouseArrow" XPos="1" YPos="283" Width="18" Height="20" />
+    <Image Name="StaticLeft" XPos="106" YPos="263" Width="4" Height="2" />
     <Image Name="EditBoxLeft" XPos="42" YPos="331" Width="8" Height="16" />
-    <Image Name="EditBoxMiddle" XPos="53" YPos="331" Width="52" Height="16" />
-    <Image Name="EditBoxRight" XPos="108" YPos="331" Width="5" Height="16" />
-    <Image Name="EditBoxCarat" XPos="117" YPos="331" Width="3" Height="16" />
-
-	<!-- Rastullah/Container -->
-	<Image Name="Container" XPos="290" YPos="260" Width="30" Height="30" />
-	
-	<!-- Rastullah/ItemBackground -->
-	<Image Name="ItemBackgroundTL" XPos="290" YPos="295" Width="8" Height="8" />
-	<Image Name="ItemBackgroundT" XPos="298" YPos="295" Width="15" Height="8" />
-	<Image Name="ItemBackgroundTR" XPos="313" YPos="295" Width="8" Height="8" />
-	<Image Name="ItemBackgroundR" XPos="313" YPos="303" Width="8" Height="15" />
-	<Image Name="ItemBackgroundBR" XPos="313" YPos="317" Width="8" Height="8" />
-	<Image Name="ItemBackgroundB" XPos="298" YPos="317" Width="15" Height="8" />
-	<Image Name="ItemBackgroundBL" XPos="290" YPos="317" Width="8" Height="8" />
-	<Image Name="ItemBackgroundL" XPos="290" YPos="303" Width="8" Height="15" />
-	<Image Name="ItemBackgroundBG" XPos="298" YPos="303" Width="15" Height="15" />
-
-    <!-- Rastullah/StatusBar -->
-    <Image Name="StatusBarLeft" XPos="147" YPos="320" Width="4" Height="13" />
-    <Image Name="StatusBarMiddle" XPos="154" YPos="320" Width="1" Height="13" />
-    <Image Name="StatusBarRight" XPos="158" YPos="320" Width="4" Height="13" />
-    <Image Name="StatusBarFillingLeft" XPos="166" YPos="320" Width="6" Height="13" />
-    <Image Name="StatusBarFillingRight" XPos="202" YPos="320" Width="6" Height="13" />
-    <Image Name="StatusBarFilling" XPos="177" YPos="320" Width="4" Height="13" />
-
-
-    <Image Name="TitlebarLeft" XPos="113" YPos="294" Width="22" Height="23" />
-    <Image Name="TitlebarMiddle" XPos="138" YPos="294" Width="7" Height="23" />
-    <Image Name="TitlebarRight" XPos="148" YPos="294" Width="73" Height="23" />
-
-    <!-- new in cegui0.5 -->
-    <Image Name="NewTitlebarLeft" XPos="113" YPos="294" Width="22" Height="23" />
-    <Image Name="NewTitlebarMiddle" XPos="138" YPos="294" Width="7" Height="23" />
-    <Image Name="NewTitlebarRight" XPos="148" YPos="294" Width="73" Height="23" />
-
-
-    <Image Name="SysAreaMiddle" XPos="224" YPos="294" Width="29" Height="23" />
-    <Image Name="SysAreaRight" XPos="256" YPos="294" Width="12" Height="23" />
-    
-    <Image Name="StaticLeft" XPos="106" YPos="263" Width="4" Height="2"  />
-    <Image Name="StaticRight" XPos="116" YPos="263" Width="4" Height="2"   />
-    <Image Name="StaticTop" XPos="112" YPos="257" Width="2" Height="4"   />
-    <Image Name="StaticBottom" XPos="112" YPos="267" Width="2" Height="4"  />
-    <Image Name="StaticTopLeft" XPos="106" YPos="257" Width="3" Height="3"   />
-    <Image Name="StaticTopRight" XPos="117" YPos="257" Width="3" Height="3"   />
-    <Image Name="StaticBottomLeft" XPos="106" YPos="268" Width="3" Height="3"   />
-    <Image Name="StaticBottomRight" XPos="117" YPos="268" Width="3" Height="3"   />
-    
-    <Image Name="StaticBackdrop" XPos="111" YPos="262" Width="4" Height="4" />
-    
-
-
-    <Image Name="VertScrollBarSegment" XPos="163" YPos="275" Width="7" Height="4" />
-    
-    <Image Name="VertScrollTop" XPos="182" YPos="2" Width="20" Height="8" />
-    <Image Name="VertScrollMiddle" XPos="182" YPos="12" Width="20" Height="8" />
-    <Image Name="VertScrollBottom" XPos="182" YPos="22" Width="20" Height="8" />
-
-    <Image Name="VertScrollThumbNormal" XPos="214" YPos="2" Width="8" Height="24" />
-    <Image Name="VertScrollThumbHover" XPos="224" YPos="2" Width="8" Height="24" />
-    <Image Name="VertScrollUpNormal" XPos="196" YPos="32" Width="12" Height="12" />
-    <Image Name="VertScrollDownNormal" XPos="182" YPos="32" Width="12" Height="12" />
-    <Image Name="VertScrollUpHover" XPos="196" YPos="46" Width="12" Height="12" />
-    <Image Name="VertScrollDownHover" XPos="182" YPos="46" Width="12" Height="12" />
-
-
-    <Image Name="MiniVertScrollBarSegment" XPos="163" YPos="275" Width="7" Height="4" />
-    
-    <Image Name="MiniVertScrollThumbNormal" XPos="1" YPos="495" Width="11" Height="26" />
-    <Image Name="MiniVertScrollThumbTopNormal" XPos="122" YPos="277" Width="11" Height="10" />
-    <Image Name="MiniVertScrollThumbMiddleNormal" XPos="136" YPos="279" Width="11" Height="7" />
-    <Image Name="MiniVertScrollThumbBottomNormal" XPos="149" YPos="279" Width="11" Height="9" />
-    
-    <Image Name="MiniVertScrollThumbHover" XPos="1" YPos="495" Width="11" Height="26" />
-    <Image Name="MiniVertScrollThumbTopHover" XPos="122" YPos="277" Width="11" Height="10" />
-    <Image Name="MiniVertScrollThumbMiddleHover" XPos="136" YPos="279" Width="11" Height="7" />
-    <Image Name="MiniVertScrollThumbBottomHover" XPos="149" YPos="279" Width="11" Height="9" />
-    
-    <Image Name="MiniVertScrollUpNormal" XPos="123" YPos="257" Width="11" Height="13" />
-    <Image Name="MiniVertScrollDownNormal" XPos="136" YPos="259" Width="11" Height="13" />
-    
-    <Image Name="MiniVertScrollUpHover" XPos="123" YPos="257" Width="11" Height="13" />
-    <Image Name="MiniVertScrollDownHover" XPos="136" YPos="259" Width="11" Height="13" />
-       
-
-    <Image Name="HorzScrollBarSegment" XPos="174" YPos="274" Width="4" Height="7" />
-    
-    <Image Name="HorzScrollThumbNormal" XPos="1" YPos="500" Width="26" Height="11" />
-    <Image Name="HorzScrollThumbLeftNormal" XPos="220" YPos="259" Width="9" Height="11" />
-    <Image Name="HorzScrollThumbMiddleNormal" XPos="232" YPos="259" Width="7" Height="11" />
-    <Image Name="HorzScrollThumbRightNormal" XPos="242" YPos="259" Width="10" Height="11" />
-    
-    <Image Name="HorzScrollThumbHover" XPos="1" YPos="500" Width="26" Height="11" />
-    <Image Name="HorzScrollThumbLeftHover" XPos="220" YPos="259" Width="9" Height="11" />
-    <Image Name="HorzScrollThumbMiddleHover" XPos="232" YPos="259" Width="7" Height="11" />
-    <Image Name="HorzScrollThumbRightHover" XPos="242" YPos="259" Width="10" Height="11" />
-    
-    <Image Name="HorzScrollLeftNormal" XPos="181" YPos="259" Width="13" Height="11" />
-    <Image Name="HorzScrollRightNormal" XPos="164" YPos="259" Width="13" Height="11" />
-    
-    <Image Name="HorzScrollLeftHover" XPos="181" YPos="259" Width="13" Height="11" />
-    <Image Name="HorzScrollRightHover" XPos="164" YPos="259" Width="13" Height="11" />
-
-    <!-- new in cegui0.5 -->
-    <Image Name="MiniHorzScrollBarSegment" XPos="174" YPos="274" Width="4" Height="7" />
-    
-    <Image Name="MiniHorzScrollThumbNormal" XPos="1" YPos="500" Width="26" Height="11" />
-    <Image Name="MiniHorzScrollThumbLeftNormal" XPos="220" YPos="259" Width="9" Height="11" />
-    <Image Name="MiniHorzScrollThumbMiddleNormal" XPos="232" YPos="259" Width="7" Height="11" />
-    <Image Name="MiniHorzScrollThumbRightNormal" XPos="242" YPos="259" Width="10" Height="11" />
-    
-    <Image Name="MiniHorzScrollThumbHover" XPos="1" YPos="500" Width="26" Height="11" />
-    <Image Name="MiniHorzScrollThumbLeftHover" XPos="220" YPos="259" Width="9" Height="11" />
-    <Image Name="MiniHorzScrollThumbMiddleHover" XPos="232" YPos="259" Width="7" Height="11" />
-    <Image Name="MiniHorzScrollThumbRightHover" XPos="242" YPos="259" Width="10" Height="11" />
-    
-    <Image Name="MiniHorzScrollLeftNormal" XPos="181" YPos="259" Width="13" Height="11" />
-    <Image Name="MiniHorzScrollRightNormal" XPos="164" YPos="259" Width="13" Height="11" />
-    
-    <Image Name="MiniHorzScrollLeftHover" XPos="181" YPos="259" Width="13" Height="11" />
-    <Image Name="MiniHorzScrollRightHover" XPos="164" YPos="259" Width="13" Height="11" />
-
-
-
     <Image Name="ListboxLeft" XPos="106" YPos="263" Width="4" Height="2" />
-    <Image Name="ListboxRight" XPos="116" YPos="263" Width="4" Height="2"  />
-    <Image Name="ListboxTop" XPos="112" YPos="257" Width="2" Height="4" />
-    <Image Name="ListboxBottom" XPos="112" YPos="267" Width="2" Height="4" />
-    <Image Name="ListboxTopLeft" XPos="106" YPos="257" Width="3" Height="3" />
-    <Image Name="ListboxTopRight" XPos="117" YPos="257" Width="3" Height="3" />
-    <Image Name="ListboxBottomLeft" XPos="106" YPos="268" Width="3" Height="3" />
-    <Image Name="ListboxBottomRight" XPos="117" YPos="268" Width="3" Height="3" />
-    
-    <Image Name="ListboxBackdrop" XPos="111" YPos="262" Width="4" Height="4" />
-    <Image Name="ListboxSelectionBrush" XPos="40" YPos="350" Width="16" Height="16" />
-       
-    <Image Name="CloseButtonNormal" XPos="125" YPos="319" Width="15" Height="15" />
-    <Image Name="CloseButtonHover" XPos="125" YPos="319" Width="15" Height="15" />
-    <Image Name="CloseButtonPressed" XPos="125" YPos="319" Width="15" Height="15" />
-
-    <!-- new in cegui0.5 -->
-    <Image Name="NewCloseButtonNormal" XPos="125" YPos="319" Width="15" Height="15" />
-    <Image Name="NewCloseButtonHover" XPos="125" YPos="319" Width="15" Height="15" />
-    <Image Name="NewCloseButtonPressed" XPos="125" YPos="319" Width="15" Height="15" />
-    
-    <Image Name="MultiLineEditboxLeft" XPos="258" YPos="268" Width="8" Height="2" />
-    <Image Name="MultiLineEditboxRight" XPos="278" YPos="268" Width="5" Height="2" />
-    <Image Name="MultiLineEditboxTop" XPos="269" YPos="258" Width="6" Height="7" />
-    <Image Name="MultiLineEditboxBottom" XPos="269" YPos="273" Width="6" Height="5" />
-    <Image Name="MultiLineEditboxTopLeft" XPos="258" YPos="258" Width="8" Height="7" />
-    <Image Name="MultiLineEditboxTopRight" XPos="278" YPos="258" Width="5" Height="7" />
-    <Image Name="MultiLineEditboxBottomLeft" XPos="258" YPos="273" Width="8" Height="5" />
-    <Image Name="MultiLineEditboxBottomRight" XPos="278" YPos="273" Width="5" Height="5" />
-    <Image Name="MultiLineEditboxBackdrop" XPos="1" YPos="1" Width="254" Height="254" />
-    <Image Name="MultiLineEditboxSelectionBrush" XPos="40" YPos="350" Width="16" Height="16" />
-
-    <Image Name="TransparentMultiLineEditboxLeft" XPos="51" YPos="296" Width="2" Height="2" />
-    <Image Name="TransparentMultiLineEditboxRight" XPos="51" YPos="296" Width="2" Height="2" />
-    <Image Name="TransparentMultiLineEditboxTop" XPos="51" YPos="296" Width="2" Height="2" />
-    <Image Name="TransparentMultiLineEditboxBottom" XPos="51" YPos="296" Width="2" Height="2" />
-    <Image Name="TransparentMultiLineEditboxTopLeft" XPos="51" YPos="296" Width="2" Height="2" />
-    <Image Name="TransparentMultiLineEditboxTopRight" XPos="51" YPos="296" Width="2" Height="2" />
-    <Image Name="TransparentMultiLineEditboxBottomLeft" XPos="51" YPos="296" Width="2" Height="2" />
-    <Image Name="TransparentMultiLineEditboxBottomRight" XPos="51" YPos="296" Width="2" Height="2" />
-    <Image Name="TransparentMultiLineEditboxBackdrop" XPos="51" YPos="296" Width="2" Height="2" />
-    <Image Name="TransparentMultiLineEditboxSelectionBrush" XPos="51" YPos="296" Width="2" Height="2" />
-    
-    <Image Name="MouseTarget" XPos="1" YPos="283" Width="15" Height="20" />
-    <Image Name="MouseArrow" XPos="1" YPos="283" Width="15" Height="20" />
-    <Image Name="MouseMoveCursor" XPos="1" YPos="283" Width="15" Height="20"   />
-    <Image Name="MouseEsWeCursor" XPos="4" YPos="305" Width="23" Height="12" XOffset="-8" YOffset="5"  />
-    <Image Name="MouseNoSoCursor" XPos="1" YPos="318" Width="11" Height="23" XOffset="-4" YOffset="-10"  />
-    <Image Name="MouseNeSwCursor" XPos="2" YPos="342" Width="17" Height="17" XOffset="-7" YOffset="-6"  />
-    <Image Name="MouseNwSeCursor" XPos="20" YPos="342" Width="17" Height="17" XOffset="-7" YOffset="-6"  />
-    <Image Name="MouseTextBar" XPos="15" YPos="321" Width="11" Height="18" XOffset="-4" YOffset="-8"  />
-   
-    <Image Name="TabControlButtonPaneFiller" XPos="57" YPos="280" Width="7" Height="1" />
-        <!-- following yet has to be defined in the imageset image -->
-    <Image Name="TabHorizontalFiller" XPos="57" YPos="280" Width="7" Height="1" />
-
-    <!-- not needed in cegui0.5? -->
+    <Image Name="MenuTopLeft" XPos="2" YPos="1" Width="4" Height="4" />
+    <Image Name="MouseTarget" XPos="1" YPos="283" Width="18" Height="20" />
+    <Image Name="StaticRight" XPos="116" YPos="263" Width="4" Height="2" />
     <Image Name="TabPaneLeft" XPos="106" YPos="263" Width="4" Height="2" />
-    <Image Name="TabPaneRight" XPos="116" YPos="263" Width="4" Height="2"  />
+    <Image Name="CheckboxMark" XPos="110" YPos="16" Width="12" Height="12" />
+    <Image Name="EditBoxCarat" XPos="117" YPos="331" Width="3" Height="16" />
+    <Image Name="EditBoxRight" XPos="108" YPos="331" Width="5" Height="16" />
+    <Image Name="GenericBrush" XPos="40" YPos="350" Width="1" Height="1" />
+    <Image Name="ListboxRight" XPos="116" YPos="263" Width="4" Height="2" />
+    <Image Name="MenuTopRight" XPos="2" YPos="1" Width="4" Height="4" />
+    <Image Name="MouseTextBar" XPos="15" YPos="321" Width="11" Height="18" />
+    <Image Name="MultiListTop" XPos="112" YPos="257" Width="2" Height="4" />
+    <Image Name="StaticBottom" XPos="112" YPos="267" Width="2" Height="4" />
+    <Image Name="SysAreaRight" XPos="222" YPos="293" Width="46" Height="25" />
     <Image Name="TabPaneLower" XPos="112" YPos="267" Width="2" Height="4" />
-    <Image Name="TabPaneLowerLeft" XPos="106" YPos="268" Width="3" Height="3" />
-    <Image Name="TabPaneLowerRight" XPos="117" YPos="268" Width="3" Height="3" />
-    <Image Name="TabPaneMiddle" XPos="111" YPos="262" Width="4" Height="4" />
-
-    <!-- new in cegui0.5 -->
-    <Image Name="TabContentPaneLeft" XPos="106" YPos="263" Width="4" Height="2" />
-    <Image Name="TabContentPaneRight" XPos="116" YPos="263" Width="4" Height="2"  />
-    <Image Name="TabContentPaneLower" XPos="112" YPos="267" Width="2" Height="4" />
-    <Image Name="TabContentPaneLowerLeft" XPos="106" YPos="268" Width="3" Height="3" />
-    <Image Name="TabContentPaneLowerRight" XPos="117" YPos="268" Width="3" Height="3" />
-        <!-- following three yet have to be defined in the imageset image -->
-    <Image Name="TabContentPaneUpper" XPos="112" YPos="267" Width="2" Height="4" />
-    <Image Name="TabContentPaneUpperLeft" XPos="106" YPos="268" Width="3" Height="3" />
-    <Image Name="TabContentPaneUpperRight" XPos="117" YPos="268" Width="3" Height="3" />
-    <Image Name="TabContentPaneMiddle" XPos="111" YPos="262" Width="4" Height="4" />
-
-
-    <Image Name="TabButtonLeftNormal" XPos="35" YPos="266" Width="7" Height="3" />
-    <Image Name="TabButtonRightNormal" XPos="55" YPos="266" Width="6" Height="3" />
-    <Image Name="TabButtonUpperNormal" XPos="45" YPos="257" Width="7" Height="6" />
-    <Image Name="TabButtonLowerNormal" XPos="45" YPos="272" Width="7" Height="6" />
-    <Image Name="TabButtonUpperLeftNormal" XPos="35" YPos="257" Width="7" Height="6" />
-    <Image Name="TabButtonUpperRightNormal" XPos="55" YPos="257" Width="7" Height="6" />
-    <Image Name="TabButtonLowerLeftNormal" XPos="35" YPos="272" Width="7" Height="6" />
-    <Image Name="TabButtonLowerRightNormal" XPos="55" YPos="272" Width="6" Height="6" />
-    <Image Name="TabButtonMiddleNormal" XPos="45" YPos="266" Width="7" Height="3" />
-
-    <Image Name="TabButtonLeftSelected" XPos="73" YPos="266" Width="7" Height="3" />
-    <Image Name="TabButtonRightSelected" XPos="93" YPos="266" Width="6" Height="3" />
-    <Image Name="TabButtonUpperSelected" XPos="83" YPos="257" Width="7" Height="6" />
-    <Image Name="TabButtonLowerSelected" XPos="83" YPos="272" Width="7" Height="6" />
-    <Image Name="TabButtonUpperLeftSelected" XPos="73" YPos="257" Width="7" Height="6" />
-    <Image Name="TabButtonUpperRightSelected" XPos="93" YPos="257" Width="7" Height="6" />
-    <Image Name="TabButtonLowerLeftSelected" XPos="73" YPos="272" Width="7" Height="6" />
-    <Image Name="TabButtonLowerRightSelected" XPos="93" YPos="272" Width="6" Height="6" />
-    <Image Name="TabButtonMiddleSelected" XPos="83" YPos="266" Width="7" Height="3" />
-   
-    <!-- new in cegui0.5 -->
-    <Image Name="TabButtonUpperLeft2Normal" XPos="35" YPos="257" Width="7" Height="6" />
-    <Image Name="TabButtonUpperRight2Normal" XPos="55" YPos="257" Width="7" Height="6" />
-    <Image Name="TabButtonLowerLeft2Normal" XPos="35" YPos="272" Width="7" Height="6" />
-    <Image Name="TabButtonLowerRight2Normal" XPos="55" YPos="272" Width="6" Height="6" />
-    <Image Name="TabButtonScrollLeftNormal" XPos="35" YPos="272" Width="7" Height="6" />
-    <Image Name="TabButtonScrollRightNormal" XPos="55" YPos="272" Width="6" Height="6" />
-
+    <Image Name="TabPaneRight" XPos="116" YPos="263" Width="4" Height="2" />
+    <Image Name="TitlebarLeft" XPos="112" YPos="293" Width="40" Height="25" />
+    <Image Name="CheckboxHover" XPos="110" YPos="30" Width="12" Height="12" />
+    <Image Name="EditBoxMiddle" XPos="53" YPos="331" Width="52" Height="16" />
+    <Image Name="ListboxBottom" XPos="112" YPos="267" Width="2" Height="4" />
     <Image Name="MultiListLeft" XPos="106" YPos="263" Width="4" Height="2" />
-    <Image Name="MultiListRight" XPos="116" YPos="263" Width="4" Height="2"  />
-    <Image Name="MultiListTop" XPos="112" YPos="257" Width="2" Height="4" />
-    <Image Name="MultiListBottom" XPos="112" YPos="267" Width="2" Height="4" />
-    <Image Name="MultiListTopLeft" XPos="106" YPos="257" Width="3" Height="3" />
-    <Image Name="MultiListTopRight" XPos="117" YPos="257" Width="3" Height="3" />
-    <Image Name="MultiListBottomLeft" XPos="106" YPos="268" Width="3" Height="3" />
-    <Image Name="MultiListBottomRight" XPos="117" YPos="268" Width="3" Height="3" />
-    <Image Name="MultiListBackdrop" XPos="111" YPos="262" Width="4" Height="4" />
-    <Image Name="MultiListSelectionBrush"  XPos="40" YPos="350" Width="16" Height="16" />
-
-    <Image Name="HeaderBarBackdropNormal" XPos="88" YPos="281" Width="4" Height="17" />
-    <Image Name="HeaderBarBackdropHover" XPos="88" YPos="301" Width="4" Height="17" />
-    <Image Name="HeaderBarSplitterNormal" XPos="104" YPos="281" Width="2" Height="17" />
-    <Image Name="HeaderBarSplitterHover" XPos="104" YPos="301" Width="2" Height="17" />
+    <Image Name="StaticTopLeft" XPos="106" YPos="257" Width="3" Height="3" />
+    <Image Name="StatusBarLeft" XPos="147" YPos="320" Width="5" Height="13" />
+    <Image Name="SysAreaMiddle" XPos="219" YPos="293" Width="2" Height="25" />
+    <Image Name="TabPaneMiddle" XPos="48" YPos="297" Width="8" Height="10" />
+    <Image Name="TitlebarRight" XPos="213" YPos="293" Width="6" Height="25" />
+    <Image Name="TooltipMiddle" XPos="9" YPos="265" Width="6" Height="4" />
+    <Image Name="VertScrollTop" XPos="182" YPos="2" Width="20" Height="8" />
+    <Image Name="WindowTopEdge" XPos="49" YPos="281" Width="6" Height="16" />
+    <Image Name="WindowTopLeft" XPos="31" YPos="281" Width="17" Height="16" />
+    <Image Name="CheckboxNormal" XPos="110" YPos="2" Width="12" Height="12" />
+    <Image Name="ListboxTopLeft" XPos="106" YPos="257" Width="3" Height="3" />
+    <Image Name="MenuBottomLeft" XPos="2" YPos="1" Width="4" Height="4" />
+    <Image Name="MultiListRight" XPos="116" YPos="263" Width="4" Height="2" />
+    <Image Name="SpinnerUpHover" XPos="82" YPos="110" Width="10" Height="6" />
+    <Image Name="StaticBackdrop" XPos="125" YPos="376" Width="8" Height="10" />
+    <Image Name="StaticTopRight" XPos="117" YPos="257" Width="3" Height="3" />
+    <Image Name="StatusBarRight" XPos="157" YPos="320" Width="5" Height="13" />
+    <Image Name="TitlebarMiddle" XPos="152" YPos="293" Width="61" Height="25" />
+    <Image Name="TooltipTopEdge" XPos="9" YPos="257" Width="6" Height="4" />
+    <Image Name="TooltipTopLeft" XPos="1" YPos="257" Width="5" Height="4" />
+    <Image Name="VertSliderBody" XPos="234" YPos="2" Width="9" Height="48" />
+    <Image Name="WindowLeftEdge" XPos="31" YPos="298" Width="17" Height="8" />
+    <Image Name="WindowTopRight" XPos="56" YPos="281" Width="16" Height="16" />
+    <Image Name="AltProgressHalf" XPos="109" YPos="89" Width="4" Height="5" />
+    <Image Name="AltProgressLeft" XPos="71" YPos="88" Width="8" Height="12" />
+    <Image Name="ComboboxListTop" XPos="148" YPos="48" Width="8" Height="8" />
     <Image Name="HeaderBarSortUp" XPos="162" YPos="285" Width="7" Height="7" />
-    <Image Name="HeaderBarSortDown" XPos="170" YPos="285" Width="7" Height="7" />
-
+    <Image Name="ItemBackgroundB" XPos="298" YPos="318" Width="15" Height="8" />
+    <Image Name="ItemBackgroundL" XPos="290" YPos="303" Width="8" Height="15" />
+    <Image Name="ItemBackgroundR" XPos="313" YPos="303" Width="8" Height="15" />
+    <Image Name="ItemBackgroundT" XPos="298" YPos="295" Width="15" Height="8" />
+    <Image Name="ListboxBackdrop" XPos="125" YPos="376" Width="8" Height="10" />
+    <Image Name="ListboxTopRight" XPos="117" YPos="257" Width="3" Height="3" />
+    <Image Name="MenuBottomRight" XPos="2" YPos="1" Width="4" Height="4" />
+    <Image Name="MouseEsWeCursor" XPos="2" YPos="305" Width="26" Height="12" />
+    <Image Name="MouseMoveCursor" XPos="1" YPos="283" Width="18" Height="20" />
+    <Image Name="MouseNeSwCursor" XPos="1" YPos="341" Width="18" Height="18" />
+    <Image Name="MouseNoSoCursor" XPos="1" YPos="318" Width="11" Height="24" />
+    <Image Name="MouseNwSeCursor" XPos="20" YPos="341" Width="17" Height="18" />
+    <Image Name="MultiListBottom" XPos="112" YPos="267" Width="2" Height="4" />
+    <Image Name="NewTitlebarLeft" XPos="112" YPos="293" Width="40" Height="25" />
+    <Image Name="PopupMenuMiddle" XPos="9" YPos="265" Width="6" Height="4" />
+    <Image Name="ProgressBarLeft" XPos="71" YPos="74" Width="7" Height="12" />
+    <Image Name="RadioButtonMark" XPos="124" YPos="16" Width="12" Height="12" />
+    <Image Name="SpinnerUpNormal" XPos="68" YPos="110" Width="10" Height="6" />
+    <Image Name="StatusBarMiddle" XPos="154" YPos="320" Width="1" Height="13" />
+    <Image Name="TooltipLeftEdge" XPos="1" YPos="265" Width="5" Height="4" />
+    <Image Name="TooltipTopRight" XPos="19" YPos="257" Width="6" Height="4" />
+    <Image Name="WindowRightEdge" XPos="56" YPos="298" Width="16" Height="8" />
+    <Image Name="AltProgressRight" XPos="91" YPos="88" Width="8" Height="12" />
+    <Image Name="ButtonLeftNormal" XPos="77" YPos="281" Width="13" Height="17" />
+    <Image Name="ButtonLeftPushed" XPos="77" YPos="301" Width="13" Height="17" />
+    <Image Name="CloseButtonHover" XPos="125" YPos="319" Width="15" Height="15" />
     <Image Name="ComboboxEditLeft" XPos="138" YPos="2" Width="8" Height="16" />
-    <Image Name="ComboboxEditMiddle" XPos="148" YPos="2" Width="8" Height="16" />
-    <Image Name="ComboboxListButtonNormal" XPos="158" YPos="2" Width="16" Height="16" />
-    <Image Name="ComboboxListButtonHover" XPos="158" YPos="20" Width="16" Height="16" />
     <Image Name="ComboboxListLeft" XPos="138" YPos="48" Width="8" Height="8" />
-    <Image Name="ComboboxListRight" XPos="158" YPos="48" Width="8" Height="8" />
-    <Image Name="ComboboxListTop" XPos="148" YPos="48" Width="8" Height="8" />
-    <Image Name="ComboboxListBottom" XPos="148" YPos="58" Width="8" Height="8" />
-    <Image Name="ComboboxListTopLeft" XPos="138" YPos="38" Width="8" Height="8" />
-    <Image Name="ComboboxListTopRight" XPos="158" YPos="38" Width="8" Height="8" />
-    <Image Name="ComboboxListBottomLeft" XPos="138" YPos="58" Width="8" Height="8" />
-    <Image Name="ComboboxListBottomRight" XPos="158" YPos="58" Width="8" Height="8" />
-    <Image Name="ComboboxListBackdrop" XPos="148" YPos="48" Width="8" Height="8" />
-    <Image Name="ComboboxSelectionBrush" XPos="8" YPos="70" Width="16" Height="16" />
-    <Image Name="ComboboxDividerLeft" XPos="138" YPos="68" Width="14" Height="1" />
-    <Image Name="ComboboxDividerMiddle" XPos="154" YPos="68" Width="8" Height="1" />
-    <Image Name="ComboboxDividerRight" XPos="164" YPos="68" Width="14" Height="1" />
-    
-    <Image Name="AltProgressLeft" XPos="71" YPos="88" Width="8" Height="12" />
-    <Image Name="AltProgressMiddle" XPos="81" YPos="88" Width="8" Height="12" />
-    <Image Name="AltProgressRight" XPos="91" YPos="88" Width="8" Height="12" />
-    <Image Name="AltProgressQuarter" XPos="102" YPos="89" Width="3" Height="4" />
-    <Image Name="AltProgressHalf" XPos="109" YPos="89" Width="4" Height="5" />
+    <Image Name="ItemBackgroundBG" XPos="298" YPos="303" Width="15" Height="15" />
+    <Image Name="ItemBackgroundBL" XPos="290" YPos="318" Width="8" Height="8" />
+    <Image Name="ItemBackgroundBR" XPos="313" YPos="318" Width="8" Height="8" />
+    <Image Name="ItemBackgroundTL" XPos="290" YPos="295" Width="8" Height="8" />
+    <Image Name="ItemBackgroundTR" XPos="313" YPos="295" Width="8" Height="8" />
+    <Image Name="MultiListTopLeft" XPos="106" YPos="257" Width="3" Height="3" />
+    <Image Name="NewTitlebarRight" XPos="213" YPos="293" Width="6" Height="25" />
+    <Image Name="ProgressBarRight" XPos="88" YPos="74" Width="6" Height="12" />
+    <Image Name="RadioButtonHover" XPos="124" YPos="30" Width="12" Height="12" />
+    <Image Name="SpinnerDownHover" XPos="82" YPos="118" Width="10" Height="6" />
+    <Image Name="StaticBottomLeft" XPos="106" YPos="268" Width="3" Height="3" />
+    <Image Name="StatusBarFilling" XPos="185" YPos="320" Width="4" Height="13" />
+    <Image Name="TabPaneLowerLeft" XPos="106" YPos="268" Width="3" Height="3" />
+    <Image Name="TooltipRightEdge" XPos="19" YPos="265" Width="6" Height="4" />
+    <Image Name="VertScrollBottom" XPos="182" YPos="22" Width="20" Height="8" />
+    <Image Name="VertScrollMiddle" XPos="182" YPos="12" Width="20" Height="8" />
+    <Image Name="WindowBackground" XPos="48" YPos="297" Width="8" Height="10" />
+    <Image Name="WindowBottomEdge" XPos="49" YPos="307" Width="6" Height="15" />
+    <Image Name="WindowBottomLeft" XPos="31" YPos="307" Width="17" Height="15" />
     <Image Name="AltProgressLight1" XPos="100" YPos="97" Width="4" Height="8" />
     <Image Name="AltProgressLight2" XPos="106" YPos="97" Width="4" Height="8" />
     <Image Name="AltProgressLight3" XPos="112" YPos="97" Width="4" Height="8" />
@@ -309,70 +119,174 @@
     <Image Name="AltProgressLight7" XPos="136" YPos="97" Width="4" Height="8" />
     <Image Name="AltProgressLight8" XPos="142" YPos="97" Width="4" Height="8" />
     <Image Name="AltProgressLight9" XPos="148" YPos="97" Width="4" Height="8" />
-    <Image Name="AltProgressLight10" XPos="154" YPos="97" Width="4" Height="8" />
-    
-        
-    <Image Name="ProgressBarLeft" XPos="71" YPos="74" Width="7" Height="12" />
+    <Image Name="AltProgressMiddle" XPos="81" YPos="88" Width="8" Height="12" />
+    <Image Name="ButtonRightNormal" XPos="94" YPos="281" Width="13" Height="17" />
+    <Image Name="ButtonRightPushed" XPos="94" YPos="301" Width="13" Height="17" />
+    <Image Name="CloseButtonNormal" XPos="125" YPos="319" Width="15" Height="15" />
+    <Image Name="ComboboxListRight" XPos="158" YPos="48" Width="8" Height="8" />
+    <Image Name="HeaderBarSortDown" XPos="170" YPos="285" Width="7" Height="7" />
+    <Image Name="ListboxBottomLeft" XPos="106" YPos="268" Width="3" Height="3" />
+    <Image Name="MultiListBackdrop" XPos="125" YPos="376" Width="8" Height="10" />
+    <Image Name="MultiListTopRight" XPos="117" YPos="257" Width="3" Height="3" />
+    <Image Name="NewTitlebarMiddle" XPos="152" YPos="293" Width="61" Height="25" />
+    <Image Name="PopupMenuFrameTop" XPos="9" YPos="257" Width="6" Height="4" />
     <Image Name="ProgressBarMiddle" XPos="80" YPos="74" Width="6" Height="12" />
-    <Image Name="ProgressBarRight" XPos="88" YPos="74" Width="6" Height="12" />
-    <Image Name="ProgressBarDimSegment" XPos="96" YPos="74" Width="8" Height="12" />
-    <Image Name="ProgressBarLitSegment" XPos="106" YPos="74" Width="8" Height="12" />    
-
-    <Image Name="CheckboxNormal" XPos="110" YPos="2" Width="12" Height="12" />
-    <Image Name="CheckboxHover" XPos="110" YPos="30" Width="12" Height="12" />
-    <Image Name="CheckboxMark" XPos="126" YPos="320" Width="12" Height="12" />
-    
     <Image Name="RadioButtonNormal" XPos="124" YPos="2" Width="12" Height="12" />
-    <Image Name="RadioButtonHover" XPos="124" YPos="30" Width="12" Height="12" />
-    <Image Name="RadioButtonMark" XPos="126" YPos="320" Width="12" Height="12" />
-    
-
-
-    
-    <Image Name="SpinnerUpNormal" XPos="68" YPos="110" Width="10" Height="6" />
     <Image Name="SpinnerDownNormal" XPos="68" YPos="118" Width="10" Height="6" />
-    <Image Name="SpinnerUpHover" XPos="82" YPos="110" Width="10" Height="6" />
-    <Image Name="SpinnerDownHover" XPos="82" YPos="118" Width="10" Height="6" />
-    
-    <Image Name="TextSelectionBrush" XPos="8" YPos="70" Width="16" Height="16" />   
-
-    <Image Name="VertSliderBody" XPos="234" YPos="2" Width="9" Height="48" />
-    <Image Name="VertSliderThumbNormal" XPos="217" YPos="28" Width="15" Height="6" />
-    <Image Name="VertSliderThumbHover" XPos="217" YPos="36" Width="15" Height="6" />
-
-    <Image Name="Background" XPos="2" YPos="1" Width="4" Height="4" />
-    <Image Name="MenuTopLeft" XPos="2" YPos="1" Width="4" Height="4" />
-    <Image Name="MenuTopRight" XPos="2" YPos="1" Width="4" Height="4" />
-    <Image Name="MenuBottomLeft" XPos="2" YPos="1" Width="4" Height="4" />
-    <Image Name="MenuBottomRight" XPos="2" YPos="1" Width="4" Height="4" />
-    <Image Name="MenuLeft" XPos="2" YPos="1" Width="4" Height="4" />
-    <Image Name="MenuRight" XPos="2" YPos="1" Width="4" Height="4" />
-    <Image Name="MenuTop" XPos="2" YPos="1" Width="4" Height="4" />
-    <Image Name="MenuBottom" XPos="2" YPos="1" Width="4" Height="4" />
-    <Image Name="MenuMiddle" XPos="2" YPos="1" Width="4" Height="4" />
-	
+    <Image Name="StaticBottomRight" XPos="117" YPos="268" Width="3" Height="3" />
+    <Image Name="TabPaneLowerRight" XPos="117" YPos="268" Width="3" Height="3" />
+    <Image Name="TooltipBottomEdge" XPos="9" YPos="273" Width="6" Height="4" />
+    <Image Name="TooltipBottomLeft" XPos="1" YPos="273" Width="5" Height="4" />
+    <Image Name="VertScrollUpHover" XPos="196" YPos="46" Width="12" Height="12" />
+    <Image Name="WindowBottomRight" XPos="56" YPos="307" Width="16" Height="15" />
+    <Image Name="AltProgressLight10" XPos="154" YPos="97" Width="4" Height="8" />
+    <Image Name="AltProgressQuarter" XPos="102" YPos="89" Width="3" Height="4" />
+    <Image Name="ButtonMiddleNormal" XPos="91" YPos="281" Width="2" Height="17" />
+    <Image Name="ButtonMiddlePushed" XPos="91" YPos="301" Width="2" Height="17" />
+    <Image Name="CloseButtonPressed" XPos="125" YPos="319" Width="15" Height="15" />
+    <Image Name="ComboboxEditMiddle" XPos="148" YPos="2" Width="8" Height="16" />
+    <Image Name="ComboboxListBottom" XPos="148" YPos="58" Width="8" Height="8" />
+    <Image Name="ListboxBottomRight" XPos="117" YPos="268" Width="3" Height="3" />
     <Image Name="PopupMenuArrowLeft" XPos="2" YPos="1" Width="4" Height="4" />
+    <Image Name="PopupMenuFrameLeft" XPos="1" YPos="265" Width="5" Height="4" />
+    <Image Name="TabContentPaneLeft" XPos="106" YPos="263" Width="4" Height="2" />
+    <Image Name="TextSelectionBrush" XPos="8" YPos="70" Width="16" Height="16" />
+    <Image Name="TooltipBottomRight" XPos="19" YPos="273" Width="6" Height="4" />
+    <Image Name="VertScrollUpNormal" XPos="196" YPos="32" Width="12" Height="12" />
+    <Image Name="ButtonLeftHighlight" XPos="77" YPos="350" Width="13" Height="17" />
+    <Image Name="ComboboxDividerLeft" XPos="138" YPos="68" Width="14" Height="1" />
+    <Image Name="ComboboxListTopLeft" XPos="138" YPos="38" Width="8" Height="8" />
+    <Image Name="HorzScrollLeftHover" XPos="181" YPos="257" Width="15" Height="14" />
+    <Image Name="MultiLineEditboxTop" XPos="269" YPos="258" Width="6" Height="7" />
+    <Image Name="MultiListBottomLeft" XPos="106" YPos="268" Width="3" Height="3" />
+    <Image Name="NewCloseButtonHover" XPos="125" YPos="319" Width="15" Height="15" />
     <Image Name="PopupMenuArrowRight" XPos="2" YPos="1" Width="4" Height="4" />
-	
+    <Image Name="PopupMenuFrameRight" XPos="19" YPos="265" Width="6" Height="4" />
+    <Image Name="TabButtonLeftNormal" XPos="35" YPos="266" Width="11" Height="2" />
+    <Image Name="TabContentPaneLower" XPos="112" YPos="267" Width="2" Height="4" />
+    <Image Name="TabContentPaneRight" XPos="116" YPos="263" Width="4" Height="2" />
+    <Image Name="TabContentPaneUpper" XPos="112" YPos="267" Width="2" Height="4" />
+    <Image Name="TabHorizontalFiller" XPos="59" YPos="351" Width="3" Height="10" />
+    <Image Name="VertScrollDownHover" XPos="182" YPos="46" Width="12" Height="12" />
+    <Image Name="ButtonRightHighlight" XPos="94" YPos="350" Width="13" Height="17" />
+    <Image Name="ComboboxDividerRight" XPos="164" YPos="68" Width="14" Height="1" />
+    <Image Name="ComboboxListBackdrop" XPos="148" YPos="48" Width="8" Height="8" />
+    <Image Name="ComboboxListTopRight" XPos="158" YPos="38" Width="8" Height="8" />
+    <Image Name="HorzScrollBarSegment" XPos="174" YPos="274" Width="4" Height="7" />
+    <Image Name="HorzScrollLeftNormal" XPos="181" YPos="257" Width="15" Height="14" />
+    <Image Name="HorzScrollRightHover" XPos="161" YPos="257" Width="16" Height="14" />
+    <Image Name="HorzScrollThumbHover" XPos="1" YPos="500" Width="26" Height="11" />
+    <Image Name="MultiLineEditboxLeft" XPos="258" YPos="268" Width="8" Height="2" />
+    <Image Name="MultiListBottomRight" XPos="117" YPos="268" Width="3" Height="3" />
+    <Image Name="NewCloseButtonNormal" XPos="125" YPos="319" Width="15" Height="15" />
+    <Image Name="PopupMenuFrameBottom" XPos="9" YPos="273" Width="6" Height="4" />
+    <Image Name="StatusBarFillingLeft" XPos="165" YPos="320" Width="8" Height="13" />
+    <Image Name="TabButtonLowerNormal" XPos="47" YPos="269" Width="2" Height="9" />
+    <Image Name="TabButtonRightNormal" XPos="50" YPos="266" Width="11" Height="2" />
+    <Image Name="TabButtonUpperNormal" XPos="47" YPos="257" Width="2" Height="8" />
+    <Image Name="TabContentPaneMiddle" XPos="48" YPos="297" Width="8" Height="10" />
+    <Image Name="VertScrollBarSegment" XPos="163" YPos="275" Width="7" Height="4" />
+    <Image Name="VertScrollDownNormal" XPos="182" YPos="32" Width="12" Height="12" />
+    <Image Name="VertScrollThumbHover" XPos="224" YPos="2" Width="8" Height="24" />
+    <Image Name="VertSliderThumbHover" XPos="217" YPos="36" Width="15" Height="6" />
+    <Image Name="ButtonMiddleHighlight" XPos="91" YPos="350" Width="2" Height="17" />
+    <Image Name="ComboboxDividerMiddle" XPos="154" YPos="68" Width="8" Height="1" />
+    <Image Name="HorzScrollRightNormal" XPos="161" YPos="257" Width="16" Height="14" />
+    <Image Name="HorzScrollThumbNormal" XPos="1" YPos="500" Width="26" Height="11" />
+    <Image Name="ListboxSelectionBrush" XPos="40" YPos="350" Width="16" Height="16" />
+    <Image Name="MiniVertScrollUpHover" XPos="123" YPos="257" Width="11" Height="13" />
+    <Image Name="MultiLineEditboxRight" XPos="278" YPos="268" Width="5" Height="2" />
+    <Image Name="NewCloseButtonPressed" XPos="125" YPos="319" Width="15" Height="15" />
     <Image Name="PopupMenuFrameTopLeft" XPos="1" YPos="257" Width="5" Height="4" />
+    <Image Name="ProgressBarDimSegment" XPos="96" YPos="74" Width="8" Height="12" />
+    <Image Name="ProgressBarLitSegment" XPos="106" YPos="74" Width="8" Height="12" />
+    <Image Name="StatusBarFillingRight" XPos="202" YPos="320" Width="8" Height="13" />
+    <Image Name="TabButtonLeftSelected" XPos="73" YPos="267" Width="11" Height="2" />
+    <Image Name="TabButtonMiddleNormal" XPos="47" YPos="266" Width="2" Height="2" />
+    <Image Name="VertScrollThumbNormal" XPos="214" YPos="2" Width="8" Height="24" />
+    <Image Name="VertSliderThumbNormal" XPos="217" YPos="28" Width="15" Height="6" />
+    <Image Name="ComboboxListBottomLeft" XPos="138" YPos="58" Width="8" Height="8" />
+    <Image Name="ComboboxSelectionBrush" XPos="8" YPos="70" Width="16" Height="16" />
+    <Image Name="HeaderBarBackdropHover" XPos="88" YPos="373" Width="4" Height="17" />
+    <Image Name="HeaderBarSplitterHover" XPos="95" YPos="373" Width="2" Height="17" />
+    <Image Name="MiniVertScrollUpNormal" XPos="123" YPos="257" Width="11" Height="13" />
+    <Image Name="MultiLineEditboxBottom" XPos="269" YPos="273" Width="6" Height="5" />
     <Image Name="PopupMenuFrameTopRight" XPos="19" YPos="257" Width="6" Height="4" />
+    <Image Name="TabButtonLowerSelected" XPos="85" YPos="270" Width="2" Height="8" />
+    <Image Name="TabButtonRightSelected" XPos="88" YPos="267" Width="11" Height="2" />
+    <Image Name="TabButtonUpperSelected" XPos="85" YPos="257" Width="2" Height="9" />
+    <Image Name="ComboboxListBottomRight" XPos="158" YPos="58" Width="8" Height="8" />
+    <Image Name="ComboboxListButtonHover" XPos="158" YPos="20" Width="16" Height="16" />
+    <Image Name="HeaderBarBackdropNormal" XPos="77" YPos="373" Width="4" Height="17" />
+    <Image Name="HeaderBarSplitterNormal" XPos="105" YPos="373" Width="2" Height="17" />
+    <Image Name="MiniHorzScrollLeftHover" XPos="181" YPos="257" Width="15" Height="14" />
+    <Image Name="MiniVertScrollDownHover" XPos="136" YPos="259" Width="11" Height="13" />
+    <Image Name="MultiLineEditboxTopLeft" XPos="258" YPos="258" Width="8" Height="7" />
+    <Image Name="MultiListSelectionBrush" XPos="40" YPos="350" Width="16" Height="16" />
+    <Image Name="TabButtonMiddleSelected" XPos="85" YPos="267" Width="2" Height="2" />
+    <Image Name="TabContentPaneLowerLeft" XPos="106" YPos="268" Width="3" Height="3" />
+    <Image Name="TabContentPaneUpperLeft" XPos="106" YPos="268" Width="3" Height="3" />
+    <Image Name="ComboboxListButtonNormal" XPos="158" YPos="2" Width="16" Height="16" />
+    <Image Name="HorzScrollThumbLeftHover" XPos="220" YPos="272" Width="9" Height="14" />
+    <Image Name="MiniHorzScrollBarSegment" XPos="174" YPos="274" Width="4" Height="7" />
+    <Image Name="MiniHorzScrollLeftNormal" XPos="181" YPos="257" Width="15" Height="14" />
+    <Image Name="MiniHorzScrollRightHover" XPos="161" YPos="257" Width="16" Height="14" />
+    <Image Name="MiniHorzScrollThumbHover" XPos="1" YPos="500" Width="26" Height="11" />
+    <Image Name="MiniVertScrollBarSegment" XPos="163" YPos="275" Width="7" Height="4" />
+    <Image Name="MiniVertScrollDownNormal" XPos="136" YPos="259" Width="11" Height="13" />
+    <Image Name="MiniVertScrollThumbHover" XPos="1" YPos="495" Width="11" Height="26" />
+    <Image Name="MultiLineEditboxBackdrop" XPos="1" YPos="1" Width="254" Height="254" />
+    <Image Name="MultiLineEditboxTopRight" XPos="278" YPos="258" Width="5" Height="7" />
     <Image Name="PopupMenuFrameBottomLeft" XPos="1" YPos="273" Width="5" Height="4" />
+    <Image Name="TabButtonLowerLeftNormal" XPos="35" YPos="269" Width="11" Height="9" />
+    <Image Name="TabButtonUpperLeftNormal" XPos="35" YPos="257" Width="11" Height="8" />
+    <Image Name="TabContentPaneLowerRight" XPos="117" YPos="268" Width="3" Height="3" />
+    <Image Name="TabContentPaneUpperRight" XPos="117" YPos="268" Width="3" Height="3" />
+    <Image Name="HorzScrollThumbLeftNormal" XPos="220" YPos="257" Width="9" Height="14" />
+    <Image Name="HorzScrollThumbRightHover" XPos="242" YPos="272" Width="10" Height="14" />
+    <Image Name="MiniHorzScrollRightNormal" XPos="161" YPos="257" Width="16" Height="14" />
+    <Image Name="MiniHorzScrollThumbNormal" XPos="1" YPos="500" Width="26" Height="11" />
+    <Image Name="MiniVertScrollThumbNormal" XPos="1" YPos="495" Width="11" Height="26" />
     <Image Name="PopupMenuFrameBottomRight" XPos="19" YPos="273" Width="6" Height="4" />
-    <Image Name="PopupMenuFrameLeft" XPos="1" YPos="265" Width="5" Height="4" />
-    <Image Name="PopupMenuFrameRight" XPos="19" YPos="265" Width="6" Height="4" />
-    <Image Name="PopupMenuFrameTop" XPos="9" YPos="257" Width="6" Height="4" />
-    <Image Name="PopupMenuFrameBottom" XPos="9" YPos="273" Width="6" Height="4" />
-    <Image Name="PopupMenuMiddle" XPos="9" YPos="265" Width="6" Height="4" />
-	
-	<Image Name="MenuBar" XPos="325" YPos="260" Width="1" Height="26" />
-
-    <Image Name="TooltipLeftEdge" XPos="1" YPos="265" Width="5" Height="4" />
-    <Image Name="TooltipTopLeft" XPos="1" YPos="257" Width="5" Height="4" />
-    <Image Name="TooltipTopEdge" XPos="9" YPos="257" Width="6" Height="4" />
-    <Image Name="TooltipTopRight" XPos="19" YPos="257" Width="6" Height="4" />
-    <Image Name="TooltipBottomLeft" XPos="1" YPos="273" Width="5" Height="4" />
-    <Image Name="TooltipBottomEdge" XPos="9" YPos="273" Width="6" Height="4" />
-    <Image Name="TooltipBottomRight" XPos="19" YPos="273" Width="6" Height="4" />
-    <Image Name="TooltipRightEdge" XPos="19" YPos="265" Width="6" Height="4" />
-    <Image Name="TooltipMiddle" XPos="9" YPos="265" Width="6" Height="4" />
+    <Image Name="TabButtonLowerLeft2Normal" XPos="35" YPos="269" Width="11" Height="9" />
+    <Image Name="TabButtonLowerRightNormal" XPos="50" YPos="269" Width="11" Height="9" />
+    <Image Name="TabButtonScrollLeftNormal" XPos="35" YPos="269" Width="11" Height="9" />
+    <Image Name="TabButtonUpperLeft2Normal" XPos="35" YPos="257" Width="11" Height="8" />
+    <Image Name="TabButtonUpperRightNormal" XPos="50" YPos="257" Width="11" Height="8" />
+    <Image Name="HorzScrollThumbMiddleHover" XPos="229" YPos="272" Width="13" Height="14" />
+    <Image Name="HorzScrollThumbRightNormal" XPos="242" YPos="257" Width="10" Height="14" />
+    <Image Name="MultiLineEditboxBottomLeft" XPos="258" YPos="273" Width="8" Height="5" />
+    <Image Name="TabButtonLowerLeftSelected" XPos="73" YPos="270" Width="11" Height="8" />
+    <Image Name="TabButtonLowerRight2Normal" XPos="50" YPos="269" Width="11" Height="9" />
+    <Image Name="TabButtonScrollRightNormal" XPos="50" YPos="269" Width="11" Height="9" />
+    <Image Name="TabButtonUpperLeftSelected" XPos="73" YPos="257" Width="11" Height="9" />
+    <Image Name="TabButtonUpperRight2Normal" XPos="50" YPos="257" Width="11" Height="8" />
+    <Image Name="TabControlButtonPaneFiller" XPos="58" YPos="350" Width="7" Height="1" />
+    <Image Name="HorzScrollThumbMiddleNormal" XPos="229" YPos="257" Width="13" Height="14" />
+    <Image Name="MiniVertScrollThumbTopHover" XPos="122" YPos="277" Width="11" Height="10" />
+    <Image Name="MultiLineEditboxBottomRight" XPos="278" YPos="273" Width="5" Height="5" />
+    <Image Name="TabButtonLowerRightSelected" XPos="88" YPos="270" Width="11" Height="8" />
+    <Image Name="TabButtonUpperRightSelected" XPos="88" YPos="257" Width="11" Height="9" />
+    <Image Name="MiniHorzScrollThumbLeftHover" XPos="220" YPos="272" Width="9" Height="14" />
+    <Image Name="MiniVertScrollThumbTopNormal" XPos="122" YPos="277" Width="11" Height="10" />
+    <Image Name="MiniHorzScrollThumbLeftNormal" XPos="220" YPos="257" Width="9" Height="14" />
+    <Image Name="MiniHorzScrollThumbRightHover" XPos="242" YPos="272" Width="10" Height="14" />
+    <Image Name="MiniHorzScrollThumbMiddleHover" XPos="229" YPos="272" Width="13" Height="14" />
+    <Image Name="MiniHorzScrollThumbRightNormal" XPos="242" YPos="257" Width="10" Height="14" />
+    <Image Name="MiniVertScrollThumbBottomHover" XPos="149" YPos="279" Width="11" Height="9" />
+    <Image Name="MiniVertScrollThumbMiddleHover" XPos="136" YPos="279" Width="11" Height="7" />
+    <Image Name="MultiLineEditboxSelectionBrush" XPos="40" YPos="350" Width="16" Height="16" />
+    <Image Name="TransparentMultiLineEditboxTop" XPos="49" YPos="368" Width="3" Height="3" />
+    <Image Name="MiniHorzScrollThumbMiddleNormal" XPos="229" YPos="257" Width="13" Height="14" />
+    <Image Name="MiniVertScrollThumbBottomNormal" XPos="149" YPos="279" Width="11" Height="9" />
+    <Image Name="MiniVertScrollThumbMiddleNormal" XPos="136" YPos="279" Width="11" Height="7" />
+    <Image Name="TransparentMultiLineEditboxLeft" XPos="45" YPos="372" Width="3" Height="3" />
+    <Image Name="TransparentMultiLineEditboxRight" XPos="53" YPos="372" Width="3" Height="3" />
+    <Image Name="TransparentMultiLineEditboxBottom" XPos="49" YPos="376" Width="3" Height="3" />
+    <Image Name="TransparentMultiLineEditboxTopLeft" XPos="45" YPos="368" Width="3" Height="3" />
+    <Image Name="TransparentMultiLineEditboxBackdrop" XPos="63" YPos="377" Width="2" Height="2" />
+    <Image Name="TransparentMultiLineEditboxTopRight" XPos="53" YPos="368" Width="3" Height="3" />
+    <Image Name="TransparentMultiLineEditboxBottomLeft" XPos="45" YPos="376" Width="3" Height="3" />
+    <Image Name="TransparentMultiLineEditboxBottomRight" XPos="53" YPos="376" Width="3" Height="3" />
+    <Image Name="TransparentMultiLineEditboxSelectionBrush" XPos="63" YPos="377" Width="2" Height="2" />
 </Imageset>

Modified: modules/common/gui/imagesets/RastullahLook.png
===================================================================
(Binary files differ)

Modified: modules/common/gui/schemes/RastullahLook.looknfeel
===================================================================
--- modules/common/gui/schemes/RastullahLook.looknfeel	2009-01-07 11:25:11 UTC (rev 4696)
+++ modules/common/gui/schemes/RastullahLook.looknfeel	2009-01-07 16:11:53 UTC (rev 4697)
@@ -1272,7 +1272,7 @@
                     <Dim type="Height" ><UnifiedDim scale="1.0" type="Height" /></Dim>
                 </Area>
                 <Image imageset="RastullahLook-Images" image="TitlebarRight" />
-                <VertFormat type="Stretched" />
+                <VertFormat type="Tiled" />
                 <HorzFormat type="RightAligned" />
             </ImageryComponent>
             <ImageryComponent>
@@ -1325,8 +1325,8 @@
                     <Dim type="Height" ><UnifiedDim scale="1.0" type="Height" /></Dim>
                 </Area>
                 <Image imageset="RastullahLook-Images" image="TitlebarMiddle" />
-                <VertFormat type="Stretched" />
-                <HorzFormat type="Stretched" />
+                <VertFormat type="Tiled" />
+                <HorzFormat type="Tiled" />
             </ImageryComponent>
         </ImagerySection>
         <ImagerySection name="caption">
@@ -1510,8 +1510,8 @@
                 </Area>
                 <Image imageset="RastullahLook-Images" image="WindowBackground" />
                 <ColourProperty name="ClientAreaColour" />
-                <VertFormat type="Tiled" />
-                <HorzFormat type="Tiled" />
+                <VertFormat type="Stretched" />
+                <HorzFormat type="Stretched" />
             </ImageryComponent>
         </ImagerySection>
         <ImagerySection name="notitle_frame">
@@ -2180,7 +2180,7 @@
             <Area>
                 <Dim type="LeftEdge" ><AbsoluteDim value="0" /></Dim>
                 <Dim type="TopEdge" ><AbsoluteDim value="0" /></Dim>
-                <Dim type="Width" ><UnifiedDim scale="0.1" type="Width" /></Dim>
+                <Dim type="Width" ><UnifiedDim scale="1" type="Width" /></Dim>
                 <Dim type="Height" ><UnifiedDim scale="1" type="Height" /></Dim>
             </Area>
             <Property name="UnifiedMinSize" value="{{0,25},{0,0}}" />



From blakharaz at mail.berlios.de  Thu Jan  8 12:35:12 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Thu, 8 Jan 2009 12:35:12 +0100
Subject: [Dsa-hl-svn] r4698 - dependencies/OgreNewt_ngt
Message-ID: <200901081135.n08BZC6k031178@sheep.berlios.de>

Author: blakharaz
Date: 2009-01-08 12:34:49 +0100 (Thu, 08 Jan 2009)
New Revision: 4698

Added:
   dependencies/OgreNewt_ngt/OgreNewt_Main_vc9.vcproj
   dependencies/OgreNewt_ngt/OgreNewt_vc9.sln
Log:
VS 2008 projects

Added: dependencies/OgreNewt_ngt/OgreNewt_Main_vc9.vcproj
===================================================================
--- dependencies/OgreNewt_ngt/OgreNewt_Main_vc9.vcproj	2009-01-07 16:11:53 UTC (rev 4697)
+++ dependencies/OgreNewt_ngt/OgreNewt_Main_vc9.vcproj	2009-01-08 11:34:49 UTC (rev 4698)
@@ -0,0 +1,336 @@
+<?xml version="1.0" encoding="Windows-1252"?>
+<VisualStudioProject
+	ProjectType="Visual C++"
+	Version="9,00"
+	Name="OgreNewt_Main"
+	ProjectGUID="{DCC3C838-9803-497D-8C32-A5985644CCE9}"
+	RootNamespace="OgreNewt_Main"
+	Keyword="Win32Proj"
+	TargetFrameworkVersion="131072"
+	>
+	<Platforms>
+		<Platform
+			Name="Win32"
+		/>
+	</Platforms>
+	<ToolFiles>
+	</ToolFiles>
+	<Configurations>
+		<Configuration
+			Name="Debug|Win32"
+			OutputDirectory="./lib/$(ConfigurationName)"
+			IntermediateDirectory="./obj/$(ConfigurationName)"
+			ConfigurationType="2"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			UseOfMFC="0"
+			UseOfATL="0"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				Optimization="0"
+				AdditionalIncludeDirectories=".\inc;..\NewtonSDK\sdk;..\OgreSDK\include;..\boost\include"
+				PreprocessorDefinitions="_WINDOWS;WIN32;_DEBUG;_OGRENEWT_EXPORTS;_OGRENEWT_DYNAMIC"
+				MinimalRebuild="true"
+				BasicRuntimeChecks="3"
+				RuntimeLibrary="3"
+				UsePrecompiledHeader="0"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="true"
+				DebugInformationFormat="4"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="Newton.lib OgreMain_d.lib"
+				OutputFile="$(OutDir)/OgreNewt_d.dll"
+				AdditionalLibraryDirectories="..\NewtonSDK\sdk\dll_vs9;..\ogresdk\lib"
+				GenerateDebugInformation="true"
+				ProgramDatabaseFile="$(OutDir)/OgreNewt_d.pdb"
+				SubSystem="2"
+				RandomizedBaseAddress="1"
+				DataExecutionPrevention="0"
+				ImportLibrary="$(OutDir)/OgreNewt_d.lib"
+				TargetMachine="1"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+		<Configuration
+			Name="Release|Win32"
+			OutputDirectory="./lib/$(ConfigurationName)"
+			IntermediateDirectory="./obj/$(ConfigurationName)"
+			ConfigurationType="2"
+			InheritedPropertySheets="$(VCInstallDir)VCProjectDefaults\UpgradeFromVC71.vsprops"
+			CharacterSet="2"
+			>
+			<Tool
+				Name="VCPreBuildEventTool"
+			/>
+			<Tool
+				Name="VCCustomBuildTool"
+			/>
+			<Tool
+				Name="VCXMLDataGeneratorTool"
+			/>
+			<Tool
+				Name="VCWebServiceProxyGeneratorTool"
+			/>
+			<Tool
+				Name="VCMIDLTool"
+			/>
+			<Tool
+				Name="VCCLCompilerTool"
+				AdditionalIncludeDirectories=".\inc;..\NewtonSDK\sdk;..\OgreSDK\include;..\boost\include"
+				PreprocessorDefinitions="_WINDOWS;WIN32;NDEBUG;_OGRENEWT_EXPORTS;_OGRENEWT_DYNAMIC"
+				BasicRuntimeChecks="0"
+				RuntimeLibrary="2"
+				UsePrecompiledHeader="0"
+				WarningLevel="3"
+				Detect64BitPortabilityProblems="true"
+				DebugInformationFormat="3"
+			/>
+			<Tool
+				Name="VCManagedResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCResourceCompilerTool"
+			/>
+			<Tool
+				Name="VCPreLinkEventTool"
+			/>
+			<Tool
+				Name="VCLinkerTool"
+				AdditionalDependencies="Newton.lib OgreMain.lib"
+				OutputFile="$(OutDir)/OgreNewt.dll"
+				AdditionalLibraryDirectories="..\NewtonSDK\sdk\dll_vs9;..\ogresdk\lib"
+				RandomizedBaseAddress="1"
+				DataExecutionPrevention="0"
+				ImportLibrary="$(OutDir)/OgreNewt.lib"
+			/>
+			<Tool
+				Name="VCALinkTool"
+			/>
+			<Tool
+				Name="VCManifestTool"
+			/>
+			<Tool
+				Name="VCXDCMakeTool"
+			/>
+			<Tool
+				Name="VCBscMakeTool"
+			/>
+			<Tool
+				Name="VCFxCopTool"
+			/>
+			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
+				Name="VCPostBuildEventTool"
+			/>
+		</Configuration>
+	</Configurations>
+	<References>
+	</References>
+	<Files>
+		<Filter
+			Name="src"
+			Filter="cpp;c;cxx;def;odl;idl;hpj;bat;asm;asmx"
+			UniqueIdentifier="{4FC737F1-C7A5-4376-A066-2A32D752A2FF}"
+			>
+			<File
+				RelativePath=".\src\OgreNewt_BasicJoints.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_Body.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_Collision.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_CollisionPrimitives.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_CollisionSerializer.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_ContactCallback.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_Debugger.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_Joint.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_MaterialID.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_MaterialPair.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_RayCast.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_Tools.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_Vehicle.cpp"
+				>
+			</File>
+			<File
+				RelativePath=".\src\OgreNewt_World.cpp"
+				>
+			</File>
+		</Filter>
+		<Filter
+			Name="header"
+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
+			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
+			>
+			<File
+				RelativePath=".\inc\OgreNewt.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_BasicJoints.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_Body.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_BodyIterator.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_Collision.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_CollisionPrimitives.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_CollisionSerializer.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_ContactCallback.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_Debugger.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_Joint.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_MaterialID.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_MaterialPair.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_Prerequisites.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_RayCast.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_Tools.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_Vehicle.h"
+				>
+			</File>
+			<File
+				RelativePath=".\inc\OgreNewt_World.h"
+				>
+			</File>
+		</Filter>
+		<Filter
+			Name="Resource Files"
+			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx"
+			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
+			>
+		</Filter>
+		<Filter
+			Name="doc"
+			>
+			<File
+				RelativePath=".\DifferencesToOgreCVS.txt"
+				>
+			</File>
+			<File
+				RelativePath=".\README"
+				>
+			</File>
+		</Filter>
+	</Files>
+	<Globals>
+	</Globals>
+</VisualStudioProject>


Property changes on: dependencies/OgreNewt_ngt/OgreNewt_Main_vc9.vcproj
___________________________________________________________________
Name: svn:executable
   + *

Added: dependencies/OgreNewt_ngt/OgreNewt_vc9.sln
===================================================================
--- dependencies/OgreNewt_ngt/OgreNewt_vc9.sln	2009-01-07 16:11:53 UTC (rev 4697)
+++ dependencies/OgreNewt_ngt/OgreNewt_vc9.sln	2009-01-08 11:34:49 UTC (rev 4698)
@@ -0,0 +1,19 @@
+Microsoft Visual Studio Solution File, Format Version 10.00
+# Visual C++ Express 2008
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "OgreNewt_Main", "OgreNewt_Main_vc9.vcproj", "{DCC3C838-9803-497D-8C32-A5985644CCE9}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|Win32 = Debug|Win32
+		Release|Win32 = Release|Win32
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{DCC3C838-9803-497D-8C32-A5985644CCE9}.Debug|Win32.ActiveCfg = Debug|Win32
+		{DCC3C838-9803-497D-8C32-A5985644CCE9}.Debug|Win32.Build.0 = Debug|Win32
+		{DCC3C838-9803-497D-8C32-A5985644CCE9}.Release|Win32.ActiveCfg = Release|Win32
+		{DCC3C838-9803-497D-8C32-A5985644CCE9}.Release|Win32.Build.0 = Release|Win32
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+EndGlobal


Property changes on: dependencies/OgreNewt_ngt/OgreNewt_vc9.sln
___________________________________________________________________
Name: svn:executable
   + *



From blakharaz at mail.berlios.de  Thu Jan  8 19:23:55 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Thu, 8 Jan 2009 19:23:55 +0100
Subject: [Dsa-hl-svn] r4699 - in rl/branches/newton20/engine: core/src ui/src
Message-ID: <200901081823.n08INtiH017166@sheep.berlios.de>

Author: blakharaz
Date: 2009-01-08 19:23:34 +0100 (Thu, 08 Jan 2009)
New Revision: 4699

Modified:
   rl/branches/newton20/engine/core/src/PhysicsManager.cpp
   rl/branches/newton20/engine/ui/src/CombatControlState.cpp
Log:
Some fixes for VS2008

Modified: rl/branches/newton20/engine/core/src/PhysicsManager.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/PhysicsManager.cpp	2009-01-08 11:34:49 UTC (rev 4698)
+++ rl/branches/newton20/engine/core/src/PhysicsManager.cpp	2009-01-08 18:23:34 UTC (rev 4699)
@@ -193,12 +193,15 @@
                      body != NULL;
                      body = NewtonWorldGetNextBody(mWorld->getNewtonWorld(), body)  )
                     newtonPerBodyLogProperties(body);
+            }
 #endif
         }
 
 
         if( mDebugMode == 2 )
+        {
             mNewtonDebugger->showDebugInformation(mWorld);
+        }
     }
 
 #ifdef _DEBUG

Modified: rl/branches/newton20/engine/ui/src/CombatControlState.cpp
===================================================================
--- rl/branches/newton20/engine/ui/src/CombatControlState.cpp	2009-01-08 11:34:49 UTC (rev 4698)
+++ rl/branches/newton20/engine/ui/src/CombatControlState.cpp	2009-01-08 18:23:34 UTC (rev 4699)
@@ -319,14 +319,14 @@
         Vector3 pos = Vector3::ZERO;
 
         const Combat::CombatantSet &allies (mCombat->getAllPlayerAllies() );
-        for(Combat::CombatantSet::iterator it = allies.begin(); it != allies.end(); it++)
+        for(Combat::CombatantSet::const_iterator it = allies.begin(); it != allies.end(); it++)
         {
             pos += (*it)->getCreature()->getPosition();
             n++;
         }
 
         const Combat::CombatantSet &opponents (mCombat->getAllPlayerOpponents());
-        for(Combat::CombatantSet::iterator it = opponents.begin(); it != opponents.end(); it++)
+        for(Combat::CombatantSet::const_iterator it = opponents.begin(); it != opponents.end(); it++)
         {
             pos += (*it)->getCreature()->getPosition();
             n++;
@@ -347,12 +347,12 @@
         // get the greatest distance from center from all persons
         Real distance = 0;
         const Combat::CombatantSet &allies (mCombat->getAllPlayerAllies() );
-        for(Combat::CombatantSet::iterator it = allies.begin(); it != allies.end(); it++)
+        for(Combat::CombatantSet::const_iterator it = allies.begin(); it != allies.end(); it++)
         {
             distance = std::max( ( (*it)->getCreature()->getPosition() - center ).length(), distance );
         }
         const Combat::CombatantSet &opponents = mCombat->getAllPlayerOpponents();
-        for(Combat::CombatantSet::iterator it = opponents.begin(); it != opponents.end(); it++)
+        for(Combat::CombatantSet::const_iterator it = opponents.begin(); it != opponents.end(); it++)
         {
             distance = std::max( ( (*it)->getCreature()->getPosition() - center ).length(), distance );
         }



From tedil at mail.berlios.de  Fri Jan  9 22:58:05 2009
From: tedil at mail.berlios.de (tedil at mail.berlios.de)
Date: Fri, 9 Jan 2009 22:58:05 +0100
Subject: [Dsa-hl-svn] r4700 - in modules/common/gui: imagesets schemes
Message-ID: <200901092158.n09Lw56k000947@sheep.berlios.de>

Author: tedil
Date: 2009-01-09 22:57:59 +0100 (Fri, 09 Jan 2009)
New Revision: 4700

Modified:
   modules/common/gui/imagesets/RastullahLook.imageset
   modules/common/gui/imagesets/RastullahLook.png
   modules/common/gui/schemes/RastullahLook.looknfeel
Log:
Fixed some non-pleasant things, such as white text on white background 
etc.


Modified: modules/common/gui/imagesets/RastullahLook.imageset
===================================================================
--- modules/common/gui/imagesets/RastullahLook.imageset	2009-01-08 18:23:34 UTC (rev 4699)
+++ modules/common/gui/imagesets/RastullahLook.imageset	2009-01-09 21:57:59 UTC (rev 4700)
@@ -19,7 +19,7 @@
     <Image Name="MouseTarget" XPos="1" YPos="283" Width="18" Height="20" />
     <Image Name="StaticRight" XPos="116" YPos="263" Width="4" Height="2" />
     <Image Name="TabPaneLeft" XPos="106" YPos="263" Width="4" Height="2" />
-    <Image Name="CheckboxMark" XPos="110" YPos="16" Width="12" Height="12" />
+    <Image Name="CheckboxMark" XPos="44" YPos="395" Width="12" Height="12" />
     <Image Name="EditBoxCarat" XPos="117" YPos="331" Width="3" Height="16" />
     <Image Name="EditBoxRight" XPos="108" YPos="331" Width="5" Height="16" />
     <Image Name="GenericBrush" XPos="40" YPos="350" Width="1" Height="1" />
@@ -32,8 +32,8 @@
     <Image Name="TabPaneLower" XPos="112" YPos="267" Width="2" Height="4" />
     <Image Name="TabPaneRight" XPos="116" YPos="263" Width="4" Height="2" />
     <Image Name="TitlebarLeft" XPos="112" YPos="293" Width="40" Height="25" />
-    <Image Name="CheckboxHover" XPos="110" YPos="30" Width="12" Height="12" />
-    <Image Name="EditBoxMiddle" XPos="53" YPos="331" Width="52" Height="16" />
+    <Image Name="CheckboxHover" XPos="44" YPos="409" Width="12" Height="12" />
+    <Image Name="EditBoxMiddle" XPos="53" YPos="334" Width="52" Height="13" />
     <Image Name="ListboxBottom" XPos="112" YPos="267" Width="2" Height="4" />
     <Image Name="MultiListLeft" XPos="106" YPos="263" Width="4" Height="2" />
     <Image Name="StaticTopLeft" XPos="106" YPos="257" Width="3" Height="3" />
@@ -45,11 +45,11 @@
     <Image Name="VertScrollTop" XPos="182" YPos="2" Width="20" Height="8" />
     <Image Name="WindowTopEdge" XPos="49" YPos="281" Width="6" Height="16" />
     <Image Name="WindowTopLeft" XPos="31" YPos="281" Width="17" Height="16" />
-    <Image Name="CheckboxNormal" XPos="110" YPos="2" Width="12" Height="12" />
+    <Image Name="CheckboxNormal" XPos="44" YPos="381" Width="12" Height="12" />
     <Image Name="ListboxTopLeft" XPos="106" YPos="257" Width="3" Height="3" />
     <Image Name="MenuBottomLeft" XPos="2" YPos="1" Width="4" Height="4" />
     <Image Name="MultiListRight" XPos="116" YPos="263" Width="4" Height="2" />
-    <Image Name="SpinnerUpHover" XPos="82" YPos="110" Width="10" Height="6" />
+    <Image Name="SpinnerUpHover" XPos="200" YPos="320" Width="10" Height="6" />
     <Image Name="StaticBackdrop" XPos="125" YPos="376" Width="8" Height="10" />
     <Image Name="StaticTopRight" XPos="117" YPos="257" Width="3" Height="3" />
     <Image Name="StatusBarRight" XPos="157" YPos="320" Width="5" Height="13" />
@@ -61,7 +61,7 @@
     <Image Name="WindowTopRight" XPos="56" YPos="281" Width="16" Height="16" />
     <Image Name="AltProgressHalf" XPos="109" YPos="89" Width="4" Height="5" />
     <Image Name="AltProgressLeft" XPos="71" YPos="88" Width="8" Height="12" />
-    <Image Name="ComboboxListTop" XPos="148" YPos="48" Width="8" Height="8" />
+    <Image Name="ComboboxListTop" XPos="73" YPos="330" Width="8" Height="8" />
     <Image Name="HeaderBarSortUp" XPos="162" YPos="285" Width="7" Height="7" />
     <Image Name="ItemBackgroundB" XPos="298" YPos="318" Width="15" Height="8" />
     <Image Name="ItemBackgroundL" XPos="290" YPos="303" Width="8" Height="15" />
@@ -79,8 +79,8 @@
     <Image Name="NewTitlebarLeft" XPos="112" YPos="293" Width="40" Height="25" />
     <Image Name="PopupMenuMiddle" XPos="9" YPos="265" Width="6" Height="4" />
     <Image Name="ProgressBarLeft" XPos="71" YPos="74" Width="7" Height="12" />
-    <Image Name="RadioButtonMark" XPos="124" YPos="16" Width="12" Height="12" />
-    <Image Name="SpinnerUpNormal" XPos="68" YPos="110" Width="10" Height="6" />
+    <Image Name="RadioButtonMark" XPos="60" YPos="395" Width="12" Height="12" />
+    <Image Name="SpinnerUpNormal" XPos="174" YPos="320" Width="10" Height="6" />
     <Image Name="StatusBarMiddle" XPos="154" YPos="320" Width="1" Height="13" />
     <Image Name="TooltipLeftEdge" XPos="1" YPos="265" Width="5" Height="4" />
     <Image Name="TooltipTopRight" XPos="19" YPos="257" Width="6" Height="4" />
@@ -89,8 +89,8 @@
     <Image Name="ButtonLeftNormal" XPos="77" YPos="281" Width="13" Height="17" />
     <Image Name="ButtonLeftPushed" XPos="77" YPos="301" Width="13" Height="17" />
     <Image Name="CloseButtonHover" XPos="125" YPos="319" Width="15" Height="15" />
-    <Image Name="ComboboxEditLeft" XPos="138" YPos="2" Width="8" Height="16" />
-    <Image Name="ComboboxListLeft" XPos="138" YPos="48" Width="8" Height="8" />
+    <Image Name="ComboboxEditLeft" XPos="41" YPos="330" Width="8" Height="18" />
+    <Image Name="ComboboxListLeft" XPos="41" YPos="335" Width="8" Height="8" />
     <Image Name="ItemBackgroundBG" XPos="298" YPos="303" Width="15" Height="15" />
     <Image Name="ItemBackgroundBL" XPos="290" YPos="318" Width="8" Height="8" />
     <Image Name="ItemBackgroundBR" XPos="313" YPos="318" Width="8" Height="8" />
@@ -99,8 +99,8 @@
     <Image Name="MultiListTopLeft" XPos="106" YPos="257" Width="3" Height="3" />
     <Image Name="NewTitlebarRight" XPos="213" YPos="293" Width="6" Height="25" />
     <Image Name="ProgressBarRight" XPos="88" YPos="74" Width="6" Height="12" />
-    <Image Name="RadioButtonHover" XPos="124" YPos="30" Width="12" Height="12" />
-    <Image Name="SpinnerDownHover" XPos="82" YPos="118" Width="10" Height="6" />
+    <Image Name="RadioButtonHover" XPos="60" YPos="409" Width="12" Height="12" />
+    <Image Name="SpinnerDownHover" XPos="200" YPos="327" Width="10" Height="6" />
     <Image Name="StaticBottomLeft" XPos="106" YPos="268" Width="3" Height="3" />
     <Image Name="StatusBarFilling" XPos="185" YPos="320" Width="4" Height="13" />
     <Image Name="TabPaneLowerLeft" XPos="106" YPos="268" Width="3" Height="3" />
@@ -123,7 +123,7 @@
     <Image Name="ButtonRightNormal" XPos="94" YPos="281" Width="13" Height="17" />
     <Image Name="ButtonRightPushed" XPos="94" YPos="301" Width="13" Height="17" />
     <Image Name="CloseButtonNormal" XPos="125" YPos="319" Width="15" Height="15" />
-    <Image Name="ComboboxListRight" XPos="158" YPos="48" Width="8" Height="8" />
+    <Image Name="ComboboxListRight" XPos="106" YPos="335" Width="8" Height="8" />
     <Image Name="HeaderBarSortDown" XPos="170" YPos="285" Width="7" Height="7" />
     <Image Name="ListboxBottomLeft" XPos="106" YPos="268" Width="3" Height="3" />
     <Image Name="MultiListBackdrop" XPos="125" YPos="376" Width="8" Height="10" />
@@ -131,8 +131,8 @@
     <Image Name="NewTitlebarMiddle" XPos="152" YPos="293" Width="61" Height="25" />
     <Image Name="PopupMenuFrameTop" XPos="9" YPos="257" Width="6" Height="4" />
     <Image Name="ProgressBarMiddle" XPos="80" YPos="74" Width="6" Height="12" />
-    <Image Name="RadioButtonNormal" XPos="124" YPos="2" Width="12" Height="12" />
-    <Image Name="SpinnerDownNormal" XPos="68" YPos="118" Width="10" Height="6" />
+    <Image Name="RadioButtonNormal" XPos="60" YPos="381" Width="12" Height="12" />
+    <Image Name="SpinnerDownNormal" XPos="174" YPos="327" Width="10" Height="6" />
     <Image Name="StaticBottomRight" XPos="117" YPos="268" Width="3" Height="3" />
     <Image Name="TabPaneLowerRight" XPos="117" YPos="268" Width="3" Height="3" />
     <Image Name="TooltipBottomEdge" XPos="9" YPos="273" Width="6" Height="4" />
@@ -144,18 +144,18 @@
     <Image Name="ButtonMiddleNormal" XPos="91" YPos="281" Width="2" Height="17" />
     <Image Name="ButtonMiddlePushed" XPos="91" YPos="301" Width="2" Height="17" />
     <Image Name="CloseButtonPressed" XPos="125" YPos="319" Width="15" Height="15" />
-    <Image Name="ComboboxEditMiddle" XPos="148" YPos="2" Width="8" Height="16" />
-    <Image Name="ComboboxListBottom" XPos="148" YPos="58" Width="8" Height="8" />
+    <Image Name="ComboboxEditMiddle" XPos="66" YPos="330" Width="8" Height="18" />
+    <Image Name="ComboboxListBottom" XPos="73" YPos="340" Width="8" Height="8" />
     <Image Name="ListboxBottomRight" XPos="117" YPos="268" Width="3" Height="3" />
     <Image Name="PopupMenuArrowLeft" XPos="2" YPos="1" Width="4" Height="4" />
     <Image Name="PopupMenuFrameLeft" XPos="1" YPos="265" Width="5" Height="4" />
     <Image Name="TabContentPaneLeft" XPos="106" YPos="263" Width="4" Height="2" />
-    <Image Name="TextSelectionBrush" XPos="8" YPos="70" Width="16" Height="16" />
+    <Image Name="TextSelectionBrush" XPos="162" YPos="340" Width="16" Height="16" />
     <Image Name="TooltipBottomRight" XPos="19" YPos="273" Width="6" Height="4" />
     <Image Name="VertScrollUpNormal" XPos="196" YPos="32" Width="12" Height="12" />
     <Image Name="ButtonLeftHighlight" XPos="77" YPos="350" Width="13" Height="17" />
     <Image Name="ComboboxDividerLeft" XPos="138" YPos="68" Width="14" Height="1" />
-    <Image Name="ComboboxListTopLeft" XPos="138" YPos="38" Width="8" Height="8" />
+    <Image Name="ComboboxListTopLeft" XPos="41" YPos="330" Width="8" Height="8" />
     <Image Name="HorzScrollLeftHover" XPos="181" YPos="257" Width="15" Height="14" />
     <Image Name="MultiLineEditboxTop" XPos="269" YPos="258" Width="6" Height="7" />
     <Image Name="MultiListBottomLeft" XPos="106" YPos="268" Width="3" Height="3" />
@@ -170,8 +170,8 @@
     <Image Name="VertScrollDownHover" XPos="182" YPos="46" Width="12" Height="12" />
     <Image Name="ButtonRightHighlight" XPos="94" YPos="350" Width="13" Height="17" />
     <Image Name="ComboboxDividerRight" XPos="164" YPos="68" Width="14" Height="1" />
-    <Image Name="ComboboxListBackdrop" XPos="148" YPos="48" Width="8" Height="8" />
-    <Image Name="ComboboxListTopRight" XPos="158" YPos="38" Width="8" Height="8" />
+    <Image Name="ComboboxListBackdrop" XPos="73" YPos="335" Width="8" Height="8" />
+    <Image Name="ComboboxListTopRight" XPos="106" YPos="330" Width="8" Height="8" />
     <Image Name="HorzScrollBarSegment" XPos="174" YPos="274" Width="4" Height="7" />
     <Image Name="HorzScrollLeftNormal" XPos="181" YPos="257" Width="15" Height="14" />
     <Image Name="HorzScrollRightHover" XPos="161" YPos="257" Width="16" Height="14" />
@@ -193,7 +193,7 @@
     <Image Name="ComboboxDividerMiddle" XPos="154" YPos="68" Width="8" Height="1" />
     <Image Name="HorzScrollRightNormal" XPos="161" YPos="257" Width="16" Height="14" />
     <Image Name="HorzScrollThumbNormal" XPos="1" YPos="500" Width="26" Height="11" />
-    <Image Name="ListboxSelectionBrush" XPos="40" YPos="350" Width="16" Height="16" />
+    <Image Name="ListboxSelectionBrush" XPos="77" YPos="412" Width="16" Height="16" />
     <Image Name="MiniVertScrollUpHover" XPos="123" YPos="257" Width="11" Height="13" />
     <Image Name="MultiLineEditboxRight" XPos="278" YPos="268" Width="5" Height="2" />
     <Image Name="NewCloseButtonPressed" XPos="125" YPos="319" Width="15" Height="15" />
@@ -205,8 +205,8 @@
     <Image Name="TabButtonMiddleNormal" XPos="47" YPos="266" Width="2" Height="2" />
     <Image Name="VertScrollThumbNormal" XPos="214" YPos="2" Width="8" Height="24" />
     <Image Name="VertSliderThumbNormal" XPos="217" YPos="28" Width="15" Height="6" />
-    <Image Name="ComboboxListBottomLeft" XPos="138" YPos="58" Width="8" Height="8" />
-    <Image Name="ComboboxSelectionBrush" XPos="8" YPos="70" Width="16" Height="16" />
+    <Image Name="ComboboxListBottomLeft" XPos="41" YPos="340" Width="8" Height="8" />
+    <Image Name="ComboboxSelectionBrush" XPos="162" YPos="340" Width="16" Height="16" />
     <Image Name="HeaderBarBackdropHover" XPos="88" YPos="373" Width="4" Height="17" />
     <Image Name="HeaderBarSplitterHover" XPos="95" YPos="373" Width="2" Height="17" />
     <Image Name="MiniVertScrollUpNormal" XPos="123" YPos="257" Width="11" Height="13" />
@@ -215,18 +215,18 @@
     <Image Name="TabButtonLowerSelected" XPos="85" YPos="270" Width="2" Height="8" />
     <Image Name="TabButtonRightSelected" XPos="88" YPos="267" Width="11" Height="2" />
     <Image Name="TabButtonUpperSelected" XPos="85" YPos="257" Width="2" Height="9" />
-    <Image Name="ComboboxListBottomRight" XPos="158" YPos="58" Width="8" Height="8" />
-    <Image Name="ComboboxListButtonHover" XPos="158" YPos="20" Width="16" Height="16" />
+    <Image Name="ComboboxListBottomRight" XPos="106" YPos="340" Width="8" Height="8" />
+    <Image Name="ComboboxListButtonHover" XPos="95" YPos="394" Width="16" Height="16" />
     <Image Name="HeaderBarBackdropNormal" XPos="77" YPos="373" Width="4" Height="17" />
     <Image Name="HeaderBarSplitterNormal" XPos="105" YPos="373" Width="2" Height="17" />
     <Image Name="MiniHorzScrollLeftHover" XPos="181" YPos="257" Width="15" Height="14" />
     <Image Name="MiniVertScrollDownHover" XPos="136" YPos="259" Width="11" Height="13" />
     <Image Name="MultiLineEditboxTopLeft" XPos="258" YPos="258" Width="8" Height="7" />
-    <Image Name="MultiListSelectionBrush" XPos="40" YPos="350" Width="16" Height="16" />
+    <Image Name="MultiListSelectionBrush" XPos="77" YPos="412" Width="16" Height="16" />
     <Image Name="TabButtonMiddleSelected" XPos="85" YPos="267" Width="2" Height="2" />
     <Image Name="TabContentPaneLowerLeft" XPos="106" YPos="268" Width="3" Height="3" />
     <Image Name="TabContentPaneUpperLeft" XPos="106" YPos="268" Width="3" Height="3" />
-    <Image Name="ComboboxListButtonNormal" XPos="158" YPos="2" Width="16" Height="16" />
+    <Image Name="ComboboxListButtonNormal" XPos="77" YPos="394" Width="16" Height="16" />
     <Image Name="HorzScrollThumbLeftHover" XPos="220" YPos="272" Width="9" Height="14" />
     <Image Name="MiniHorzScrollBarSegment" XPos="174" YPos="274" Width="4" Height="7" />
     <Image Name="MiniHorzScrollLeftNormal" XPos="181" YPos="257" Width="15" Height="14" />
@@ -235,7 +235,7 @@
     <Image Name="MiniVertScrollBarSegment" XPos="163" YPos="275" Width="7" Height="4" />
     <Image Name="MiniVertScrollDownNormal" XPos="136" YPos="259" Width="11" Height="13" />
     <Image Name="MiniVertScrollThumbHover" XPos="1" YPos="495" Width="11" Height="26" />
-    <Image Name="MultiLineEditboxBackdrop" XPos="1" YPos="1" Width="254" Height="254" />
+    <Image Name="MultiLineEditboxBackdrop" XPos="41" YPos="334" Width="73" Height="13" />
     <Image Name="MultiLineEditboxTopRight" XPos="278" YPos="258" Width="5" Height="7" />
     <Image Name="PopupMenuFrameBottomLeft" XPos="1" YPos="273" Width="5" Height="4" />
     <Image Name="TabButtonLowerLeftNormal" XPos="35" YPos="269" Width="11" Height="9" />
@@ -275,7 +275,7 @@
     <Image Name="MiniHorzScrollThumbRightNormal" XPos="242" YPos="257" Width="10" Height="14" />
     <Image Name="MiniVertScrollThumbBottomHover" XPos="149" YPos="279" Width="11" Height="9" />
     <Image Name="MiniVertScrollThumbMiddleHover" XPos="136" YPos="279" Width="11" Height="7" />
-    <Image Name="MultiLineEditboxSelectionBrush" XPos="40" YPos="350" Width="16" Height="16" />
+    <Image Name="MultiLineEditboxSelectionBrush" XPos="77" YPos="412" Width="16" Height="16" />
     <Image Name="TransparentMultiLineEditboxTop" XPos="49" YPos="368" Width="3" Height="3" />
     <Image Name="MiniHorzScrollThumbMiddleNormal" XPos="229" YPos="257" Width="13" Height="14" />
     <Image Name="MiniVertScrollThumbBottomNormal" XPos="149" YPos="279" Width="11" Height="9" />

Modified: modules/common/gui/imagesets/RastullahLook.png
===================================================================
(Binary files differ)

Modified: modules/common/gui/schemes/RastullahLook.looknfeel
===================================================================
--- modules/common/gui/schemes/RastullahLook.looknfeel	2009-01-08 18:23:34 UTC (rev 4699)
+++ modules/common/gui/schemes/RastullahLook.looknfeel	2009-01-09 21:57:59 UTC (rev 4700)
@@ -503,9 +503,9 @@
 
 	<!-- RastullahLook/Container -->
 	<WidgetLook name="RastullahLook/Container">
-		<PropertyDefinition	name="ContainerColour" initialValue="FFFFFFFF" redrawOnWrite="true" />
-		<PropertyDefinition	name="ContainerColour_Standard" initialValue="FFFFFFFF" redrawOnWrite="true" />
-		<PropertyDefinition	name="ContainerColour_DropPossible" initialValue="FF9FB9FF" redrawOnWrite="true" />
+		<PropertyDefinition	name="ContainerColour" initialValue="FF3C3C3C" redrawOnWrite="true" />
+		<PropertyDefinition	name="ContainerColour_Standard" initialValue="FF3C3C3C" redrawOnWrite="true" />
+		<PropertyDefinition	name="ContainerColour_DropPossible" initialValue="FF99A4C2" redrawOnWrite="true" />
 		<PropertyDefinition	name="ContainerColour_DropImpossible" initialValue="FFFF4700" redrawOnWrite="true" />
 		<PropertyDefinition	name="ContainerColour_DropReady" initialValue="FFBCFF56" redrawOnWrite="true" />
 
@@ -1147,7 +1147,7 @@
     <WidgetLook name="RastullahLook/Editbox">
         <PropertyDefinition name="NormalTextColour" initialValue="FF000000" redrawOnWrite="true" />
         <PropertyDefinition name="SelectedTextColour" initialValue="FF000055" redrawOnWrite="true" />
-        <PropertyDefinition name="ActiveSelectionColour" initialValue="FFE4D243" redrawOnWrite="true" />
+        <PropertyDefinition name="ActiveSelectionColour" initialValue="FF727272" redrawOnWrite="true" />
         <PropertyDefinition name="InactiveSelectionColour" initialValue="FFC4B223" redrawOnWrite="true" />
         <Property name="MouseCursorImage" value="set:RastullahLook-Images image:MouseTextBar" />
         <NamedArea name="TextArea">
@@ -2732,9 +2732,9 @@
     -->
     <WidgetLook name="RastullahLook/Combobox">
         <PropertyLinkDefinition name="NormalEditTextColour" widget="__auto_editbox__" targetProperty="NormalTextColour" initialValue="FFFFFFFF" />
-        <PropertyLinkDefinition name="SelectedEditTextColour" widget="__auto_editbox__" targetProperty="SelectedTextColour" initialValue="FF000000" />
+        <PropertyLinkDefinition name="SelectedEditTextColour" widget="__auto_editbox__" targetProperty="SelectedTextColour" initialValue="FF3C3C3C" />
         <PropertyLinkDefinition name="ActiveEditSelectionColour" widget="__auto_editbox__" targetProperty="ActiveSelectionColour" initialValue="FF6060FF" />
-        <PropertyLinkDefinition name="InactiveEditSelectionColour" widget="__auto_editbox__" targetProperty="InactiveSelectionColour" initialValue="FF808080" />
+        <PropertyLinkDefinition name="InactiveEditSelectionColour" widget="__auto_editbox__" targetProperty="InactiveSelectionColour" initialValue="FFA7A7A7" />
         <Child  type="RastullahLook/ComboEditbox" nameSuffix="__auto_editbox__">
             <Area>
                 <Dim type="LeftEdge" ><AbsoluteDim value="0" /></Dim>
@@ -4374,7 +4374,7 @@
     ***************************************************
     -->
     <WidgetLook name="RastullahLook/MenuItem">
-        <PropertyDefinition name="NormalTextColour" initialValue="FF292a2e" redrawOnWrite="true" />
+        <PropertyDefinition name="NormalTextColour" initialValue="FFCFCFCF" redrawOnWrite="true" />
         <PropertyDefinition name="DisabledTextColour" initialValue="FF7F7F7F" redrawOnWrite="true" />
         <PropertyDefinition name="HoverTextColour" initialValue="FFFFFFFF" redrawOnWrite="true" />
         <PropertyDefinition name="PushedTextColour" initialValue="FFFFFFFF" redrawOnWrite="true" />



From chrber at mail.berlios.de  Sat Jan 10 16:16:32 2009
From: chrber at mail.berlios.de (chrber at mail.berlios.de)
Date: Sat, 10 Jan 2009 16:16:32 +0100
Subject: [Dsa-hl-svn] r4701 - dependencies/OgreNewt_ngt
Message-ID: <200901101516.n0AFGWnD029063@sheep.berlios.de>

Author: chrber
Date: 2009-01-10 16:16:31 +0100 (Sat, 10 Jan 2009)
New Revision: 4701

Modified:
   dependencies/OgreNewt_ngt/CMakeLists.txt
Log:
Removed OgreNewt::BasicFrameListener from the build


Modified: dependencies/OgreNewt_ngt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-09 21:57:59 UTC (rev 4700)
+++ dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-10 15:16:31 UTC (rev 4701)
@@ -69,7 +69,6 @@
 ${NEWTON_INCLUDE_DIR})
 
 SET(OgreNewt_LIB_SRCS
-src/OgreNewt_BasicFrameListener.cpp
 src/OgreNewt_BasicJoints.cpp
 src/OgreNewt_Body.cpp
 src/OgreNewt_Collision.cpp
@@ -101,7 +100,7 @@
         RUNTIME DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
         ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
 
-INSTALL(FILES inc/OgreNewt_BasicFrameListener.h inc/OgreNewt_BasicJoints.h
+INSTALL(FILES inc/OgreNewt_BasicJoints.h
 inc/OgreNewt_Body.h inc/OgreNewt_BodyIterator.h inc/OgreNewt_Collision.h
 inc/OgreNewt_CollisionPrimitives.h inc/OgreNewt_CollisionSerializer.h
 inc/OgreNewt_ContactCallback.h inc/OgreNewt_Debugger.h inc/OgreNewt.h



From tanis at mail.berlios.de  Mon Jan 12 00:49:42 2009
From: tanis at mail.berlios.de (tanis at mail.berlios.de)
Date: Mon, 12 Jan 2009 00:49:42 +0100
Subject: [Dsa-hl-svn] r4702 - dependencies/OgreNewt
Message-ID: <200901112349.n0BNngQa025389@sheep.berlios.de>

Author: tanis
Date: 2009-01-12 00:49:29 +0100 (Mon, 12 Jan 2009)
New Revision: 4702

Modified:
   dependencies/OgreNewt/CMakeLists.txt
Log:
remove "cd .." from file head.


Modified: dependencies/OgreNewt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt/CMakeLists.txt	2009-01-10 15:16:31 UTC (rev 4701)
+++ dependencies/OgreNewt/CMakeLists.txt	2009-01-11 23:49:29 UTC (rev 4702)
@@ -1,4 +1,4 @@
-cd ..PROJECT(OgreNewt)
+PROJECT(OgreNewt)
 
 CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
 
@@ -56,7 +56,7 @@
 # Check for required components
 FIND_PACKAGE(PkgConfig)
 FIND_PACKAGE(OGRE 1.4 REQUIRED)
-FIND_PACKAGE(Newton 1.53 EXACT REQUIRED)
+FIND_PACKAGE(Newton)
 
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include/OgreNewt



From blakharaz at mail.berlios.de  Mon Jan 12 01:03:02 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Mon, 12 Jan 2009 01:03:02 +0100
Subject: [Dsa-hl-svn] r4703 - in rl/trunk/engine: ai common core rules
	script ui
Message-ID: <200901120003.n0C0323w009787@sheep.berlios.de>

Author: blakharaz
Date: 2009-01-12 01:02:53 +0100 (Mon, 12 Jan 2009)
New Revision: 4703

Modified:
   rl/trunk/engine/ai/CMakeLists.txt
   rl/trunk/engine/common/CMakeLists.txt
   rl/trunk/engine/core/CMakeLists.txt
   rl/trunk/engine/rules/CMakeLists.txt
   rl/trunk/engine/script/CMakeLists.txt
   rl/trunk/engine/ui/CMakeLists.txt
Log:
Fixed .SO version in cmake files


Modified: rl/trunk/engine/ai/CMakeLists.txt
===================================================================
--- rl/trunk/engine/ai/CMakeLists.txt	2009-01-11 23:49:29 UTC (rev 4702)
+++ rl/trunk/engine/ai/CMakeLists.txt	2009-01-12 00:02:53 UTC (rev 4703)
@@ -51,7 +51,7 @@
 
 SET_TARGET_PROPERTIES(RlAi PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLAI_EXPORTS)
 
-INSTALL(TARGETS RlAi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlAi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Modified: rl/trunk/engine/common/CMakeLists.txt
===================================================================
--- rl/trunk/engine/common/CMakeLists.txt	2009-01-11 23:49:29 UTC (rev 4702)
+++ rl/trunk/engine/common/CMakeLists.txt	2009-01-12 00:02:53 UTC (rev 4703)
@@ -30,7 +30,7 @@
 
 SET_TARGET_PROPERTIES(RlCommon PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLCOMMON_EXPORTS)
 
-INSTALL(TARGETS RlCommon LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlCommon LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Modified: rl/trunk/engine/core/CMakeLists.txt
===================================================================
--- rl/trunk/engine/core/CMakeLists.txt	2009-01-11 23:49:29 UTC (rev 4702)
+++ rl/trunk/engine/core/CMakeLists.txt	2009-01-12 00:02:53 UTC (rev 4703)
@@ -95,7 +95,7 @@
 
 SET_TARGET_PROPERTIES(RlCore PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLCORE_EXPORTS)
 
-INSTALL(TARGETS RlCore LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlCore LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Modified: rl/trunk/engine/rules/CMakeLists.txt
===================================================================
--- rl/trunk/engine/rules/CMakeLists.txt	2009-01-11 23:49:29 UTC (rev 4702)
+++ rl/trunk/engine/rules/CMakeLists.txt	2009-01-12 00:02:53 UTC (rev 4703)
@@ -80,7 +80,7 @@
 
 SET_TARGET_PROPERTIES(RlRules PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLRULES_EXPORTS)
 
-INSTALL(TARGETS RlRules LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlRules LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Modified: rl/trunk/engine/script/CMakeLists.txt
===================================================================
--- rl/trunk/engine/script/CMakeLists.txt	2009-01-11 23:49:29 UTC (rev 4702)
+++ rl/trunk/engine/script/CMakeLists.txt	2009-01-12 00:02:53 UTC (rev 4703)
@@ -40,7 +40,7 @@
 
 SET_TARGET_PROPERTIES(RlScript PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLSCRIPT_EXPORTS)
 
 IF(NOT WIN32)
@@ -48,4 +48,4 @@
 		LINK_FLAGS "-Wl,--defsym -Wl,Init_libRlScript=Init_RlScript")
 ENDIF(NOT WIN32)
 
-INSTALL(TARGETS RlScript LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlScript LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Modified: rl/trunk/engine/ui/CMakeLists.txt
===================================================================
--- rl/trunk/engine/ui/CMakeLists.txt	2009-01-11 23:49:29 UTC (rev 4702)
+++ rl/trunk/engine/ui/CMakeLists.txt	2009-01-12 00:02:53 UTC (rev 4703)
@@ -71,7 +71,7 @@
 
 SET_TARGET_PROPERTIES(RlUi PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLUI_EXPORTS)
 
-INSTALL(TARGETS RlUi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlUi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)



From tanis at mail.berlios.de  Mon Jan 12 22:12:00 2009
From: tanis at mail.berlios.de (tanis at mail.berlios.de)
Date: Mon, 12 Jan 2009 22:12:00 +0100
Subject: [Dsa-hl-svn] r4704 - rl/trunk/engine/common/include
Message-ID: <200901122112.n0CLC0vH029253@sheep.berlios.de>

Author: tanis
Date: 2009-01-12 22:11:59 +0100 (Mon, 12 Jan 2009)
New Revision: 4704

Modified:
   rl/trunk/engine/common/include/Exception.h
Log:
fixed gcc warnings.


Modified: rl/trunk/engine/common/include/Exception.h
===================================================================
--- rl/trunk/engine/common/include/Exception.h	2009-01-12 00:02:53 UTC (rev 4703)
+++ rl/trunk/engine/common/include/Exception.h	2009-01-12 21:11:59 UTC (rev 4704)
@@ -24,6 +24,7 @@
 
 #include "CommonPrerequisites.h"
 #include <string>
+#include <iostream>
 
 #if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
 #  include <Windows.h>
@@ -401,7 +402,7 @@
          MessageBox(NULL, message.c_str(), "Meldung",
             MB_OK | MB_ICONINFORMATION | MB_TOPMOST);
 #     else
-         printf(message.c_str());
+         std::cout << message << std::endl;
 #     endif
    }
 
@@ -418,7 +419,7 @@
          MessageBox(NULL, message.c_str(), "Fehler",
             MB_OK | MB_ICONERROR | MB_TOPMOST);
 #     else
-         fprintf(stderr, message.c_str());
+         std::cerr << message << std::endl;
 #     endif
    }
 }



From tanis at mail.berlios.de  Mon Jan 12 22:12:53 2009
From: tanis at mail.berlios.de (tanis at mail.berlios.de)
Date: Mon, 12 Jan 2009 22:12:53 +0100
Subject: [Dsa-hl-svn] r4705 - rl/trunk/engine/ui/src
Message-ID: <200901122112.n0CLCrP5029340@sheep.berlios.de>

Author: tanis
Date: 2009-01-12 22:12:52 +0100 (Mon, 12 Jan 2009)
New Revision: 4705

Modified:
   rl/trunk/engine/ui/src/InputManager.cpp
Log:
By default don't grab mouse and keyboard exclusivly in Linux.


Modified: rl/trunk/engine/ui/src/InputManager.cpp
===================================================================
--- rl/trunk/engine/ui/src/InputManager.cpp	2009-01-12 21:11:59 UTC (rev 4704)
+++ rl/trunk/engine/ui/src/InputManager.cpp	2009-01-12 21:12:52 UTC (rev 4705)
@@ -122,8 +122,8 @@
             pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL_EXCLUSIVE")));
             pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL_FOREGROUND")));
         #elif OGRE_PLATFORM == OGRE_PLATFORM_LINUX & defined DEBUG
-//            pl.insert(std::make_pair(std::string("x11_mouse_grab"), std::string("false")));
-//            pl.insert(std::make_pair(std::string("x11_keyboard_grab"), std::string("false")));
+            pl.insert(std::make_pair(std::string("x11_mouse_grab"), std::string("false")));
+            pl.insert(std::make_pair(std::string("x11_keyboard_grab"), std::string("false")));
         #endif
 
         std::ostringstream windowHndStr;



From tanis at mail.berlios.de  Mon Jan 12 22:18:08 2009
From: tanis at mail.berlios.de (tanis at mail.berlios.de)
Date: Mon, 12 Jan 2009 22:18:08 +0100
Subject: [Dsa-hl-svn] r4706 - rl/trunk/engine/common/include
Message-ID: <200901122118.n0CLI8gs029791@sheep.berlios.de>

Author: tanis
Date: 2009-01-12 22:18:07 +0100 (Mon, 12 Jan 2009)
New Revision: 4706

Modified:
   rl/trunk/engine/common/include/XmlProcessor.h
Log:
fix gcc warnings.


Modified: rl/trunk/engine/common/include/XmlProcessor.h
===================================================================
--- rl/trunk/engine/common/include/XmlProcessor.h	2009-01-12 21:12:52 UTC (rev 4705)
+++ rl/trunk/engine/common/include/XmlProcessor.h	2009-01-12 21:18:07 UTC (rev 4706)
@@ -23,7 +23,10 @@
 #include <xercesc/sax/ErrorHandler.hpp>
 #include <xercesc/sax2/Attributes.hpp>
 
-class XERCES_CPP_NAMESPACE::SAXParseException;
+namespace XERCES_CPP_NAMESPACE
+{
+    class SAXParseException;
+}
 
 #include "CommonPrerequisites.h"
 



From blakharaz at mail.berlios.de  Mon Jan 12 22:21:26 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Mon, 12 Jan 2009 22:21:26 +0100
Subject: [Dsa-hl-svn] r4707 - dependencies/OgreNewt dependencies/opensteer
	rl/trunk
Message-ID: <200901122121.n0CLLQKd030362@sheep.berlios.de>

Author: blakharaz
Date: 2009-01-12 22:21:23 +0100 (Mon, 12 Jan 2009)
New Revision: 4707

Modified:
   dependencies/OgreNewt/CMakeLists.txt
   dependencies/opensteer/CMakeLists.txt
   rl/trunk/CMakeLists.txt
Log:
Changed cmake version checks to 2.6.0, changed OgreNewt version and check to 1.53


Modified: dependencies/OgreNewt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt/CMakeLists.txt	2009-01-12 21:18:07 UTC (rev 4706)
+++ dependencies/OgreNewt/CMakeLists.txt	2009-01-12 21:21:23 UTC (rev 4707)
@@ -1,6 +1,6 @@
 PROJECT(OgreNewt)
 
-CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0 FATAL_ERROR)
 
 # Package and version information
 SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Ogre Bindings for the Newton Physics SDK")

Modified: dependencies/opensteer/CMakeLists.txt
===================================================================
--- dependencies/opensteer/CMakeLists.txt	2009-01-12 21:18:07 UTC (rev 4706)
+++ dependencies/opensteer/CMakeLists.txt	2009-01-12 21:21:23 UTC (rev 4707)
@@ -1,6 +1,6 @@
 PROJECT(OpenSteer)
 
-CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0 FATAL_ERROR)
 
 # Package and version information
 SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "OpenSteer Info goes here")

Modified: rl/trunk/CMakeLists.txt
===================================================================
--- rl/trunk/CMakeLists.txt	2009-01-12 21:18:07 UTC (rev 4706)
+++ rl/trunk/CMakeLists.txt	2009-01-12 21:21:23 UTC (rev 4707)
@@ -1,6 +1,6 @@
 PROJECT(RL)
 
-CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2 FATAL_ERROR)
+CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0 FATAL_ERROR)
 
 # Include required cmake macros
 INCLUDE(FeatureSummary)
@@ -29,7 +29,7 @@
 FIND_PACKAGE(OIS REQUIRED)
 FIND_PACKAGE(CEGUI REQUIRED)
 FIND_PACKAGE(CEGUIOGRE 1.6 REQUIRED)
-FIND_PACKAGE(OgreNewt 1.53 EXACT REQUIRED)
+FIND_PACKAGE(OgreNewt 1.53 REQUIRED)
 FIND_PACKAGE(OpenSteer REQUIRED)
 FIND_PACKAGE(MeshMagick 0.5 REQUIRED)
 FIND_PACKAGE(Ruby REQUIRED)



From tanis at mail.berlios.de  Mon Jan 12 23:35:44 2009
From: tanis at mail.berlios.de (tanis at mail.berlios.de)
Date: Mon, 12 Jan 2009 23:35:44 +0100
Subject: [Dsa-hl-svn] r4708 - in rl/trunk/engine: core/include ui/include
Message-ID: <200901122235.n0CMZiq0011141@sheep.berlios.de>

Author: tanis
Date: 2009-01-12 23:35:42 +0100 (Mon, 12 Jan 2009)
New Revision: 4708

Modified:
   rl/trunk/engine/core/include/DotSceneLoader.h
   rl/trunk/engine/core/include/MeshAnimation.h
   rl/trunk/engine/ui/include/RenderSystemConfigComponent.h
Log:
Fixed more gcc warnings. Now compiles without warnings with default settings.


Modified: rl/trunk/engine/core/include/DotSceneLoader.h
===================================================================
--- rl/trunk/engine/core/include/DotSceneLoader.h	2009-01-12 21:21:23 UTC (rev 4707)
+++ rl/trunk/engine/core/include/DotSceneLoader.h	2009-01-12 22:35:42 UTC (rev 4708)
@@ -31,8 +31,13 @@
 #include "XmlResourceManager.h"
 #include "XmlPropertyReader.h"
 
-class Ogre::SceneNode;
-class XERCES_CPP_NAMESPACE::DOMElement;
+namespace Ogre {
+	class SceneNode;
+}
+
+namespace XERCES_CPP_NAMESPACE {
+	class DOMElement;
+}
 
 namespace rl {
 

Modified: rl/trunk/engine/core/include/MeshAnimation.h
===================================================================
--- rl/trunk/engine/core/include/MeshAnimation.h	2009-01-12 21:21:23 UTC (rev 4707)
+++ rl/trunk/engine/core/include/MeshAnimation.h	2009-01-12 22:35:42 UTC (rev 4708)
@@ -23,7 +23,10 @@
 #include <map>
 #include "BaseAnimation.h"
 
-class Ogre::Animation;
+namespace Ogre
+{
+	class Animation;
+}
 
 namespace rl {
 

Modified: rl/trunk/engine/ui/include/RenderSystemConfigComponent.h
===================================================================
--- rl/trunk/engine/ui/include/RenderSystemConfigComponent.h	2009-01-12 21:21:23 UTC (rev 4707)
+++ rl/trunk/engine/ui/include/RenderSystemConfigComponent.h	2009-01-12 22:35:42 UTC (rev 4708)
@@ -20,10 +20,13 @@
 #include "UiPrerequisites.h"
 #include "ConfigComponent.h"
 
+namespace Ogre
+{
+    class RenderSystem;
+}
+
 namespace rl
 {
-    class Ogre::RenderSystem;
-
     class _RlUiExport RenderSystemConfigComponent : public ConfigComponent
     {
     public:



From timm at mail.berlios.de  Sat Jan 17 11:09:53 2009
From: timm at mail.berlios.de (timm at mail.berlios.de)
Date: Sat, 17 Jan 2009 11:09:53 +0100
Subject: [Dsa-hl-svn] r4709 - in modules: common/materials/programs
	common/materials/programs/Normalmapping kanalisation/materials
Message-ID: <200901171009.n0HA9rsB021776@sheep.berlios.de>

Author: timm
Date: 2009-01-17 11:09:45 +0100 (Sat, 17 Jan 2009)
New Revision: 4709

Added:
   modules/common/materials/programs/Normalmapping/Basic_Normalmapping.frag
   modules/common/materials/programs/Normalmapping/Basic_Normalmapping_UV0.vert
Modified:
   modules/common/materials/programs/Basic_Vertex_Shader.program
   modules/common/materials/programs/Normalmapping/Basic_Normalmapping.material
   modules/common/materials/programs/Normalmapping/Normalmapping.program
   modules/kanalisation/materials/Normalmapping.program
Log:
Basic Normalmapshader for OpenGL
And unified program for basic vertex/pixel shader

Modified: modules/common/materials/programs/Basic_Vertex_Shader.program
===================================================================
--- modules/common/materials/programs/Basic_Vertex_Shader.program	2009-01-12 22:35:42 UTC (rev 4708)
+++ modules/common/materials/programs/Basic_Vertex_Shader.program	2009-01-17 10:09:45 UTC (rev 4709)
@@ -38,6 +38,10 @@
 fragment_program Basic_Pixel_Shader_glsl glsl
 {
 	source Basic_Pixel_Shader_glsl.source
+	default_params
+	{
+		param_named baseMap int 0
+	}
 }
 
 vertex_program Basic_Vertex_Shader_SR hlsl
@@ -57,7 +61,6 @@
 fragment_program Basic_Pixel_ShaderUV1_glsl glsl
 {
 	source Basic_Pixel_ShaderUV1_glsl.source
-
 }
 
 vertex_program Skin_Vertex_Shader hlsl
@@ -71,7 +74,19 @@
 	source Skin_Vertex_Shader_glsl.source
 }
 
+vertex_program Basic_Vertex_Unified unified
+{
+	delegate Basic_Vertex_Shader
+	delegate Basic_Vertex_Shader_glsl
+}
 
+fragment_program Basic_Pixel_Unified unified
+{
+	delegate Basic_Pixel_Shader
+	delegate Basic_Pixel_Shader_glsl
+}
+
+
 material Basic_Vertex_Shader
 {
 	technique glsl

Added: modules/common/materials/programs/Normalmapping/Basic_Normalmapping.frag
===================================================================
--- modules/common/materials/programs/Normalmapping/Basic_Normalmapping.frag	2009-01-12 22:35:42 UTC (rev 4708)
+++ modules/common/materials/programs/Normalmapping/Basic_Normalmapping.frag	2009-01-17 10:09:45 UTC (rev 4709)
@@ -0,0 +1,66 @@
+uniform vec4 LightColor_0;
+uniform vec4 LightColor_1;
+uniform vec4 LightColor_2;
+uniform vec4 groundcolor;
+uniform vec4 skycolor;
+uniform vec4 SpecColor;
+uniform float SpecExp;
+
+varying vec4 LightDir_0;
+varying vec3 HalfVect_0;
+varying vec4 LightDir_1;
+varying vec3 HalfVect_1;
+varying vec4 LightDir_2;
+varying vec3 HalfVect_2;
+varying vec3 SkyDir;
+
+uniform sampler2D DiffuseMap;
+uniform sampler2D NormalMap;
+
+void main(void)
+{
+   vec3 normal = texture2D(NormalMap,gl_TexCoord[0].xy).rgb * 2.0 -1.0; 
+   vec4 ambient= mix(skycolor , groundcolor, ((dot(normal, SkyDir) + 1.0)/2.0));
+   
+   
+   float specAttn = 0.0;
+   float specAttn1 = 0.0;
+   float specAttn2 = 0.0;
+   vec4 AngleAttn;
+   vec4 AngleAttn1;
+   vec4 AngleAttn2;
+     
+   AngleAttn= vec4(clamp(dot(normal,LightDir_0.xyz),0.0,1.0));
+   AngleAttn1= vec4(clamp(dot(normal,LightDir_1.xyz),0.0,1.0));
+   AngleAttn2= vec4(clamp(dot(normal,LightDir_2.xyz),0.0,1.0)); 
+   
+   
+   
+   if (AngleAttn.r > 0.0)
+   {
+      specAttn = float(LightColor_0 * pow(clamp(dot(normal,normalize(HalfVect_0)),0.0,1.0),SpecExp)* LightDir_0.w);
+      AngleAttn *= LightColor_0 * LightDir_0.w;
+   }
+   
+   if (AngleAttn1.r > 0.0)
+   {
+      specAttn1  = float(LightColor_1 *  pow(clamp(dot(normal,normalize(HalfVect_1)),0.0,1.0),SpecExp)* LightDir_1.w);
+      AngleAttn1 *= LightColor_1 * LightDir_1.w;
+   }
+  
+   if (AngleAttn2.r > 0.0)
+   {
+      specAttn2  = float(LightColor_2 *  pow(clamp(dot(normal,normalize(HalfVect_2)),0.0,1.0),SpecExp)* LightDir_2.w);
+      AngleAttn2 *= LightColor_2 * LightDir_2.w;
+   }
+  
+  
+   vec4 Diffuse = AngleAttn + AngleAttn1 + AngleAttn2;
+   vec4 specular = SpecColor * (specAttn + specAttn1 + specAttn2) * Diffuse;
+   
+   vec4 color = texture2D(DiffuseMap,gl_TexCoord[0].xy);
+
+   
+   gl_FragColor =  vec4((color.rgb * (ambient.rbg + Diffuse.rgb)) +specular.rgb ,color.a);
+   
+}
\ No newline at end of file

Modified: modules/common/materials/programs/Normalmapping/Basic_Normalmapping.material
===================================================================
--- modules/common/materials/programs/Normalmapping/Basic_Normalmapping.material	2009-01-12 22:35:42 UTC (rev 4708)
+++ modules/common/materials/programs/Normalmapping/Basic_Normalmapping.material	2009-01-17 10:09:45 UTC (rev 4709)
@@ -2,13 +2,13 @@
 {
 	lod_distances 15 100
 	receive_shadows off
-    technique hlsl
+    technique
     {
 	    lod_index 0
         pass
         {
         	alpha_rejection greater 128
-            vertex_program_ref Basic_Normalmapping_UV0_VS_HLSL
+            vertex_program_ref Basic_Normalmapping_UV0_VERTEX
             {
                 param_named_auto matViewProjection worldviewproj_matrix
                 param_named_auto LightPosition_0 light_position_object_space 0
@@ -22,7 +22,7 @@
                 param_named_auto vViewPosition	 camera_position_object_space
             }
 
-            fragment_program_ref Basic_Normalmapping_PS_HLSL
+            fragment_program_ref Basic_Normalmapping_PIXEL
             {
                 param_named_auto LightColor_0  light_diffuse_colour  0
                 param_named_auto LightColor_1  light_diffuse_colour  1

Added: modules/common/materials/programs/Normalmapping/Basic_Normalmapping_UV0.vert
===================================================================
--- modules/common/materials/programs/Normalmapping/Basic_Normalmapping_UV0.vert	2009-01-12 22:35:42 UTC (rev 4708)
+++ modules/common/materials/programs/Normalmapping/Basic_Normalmapping_UV0.vert	2009-01-17 10:09:45 UTC (rev 4709)
@@ -0,0 +1,97 @@
+//input
+attribute vec3 tangent;
+uniform vec4 vViewPosition;
+uniform mat4 matViewProjection;
+
+uniform vec4 LightPosition_0;
+uniform vec4 LightPosition_1;
+uniform vec4 LightPosition_2;
+uniform vec4 LightAttn_0;
+uniform vec4 LightAttn_1;
+uniform vec4 LightAttn_2;
+
+
+//output
+varying vec4 LightDir_0;
+varying vec3 HalfVect_0;
+varying vec4 LightDir_1;
+varying vec3 HalfVect_1;
+varying vec4 LightDir_2;
+varying vec3 HalfVect_2;
+varying vec3 SkyDir;
+
+
+void main(void)
+{
+   gl_TexCoord[0] = gl_MultiTexCoord0;
+   gl_Position = matViewProjection * gl_Vertex;
+   
+   mat3 TangentSpace;
+   
+   TangentSpace[0] = tangent;
+   TangentSpace[1] = cross(tangent,gl_Normal.xyz);
+   TangentSpace[2] = gl_Normal.xyz;
+   
+   vec3 eyeVector = normalize(vViewPosition - gl_Vertex).xyz;
+   
+   
+   //Light 1   
+   vec4 LightDir;
+   LightDir.w = 0.0;
+   LightDir.xyz = (LightPosition_0 - gl_Vertex).xyz * LightPosition_0.w;
+   float Dist = length(LightDir.xyz);
+   LightDir.xyz = LightDir.xyz /Dist;
+   
+   if (LightPosition_0.w != 0.0)
+   {
+      LightDir.w = clamp(1.0/(LightAttn_0.y +
+                            LightAttn_0.z * Dist +
+                            LightAttn_0.w * Dist * Dist)*clamp(LightAttn_0.x-Dist,0.0,1.0),0.0,1.0);
+   }
+   
+   
+   HalfVect_0 = TangentSpace * normalize(LightDir.xyz + eyeVector);
+   LightDir_0.xyz = TangentSpace*(LightDir.xyz);
+   LightDir_0.w = LightDir.w;
+   
+   
+   //Light 2
+   LightDir.xyz = (LightPosition_1 - gl_Vertex).xyz * LightPosition_1.w;
+   Dist = length(LightDir.xyz);
+   LightDir.xyz = LightDir.xyz /Dist;
+   
+   if (LightPosition_1.w != 0.0)
+   {
+      LightDir.w = clamp(1.0/(LightAttn_1.y +
+                            LightAttn_1.z * Dist +
+                            LightAttn_1.w * Dist * Dist)*clamp(LightAttn_1.x-Dist,0.0,1.0),0.0,1.0);
+   }
+   
+   
+   HalfVect_1 = TangentSpace * normalize(LightDir.xyz + eyeVector);
+   LightDir_1.xyz = TangentSpace*(LightDir.xyz);
+   LightDir_1.w = LightDir.w;
+   
+   
+  //Light 3
+   LightDir.xyz = (LightPosition_2 - gl_Vertex).xyz * LightPosition_2.w;
+   Dist = length(LightDir.xyz);
+   LightDir.xyz = LightDir.xyz /Dist;
+   
+   if (LightPosition_2.w != 0.0)
+   {
+      LightDir.w = clamp(1.0/(LightAttn_2.y +
+                            LightAttn_2.z * Dist +
+                            LightAttn_2.w * Dist * Dist)*clamp(LightAttn_2.x-Dist,0.0,1.0),0.0,1.0);
+   }
+   
+   
+   HalfVect_2 = TangentSpace * normalize(LightDir.xyz + eyeVector);
+   LightDir_2.xyz = TangentSpace*(LightDir.xyz);
+   LightDir_2.w = LightDir.w; 
+   
+   
+   
+   // SkyLight
+   SkyDir    = TangentSpace * vec3(0,-1,0);
+}
\ No newline at end of file

Modified: modules/common/materials/programs/Normalmapping/Normalmapping.program
===================================================================
--- modules/common/materials/programs/Normalmapping/Normalmapping.program	2009-01-12 22:35:42 UTC (rev 4708)
+++ modules/common/materials/programs/Normalmapping/Normalmapping.program	2009-01-17 10:09:45 UTC (rev 4709)
@@ -5,6 +5,17 @@
     target vs_1_1
 }
 
+vertex_program Basic_Normalmapping_UV0_VP_GLSL glsl
+{
+    source Basic_Normalmapping_UV0.vert
+}
+
+vertex_program Basic_Normalmapping_UV0_VERTEX unified
+{
+    delegate Basic_Normalmapping_UV0_VS_HLSL
+	delegate Basic_Normalmapping_UV0_VP_GLSL
+}
+
 vertex_program Basic_Normalmapping_architecture_VS_HLSL hlsl
 {
     source Basic_Normalmapping_architecture_VS.hlsl
@@ -39,6 +50,25 @@
     entry_point ps_main
     target ps_2_0
 }
+
+fragment_program Basic_Normalmapping_FP_GLSL glsl
+{
+    source Basic_Normalmapping.frag
+	
+	default_params
+	{				
+		param_named DiffuseMap int 0
+		param_named NormalMap int 1
+	}
+}
+
+fragment_program Basic_Normalmapping_PIXEL unified
+{
+	delegate Basic_Normalmapping_PS_HLSL
+    delegate Basic_Normalmapping_FP_GLSL
+}
+
+
 fragment_program Basic_Normalmapping_architecture_PS_HLSL hlsl
 {
     source Basic_Normalmapping_architecture_PS.hlsl

Modified: modules/kanalisation/materials/Normalmapping.program
===================================================================
--- modules/kanalisation/materials/Normalmapping.program	2009-01-12 22:35:42 UTC (rev 4708)
+++ modules/kanalisation/materials/Normalmapping.program	2009-01-17 10:09:45 UTC (rev 4709)
@@ -1,12 +1,11 @@
 material Basic_Normalmapping_kana 
 {
-	
-    technique hlsl
+    technique high
     {
 	    lod_index 0
         pass
         {
-            vertex_program_ref Basic_Normalmapping_UV0_VS_HLSL
+            vertex_program_ref Basic_Normalmapping_UV0_VERTEX
             {
                 param_named_auto matViewProjection worldviewproj_matrix
                 param_named_auto LightPosition_0 light_position_object_space 0
@@ -20,7 +19,7 @@
                 param_named_auto vViewPosition	 camera_position_object_space
             }
 
-            fragment_program_ref Basic_Normalmapping_PS_HLSL
+            fragment_program_ref Basic_Normalmapping_PIXEL
             {
                 param_named_auto LightColor_0  light_diffuse_colour  0
                 param_named_auto LightColor_1  light_diffuse_colour  1
@@ -45,20 +44,19 @@
             }
         }
     }
-    
-    technique hlsl1
+
+	
+	technique low
 	{
 		lod_index 1
 		//Rendering Pass: Pass 0 (pass index: #0 )
 		pass
 		{
 			alpha_rejection greater 128
-			//DirectX 9.0 HLSL Pixel Shader ps_2_0
-			fragment_program_ref Basic_Pixel_Shader
+			fragment_program_ref Basic_Pixel_Unified
 			{
 			}
-			//DirectX 9.0 HLSL Vertex Shader vs_2_0
-			vertex_program_ref Basic_Vertex_Shader
+			vertex_program_ref Basic_Vertex_Unified
 			{
 				// param_named_auto
 
@@ -95,6 +93,8 @@
 	}
     
 
+	
+	
     technique fixed_function
     {
 	    lod_index 2



From timm at mail.berlios.de  Sat Jan 17 11:10:52 2009
From: timm at mail.berlios.de (timm at mail.berlios.de)
Date: Sat, 17 Jan 2009 11:10:52 +0100
Subject: [Dsa-hl-svn] r4710 - in modules/branch_persistenz/scripts: . maps
Message-ID: <200901171010.n0HAAq3X022055@sheep.berlios.de>

Author: timm
Date: 2009-01-17 11:10:39 +0100 (Sat, 17 Jan 2009)
New Revision: 4710

Added:
   modules/branch_persistenz/scripts/SceneChange.rb
Removed:
   modules/branch_persistenz/scripts/MapChange.rb
Modified:
   modules/branch_persistenz/scripts/maps/map01.rb
   modules/branch_persistenz/scripts/maps/map02.rb
   modules/branch_persistenz/scripts/maps/setchar.rb
   modules/branch_persistenz/scripts/moduleconfig.rb
Log:
renamed MapChange.rb -> SceneChange.rb

Deleted: modules/branch_persistenz/scripts/MapChange.rb
===================================================================
--- modules/branch_persistenz/scripts/MapChange.rb	2009-01-17 10:09:45 UTC (rev 4709)
+++ modules/branch_persistenz/scripts/MapChange.rb	2009-01-17 10:10:39 UTC (rev 4710)
@@ -1,52 +0,0 @@
-require "embed.rb"
-require "areahelper.rb"
-
-def changeScene(scene)
-#	characterId = PartyManager.getSingleton().getActiveCharacter().getId()
-#	CreatureControllerManager.getSingleton().detachController(PartyManager.getSingleton().getActiveCharacter())
-#	PartyManager.getSingleton().setActiveCharacter(nil)
-	#$SCRIPT.logError(mapNames.type().to_s)
-#	mapLoader.requestSceneChange(mapNames)
-	SceneManager::getSingleton().loadScene(scene, true);
-end
-
-class SceneChangeTrigger < Trigger
-  def initialize(classname, name)
-    super(classname, name, false);
-  end
-
-  def activate()
-	changeScene(@scene)
-    return false
-  end
-  def deactivate()
-    return false
-  end
-  def setProperty(name, value)
-    super(name, value)
-  end
-  def getProperty(name)
-	super(name)
-  end
-  def setScene(scene)
-	@scene = scene
-  end
-  def getAllProperties()
-    ps = super();
-    return ps
-  end
-end
-
-def CreateSceneChangeTrigger(name, pos, orientation, size, scene)
-	unless ( ZoneManager.getSingleton().getZone("SceneChangeZone_" + name) == nil )
-		raise ArgumentError, "A SceneChangeTrigger with name " + name + " already exists!", caller
-	end
-	trigger = $SCRIPT.getTriggerFactory().createTrigger("SceneChangeTrigger", "SceneChangeTrigger" + name)
-	trigger.setScene(scene)
-	zone = ZoneManager.getSingleton().createZone("SceneChangeZone_" + name, true)
-	ZoneManager.getSingleton().addAreaToZone(
-	    "SceneChangeZone_" + name, 
-	    size, PhysicsManager::GT_BOX, pos, [0,0,0], orientation, 0.2, RlScript::QUERYFLAG_PLAYER);
-	trigger.setProperty("zone","SceneChangeZone_" + name)
-	zone.addTrigger(trigger)
-end
\ No newline at end of file

Copied: modules/branch_persistenz/scripts/SceneChange.rb (from rev 4613, modules/branch_persistenz/scripts/MapChange.rb)


Property changes on: modules/branch_persistenz/scripts/SceneChange.rb
___________________________________________________________________
Name: svn:mergeinfo
   + 

Modified: modules/branch_persistenz/scripts/maps/map01.rb
===================================================================
--- modules/branch_persistenz/scripts/maps/map01.rb	2009-01-17 10:09:45 UTC (rev 4709)
+++ modules/branch_persistenz/scripts/maps/map01.rb	2009-01-17 10:10:39 UTC (rev 4710)
@@ -1,5 +1,5 @@
 require 'embed.rb'
-require 'MapChange.rb'
+require 'SceneChange.rb'
 
 $SCRIPT.log("map 1 von 'persistenztest' wird initialisiert....")
 

Modified: modules/branch_persistenz/scripts/maps/map02.rb
===================================================================
--- modules/branch_persistenz/scripts/maps/map02.rb	2009-01-17 10:09:45 UTC (rev 4709)
+++ modules/branch_persistenz/scripts/maps/map02.rb	2009-01-17 10:10:39 UTC (rev 4710)
@@ -1,8 +1,9 @@
 require 'embed.rb'
+require 'SceneChange.rb'
 
 $SCRIPT.log("map 2 von 'persistenztest' wird initialisiert....")
 
-base = $AM.createBoxPrimitiveActor("SelectorTestBase", [-2,0.05,-2], [2,0.3,2], "alpha_blue")
+base = $AM.createBoxPrimitiveActor("SelectorTestBase", [-2,0.05,-2], [2,0.3,2], "nx.cube")
 
 base.placeIntoScene([8,0,-8])
 

Modified: modules/branch_persistenz/scripts/maps/setchar.rb
===================================================================
--- modules/branch_persistenz/scripts/maps/setchar.rb	2009-01-17 10:09:45 UTC (rev 4709)
+++ modules/branch_persistenz/scripts/maps/setchar.rb	2009-01-17 10:10:39 UTC (rev 4710)
@@ -2,7 +2,7 @@
 
 require 'player.rb'
 require 'hero.rb'
-require 'MapChange.rb'
+require 'SceneChange.rb'
 
 $SCRIPT.log("Prepare hero for being the active character")
 hero = $GOM.getGameObject("hero");

Modified: modules/branch_persistenz/scripts/moduleconfig.rb
===================================================================
--- modules/branch_persistenz/scripts/moduleconfig.rb	2009-01-17 10:09:45 UTC (rev 4709)
+++ modules/branch_persistenz/scripts/moduleconfig.rb	2009-01-17 10:10:39 UTC (rev 4710)
@@ -24,7 +24,7 @@
     def start()
         require "mckhero.rb"
         require "hero.rb"
-		require "MapChange.rb"
+		require "SceneChange.rb"
 		require "clothing.rb"
 		SceneManager::getSingleton().loadScene("scene01", false);
 		$PM.setEnabled(true)



From blakharaz at mail.berlios.de  Sat Jan 17 13:11:38 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Sat, 17 Jan 2009 13:11:38 +0100
Subject: [Dsa-hl-svn] r4711 - rl/trunk/Mac/tools
Message-ID: <200901171211.n0HCBcfC014397@sheep.berlios.de>

Author: blakharaz
Date: 2009-01-17 13:11:35 +0100 (Sat, 17 Jan 2009)
New Revision: 4711

Modified:
   rl/trunk/Mac/tools/renameinstalldirs.sh
Log:
Fix library paths for CEGUI plugins

Modified: rl/trunk/Mac/tools/renameinstalldirs.sh
===================================================================
--- rl/trunk/Mac/tools/renameinstalldirs.sh	2009-01-17 10:10:39 UTC (rev 4710)
+++ rl/trunk/Mac/tools/renameinstalldirs.sh	2009-01-17 12:11:35 UTC (rev 4711)
@@ -2,20 +2,33 @@
 RASTULLAH_APP_DIR=$1
 RASTULLAH_APP_NAME=$2
 RASTULLAH_APP_BIN=${RASTULLAH_APP_DIR}/${RASTULLAH_APP_NAME}
-CEGUI_BIN=${RASTULLAH_APP_DIR}/../Frameworks/CEGUI.framework/CEGUI
+CEGUI_DIR=${RASTULLAH_APP_DIR}/../Frameworks/CEGUI.framework
+CEGUI_BIN=${CEGUI_DIR}/CEGUI
 RASTULLAH_RES_DIR=$1/../Resources
 
 #TODO: Replace the absolute source paths to something with olist -L $RASTULLAH_APP_NAME and grep
 
 echo Changing library installation directories for $RASTULLAH_APP_NAME
 
-RL_BINARIES="$RASTULLAH_APP_BIN $RASTULLAH_RES_DIR/libRlAi.dylib $RASTULLAH_RES_DIR/libRlCommon.dylib $RASTULLAH_RES_DIR/libRlCore.dylib $RASTULLAH_RES_DIR/libRlRules.dylib $RASTULLAH_RES_DIR/libRlScript.dylib $RASTULLAH_RES_DIR/libRlUi.dylib $RASTULLAH_RES_DIR/libRlFmod4Driver.dylib"
+RL_BINARIES="$RASTULLAH_APP_BIN \
+    $RASTULLAH_RES_DIR/libRlAi.dylib \
+    $RASTULLAH_RES_DIR/libRlCommon.dylib \
+    $RASTULLAH_RES_DIR/libRlCore.dylib \
+    $RASTULLAH_RES_DIR/libRlRules.dylib \
+    $RASTULLAH_RES_DIR/libRlScript.dylib \
+    $RASTULLAH_RES_DIR/libRlUi.dylib \
+    $RASTULLAH_RES_DIR/libRlFmod4Driver.dylib \
+    $RASTULLAH_RES_DIR/libboost_filesystem.dylib \
+    $RASTULLAH_RES_DIR/libboost_system.dylib \
+    $RASTULLAH_RES_DIR/RlScript.bundle"
+
 # RL Application binary
 for cur in $RL_BINARIES 
 do
     echo Processing $cur
     install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI $cur
-    install_name_tool -change libboost_system-mt-1_35.dylib @executable_path/../Frameworks/libboost_system.dylib $cur
+    install_name_tool -change libboost_system-mt-1_35.dylib @executable_path/../Resources/libboost_system.dylib $cur
+    install_name_tool -change libboost_filesystem-mt-1_35.dylib @executable_path/../Resources/libboost_filesystem.dylib $cur
     install_name_tool -change /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/libruby.1.dylib @executable_path/../Frameworks/libruby.1.dylib $cur
     install_name_tool -change /Users/blakharaz/Library/Frameworks/OgreNewt.framework/Versions/A/OgreNewt @executable_path/../Frameworks/OgreNewt.framework/Versions/A/OgreNewt $cur
     install_name_tool -change /Users/blakharaz/Library/Frameworks/OpenSteer.framework/Versions/0.8/OpenSteer @executable_path/../Frameworks/OpenSteer.framework/Versions/0.8/OpenSteer $cur
@@ -24,6 +37,10 @@
 
 # CEGUI
 install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI ${CEGUI_BIN}
+install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI ${CEGUI_DIR}/Resources/CEGUIExpatParser.bundle/Contents/MacOS/CEGUIExpatParser
+install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI ${CEGUI_DIR}/Resources/CEGUIFalagardWRBase.bundle/Contents/MacOS/CEGUIFalagardWRBase
+install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI ${CEGUI_DIR}/Resources/CEGUIFreeImageImageCodec.bundle/Contents/MacOS/CEGUIFreeImageImageCodec
+install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI ${CEGUI_DIR}/Resources/CEGUIDevILImageCodec.bundle/Contents/MacOS/CEGUIDevILImageCodec
 install_name_tool -change /Library/Frameworks/FreeType.framework/Versions/2.3/FreeType @executable_path/../Frameworks/FreeType.framework/Versions/2.3/FreeType ${CEGUI_BIN}
 
 echo done.
\ No newline at end of file



From blakharaz at mail.berlios.de  Sat Jan 17 13:12:41 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Sat, 17 Jan 2009 13:12:41 +0100
Subject: [Dsa-hl-svn] r4712 - in rl/trunk/engine/core: include src
Message-ID: <200901171212.n0HCCfpg015050@sheep.berlios.de>

Author: blakharaz
Date: 2009-01-17 13:12:38 +0100 (Sat, 17 Jan 2009)
New Revision: 4712

Modified:
   rl/trunk/engine/core/include/CoreSubsystem.h
   rl/trunk/engine/core/src/CoreSubsystem.cpp
   rl/trunk/engine/core/src/SoundManager.cpp
Log:
Added loadPlugin method to CoreSubsystem

Modified: rl/trunk/engine/core/include/CoreSubsystem.h
===================================================================
--- rl/trunk/engine/core/include/CoreSubsystem.h	2009-01-17 12:11:35 UTC (rev 4711)
+++ rl/trunk/engine/core/include/CoreSubsystem.h	2009-01-17 12:12:38 UTC (rev 4712)
@@ -1,169 +1,170 @@
-/* This source file is part of Rastullahs Lockenpracht.
- * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the Clarified Artistic License.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  Clarified Artistic License for more details.
- *
- *  You should have received a copy of the Clarified Artistic License
- *  along with this program; if not you can get it here
- *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
- */
-
-#ifndef __CoreSubsystem_H__
-#define __CoreSubsystem_H__
-
-
-#include <map>
-
-#include "EventSource.h"
-#include "EventCaster.h"
-#include "CorePrerequisites.h"
-
-namespace rl {
-
-class RubyInterpreter;
-class World;
-class CoreEvent;
-class CoreEventListener;
-class Actor;
-class ContentModule;
-class ScriptWrapper;
-class PhysicsManager;
-class MessagePump;
-class GameLoop;
-class AnimationManager;
-class ActorManager;
-class GameEventManager;
-class XmlResourceManager;
-class SoundManager;
-class DebugVisualsManager;
-class SaveGameManager;
-class JobScheduler;
-class ZoneManager;
-class TimeSourceManager;
-
-typedef _RlCoreExport std::map<Ogre::String, ContentModule*> ModuleMap;
-
-/** CoreSubsystem.
-    @remarks
-        It follows the Singleton Pattern,
-        and initialises the game context.
-*/
-class _RlCoreExport CoreSubsystem : public Ogre::Singleton<CoreSubsystem>
-{
-public:
-    /** Default Constructor */
-    CoreSubsystem();
-    /** Default Deconstructor */
-    virtual ~CoreSubsystem();
-
-    /** Starts the Game */
-    void startCore();
-
-    /** Renders one frame (for internal use) */
-    void renderOneFrame(bool executeTasks = true);
-
-    World* getWorld();
-    void loadMap(const Ogre::String type, const Ogre::String filename,
-        const Ogre::String module);
-
-    RubyInterpreter* getRubyInterpreter();
-
-    ContentModule* getActiveAdventureModule() const;
-    ContentModule* getModule(const Ogre::String& moduleId) const;
-    const ModuleMap& getAllModules() const;
-    void startAdventureModule(ContentModule* module);
-    void setDefaultActiveModule(const Ogre::String& moduleId);
-    const Ogre::String& getDefaultActiveModule() const;
-    void registerModule(ContentModule* module);
-
-    void setDeveloperMode(bool developerMode);
-    bool getDeveloperMode() const;
-
-    /** Saves a timestamped png Screenshot
-        @param sName The filename (extended with the timestamp)
-    */
-    void makeScreenshot(const Ogre::String& sName);
-
-    void setScheme(const Ogre::String& schemeName);
-
-    bool isInitialized() const;
-
-    const Ogre::String getEngineVersionString() const;
-    const Ogre::String getEngineVersionName() const;
-    long         getEngineBuildNumber() const;
-
-    /**
-     * Retrieves a pointer to the current render window.
-     *
-     * @return pointer to render window
-     */
-    Ogre::RenderWindow* getRenderWindow() const;
-
-	/// Sets the pause state of the game
-	/// @param paused <code>true</code> if the game should be paused, <code>false</code> if it should be continued
-	void setPaused(bool paused);
-
-    void setTimeFactor(const Ogre::Real& factor = 1.0F);
-
-    void _setCurrentScene(const CeGuiString& scene);
-    const CeGuiString& getCurrentScene() const;
-
-private:
-    World* mWorld;
-    RubyInterpreter* mRubyInterpreter;
-    ModuleMap mModules;
-    ContentModule* mActiveAdventureModule;
-    Ogre::String mDefaultActiveModule;
-    Ogre::RenderWindow* mRenderWindow;            //!< Render window for OGRE
-    CeGuiString mCurrentScene;
-
-    RL_LONGLONG mClockStartTime;
-
-    bool mDeveloperMode;
-    bool mInitialized;
-    std::vector<Ogre::Technique*> mDefaultTechniques;
-
-    // The singletons of this subsystem
-    Ogre::Root* mOgreRoot;
-    ScriptWrapper* mScriptWrapper;
-    XmlResourceManager* mXmlResourceManager;
-    PhysicsManager* mPhysicsManager;
-    MessagePump* mMessagePump;
-    GameLoop* mGameLoop;
-    AnimationManager* mAnimationManager;
-    ActorManager* mActorManager;
-    GameEventManager* mGameEventManager;
-    SoundManager* mSoundManager;
-    DebugVisualsManager* mDebugVisualsManager;
-    SaveGameManager* mSaveGameManager;
-    JobScheduler* mJobScheduler;
-	ZoneManager* mZoneManager;
-    TimeSourceManager* mTimeSourceManager;
-
-    /** Runs the setup methods  */
-    bool initializeCoreSubsystem();
-
-    /** Loads all needed ressources */
-    void initializeResources();
-
-    void loadPlugins();
-    void unloadPlugins();
-
-    /**
-     * Sammelt alle Default-Techniques, um sie sp?ter bei jedem aktivierten Scheme
-     * benutzen zu k?nnen
-     */
-    void updateDefaultScheme();
-
-    void loadModule(ContentModule* module);
-};
-
-}
-#endif
-
+/* This source file is part of Rastullahs Lockenpracht.
+ * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the Clarified Artistic License.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  Clarified Artistic License for more details.
+ *
+ *  You should have received a copy of the Clarified Artistic License
+ *  along with this program; if not you can get it here
+ *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+ */
+
+#ifndef __CoreSubsystem_H__
+#define __CoreSubsystem_H__
+
+
+#include <map>
+
+#include "EventSource.h"
+#include "EventCaster.h"
+#include "CorePrerequisites.h"
+
+namespace rl {
+
+class RubyInterpreter;
+class World;
+class CoreEvent;
+class CoreEventListener;
+class Actor;
+class ContentModule;
+class ScriptWrapper;
+class PhysicsManager;
+class MessagePump;
+class GameLoop;
+class AnimationManager;
+class ActorManager;
+class GameEventManager;
+class XmlResourceManager;
+class SoundManager;
+class DebugVisualsManager;
+class SaveGameManager;
+class JobScheduler;
+class ZoneManager;
+class TimeSourceManager;
+
+typedef _RlCoreExport std::map<Ogre::String, ContentModule*> ModuleMap;
+
+/** CoreSubsystem.
+    @remarks
+        It follows the Singleton Pattern,
+        and initialises the game context.
+*/
+class _RlCoreExport CoreSubsystem : public Ogre::Singleton<CoreSubsystem>
+{
+public:
+    /** Default Constructor */
+    CoreSubsystem();
+    /** Default Deconstructor */
+    virtual ~CoreSubsystem();
+
+    /** Starts the Game */
+    void startCore();
+
+    /** Renders one frame (for internal use) */
+    void renderOneFrame(bool executeTasks = true);
+
+    World* getWorld();
+    void loadMap(const Ogre::String& type, const Ogre::String& filename,
+        const Ogre::String& module);
+
+    RubyInterpreter* getRubyInterpreter();
+
+    ContentModule* getActiveAdventureModule() const;
+    ContentModule* getModule(const Ogre::String& moduleId) const;
+    const ModuleMap& getAllModules() const;
+    void startAdventureModule(ContentModule* module);
+    void setDefaultActiveModule(const Ogre::String& moduleId);
+    const Ogre::String& getDefaultActiveModule() const;
+    void registerModule(ContentModule* module);
+
+    void setDeveloperMode(bool developerMode);
+    bool getDeveloperMode() const;
+
+    /** Saves a timestamped png Screenshot
+        @param sName The filename (extended with the timestamp)
+    */
+    void makeScreenshot(const Ogre::String& sName);
+
+    void setScheme(const Ogre::String& schemeName);
+
+    bool isInitialized() const;
+
+    const Ogre::String getEngineVersionString() const;
+    const Ogre::String getEngineVersionName() const;
+    long         getEngineBuildNumber() const;
+
+    /**
+     * Retrieves a pointer to the current render window.
+     *
+     * @return pointer to render window
+     */
+    Ogre::RenderWindow* getRenderWindow() const;
+
+	/// Sets the pause state of the game
+	/// @param paused <code>true</code> if the game should be paused, <code>false</code> if it should be continued
+	void setPaused(bool paused);
+
+    void setTimeFactor(const Ogre::Real& factor = 1.0F);
+
+    void _setCurrentScene(const CeGuiString& scene);
+    const CeGuiString& getCurrentScene() const;
+    void loadPlugin(const Ogre::String& plugin);
+
+private:
+    World* mWorld;
+    RubyInterpreter* mRubyInterpreter;
+    ModuleMap mModules;
+    ContentModule* mActiveAdventureModule;
+    Ogre::String mDefaultActiveModule;
+    Ogre::RenderWindow* mRenderWindow;            //!< Render window for OGRE
+    CeGuiString mCurrentScene;
+
+    RL_LONGLONG mClockStartTime;
+
+    bool mDeveloperMode;
+    bool mInitialized;
+    std::vector<Ogre::Technique*> mDefaultTechniques;
+
+    // The singletons of this subsystem
+    Ogre::Root* mOgreRoot;
+    ScriptWrapper* mScriptWrapper;
+    XmlResourceManager* mXmlResourceManager;
+    PhysicsManager* mPhysicsManager;
+    MessagePump* mMessagePump;
+    GameLoop* mGameLoop;
+    AnimationManager* mAnimationManager;
+    ActorManager* mActorManager;
+    GameEventManager* mGameEventManager;
+    SoundManager* mSoundManager;
+    DebugVisualsManager* mDebugVisualsManager;
+    SaveGameManager* mSaveGameManager;
+    JobScheduler* mJobScheduler;
+	ZoneManager* mZoneManager;
+    TimeSourceManager* mTimeSourceManager;
+
+    /** Runs the setup methods  */
+    bool initializeCoreSubsystem();
+
+    /** Loads all needed ressources */
+    void initializeResources();
+
+    void loadPlugins();
+    void unloadPlugins();
+
+    /**
+     * Sammelt alle Default-Techniques, um sie sp???ter bei jedem aktivierten Scheme
+     * benutzen zu k??nnen
+     */
+    void updateDefaultScheme();
+
+    void loadModule(ContentModule* module);
+};
+
+}
+#endif
+

Modified: rl/trunk/engine/core/src/CoreSubsystem.cpp
===================================================================
--- rl/trunk/engine/core/src/CoreSubsystem.cpp	2009-01-17 12:11:35 UTC (rev 4711)
+++ rl/trunk/engine/core/src/CoreSubsystem.cpp	2009-01-17 12:12:38 UTC (rev 4712)
@@ -471,7 +471,7 @@
             {
                 Throw(
                     rl::RuntimeException,
-                    "Depedency Module " + depName
+                    "Dependency Module " + depName
                     + " needed by " + Ogre::String(module->getName().c_str())
                     + " not found.");
             }
@@ -571,11 +571,24 @@
         return mModules;
     }
 
-    void CoreSubsystem::loadMap(const Ogre::String type, const Ogre::String filename,
-        const Ogre::String module)
+    void CoreSubsystem::loadMap(const Ogre::String& type, const Ogre::String& filename,
+        const Ogre::String& module)
     {
         mWorld->loadScene(filename, module);
     }
+    
+    void CoreSubsystem::loadPlugin(const Ogre::String& plugin)
+    {
+        Ogre::String pluginFile;
+        
+#if OGRE_PLATFORM == OGRE_PLATFORM_LINUX
+        pluginFile = "lib" + plugin;
+#else
+        pluginFile = plugin;
+#endif
+        
+        Ogre::Root::getSingleton().loadPlugin(pluginFile);
+    }
 
     void CoreSubsystem::loadPlugins()
     {

Modified: rl/trunk/engine/core/src/SoundManager.cpp
===================================================================
--- rl/trunk/engine/core/src/SoundManager.cpp	2009-01-17 12:11:35 UTC (rev 4711)
+++ rl/trunk/engine/core/src/SoundManager.cpp	2009-01-17 12:12:38 UTC (rev 4712)
@@ -1,390 +1,387 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-*
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#include "stdinc.h" //precompiled header
-
-#include "SoundManager.h"
-
-#include <set>
-
-#include "Actor.h"
-#include "ActorManager.h"
-#include "ConfigFile.h"
-#include "GameLoop.h"
-#include "ListenerMovable.h"
-#include "ListenerObject.h"
-#include "SoundDriver.h"
-#include "SoundResource.h"
-
-#include "NullDriver.h"
-
-using namespace std;
-using namespace Ogre;
-
-/** Das Singleton
- * @author JoSch
- * @date 04-26-2004
- */
-template<> rl::SoundManager* Singleton<rl::SoundManager>::ms_Singleton = 0;
-
-namespace rl
-{
-    /**
-     * Standardkonstruktor
-     * @author JoSch
-     * @date 01-27-2005
-     */
-    SoundManager::SoundManager()
-    : ResourceManager(),
-      mDriverList(),
-      mActiveDriver(NULL),
-      mListenerActor(NULL),
-      mActiveListener(NULL)
-    {
-        LOG_MESSAGE(Logger::MULTIMEDIA, "Erzeuge Soundmanager...");
-        NullDriver* nullDriver = new NullDriver(this);
-        registerDriver(nullDriver);
-        setActiveDriver(nullDriver);
-
-        mResourceType = "Sound";
-        ResourceGroupManager::getSingleton()._registerResourceManager(mResourceType, this);
-
-    }
-
-    SoundManager::~SoundManager()
-    {
-        ResourceGroupManager::getSingleton()._unregisterResourceManager(mResourceType);
-        unloadAllDrivers();
-    }
-
-/**
- * Gibt die Suchmuster fuer die Extension zurueck.
- * @return Die Liste der Suchmuster
- * @author JoSch
- * @date 06-18-2004
- */
-StringList SoundManager::getExtension()
-{
-    StringList result;
-    result.push_back("*.ogg");
-    result.push_back("*.wav");
-
-    return result;
-}
-
-/**
-* @param resName. Der Name der Soundresource, die erzeugt
-* werden soll.
-* @author JoSch
-* @date 06-18-2004
-*/
-Resource* SoundManager::createImpl(
-    const String& resName,
-    ResourceHandle handle,
-    const String& group,
-    bool isManual,
-    ManualResourceLoader* loader,
-    const NameValuePairList* loadParams)
-{
-    SoundResource *newSound = NULL;
-    newSound = new SoundResource(this, resName, handle, group, isManual, loader);
-    return newSound;
-}
-
-/**
- * @param Der neue Treiber.
- * @author JoSch
- * @date 12-23-2005
- */
-void SoundManager::setActiveDriver(SoundDriver *driver)
-{
-    if (driver == NULL)
-    {
-        driver = getDriverByName(NullDriver::NAME);
-    }
-
-    if (mActiveDriver == driver)
-    {
-        LOG_DEBUG(Logger::MULTIMEDIA,
-            "No need to change Sound Driver, "
-            + mActiveDriver->getName()
-            + " is already active.");
-        return;
-    }
-
-    LOG_MESSAGE(Logger::MULTIMEDIA,
-        "Changing Sound Driver to "
-         + driver->getName());
-
-    if (driver->initialize())
-    {
-        if (mActiveDriver != NULL)
-        {
-            mActiveDriver->shutdown();
-            mActiveDriver = NULL;
-        }
-        mActiveDriver = driver;
-    }
-    else
-    {
-        LOG_ERROR(
-            Logger::MULTIMEDIA,
-            "Sound driver "
-            + driver->getName()
-            + " had an error while initializing, keeping old driver.");
-    }
-}
-
-void SoundManager::_clearListenerActor()
-{
-    mActiveListener = NULL;
-    mListenerActor = NULL;
-}
-
-
-/**
- * @return Der aktive Treiber.
- * @author JoSch
- * @date 12-23-2005
- */
-SoundDriver* SoundManager::getActiveDriver() const
-{
-    return mActiveDriver;
-}
-
-/**
- * @return Der aktive Listener.
- * @author JoSch
- * @date 04-04-2006
- */
-ListenerObject* SoundManager::getListener() const
-{
-    return mActiveListener;
-}
-
-Actor* SoundManager::createListenerActor()
-{
-    if (mListenerActor == NULL)
-    {
-        if (mActiveListener != NULL)
-        {
-            mActiveListener->getListener()->setActive(false);
-        }
-
-        mListenerActor = ActorManager::getSingleton().createListenerActor("SoundListenerObject");
-        mActiveListener = static_cast<ListenerObject*>(mListenerActor->getControlledObject());
-        mActiveListener->getListener()->setActive(true);
-        return mListenerActor;
-    }
-    else
-    {
-        Throw(IllegalStateException, "ListenerActor already created.");
-    }
-}
-
-Actor* SoundManager::getListenerActor()
-{
-    return mListenerActor;
-}
-
-/**
- * Hole einen Treiber durch Angabe seines Namens
- * @param name Der name des gesuchten Treibers.
- * @return Der gesuchte Treiber
- * @author JoSch
- * @date 05-10-2006
- */
-SoundDriver *SoundManager::getDriverByName(const String &name)
-{
-    DriverList::const_iterator it;
-    for(it = mDriverList.begin(); it != mDriverList.end(); it++)
-    {
-        if ((*it)->getName() == name)
-        {
-            return *it;
-        }
-    }
-    return 0;
-}
-
-    const std::list<SoundDriver*>& SoundManager::getDriverList()
-    {
-        return mDriverList;
-    }
-
-    void SoundManager::registerDriver(rl::SoundDriver *driver)
-    {
-        mDriverList.push_back(driver);
-    }
-
-    void SoundManager::unregisterDriver(rl::SoundDriver *driver)
-    {
-        mDriverList.remove(driver);
-    }
-
-    void SoundManager::applySettings(const Ogre::NameValuePairList& settings)
-    {
-        // Get the sound driver
-        Ogre::NameValuePairList::const_iterator it = settings.find("Driver");
-        Ogre::String drivername;
-
-        if (it == settings.end())
-        {
-            drivername = "RlFmod4Driver";
-        }
-        else
-        {
-            drivername = it->second;
-        }
-
-        try
-        {
-            #if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
-            Ogre::Root::getSingleton().loadPlugin(drivername);
-            #else
-            Ogre::Root::getSingleton().loadPlugin("lib" + drivername);
-            #endif
-        }
-        catch(Ogre::Exception &e)
-        {
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                CeGuiString("Soundtreiber kann nicht geladen werden: ")
-                    + drivername + "\n"
-                    + e.getFullDescription());
-        }
-        catch(...)
-        {
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                 CeGuiString("Soundtreiber kann nicht geladen werden: ")
-                    + drivername);
-        }
-
-        SoundDriver *driver = getDriverByName(drivername);
-
-        if (driver == NULL)
-        {
-            driver = getDriverByName(NullDriver::NAME);
-        }
-
-        RlAssert(driver != NULL, "Beim Laden des Treibers ist ein Fehler aufgetreten");
-        setActiveDriver(driver);
-        getActiveDriver()->applySettings(settings);
-    }
-
-void SoundManager::unloadAllDrivers()
-{
-    if (mActiveDriver != NULL)
-    {
-        mActiveDriver->shutdown();
-        mActiveDriver = NULL;
-    }
-
-    for(DriverList::iterator it = mDriverList.begin(); it != mDriverList.end(); it++)
-    {
-#       if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
-        Ogre::String driverPlugin = (*it)->getName();
-#       else
-        Ogre::String driverPlugin = "lib" + (*it)->getName();
-#       endif
-
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            "Unloading sound driver DLL "
-            + driverPlugin);
-
-        bool isDriverPlugin = (*it)->isDriverPlugin();
-        if (isDriverPlugin)
-        {
-            Ogre::Root::getSingleton().unloadPlugin(driverPlugin);
-        }
-        else
-        {
-            delete *it;
-        }
-
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            "Sound driver DLL "
-            + driverPlugin
-            + " successfully unloaded.");
-    }
-
-    mDriverList.clear();
-}
-
-/**
- * @author JoSch
- * @date 07-03-2005
- */
-void SoundManager::run(Real elapsedTime)
-{
-    if (mActiveDriver != NULL)
-    {
-        mActiveDriver->update();
-    }
-
-    if (mListenerActor != NULL)
-    {
-        mListenerActor->_update();
-    }
-}
-
-const Ogre::String& SoundManager::getName() const
-{
-    static String NAME = "SoundManager";
-
-    return NAME;
-}
-
-/**
- * @author JoSch
- * @date 20-04-2007
- * Delegate sound creation to active driver
- */
-Sound* SoundManager::createSound(const Ogre::String& res, SoundType type)
-{
-    if (getActiveDriver() != NULL)
-    {
-        return getActiveDriver()->createSound(res, type);
-    }
-    return NULL;
-}
-
-/**
- * @author JoSch
- * @date 20-04-2007
- * Delegate sound creation to active driver
- */
-Sound* SoundManager::createSound(const SoundResourcePtr& res, SoundType type)
-{
-    if (getActiveDriver() != NULL)
-    {
-        return getActiveDriver()->createSound(res, type);
-    }
-    return NULL;
-}
-
-/**
- * @author JoSch
- * @date 20-04-2007
- * Delegate sound destruction to active driver
- */
-void SoundManager::destroySound(Sound* sound)
-{
-    if (getActiveDriver() != NULL)
-    {
-        getActiveDriver()->destroySound(sound);
-    }
-}
-
-}
+/* This source file is part of Rastullahs Lockenpracht.
+* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+*
+*  This program is free software; you can redistribute it and/or modify
+*  it under the terms of the Clarified Artistic License.
+*
+*  This program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*  Clarified Artistic License for more details.
+*
+*  You should have received a copy of the Clarified Artistic License
+*  along with this program; if not you can get it here
+*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+*/
+#include "stdinc.h" //precompiled header
+
+#include "SoundManager.h"
+
+#include <set>
+
+#include "Actor.h"
+#include "ActorManager.h"
+#include "ConfigFile.h"
+#include "CoreSubsystem.h"
+#include "GameLoop.h"
+#include "ListenerMovable.h"
+#include "ListenerObject.h"
+#include "SoundDriver.h"
+#include "SoundResource.h"
+
+#include "NullDriver.h"
+
+using namespace std;
+using namespace Ogre;
+
+/** Das Singleton
+ * @author JoSch
+ * @date 04-26-2004
+ */
+template<> rl::SoundManager* Singleton<rl::SoundManager>::ms_Singleton = 0;
+
+namespace rl
+{
+    /**
+     * Standardkonstruktor
+     * @author JoSch
+     * @date 01-27-2005
+     */
+    SoundManager::SoundManager()
+    : ResourceManager(),
+      mDriverList(),
+      mActiveDriver(NULL),
+      mListenerActor(NULL),
+      mActiveListener(NULL)
+    {
+        LOG_MESSAGE(Logger::MULTIMEDIA, "Erzeuge Soundmanager...");
+        NullDriver* nullDriver = new NullDriver(this);
+        registerDriver(nullDriver);
+        setActiveDriver(nullDriver);
+
+        mResourceType = "Sound";
+        ResourceGroupManager::getSingleton()._registerResourceManager(mResourceType, this);
+
+    }
+
+    SoundManager::~SoundManager()
+    {
+        ResourceGroupManager::getSingleton()._unregisterResourceManager(mResourceType);
+        unloadAllDrivers();
+    }
+
+/**
+ * Gibt die Suchmuster fuer die Extension zurueck.
+ * @return Die Liste der Suchmuster
+ * @author JoSch
+ * @date 06-18-2004
+ */
+StringList SoundManager::getExtension()
+{
+    StringList result;
+    result.push_back("*.ogg");
+    result.push_back("*.wav");
+
+    return result;
+}
+
+/**
+* @param resName. Der Name der Soundresource, die erzeugt
+* werden soll.
+* @author JoSch
+* @date 06-18-2004
+*/
+Resource* SoundManager::createImpl(
+    const String& resName,
+    ResourceHandle handle,
+    const String& group,
+    bool isManual,
+    ManualResourceLoader* loader,
+    const NameValuePairList* loadParams)
+{
+    SoundResource *newSound = NULL;
+    newSound = new SoundResource(this, resName, handle, group, isManual, loader);
+    return newSound;
+}
+
+/**
+ * @param Der neue Treiber.
+ * @author JoSch
+ * @date 12-23-2005
+ */
+void SoundManager::setActiveDriver(SoundDriver *driver)
+{
+    if (driver == NULL)
+    {
+        driver = getDriverByName(NullDriver::NAME);
+    }
+
+    if (mActiveDriver == driver)
+    {
+        LOG_DEBUG(Logger::MULTIMEDIA,
+            "No need to change Sound Driver, "
+            + mActiveDriver->getName()
+            + " is already active.");
+        return;
+    }
+
+    LOG_MESSAGE(Logger::MULTIMEDIA,
+        "Changing Sound Driver to "
+         + driver->getName());
+
+    if (driver->initialize())
+    {
+        if (mActiveDriver != NULL)
+        {
+            mActiveDriver->shutdown();
+            mActiveDriver = NULL;
+        }
+        mActiveDriver = driver;
+    }
+    else
+    {
+        LOG_ERROR(
+            Logger::MULTIMEDIA,
+            "Sound driver "
+            + driver->getName()
+            + " had an error while initializing, keeping old driver.");
+    }
+}
+
+void SoundManager::_clearListenerActor()
+{
+    mActiveListener = NULL;
+    mListenerActor = NULL;
+}
+
+
+/**
+ * @return Der aktive Treiber.
+ * @author JoSch
+ * @date 12-23-2005
+ */
+SoundDriver* SoundManager::getActiveDriver() const
+{
+    return mActiveDriver;
+}
+
+/**
+ * @return Der aktive Listener.
+ * @author JoSch
+ * @date 04-04-2006
+ */
+ListenerObject* SoundManager::getListener() const
+{
+    return mActiveListener;
+}
+
+Actor* SoundManager::createListenerActor()
+{
+    if (mListenerActor == NULL)
+    {
+        if (mActiveListener != NULL)
+        {
+            mActiveListener->getListener()->setActive(false);
+        }
+
+        mListenerActor = ActorManager::getSingleton().createListenerActor("SoundListenerObject");
+        mActiveListener = static_cast<ListenerObject*>(mListenerActor->getControlledObject());
+        mActiveListener->getListener()->setActive(true);
+        return mListenerActor;
+    }
+    else
+    {
+        Throw(IllegalStateException, "ListenerActor already created.");
+    }
+}
+
+Actor* SoundManager::getListenerActor()
+{
+    return mListenerActor;
+}
+
+/**
+ * Hole einen Treiber durch Angabe seines Namens
+ * @param name Der name des gesuchten Treibers.
+ * @return Der gesuchte Treiber
+ * @author JoSch
+ * @date 05-10-2006
+ */
+SoundDriver *SoundManager::getDriverByName(const String &name)
+{
+    DriverList::const_iterator it;
+    for(it = mDriverList.begin(); it != mDriverList.end(); it++)
+    {
+        if ((*it)->getName() == name)
+        {
+            return *it;
+        }
+    }
+    return 0;
+}
+
+    const std::list<SoundDriver*>& SoundManager::getDriverList()
+    {
+        return mDriverList;
+    }
+
+    void SoundManager::registerDriver(rl::SoundDriver *driver)
+    {
+        mDriverList.push_back(driver);
+    }
+
+    void SoundManager::unregisterDriver(rl::SoundDriver *driver)
+    {
+        mDriverList.remove(driver);
+    }
+
+    void SoundManager::applySettings(const Ogre::NameValuePairList& settings)
+    {
+        // Get the sound driver
+        Ogre::NameValuePairList::const_iterator it = settings.find("Driver");
+        Ogre::String drivername;
+
+        if (it == settings.end())
+        {
+            drivername = "RlFmod4Driver";
+        }
+        else
+        {
+            drivername = it->second;
+        }
+
+        try
+        {
+            CoreSubsystem::getSingleton().loadPlugin(drivername);
+        }
+        catch(Ogre::Exception &e)
+        {
+            LOG_MESSAGE(Logger::MULTIMEDIA,
+                CeGuiString("Soundtreiber kann nicht geladen werden: ")
+                    + drivername + "\n"
+                    + e.getFullDescription());
+        }
+        catch(...)
+        {
+            LOG_MESSAGE(Logger::MULTIMEDIA,
+                 CeGuiString("Soundtreiber kann nicht geladen werden: ")
+                    + drivername);
+        }
+
+        SoundDriver *driver = getDriverByName(drivername);
+
+        if (driver == NULL)
+        {
+            driver = getDriverByName(NullDriver::NAME);
+        }
+
+        RlAssert(driver != NULL, "Beim Laden des Treibers ist ein Fehler aufgetreten");
+        setActiveDriver(driver);
+        getActiveDriver()->applySettings(settings);
+    }
+
+void SoundManager::unloadAllDrivers()
+{
+    if (mActiveDriver != NULL)
+    {
+        mActiveDriver->shutdown();
+        mActiveDriver = NULL;
+    }
+
+    for(DriverList::iterator it = mDriverList.begin(); it != mDriverList.end(); it++)
+    {
+#       if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
+        Ogre::String driverPlugin = (*it)->getName();
+#       else
+        Ogre::String driverPlugin = "lib" + (*it)->getName();
+#       endif
+
+        LOG_MESSAGE(Logger::MULTIMEDIA,
+            "Unloading sound driver DLL "
+            + driverPlugin);
+
+        bool isDriverPlugin = (*it)->isDriverPlugin();
+        if (isDriverPlugin)
+        {
+            Ogre::Root::getSingleton().unloadPlugin(driverPlugin);
+        }
+        else
+        {
+            delete *it;
+        }
+
+        LOG_MESSAGE(Logger::MULTIMEDIA,
+            "Sound driver DLL "
+            + driverPlugin
+            + " successfully unloaded.");
+    }
+
+    mDriverList.clear();
+}
+
+/**
+ * @author JoSch
+ * @date 07-03-2005
+ */
+void SoundManager::run(Real elapsedTime)
+{
+    if (mActiveDriver != NULL)
+    {
+        mActiveDriver->update();
+    }
+
+    if (mListenerActor != NULL)
+    {
+        mListenerActor->_update();
+    }
+}
+
+const Ogre::String& SoundManager::getName() const
+{
+    static String NAME = "SoundManager";
+
+    return NAME;
+}
+
+/**
+ * @author JoSch
+ * @date 20-04-2007
+ * Delegate sound creation to active driver
+ */
+Sound* SoundManager::createSound(const Ogre::String& res, SoundType type)
+{
+    if (getActiveDriver() != NULL)
+    {
+        return getActiveDriver()->createSound(res, type);
+    }
+    return NULL;
+}
+
+/**
+ * @author JoSch
+ * @date 20-04-2007
+ * Delegate sound creation to active driver
+ */
+Sound* SoundManager::createSound(const SoundResourcePtr& res, SoundType type)
+{
+    if (getActiveDriver() != NULL)
+    {
+        return getActiveDriver()->createSound(res, type);
+    }
+    return NULL;
+}
+
+/**
+ * @author JoSch
+ * @date 20-04-2007
+ * Delegate sound destruction to active driver
+ */
+void SoundManager::destroySound(Sound* sound)
+{
+    if (getActiveDriver() != NULL)
+    {
+        getActiveDriver()->destroySound(sound);
+    }
+}
+
+}



From blakharaz at mail.berlios.de  Sat Jan 17 13:14:19 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Sat, 17 Jan 2009 13:14:19 +0100
Subject: [Dsa-hl-svn] r4713 - rl/trunk/Mac/Rastullah.xcodeproj
Message-ID: <200901171214.n0HCEJfh016575@sheep.berlios.de>

Author: blakharaz
Date: 2009-01-17 13:14:07 +0100 (Sat, 17 Jan 2009)
New Revision: 4713

Modified:
   rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj
Log:
Removed modules from rastullah target, changes for boost library

Modified: rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj
===================================================================
--- rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj	2009-01-17 12:12:38 UTC (rev 4712)
+++ rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj	2009-01-17 12:14:07 UTC (rev 4713)
@@ -429,7 +429,6 @@
 		44D8147A0BF7B62F00534175 /* Trigger.h in Headers */ = {isa = PBXBuildFile; fileRef = 44D814750BF7B62F00534175 /* Trigger.h */; };
 		44D8147B0BF7B62F00534175 /* Zone.h in Headers */ = {isa = PBXBuildFile; fileRef = 44D814760BF7B62F00534175 /* Zone.h */; };
 		44D8147C0BF7B62F00534175 /* ZoneManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 44D814770BF7B62F00534175 /* ZoneManager.h */; };
-		48003B550E3211660056D073 /* libboost_system.dylib in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
 		483646990D83D13700912FEC /* ContentLoader.h in Headers */ = {isa = PBXBuildFile; fileRef = 483646960D83D13700912FEC /* ContentLoader.h */; };
 		4836469A0D83D13700912FEC /* SoundStitching.h in Headers */ = {isa = PBXBuildFile; fileRef = 483646970D83D13700912FEC /* SoundStitching.h */; };
 		4836469B0D83D13700912FEC /* StartAnimationJob.h in Headers */ = {isa = PBXBuildFile; fileRef = 483646980D83D13700912FEC /* StartAnimationJob.h */; };
@@ -549,7 +548,7 @@
 		484D92210E1E078100BCFC2B /* libRlRules.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 444EAC370BD0E44900C6D4A0 /* libRlRules.dylib */; };
 		484D92220E1E078100BCFC2B /* libRlUi.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */; };
 		484D92230E1E078100BCFC2B /* libRlScript.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48570C1B0D8A6C5400096E35 /* libRlScript.dylib */; };
-		484D92240E1E078100BCFC2B /* libRlFmod4Driver.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 483D86700D8C3A3300F3629E /* libRlFmod4Driver.dylib */; };
+		484D92240E1E078100BCFC2B /* RlFmod4Driver.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */; };
 		484D92250E1E078100BCFC2B /* RlScript.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 483D87C90D8C55E500F3629E /* RlScript.bundle */; };
 		484FE6BA0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		484FE6BB0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
@@ -612,6 +611,8 @@
 		485B895A0E15796500D5B19C /* Scene.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485B89570E15796500D5B19C /* Scene.cpp */; };
 		485B895B0E15796500D5B19C /* SceneLoader.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485B89580E15796500D5B19C /* SceneLoader.cpp */; };
 		485B895C0E15796500D5B19C /* SceneManager.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485B89590E15796500D5B19C /* SceneManager.cpp */; };
+		4869D5300EF055F500619D4D /* libboost_system.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
+		4869D5310EF055F600619D4D /* libboost_filesystem.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48A52B210E0EDA0E008DBDD8 /* libboost_filesystem.dylib */; };
 		487029C70E80DCEA00B66388 /* GameOverWindow.h in Headers */ = {isa = PBXBuildFile; fileRef = 487029C60E80DCEA00B66388 /* GameOverWindow.h */; };
 		487029C90E80DCF900B66388 /* GameOverWindow.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 487029C80E80DCF900B66388 /* GameOverWindow.cpp */; };
 		487029E80E80E12200B66388 /* PartyManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 487029E70E80E12200B66388 /* PartyManager.h */; };
@@ -681,7 +682,6 @@
 		48C04B8A0E67DF0300CD3A7D /* PCRE.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48C04B890E67DF0300CD3A7D /* PCRE.framework */; };
 		48CFBF8F0E2E869000CD0C51 /* FreeType.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48CFBF8E0E2E869000CD0C51 /* FreeType.framework */; };
 		48D0BDC70E23375E00863824 /* libruby.dylib in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 483646A10D83D57800912FEC /* libruby.dylib */; };
-		48D0BDE60E23378700863824 /* libboost_filesystem.dylib in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52B210E0EDA0E008DBDD8 /* libboost_filesystem.dylib */; };
 		48D0BE2C0E273C5E00863824 /* SaveAble.h in Headers */ = {isa = PBXBuildFile; fileRef = 48D0BE280E273C5E00863824 /* SaveAble.h */; };
 		48D0BE2D0E273C5E00863824 /* SaveAbleCollection.h in Headers */ = {isa = PBXBuildFile; fileRef = 48D0BE290E273C5E00863824 /* SaveAbleCollection.h */; };
 		48D0BE2E0E273C5E00863824 /* SaveAbleFactory.h in Headers */ = {isa = PBXBuildFile; fileRef = 48D0BE2A0E273C5E00863824 /* SaveAbleFactory.h */; };
@@ -705,7 +705,6 @@
 		48D34A7F0D91C7D800C89477 /* SaveGameFileReader.h in Headers */ = {isa = PBXBuildFile; fileRef = 485A056F0D71EDC40024198D /* SaveGameFileReader.h */; };
 		48D34A800D91C7D800C89477 /* SaveGameFileWriter.h in Headers */ = {isa = PBXBuildFile; fileRef = 485A05700D71EDC40024198D /* SaveGameFileWriter.h */; };
 		48D34A810D91C7D800C89477 /* SaveGameManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 485A05710D71EDC40024198D /* SaveGameManager.h */; };
-		48D409CE0D9E483300AE5340 /* modules in Resources */ = {isa = PBXBuildFile; fileRef = 48D401810D9E483200AE5340 /* modules */; };
 		48EFE0A40E8B6AF6007EB7F8 /* FetchItemJob.h in Headers */ = {isa = PBXBuildFile; fileRef = 48EFE0A30E8B6AF6007EB7F8 /* FetchItemJob.h */; };
 		48EFE0A60E8B6C39007EB7F8 /* FetchItemJob.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48EFE0A50E8B6C39007EB7F8 /* FetchItemJob.cpp */; };
 		8D0C4E8D0486CD37000505A6 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 0867D6AAFE840B52C02AAC07 /* InfoPlist.strings */; };
@@ -864,8 +863,6 @@
 			files = (
 				487750B00E7E3C9C0018216B /* Cg.framework in Copy Frameworks */,
 				48C04B8A0E67DF0300CD3A7D /* PCRE.framework in Copy Frameworks */,
-				48003B550E3211660056D073 /* libboost_system.dylib in Copy Frameworks */,
-				48D0BDE60E23378700863824 /* libboost_filesystem.dylib in Copy Frameworks */,
 				48CFBF8F0E2E869000CD0C51 /* FreeType.framework in Copy Frameworks */,
 				48D0BDC70E23375E00863824 /* libruby.dylib in Copy Frameworks */,
 				484D92140E1E060200BCFC2B /* Xerces.framework in Copy Frameworks */,
@@ -1405,7 +1402,7 @@
 		483D31710D85B3B7003477A0 /* SimpleVehicle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = SimpleVehicle.cpp; path = ../engine/ai/src/SimpleVehicle.cpp; sourceTree = SOURCE_ROOT; };
 		483D31720D85B3B7003477A0 /* stdinc.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = stdinc.cpp; path = ../engine/ai/src/stdinc.cpp; sourceTree = SOURCE_ROOT; };
 		483D31730D85B3B7003477A0 /* WalkPathBehaviour.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = WalkPathBehaviour.cpp; path = ../engine/ai/src/WalkPathBehaviour.cpp; sourceTree = SOURCE_ROOT; };
-		483D86700D8C3A3300F3629E /* libRlFmod4Driver.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; includeInIndex = 0; path = libRlFmod4Driver.dylib; sourceTree = BUILT_PRODUCTS_DIR; };
+		483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; includeInIndex = 0; path = RlFmod4Driver.bundle; sourceTree = BUILT_PRODUCTS_DIR; };
 		483D868C0D8C3DA200F3629E /* Fmod4ConfigComponent.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4ConfigComponent.h; sourceTree = "<group>"; };
 		483D868D0D8C3DA200F3629E /* Fmod4Driver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4Driver.h; sourceTree = "<group>"; };
 		483D868E0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4DriverPrerequisites.h; sourceTree = "<group>"; };
@@ -1698,7 +1695,7 @@
 				444EAC370BD0E44900C6D4A0 /* libRlRules.dylib */,
 				444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */,
 				48570C1B0D8A6C5400096E35 /* libRlScript.dylib */,
-				483D86700D8C3A3300F3629E /* libRlFmod4Driver.dylib */,
+				483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */,
 				483D87C90D8C55E500F3629E /* RlScript.bundle */,
 			);
 			name = Products;
@@ -3038,7 +3035,7 @@
 			);
 			name = RlFmod4Driver;
 			productName = RlFmod4Driver;
-			productReference = 483D86700D8C3A3300F3629E /* libRlFmod4Driver.dylib */;
+			productReference = 483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */;
 			productType = "com.apple.product-type.library.dynamic";
 		};
 		483D87C80D8C55E500F3629E /* RlScriptExports */ = {
@@ -3143,6 +3140,8 @@
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				4869D5300EF055F500619D4D /* libboost_system.dylib in Resources */,
+				4869D5310EF055F600619D4D /* libboost_filesystem.dylib in Resources */,
 				48B0B03C0E6535AB0023B198 /* libmeshmagick.dylib in Resources */,
 				484D921E0E1E078100BCFC2B /* libRlCommon.dylib in Resources */,
 				484D921F0E1E078100BCFC2B /* libRlCore.dylib in Resources */,
@@ -3151,11 +3150,10 @@
 				484D92220E1E078100BCFC2B /* libRlUi.dylib in Resources */,
 				48B0B04A0E65BBC10023B198 /* libfmodex.dylib in Resources */,
 				484D92230E1E078100BCFC2B /* libRlScript.dylib in Resources */,
-				484D92240E1E078100BCFC2B /* libRlFmod4Driver.dylib in Resources */,
+				484D92240E1E078100BCFC2B /* RlFmod4Driver.bundle in Resources */,
 				484D92250E1E078100BCFC2B /* RlScript.bundle in Resources */,
 				8D0C4E8D0486CD37000505A6 /* InfoPlist.strings in Resources */,
 				8D0C4E8E0486CD37000505A6 /* main.nib in Resources */,
-				48D409CE0D9E483300AE5340 /* modules in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -3765,6 +3763,7 @@
 				OTHER_LDFLAGS = "";
 				PREBINDING = NO;
 				PRODUCT_NAME = libRlCore;
+				SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;
 				ZERO_LINK = NO;
 			};
 			name = Debug;
@@ -3806,6 +3805,7 @@
 				OTHER_LDFLAGS = "";
 				PREBINDING = NO;
 				PRODUCT_NAME = RlCore;
+				SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;
 				ZERO_LINK = NO;
 			};
 			name = Release;
@@ -4038,7 +4038,10 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				COPY_PHASE_STRIP = NO;
-				EXECUTABLE_PREFIX = lib;
+				DYLIB_COMPATIBILITY_VERSION = "";
+				DYLIB_CURRENT_VERSION = "";
+				EXECUTABLE_EXTENSION = bundle;
+				EXECUTABLE_PREFIX = "";
 				FRAMEWORK_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
@@ -4060,6 +4063,7 @@
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/lib\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
+				MACH_O_TYPE = mh_bundle;
 				OTHER_LDFLAGS = "-lfmodex";
 				PREBINDING = NO;
 				PRODUCT_NAME = RlFmod4Driver;
@@ -4072,7 +4076,10 @@
 			buildSettings = {
 				COPY_PHASE_STRIP = YES;
 				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				EXECUTABLE_PREFIX = lib;
+				DYLIB_COMPATIBILITY_VERSION = "";
+				DYLIB_CURRENT_VERSION = "";
+				EXECUTABLE_EXTENSION = bundle;
+				EXECUTABLE_PREFIX = "";
 				FRAMEWORK_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
@@ -4092,6 +4099,7 @@
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/lib\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
+				MACH_O_TYPE = mh_bundle;
 				OTHER_LDFLAGS = "-lfmodex";
 				PREBINDING = NO;
 				PRODUCT_NAME = RlFmod4Driver;
@@ -4259,6 +4267,7 @@
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_3 = "\"$(SRCROOT)/build/Debug\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_4 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
 				PRODUCT_NAME = Rastullah;
+				SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;
 				WRAPPER_EXTENSION = app;
 				ZERO_LINK = YES;
 			};
@@ -4292,6 +4301,7 @@
 				LIBRARY_SEARCH_PATHS_QUOTED_3 = "\"$(SRCROOT)/build/Debug\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
 				PRODUCT_NAME = Rastullah;
+				SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;
 				WRAPPER_EXTENSION = app;
 			};
 			name = Release;



From melven at mail.berlios.de  Wed Jan 21 20:53:03 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Wed, 21 Jan 2009 20:53:03 +0100
Subject: [Dsa-hl-svn] r4714 - in rl/branches/newton20: .
	Mac/Rastullah.xcodeproj Mac/tools engine/core/include
	engine/core/src
Message-ID: <200901211953.n0LJr3nB032068@sheep.berlios.de>

Author: melven
Date: 2009-01-21 20:52:59 +0100 (Wed, 21 Jan 2009)
New Revision: 4714

Modified:
   rl/branches/newton20/CMakeLists.txt
   rl/branches/newton20/Mac/Rastullah.xcodeproj/project.pbxproj
   rl/branches/newton20/Mac/tools/renameinstalldirs.sh
   rl/branches/newton20/engine/core/include/CoreSubsystem.h
   rl/branches/newton20/engine/core/src/CoreSubsystem.cpp
   rl/branches/newton20/engine/core/src/SoundManager.cpp
Log:
-merged from trunk
-set debug flags im CMakeLists.txt


Modified: rl/branches/newton20/CMakeLists.txt
===================================================================
--- rl/branches/newton20/CMakeLists.txt	2009-01-17 12:14:07 UTC (rev 4713)
+++ rl/branches/newton20/CMakeLists.txt	2009-01-21 19:52:59 UTC (rev 4714)
@@ -78,6 +78,10 @@
 	SET_FEATURE_INFO(SWIG "" "" "You use an unsupported version of SWIG.")
 ENDIF(NOT SWIG_DIR MATCHES -rl$)
 
+# Compile settings for build types
+SET(CMAKE_CXX_FLAGS_DEBUG "-O0 -g -DDEBUG")
+SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g -DDEBUG")
+
 # Path options
 SET(BINDIR "bin" CACHE STRING "Where to install binaries")
 SET(DATAROOTDIR "${CMAKE_INSTALL_PREFIX}/share" CACHE STRING "Sets the root of data directories to a non-default location")

Modified: rl/branches/newton20/Mac/Rastullah.xcodeproj/project.pbxproj
===================================================================
--- rl/branches/newton20/Mac/Rastullah.xcodeproj/project.pbxproj	2009-01-17 12:14:07 UTC (rev 4713)
+++ rl/branches/newton20/Mac/Rastullah.xcodeproj/project.pbxproj	2009-01-21 19:52:59 UTC (rev 4714)
@@ -429,7 +429,6 @@
 		44D8147A0BF7B62F00534175 /* Trigger.h in Headers */ = {isa = PBXBuildFile; fileRef = 44D814750BF7B62F00534175 /* Trigger.h */; };
 		44D8147B0BF7B62F00534175 /* Zone.h in Headers */ = {isa = PBXBuildFile; fileRef = 44D814760BF7B62F00534175 /* Zone.h */; };
 		44D8147C0BF7B62F00534175 /* ZoneManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 44D814770BF7B62F00534175 /* ZoneManager.h */; };
-		48003B550E3211660056D073 /* libboost_system.dylib in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
 		483646990D83D13700912FEC /* ContentLoader.h in Headers */ = {isa = PBXBuildFile; fileRef = 483646960D83D13700912FEC /* ContentLoader.h */; };
 		4836469A0D83D13700912FEC /* SoundStitching.h in Headers */ = {isa = PBXBuildFile; fileRef = 483646970D83D13700912FEC /* SoundStitching.h */; };
 		4836469B0D83D13700912FEC /* StartAnimationJob.h in Headers */ = {isa = PBXBuildFile; fileRef = 483646980D83D13700912FEC /* StartAnimationJob.h */; };
@@ -549,7 +548,7 @@
 		484D92210E1E078100BCFC2B /* libRlRules.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 444EAC370BD0E44900C6D4A0 /* libRlRules.dylib */; };
 		484D92220E1E078100BCFC2B /* libRlUi.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */; };
 		484D92230E1E078100BCFC2B /* libRlScript.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48570C1B0D8A6C5400096E35 /* libRlScript.dylib */; };
-		484D92240E1E078100BCFC2B /* libRlFmod4Driver.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 483D86700D8C3A3300F3629E /* libRlFmod4Driver.dylib */; };
+		484D92240E1E078100BCFC2B /* RlFmod4Driver.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */; };
 		484D92250E1E078100BCFC2B /* RlScript.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 483D87C90D8C55E500F3629E /* RlScript.bundle */; };
 		484FE6BA0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		484FE6BB0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
@@ -612,6 +611,8 @@
 		485B895A0E15796500D5B19C /* Scene.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485B89570E15796500D5B19C /* Scene.cpp */; };
 		485B895B0E15796500D5B19C /* SceneLoader.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485B89580E15796500D5B19C /* SceneLoader.cpp */; };
 		485B895C0E15796500D5B19C /* SceneManager.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485B89590E15796500D5B19C /* SceneManager.cpp */; };
+		4869D5300EF055F500619D4D /* libboost_system.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
+		4869D5310EF055F600619D4D /* libboost_filesystem.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48A52B210E0EDA0E008DBDD8 /* libboost_filesystem.dylib */; };
 		487029C70E80DCEA00B66388 /* GameOverWindow.h in Headers */ = {isa = PBXBuildFile; fileRef = 487029C60E80DCEA00B66388 /* GameOverWindow.h */; };
 		487029C90E80DCF900B66388 /* GameOverWindow.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 487029C80E80DCF900B66388 /* GameOverWindow.cpp */; };
 		487029E80E80E12200B66388 /* PartyManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 487029E70E80E12200B66388 /* PartyManager.h */; };
@@ -681,7 +682,6 @@
 		48C04B8A0E67DF0300CD3A7D /* PCRE.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48C04B890E67DF0300CD3A7D /* PCRE.framework */; };
 		48CFBF8F0E2E869000CD0C51 /* FreeType.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48CFBF8E0E2E869000CD0C51 /* FreeType.framework */; };
 		48D0BDC70E23375E00863824 /* libruby.dylib in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 483646A10D83D57800912FEC /* libruby.dylib */; };
-		48D0BDE60E23378700863824 /* libboost_filesystem.dylib in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52B210E0EDA0E008DBDD8 /* libboost_filesystem.dylib */; };
 		48D0BE2C0E273C5E00863824 /* SaveAble.h in Headers */ = {isa = PBXBuildFile; fileRef = 48D0BE280E273C5E00863824 /* SaveAble.h */; };
 		48D0BE2D0E273C5E00863824 /* SaveAbleCollection.h in Headers */ = {isa = PBXBuildFile; fileRef = 48D0BE290E273C5E00863824 /* SaveAbleCollection.h */; };
 		48D0BE2E0E273C5E00863824 /* SaveAbleFactory.h in Headers */ = {isa = PBXBuildFile; fileRef = 48D0BE2A0E273C5E00863824 /* SaveAbleFactory.h */; };
@@ -705,7 +705,6 @@
 		48D34A7F0D91C7D800C89477 /* SaveGameFileReader.h in Headers */ = {isa = PBXBuildFile; fileRef = 485A056F0D71EDC40024198D /* SaveGameFileReader.h */; };
 		48D34A800D91C7D800C89477 /* SaveGameFileWriter.h in Headers */ = {isa = PBXBuildFile; fileRef = 485A05700D71EDC40024198D /* SaveGameFileWriter.h */; };
 		48D34A810D91C7D800C89477 /* SaveGameManager.h in Headers */ = {isa = PBXBuildFile; fileRef = 485A05710D71EDC40024198D /* SaveGameManager.h */; };
-		48D409CE0D9E483300AE5340 /* modules in Resources */ = {isa = PBXBuildFile; fileRef = 48D401810D9E483200AE5340 /* modules */; };
 		48EFE0A40E8B6AF6007EB7F8 /* FetchItemJob.h in Headers */ = {isa = PBXBuildFile; fileRef = 48EFE0A30E8B6AF6007EB7F8 /* FetchItemJob.h */; };
 		48EFE0A60E8B6C39007EB7F8 /* FetchItemJob.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48EFE0A50E8B6C39007EB7F8 /* FetchItemJob.cpp */; };
 		8D0C4E8D0486CD37000505A6 /* InfoPlist.strings in Resources */ = {isa = PBXBuildFile; fileRef = 0867D6AAFE840B52C02AAC07 /* InfoPlist.strings */; };
@@ -864,8 +863,6 @@
 			files = (
 				487750B00E7E3C9C0018216B /* Cg.framework in Copy Frameworks */,
 				48C04B8A0E67DF0300CD3A7D /* PCRE.framework in Copy Frameworks */,
-				48003B550E3211660056D073 /* libboost_system.dylib in Copy Frameworks */,
-				48D0BDE60E23378700863824 /* libboost_filesystem.dylib in Copy Frameworks */,
 				48CFBF8F0E2E869000CD0C51 /* FreeType.framework in Copy Frameworks */,
 				48D0BDC70E23375E00863824 /* libruby.dylib in Copy Frameworks */,
 				484D92140E1E060200BCFC2B /* Xerces.framework in Copy Frameworks */,
@@ -1405,7 +1402,7 @@
 		483D31710D85B3B7003477A0 /* SimpleVehicle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = SimpleVehicle.cpp; path = ../engine/ai/src/SimpleVehicle.cpp; sourceTree = SOURCE_ROOT; };
 		483D31720D85B3B7003477A0 /* stdinc.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = stdinc.cpp; path = ../engine/ai/src/stdinc.cpp; sourceTree = SOURCE_ROOT; };
 		483D31730D85B3B7003477A0 /* WalkPathBehaviour.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = WalkPathBehaviour.cpp; path = ../engine/ai/src/WalkPathBehaviour.cpp; sourceTree = SOURCE_ROOT; };
-		483D86700D8C3A3300F3629E /* libRlFmod4Driver.dylib */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; includeInIndex = 0; path = libRlFmod4Driver.dylib; sourceTree = BUILT_PRODUCTS_DIR; };
+		483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; includeInIndex = 0; path = RlFmod4Driver.bundle; sourceTree = BUILT_PRODUCTS_DIR; };
 		483D868C0D8C3DA200F3629E /* Fmod4ConfigComponent.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4ConfigComponent.h; sourceTree = "<group>"; };
 		483D868D0D8C3DA200F3629E /* Fmod4Driver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4Driver.h; sourceTree = "<group>"; };
 		483D868E0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4DriverPrerequisites.h; sourceTree = "<group>"; };
@@ -1698,7 +1695,7 @@
 				444EAC370BD0E44900C6D4A0 /* libRlRules.dylib */,
 				444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */,
 				48570C1B0D8A6C5400096E35 /* libRlScript.dylib */,
-				483D86700D8C3A3300F3629E /* libRlFmod4Driver.dylib */,
+				483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */,
 				483D87C90D8C55E500F3629E /* RlScript.bundle */,
 			);
 			name = Products;
@@ -3038,7 +3035,7 @@
 			);
 			name = RlFmod4Driver;
 			productName = RlFmod4Driver;
-			productReference = 483D86700D8C3A3300F3629E /* libRlFmod4Driver.dylib */;
+			productReference = 483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */;
 			productType = "com.apple.product-type.library.dynamic";
 		};
 		483D87C80D8C55E500F3629E /* RlScriptExports */ = {
@@ -3143,6 +3140,8 @@
 			isa = PBXResourcesBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
+				4869D5300EF055F500619D4D /* libboost_system.dylib in Resources */,
+				4869D5310EF055F600619D4D /* libboost_filesystem.dylib in Resources */,
 				48B0B03C0E6535AB0023B198 /* libmeshmagick.dylib in Resources */,
 				484D921E0E1E078100BCFC2B /* libRlCommon.dylib in Resources */,
 				484D921F0E1E078100BCFC2B /* libRlCore.dylib in Resources */,
@@ -3151,11 +3150,10 @@
 				484D92220E1E078100BCFC2B /* libRlUi.dylib in Resources */,
 				48B0B04A0E65BBC10023B198 /* libfmodex.dylib in Resources */,
 				484D92230E1E078100BCFC2B /* libRlScript.dylib in Resources */,
-				484D92240E1E078100BCFC2B /* libRlFmod4Driver.dylib in Resources */,
+				484D92240E1E078100BCFC2B /* RlFmod4Driver.bundle in Resources */,
 				484D92250E1E078100BCFC2B /* RlScript.bundle in Resources */,
 				8D0C4E8D0486CD37000505A6 /* InfoPlist.strings in Resources */,
 				8D0C4E8E0486CD37000505A6 /* main.nib in Resources */,
-				48D409CE0D9E483300AE5340 /* modules in Resources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -3765,6 +3763,7 @@
 				OTHER_LDFLAGS = "";
 				PREBINDING = NO;
 				PRODUCT_NAME = libRlCore;
+				SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;
 				ZERO_LINK = NO;
 			};
 			name = Debug;
@@ -3806,6 +3805,7 @@
 				OTHER_LDFLAGS = "";
 				PREBINDING = NO;
 				PRODUCT_NAME = RlCore;
+				SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;
 				ZERO_LINK = NO;
 			};
 			name = Release;
@@ -4038,7 +4038,10 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				COPY_PHASE_STRIP = NO;
-				EXECUTABLE_PREFIX = lib;
+				DYLIB_COMPATIBILITY_VERSION = "";
+				DYLIB_CURRENT_VERSION = "";
+				EXECUTABLE_EXTENSION = bundle;
+				EXECUTABLE_PREFIX = "";
 				FRAMEWORK_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
@@ -4060,6 +4063,7 @@
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/lib\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
+				MACH_O_TYPE = mh_bundle;
 				OTHER_LDFLAGS = "-lfmodex";
 				PREBINDING = NO;
 				PRODUCT_NAME = RlFmod4Driver;
@@ -4072,7 +4076,10 @@
 			buildSettings = {
 				COPY_PHASE_STRIP = YES;
 				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				EXECUTABLE_PREFIX = lib;
+				DYLIB_COMPATIBILITY_VERSION = "";
+				DYLIB_CURRENT_VERSION = "";
+				EXECUTABLE_EXTENSION = bundle;
+				EXECUTABLE_PREFIX = "";
 				FRAMEWORK_SEARCH_PATHS = (
 					"$(inherited)",
 					"$(FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
@@ -4092,6 +4099,7 @@
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/lib\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
+				MACH_O_TYPE = mh_bundle;
 				OTHER_LDFLAGS = "-lfmodex";
 				PREBINDING = NO;
 				PRODUCT_NAME = RlFmod4Driver;
@@ -4259,6 +4267,7 @@
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_3 = "\"$(SRCROOT)/build/Debug\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_4 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
 				PRODUCT_NAME = Rastullah;
+				SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;
 				WRAPPER_EXTENSION = app;
 				ZERO_LINK = YES;
 			};
@@ -4292,6 +4301,7 @@
 				LIBRARY_SEARCH_PATHS_QUOTED_3 = "\"$(SRCROOT)/build/Debug\"";
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
 				PRODUCT_NAME = Rastullah;
+				SDKROOT = /Developer/SDKs/MacOSX10.4u.sdk;
 				WRAPPER_EXTENSION = app;
 			};
 			name = Release;

Modified: rl/branches/newton20/Mac/tools/renameinstalldirs.sh
===================================================================
--- rl/branches/newton20/Mac/tools/renameinstalldirs.sh	2009-01-17 12:14:07 UTC (rev 4713)
+++ rl/branches/newton20/Mac/tools/renameinstalldirs.sh	2009-01-21 19:52:59 UTC (rev 4714)
@@ -2,20 +2,33 @@
 RASTULLAH_APP_DIR=$1
 RASTULLAH_APP_NAME=$2
 RASTULLAH_APP_BIN=${RASTULLAH_APP_DIR}/${RASTULLAH_APP_NAME}
-CEGUI_BIN=${RASTULLAH_APP_DIR}/../Frameworks/CEGUI.framework/CEGUI
+CEGUI_DIR=${RASTULLAH_APP_DIR}/../Frameworks/CEGUI.framework
+CEGUI_BIN=${CEGUI_DIR}/CEGUI
 RASTULLAH_RES_DIR=$1/../Resources
 
 #TODO: Replace the absolute source paths to something with olist -L $RASTULLAH_APP_NAME and grep
 
 echo Changing library installation directories for $RASTULLAH_APP_NAME
 
-RL_BINARIES="$RASTULLAH_APP_BIN $RASTULLAH_RES_DIR/libRlAi.dylib $RASTULLAH_RES_DIR/libRlCommon.dylib $RASTULLAH_RES_DIR/libRlCore.dylib $RASTULLAH_RES_DIR/libRlRules.dylib $RASTULLAH_RES_DIR/libRlScript.dylib $RASTULLAH_RES_DIR/libRlUi.dylib $RASTULLAH_RES_DIR/libRlFmod4Driver.dylib"
+RL_BINARIES="$RASTULLAH_APP_BIN \
+    $RASTULLAH_RES_DIR/libRlAi.dylib \
+    $RASTULLAH_RES_DIR/libRlCommon.dylib \
+    $RASTULLAH_RES_DIR/libRlCore.dylib \
+    $RASTULLAH_RES_DIR/libRlRules.dylib \
+    $RASTULLAH_RES_DIR/libRlScript.dylib \
+    $RASTULLAH_RES_DIR/libRlUi.dylib \
+    $RASTULLAH_RES_DIR/libRlFmod4Driver.dylib \
+    $RASTULLAH_RES_DIR/libboost_filesystem.dylib \
+    $RASTULLAH_RES_DIR/libboost_system.dylib \
+    $RASTULLAH_RES_DIR/RlScript.bundle"
+
 # RL Application binary
 for cur in $RL_BINARIES 
 do
     echo Processing $cur
     install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI $cur
-    install_name_tool -change libboost_system-mt-1_35.dylib @executable_path/../Frameworks/libboost_system.dylib $cur
+    install_name_tool -change libboost_system-mt-1_35.dylib @executable_path/../Resources/libboost_system.dylib $cur
+    install_name_tool -change libboost_filesystem-mt-1_35.dylib @executable_path/../Resources/libboost_filesystem.dylib $cur
     install_name_tool -change /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/libruby.1.dylib @executable_path/../Frameworks/libruby.1.dylib $cur
     install_name_tool -change /Users/blakharaz/Library/Frameworks/OgreNewt.framework/Versions/A/OgreNewt @executable_path/../Frameworks/OgreNewt.framework/Versions/A/OgreNewt $cur
     install_name_tool -change /Users/blakharaz/Library/Frameworks/OpenSteer.framework/Versions/0.8/OpenSteer @executable_path/../Frameworks/OpenSteer.framework/Versions/0.8/OpenSteer $cur
@@ -24,6 +37,10 @@
 
 # CEGUI
 install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI ${CEGUI_BIN}
+install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI ${CEGUI_DIR}/Resources/CEGUIExpatParser.bundle/Contents/MacOS/CEGUIExpatParser
+install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI ${CEGUI_DIR}/Resources/CEGUIFalagardWRBase.bundle/Contents/MacOS/CEGUIFalagardWRBase
+install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI ${CEGUI_DIR}/Resources/CEGUIFreeImageImageCodec.bundle/Contents/MacOS/CEGUIFreeImageImageCodec
+install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI ${CEGUI_DIR}/Resources/CEGUIDevILImageCodec.bundle/Contents/MacOS/CEGUIDevILImageCodec
 install_name_tool -change /Library/Frameworks/FreeType.framework/Versions/2.3/FreeType @executable_path/../Frameworks/FreeType.framework/Versions/2.3/FreeType ${CEGUI_BIN}
 
 echo done.
\ No newline at end of file

Modified: rl/branches/newton20/engine/core/include/CoreSubsystem.h
===================================================================
--- rl/branches/newton20/engine/core/include/CoreSubsystem.h	2009-01-17 12:14:07 UTC (rev 4713)
+++ rl/branches/newton20/engine/core/include/CoreSubsystem.h	2009-01-21 19:52:59 UTC (rev 4714)
@@ -1,169 +1,170 @@
-/* This source file is part of Rastullahs Lockenpracht.
- * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the Clarified Artistic License.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  Clarified Artistic License for more details.
- *
- *  You should have received a copy of the Clarified Artistic License
- *  along with this program; if not you can get it here
- *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
- */
-
-#ifndef __CoreSubsystem_H__
-#define __CoreSubsystem_H__
-
-
-#include <map>
-
-#include "EventSource.h"
-#include "EventCaster.h"
-#include "CorePrerequisites.h"
-
-namespace rl {
-
-class RubyInterpreter;
-class World;
-class CoreEvent;
-class CoreEventListener;
-class Actor;
-class ContentModule;
-class ScriptWrapper;
-class PhysicsManager;
-class MessagePump;
-class GameLoop;
-class AnimationManager;
-class ActorManager;
-class GameEventManager;
-class XmlResourceManager;
-class SoundManager;
-class DebugVisualsManager;
-class SaveGameManager;
-class JobScheduler;
-class ZoneManager;
-class TimeSourceManager;
-
-typedef _RlCoreExport std::map<Ogre::String, ContentModule*> ModuleMap;
-
-/** CoreSubsystem.
-    @remarks
-        It follows the Singleton Pattern,
-        and initialises the game context.
-*/
-class _RlCoreExport CoreSubsystem : public Ogre::Singleton<CoreSubsystem>
-{
-public:
-    /** Default Constructor */
-    CoreSubsystem();
-    /** Default Deconstructor */
-    virtual ~CoreSubsystem();
-
-    /** Starts the Game */
-    void startCore();
-
-    /** Renders one frame (for internal use) */
-    void renderOneFrame(bool executeTasks = true);
-
-    World* getWorld();
-    void loadMap(const Ogre::String type, const Ogre::String filename,
-        const Ogre::String module);
-
-    RubyInterpreter* getRubyInterpreter();
-
-    ContentModule* getActiveAdventureModule() const;
-    ContentModule* getModule(const Ogre::String& moduleId) const;
-    const ModuleMap& getAllModules() const;
-    void startAdventureModule(ContentModule* module);
-    void setDefaultActiveModule(const Ogre::String& moduleId);
-    const Ogre::String& getDefaultActiveModule() const;
-    void registerModule(ContentModule* module);
-
-    void setDeveloperMode(bool developerMode);
-    bool getDeveloperMode() const;
-
-    /** Saves a timestamped png Screenshot
-        @param sName The filename (extended with the timestamp)
-    */
-    void makeScreenshot(const Ogre::String& sName);
-
-    void setScheme(const Ogre::String& schemeName);
-
-    bool isInitialized() const;
-
-    const Ogre::String getEngineVersionString() const;
-    const Ogre::String getEngineVersionName() const;
-    long         getEngineBuildNumber() const;
-
-    /**
-     * Retrieves a pointer to the current render window.
-     *
-     * @return pointer to render window
-     */
-    Ogre::RenderWindow* getRenderWindow() const;
-
-	/// Sets the pause state of the game
-	/// @param paused <code>true</code> if the game should be paused, <code>false</code> if it should be continued
-	void setPaused(bool paused);
-
-    void setTimeFactor(const Ogre::Real& factor = 1.0F);
-
-    void _setCurrentScene(const CeGuiString& scene);
-    const CeGuiString& getCurrentScene() const;
-
-private:
-    World* mWorld;
-    RubyInterpreter* mRubyInterpreter;
-    ModuleMap mModules;
-    ContentModule* mActiveAdventureModule;
-    Ogre::String mDefaultActiveModule;
-    Ogre::RenderWindow* mRenderWindow;            //!< Render window for OGRE
-    CeGuiString mCurrentScene;
-
-    RL_LONGLONG mClockStartTime;
-
-    bool mDeveloperMode;
-    bool mInitialized;
-    std::vector<Ogre::Technique*> mDefaultTechniques;
-
-    // The singletons of this subsystem
-    Ogre::Root* mOgreRoot;
-    ScriptWrapper* mScriptWrapper;
-    XmlResourceManager* mXmlResourceManager;
-    PhysicsManager* mPhysicsManager;
-    MessagePump* mMessagePump;
-    GameLoop* mGameLoop;
-    AnimationManager* mAnimationManager;
-    ActorManager* mActorManager;
-    GameEventManager* mGameEventManager;
-    SoundManager* mSoundManager;
-    DebugVisualsManager* mDebugVisualsManager;
-    SaveGameManager* mSaveGameManager;
-    JobScheduler* mJobScheduler;
-	ZoneManager* mZoneManager;
-    TimeSourceManager* mTimeSourceManager;
-
-    /** Runs the setup methods  */
-    bool initializeCoreSubsystem();
-
-    /** Loads all needed ressources */
-    void initializeResources();
-
-    void loadPlugins();
-    void unloadPlugins();
-
-    /**
-     * Sammelt alle Default-Techniques, um sie sp?ter bei jedem aktivierten Scheme
-     * benutzen zu k?nnen
-     */
-    void updateDefaultScheme();
-
-    void loadModule(ContentModule* module);
-};
-
-}
-#endif
-
+/* This source file is part of Rastullahs Lockenpracht.
+ * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the Clarified Artistic License.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  Clarified Artistic License for more details.
+ *
+ *  You should have received a copy of the Clarified Artistic License
+ *  along with this program; if not you can get it here
+ *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+ */
+
+#ifndef __CoreSubsystem_H__
+#define __CoreSubsystem_H__
+
+
+#include <map>
+
+#include "EventSource.h"
+#include "EventCaster.h"
+#include "CorePrerequisites.h"
+
+namespace rl {
+
+class RubyInterpreter;
+class World;
+class CoreEvent;
+class CoreEventListener;
+class Actor;
+class ContentModule;
+class ScriptWrapper;
+class PhysicsManager;
+class MessagePump;
+class GameLoop;
+class AnimationManager;
+class ActorManager;
+class GameEventManager;
+class XmlResourceManager;
+class SoundManager;
+class DebugVisualsManager;
+class SaveGameManager;
+class JobScheduler;
+class ZoneManager;
+class TimeSourceManager;
+
+typedef _RlCoreExport std::map<Ogre::String, ContentModule*> ModuleMap;
+
+/** CoreSubsystem.
+    @remarks
+        It follows the Singleton Pattern,
+        and initialises the game context.
+*/
+class _RlCoreExport CoreSubsystem : public Ogre::Singleton<CoreSubsystem>
+{
+public:
+    /** Default Constructor */
+    CoreSubsystem();
+    /** Default Deconstructor */
+    virtual ~CoreSubsystem();
+
+    /** Starts the Game */
+    void startCore();
+
+    /** Renders one frame (for internal use) */
+    void renderOneFrame(bool executeTasks = true);
+
+    World* getWorld();
+    void loadMap(const Ogre::String& type, const Ogre::String& filename,
+        const Ogre::String& module);
+
+    RubyInterpreter* getRubyInterpreter();
+
+    ContentModule* getActiveAdventureModule() const;
+    ContentModule* getModule(const Ogre::String& moduleId) const;
+    const ModuleMap& getAllModules() const;
+    void startAdventureModule(ContentModule* module);
+    void setDefaultActiveModule(const Ogre::String& moduleId);
+    const Ogre::String& getDefaultActiveModule() const;
+    void registerModule(ContentModule* module);
+
+    void setDeveloperMode(bool developerMode);
+    bool getDeveloperMode() const;
+
+    /** Saves a timestamped png Screenshot
+        @param sName The filename (extended with the timestamp)
+    */
+    void makeScreenshot(const Ogre::String& sName);
+
+    void setScheme(const Ogre::String& schemeName);
+
+    bool isInitialized() const;
+
+    const Ogre::String getEngineVersionString() const;
+    const Ogre::String getEngineVersionName() const;
+    long         getEngineBuildNumber() const;
+
+    /**
+     * Retrieves a pointer to the current render window.
+     *
+     * @return pointer to render window
+     */
+    Ogre::RenderWindow* getRenderWindow() const;
+
+	/// Sets the pause state of the game
+	/// @param paused <code>true</code> if the game should be paused, <code>false</code> if it should be continued
+	void setPaused(bool paused);
+
+    void setTimeFactor(const Ogre::Real& factor = 1.0F);
+
+    void _setCurrentScene(const CeGuiString& scene);
+    const CeGuiString& getCurrentScene() const;
+    void loadPlugin(const Ogre::String& plugin);
+
+private:
+    World* mWorld;
+    RubyInterpreter* mRubyInterpreter;
+    ModuleMap mModules;
+    ContentModule* mActiveAdventureModule;
+    Ogre::String mDefaultActiveModule;
+    Ogre::RenderWindow* mRenderWindow;            //!< Render window for OGRE
+    CeGuiString mCurrentScene;
+
+    RL_LONGLONG mClockStartTime;
+
+    bool mDeveloperMode;
+    bool mInitialized;
+    std::vector<Ogre::Technique*> mDefaultTechniques;
+
+    // The singletons of this subsystem
+    Ogre::Root* mOgreRoot;
+    ScriptWrapper* mScriptWrapper;
+    XmlResourceManager* mXmlResourceManager;
+    PhysicsManager* mPhysicsManager;
+    MessagePump* mMessagePump;
+    GameLoop* mGameLoop;
+    AnimationManager* mAnimationManager;
+    ActorManager* mActorManager;
+    GameEventManager* mGameEventManager;
+    SoundManager* mSoundManager;
+    DebugVisualsManager* mDebugVisualsManager;
+    SaveGameManager* mSaveGameManager;
+    JobScheduler* mJobScheduler;
+	ZoneManager* mZoneManager;
+    TimeSourceManager* mTimeSourceManager;
+
+    /** Runs the setup methods  */
+    bool initializeCoreSubsystem();
+
+    /** Loads all needed ressources */
+    void initializeResources();
+
+    void loadPlugins();
+    void unloadPlugins();
+
+    /**
+     * Sammelt alle Default-Techniques, um sie sp???ter bei jedem aktivierten Scheme
+     * benutzen zu k??nnen
+     */
+    void updateDefaultScheme();
+
+    void loadModule(ContentModule* module);
+};
+
+}
+#endif
+

Modified: rl/branches/newton20/engine/core/src/CoreSubsystem.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/CoreSubsystem.cpp	2009-01-17 12:14:07 UTC (rev 4713)
+++ rl/branches/newton20/engine/core/src/CoreSubsystem.cpp	2009-01-21 19:52:59 UTC (rev 4714)
@@ -471,7 +471,7 @@
             {
                 Throw(
                     rl::RuntimeException,
-                    "Depedency Module " + depName
+                    "Dependency Module " + depName
                     + " needed by " + Ogre::String(module->getName().c_str())
                     + " not found.");
             }
@@ -571,11 +571,24 @@
         return mModules;
     }
 
-    void CoreSubsystem::loadMap(const Ogre::String type, const Ogre::String filename,
-        const Ogre::String module)
+    void CoreSubsystem::loadMap(const Ogre::String& type, const Ogre::String& filename,
+        const Ogre::String& module)
     {
         mWorld->loadScene(filename, module);
     }
+    
+    void CoreSubsystem::loadPlugin(const Ogre::String& plugin)
+    {
+        Ogre::String pluginFile;
+        
+#if OGRE_PLATFORM == OGRE_PLATFORM_LINUX
+        pluginFile = "lib" + plugin;
+#else
+        pluginFile = plugin;
+#endif
+        
+        Ogre::Root::getSingleton().loadPlugin(pluginFile);
+    }
 
     void CoreSubsystem::loadPlugins()
     {

Modified: rl/branches/newton20/engine/core/src/SoundManager.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/SoundManager.cpp	2009-01-17 12:14:07 UTC (rev 4713)
+++ rl/branches/newton20/engine/core/src/SoundManager.cpp	2009-01-21 19:52:59 UTC (rev 4714)
@@ -1,390 +1,387 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-*
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#include "stdinc.h" //precompiled header
-
-#include "SoundManager.h"
-
-#include <set>
-
-#include "Actor.h"
-#include "ActorManager.h"
-#include "ConfigFile.h"
-#include "GameLoop.h"
-#include "ListenerMovable.h"
-#include "ListenerObject.h"
-#include "SoundDriver.h"
-#include "SoundResource.h"
-
-#include "NullDriver.h"
-
-using namespace std;
-using namespace Ogre;
-
-/** Das Singleton
- * @author JoSch
- * @date 04-26-2004
- */
-template<> rl::SoundManager* Singleton<rl::SoundManager>::ms_Singleton = 0;
-
-namespace rl
-{
-    /**
-     * Standardkonstruktor
-     * @author JoSch
-     * @date 01-27-2005
-     */
-    SoundManager::SoundManager()
-    : ResourceManager(),
-      mDriverList(),
-      mActiveDriver(NULL),
-      mListenerActor(NULL),
-      mActiveListener(NULL)
-    {
-        LOG_MESSAGE(Logger::MULTIMEDIA, "Erzeuge Soundmanager...");
-        NullDriver* nullDriver = new NullDriver(this);
-        registerDriver(nullDriver);
-        setActiveDriver(nullDriver);
-
-        mResourceType = "Sound";
-        ResourceGroupManager::getSingleton()._registerResourceManager(mResourceType, this);
-
-    }
-
-    SoundManager::~SoundManager()
-    {
-        ResourceGroupManager::getSingleton()._unregisterResourceManager(mResourceType);
-        unloadAllDrivers();
-    }
-
-/**
- * Gibt die Suchmuster fuer die Extension zurueck.
- * @return Die Liste der Suchmuster
- * @author JoSch
- * @date 06-18-2004
- */
-StringList SoundManager::getExtension()
-{
-    StringList result;
-    result.push_back("*.ogg");
-    result.push_back("*.wav");
-
-    return result;
-}
-
-/**
-* @param resName. Der Name der Soundresource, die erzeugt
-* werden soll.
-* @author JoSch
-* @date 06-18-2004
-*/
-Resource* SoundManager::createImpl(
-    const String& resName,
-    ResourceHandle handle,
-    const String& group,
-    bool isManual,
-    ManualResourceLoader* loader,
-    const NameValuePairList* loadParams)
-{
-    SoundResource *newSound = NULL;
-    newSound = new SoundResource(this, resName, handle, group, isManual, loader);
-    return newSound;
-}
-
-/**
- * @param Der neue Treiber.
- * @author JoSch
- * @date 12-23-2005
- */
-void SoundManager::setActiveDriver(SoundDriver *driver)
-{
-    if (driver == NULL)
-    {
-        driver = getDriverByName(NullDriver::NAME);
-    }
-
-    if (mActiveDriver == driver)
-    {
-        LOG_DEBUG(Logger::MULTIMEDIA,
-            "No need to change Sound Driver, "
-            + mActiveDriver->getName()
-            + " is already active.");
-        return;
-    }
-
-    LOG_MESSAGE(Logger::MULTIMEDIA,
-        "Changing Sound Driver to "
-         + driver->getName());
-
-    if (driver->initialize())
-    {
-        if (mActiveDriver != NULL)
-        {
-            mActiveDriver->shutdown();
-            mActiveDriver = NULL;
-        }
-        mActiveDriver = driver;
-    }
-    else
-    {
-        LOG_ERROR(
-            Logger::MULTIMEDIA,
-            "Sound driver "
-            + driver->getName()
-            + " had an error while initializing, keeping old driver.");
-    }
-}
-
-void SoundManager::_clearListenerActor()
-{
-    mActiveListener = NULL;
-    mListenerActor = NULL;
-}
-
-
-/**
- * @return Der aktive Treiber.
- * @author JoSch
- * @date 12-23-2005
- */
-SoundDriver* SoundManager::getActiveDriver() const
-{
-    return mActiveDriver;
-}
-
-/**
- * @return Der aktive Listener.
- * @author JoSch
- * @date 04-04-2006
- */
-ListenerObject* SoundManager::getListener() const
-{
-    return mActiveListener;
-}
-
-Actor* SoundManager::createListenerActor()
-{
-    if (mListenerActor == NULL)
-    {
-        if (mActiveListener != NULL)
-        {
-            mActiveListener->getListener()->setActive(false);
-        }
-
-        mListenerActor = ActorManager::getSingleton().createListenerActor("SoundListenerObject");
-        mActiveListener = static_cast<ListenerObject*>(mListenerActor->getControlledObject());
-        mActiveListener->getListener()->setActive(true);
-        return mListenerActor;
-    }
-    else
-    {
-        Throw(IllegalStateException, "ListenerActor already created.");
-    }
-}
-
-Actor* SoundManager::getListenerActor()
-{
-    return mListenerActor;
-}
-
-/**
- * Hole einen Treiber durch Angabe seines Namens
- * @param name Der name des gesuchten Treibers.
- * @return Der gesuchte Treiber
- * @author JoSch
- * @date 05-10-2006
- */
-SoundDriver *SoundManager::getDriverByName(const String &name)
-{
-    DriverList::const_iterator it;
-    for(it = mDriverList.begin(); it != mDriverList.end(); it++)
-    {
-        if ((*it)->getName() == name)
-        {
-            return *it;
-        }
-    }
-    return 0;
-}
-
-    const std::list<SoundDriver*>& SoundManager::getDriverList()
-    {
-        return mDriverList;
-    }
-
-    void SoundManager::registerDriver(rl::SoundDriver *driver)
-    {
-        mDriverList.push_back(driver);
-    }
-
-    void SoundManager::unregisterDriver(rl::SoundDriver *driver)
-    {
-        mDriverList.remove(driver);
-    }
-
-    void SoundManager::applySettings(const Ogre::NameValuePairList& settings)
-    {
-        // Get the sound driver
-        Ogre::NameValuePairList::const_iterator it = settings.find("Driver");
-        Ogre::String drivername;
-
-        if (it == settings.end())
-        {
-            drivername = "RlFmod4Driver";
-        }
-        else
-        {
-            drivername = it->second;
-        }
-
-        try
-        {
-            #if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
-            Ogre::Root::getSingleton().loadPlugin(drivername);
-            #else
-            Ogre::Root::getSingleton().loadPlugin("lib" + drivername);
-            #endif
-        }
-        catch(Ogre::Exception &e)
-        {
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                CeGuiString("Soundtreiber kann nicht geladen werden: ")
-                    + drivername + "\n"
-                    + e.getFullDescription());
-        }
-        catch(...)
-        {
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                 CeGuiString("Soundtreiber kann nicht geladen werden: ")
-                    + drivername);
-        }
-
-        SoundDriver *driver = getDriverByName(drivername);
-
-        if (driver == NULL)
-        {
-            driver = getDriverByName(NullDriver::NAME);
-        }
-
-        RlAssert(driver != NULL, "Beim Laden des Treibers ist ein Fehler aufgetreten");
-        setActiveDriver(driver);
-        getActiveDriver()->applySettings(settings);
-    }
-
-void SoundManager::unloadAllDrivers()
-{
-    if (mActiveDriver != NULL)
-    {
-        mActiveDriver->shutdown();
-        mActiveDriver = NULL;
-    }
-
-    for(DriverList::iterator it = mDriverList.begin(); it != mDriverList.end(); it++)
-    {
-#       if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
-        Ogre::String driverPlugin = (*it)->getName();
-#       else
-        Ogre::String driverPlugin = "lib" + (*it)->getName();
-#       endif
-
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            "Unloading sound driver DLL "
-            + driverPlugin);
-
-        bool isDriverPlugin = (*it)->isDriverPlugin();
-        if (isDriverPlugin)
-        {
-            Ogre::Root::getSingleton().unloadPlugin(driverPlugin);
-        }
-        else
-        {
-            delete *it;
-        }
-
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            "Sound driver DLL "
-            + driverPlugin
-            + " successfully unloaded.");
-    }
-
-    mDriverList.clear();
-}
-
-/**
- * @author JoSch
- * @date 07-03-2005
- */
-void SoundManager::run(Real elapsedTime)
-{
-    if (mActiveDriver != NULL)
-    {
-        mActiveDriver->update();
-    }
-
-    if (mListenerActor != NULL)
-    {
-        mListenerActor->_update();
-    }
-}
-
-const Ogre::String& SoundManager::getName() const
-{
-    static String NAME = "SoundManager";
-
-    return NAME;
-}
-
-/**
- * @author JoSch
- * @date 20-04-2007
- * Delegate sound creation to active driver
- */
-Sound* SoundManager::createSound(const Ogre::String& res, SoundType type)
-{
-    if (getActiveDriver() != NULL)
-    {
-        return getActiveDriver()->createSound(res, type);
-    }
-    return NULL;
-}
-
-/**
- * @author JoSch
- * @date 20-04-2007
- * Delegate sound creation to active driver
- */
-Sound* SoundManager::createSound(const SoundResourcePtr& res, SoundType type)
-{
-    if (getActiveDriver() != NULL)
-    {
-        return getActiveDriver()->createSound(res, type);
-    }
-    return NULL;
-}
-
-/**
- * @author JoSch
- * @date 20-04-2007
- * Delegate sound destruction to active driver
- */
-void SoundManager::destroySound(Sound* sound)
-{
-    if (getActiveDriver() != NULL)
-    {
-        getActiveDriver()->destroySound(sound);
-    }
-}
-
-}
+/* This source file is part of Rastullahs Lockenpracht.
+* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+*
+*  This program is free software; you can redistribute it and/or modify
+*  it under the terms of the Clarified Artistic License.
+*
+*  This program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*  Clarified Artistic License for more details.
+*
+*  You should have received a copy of the Clarified Artistic License
+*  along with this program; if not you can get it here
+*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+*/
+#include "stdinc.h" //precompiled header
+
+#include "SoundManager.h"
+
+#include <set>
+
+#include "Actor.h"
+#include "ActorManager.h"
+#include "ConfigFile.h"
+#include "CoreSubsystem.h"
+#include "GameLoop.h"
+#include "ListenerMovable.h"
+#include "ListenerObject.h"
+#include "SoundDriver.h"
+#include "SoundResource.h"
+
+#include "NullDriver.h"
+
+using namespace std;
+using namespace Ogre;
+
+/** Das Singleton
+ * @author JoSch
+ * @date 04-26-2004
+ */
+template<> rl::SoundManager* Singleton<rl::SoundManager>::ms_Singleton = 0;
+
+namespace rl
+{
+    /**
+     * Standardkonstruktor
+     * @author JoSch
+     * @date 01-27-2005
+     */
+    SoundManager::SoundManager()
+    : ResourceManager(),
+      mDriverList(),
+      mActiveDriver(NULL),
+      mListenerActor(NULL),
+      mActiveListener(NULL)
+    {
+        LOG_MESSAGE(Logger::MULTIMEDIA, "Erzeuge Soundmanager...");
+        NullDriver* nullDriver = new NullDriver(this);
+        registerDriver(nullDriver);
+        setActiveDriver(nullDriver);
+
+        mResourceType = "Sound";
+        ResourceGroupManager::getSingleton()._registerResourceManager(mResourceType, this);
+
+    }
+
+    SoundManager::~SoundManager()
+    {
+        ResourceGroupManager::getSingleton()._unregisterResourceManager(mResourceType);
+        unloadAllDrivers();
+    }
+
+/**
+ * Gibt die Suchmuster fuer die Extension zurueck.
+ * @return Die Liste der Suchmuster
+ * @author JoSch
+ * @date 06-18-2004
+ */
+StringList SoundManager::getExtension()
+{
+    StringList result;
+    result.push_back("*.ogg");
+    result.push_back("*.wav");
+
+    return result;
+}
+
+/**
+* @param resName. Der Name der Soundresource, die erzeugt
+* werden soll.
+* @author JoSch
+* @date 06-18-2004
+*/
+Resource* SoundManager::createImpl(
+    const String& resName,
+    ResourceHandle handle,
+    const String& group,
+    bool isManual,
+    ManualResourceLoader* loader,
+    const NameValuePairList* loadParams)
+{
+    SoundResource *newSound = NULL;
+    newSound = new SoundResource(this, resName, handle, group, isManual, loader);
+    return newSound;
+}
+
+/**
+ * @param Der neue Treiber.
+ * @author JoSch
+ * @date 12-23-2005
+ */
+void SoundManager::setActiveDriver(SoundDriver *driver)
+{
+    if (driver == NULL)
+    {
+        driver = getDriverByName(NullDriver::NAME);
+    }
+
+    if (mActiveDriver == driver)
+    {
+        LOG_DEBUG(Logger::MULTIMEDIA,
+            "No need to change Sound Driver, "
+            + mActiveDriver->getName()
+            + " is already active.");
+        return;
+    }
+
+    LOG_MESSAGE(Logger::MULTIMEDIA,
+        "Changing Sound Driver to "
+         + driver->getName());
+
+    if (driver->initialize())
+    {
+        if (mActiveDriver != NULL)
+        {
+            mActiveDriver->shutdown();
+            mActiveDriver = NULL;
+        }
+        mActiveDriver = driver;
+    }
+    else
+    {
+        LOG_ERROR(
+            Logger::MULTIMEDIA,
+            "Sound driver "
+            + driver->getName()
+            + " had an error while initializing, keeping old driver.");
+    }
+}
+
+void SoundManager::_clearListenerActor()
+{
+    mActiveListener = NULL;
+    mListenerActor = NULL;
+}
+
+
+/**
+ * @return Der aktive Treiber.
+ * @author JoSch
+ * @date 12-23-2005
+ */
+SoundDriver* SoundManager::getActiveDriver() const
+{
+    return mActiveDriver;
+}
+
+/**
+ * @return Der aktive Listener.
+ * @author JoSch
+ * @date 04-04-2006
+ */
+ListenerObject* SoundManager::getListener() const
+{
+    return mActiveListener;
+}
+
+Actor* SoundManager::createListenerActor()
+{
+    if (mListenerActor == NULL)
+    {
+        if (mActiveListener != NULL)
+        {
+            mActiveListener->getListener()->setActive(false);
+        }
+
+        mListenerActor = ActorManager::getSingleton().createListenerActor("SoundListenerObject");
+        mActiveListener = static_cast<ListenerObject*>(mListenerActor->getControlledObject());
+        mActiveListener->getListener()->setActive(true);
+        return mListenerActor;
+    }
+    else
+    {
+        Throw(IllegalStateException, "ListenerActor already created.");
+    }
+}
+
+Actor* SoundManager::getListenerActor()
+{
+    return mListenerActor;
+}
+
+/**
+ * Hole einen Treiber durch Angabe seines Namens
+ * @param name Der name des gesuchten Treibers.
+ * @return Der gesuchte Treiber
+ * @author JoSch
+ * @date 05-10-2006
+ */
+SoundDriver *SoundManager::getDriverByName(const String &name)
+{
+    DriverList::const_iterator it;
+    for(it = mDriverList.begin(); it != mDriverList.end(); it++)
+    {
+        if ((*it)->getName() == name)
+        {
+            return *it;
+        }
+    }
+    return 0;
+}
+
+    const std::list<SoundDriver*>& SoundManager::getDriverList()
+    {
+        return mDriverList;
+    }
+
+    void SoundManager::registerDriver(rl::SoundDriver *driver)
+    {
+        mDriverList.push_back(driver);
+    }
+
+    void SoundManager::unregisterDriver(rl::SoundDriver *driver)
+    {
+        mDriverList.remove(driver);
+    }
+
+    void SoundManager::applySettings(const Ogre::NameValuePairList& settings)
+    {
+        // Get the sound driver
+        Ogre::NameValuePairList::const_iterator it = settings.find("Driver");
+        Ogre::String drivername;
+
+        if (it == settings.end())
+        {
+            drivername = "RlFmod4Driver";
+        }
+        else
+        {
+            drivername = it->second;
+        }
+
+        try
+        {
+            CoreSubsystem::getSingleton().loadPlugin(drivername);
+        }
+        catch(Ogre::Exception &e)
+        {
+            LOG_MESSAGE(Logger::MULTIMEDIA,
+                CeGuiString("Soundtreiber kann nicht geladen werden: ")
+                    + drivername + "\n"
+                    + e.getFullDescription());
+        }
+        catch(...)
+        {
+            LOG_MESSAGE(Logger::MULTIMEDIA,
+                 CeGuiString("Soundtreiber kann nicht geladen werden: ")
+                    + drivername);
+        }
+
+        SoundDriver *driver = getDriverByName(drivername);
+
+        if (driver == NULL)
+        {
+            driver = getDriverByName(NullDriver::NAME);
+        }
+
+        RlAssert(driver != NULL, "Beim Laden des Treibers ist ein Fehler aufgetreten");
+        setActiveDriver(driver);
+        getActiveDriver()->applySettings(settings);
+    }
+
+void SoundManager::unloadAllDrivers()
+{
+    if (mActiveDriver != NULL)
+    {
+        mActiveDriver->shutdown();
+        mActiveDriver = NULL;
+    }
+
+    for(DriverList::iterator it = mDriverList.begin(); it != mDriverList.end(); it++)
+    {
+#       if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
+        Ogre::String driverPlugin = (*it)->getName();
+#       else
+        Ogre::String driverPlugin = "lib" + (*it)->getName();
+#       endif
+
+        LOG_MESSAGE(Logger::MULTIMEDIA,
+            "Unloading sound driver DLL "
+            + driverPlugin);
+
+        bool isDriverPlugin = (*it)->isDriverPlugin();
+        if (isDriverPlugin)
+        {
+            Ogre::Root::getSingleton().unloadPlugin(driverPlugin);
+        }
+        else
+        {
+            delete *it;
+        }
+
+        LOG_MESSAGE(Logger::MULTIMEDIA,
+            "Sound driver DLL "
+            + driverPlugin
+            + " successfully unloaded.");
+    }
+
+    mDriverList.clear();
+}
+
+/**
+ * @author JoSch
+ * @date 07-03-2005
+ */
+void SoundManager::run(Real elapsedTime)
+{
+    if (mActiveDriver != NULL)
+    {
+        mActiveDriver->update();
+    }
+
+    if (mListenerActor != NULL)
+    {
+        mListenerActor->_update();
+    }
+}
+
+const Ogre::String& SoundManager::getName() const
+{
+    static String NAME = "SoundManager";
+
+    return NAME;
+}
+
+/**
+ * @author JoSch
+ * @date 20-04-2007
+ * Delegate sound creation to active driver
+ */
+Sound* SoundManager::createSound(const Ogre::String& res, SoundType type)
+{
+    if (getActiveDriver() != NULL)
+    {
+        return getActiveDriver()->createSound(res, type);
+    }
+    return NULL;
+}
+
+/**
+ * @author JoSch
+ * @date 20-04-2007
+ * Delegate sound creation to active driver
+ */
+Sound* SoundManager::createSound(const SoundResourcePtr& res, SoundType type)
+{
+    if (getActiveDriver() != NULL)
+    {
+        return getActiveDriver()->createSound(res, type);
+    }
+    return NULL;
+}
+
+/**
+ * @author JoSch
+ * @date 20-04-2007
+ * Delegate sound destruction to active driver
+ */
+void SoundManager::destroySound(Sound* sound)
+{
+    if (getActiveDriver() != NULL)
+    {
+        getActiveDriver()->destroySound(sound);
+    }
+}
+
+}



From melven at mail.berlios.de  Wed Jan 21 20:56:30 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Wed, 21 Jan 2009 20:56:30 +0100
Subject: [Dsa-hl-svn] r4715 - in dependencies/OgreNewt_ngt: inc src
Message-ID: <200901211956.n0LJuURa032391@sheep.berlios.de>

Author: melven
Date: 2009-01-21 20:56:28 +0100 (Wed, 21 Jan 2009)
New Revision: 4715

Modified:
   dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h
   dependencies/OgreNewt_ngt/src/OgreNewt_Collision.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp
Log:
-commented out some code for trigger-bodies
-added NewtonAddCollisionReference when creating collisions (so newton doesn't delete them until the OgreNewt::Collision gets deleted!)


Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h	2009-01-21 19:52:59 UTC (rev 4714)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h	2009-01-21 19:56:28 UTC (rev 4715)
@@ -98,7 +98,10 @@
                 if a collision is marked as a trigger-volume, there's no calculation of contacts, so
                 this acts like an accurate aabb test
         */
-        void setAsTriggerVolume(bool trigger) { NewtonCollisionSetAsTriggerVolume(m_col, (int)trigger); }
+        //! TODO:
+        // this doesn't work correctly yet, because the userdata pointer in the collision callback can't be accessed with a trigger
+        // volume in the current beta!
+        void setAsTriggerVolume(bool trigger) { /*NewtonCollisionSetAsTriggerVolume(m_col, (int)trigger);*/ }
 };
 
 //typedef Ogre::SharedPtr<Collision> CollisionPtr;

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_Collision.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_Collision.cpp	2009-01-21 19:52:59 UTC (rev 4714)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_Collision.cpp	2009-01-21 19:56:28 UTC (rev 4715)
@@ -8,7 +8,7 @@
 {
 
 	
-Collision::Collision( const World* world )
+Collision::Collision( const World* world ) : m_col(NULL)
 {
 	m_world = world;
 }
@@ -27,9 +27,12 @@
 	float matrix[16];
 	OgreNewt::Converters::QuatPosToMatrix( orient, pos, matrix );
 
-	NewtonCollisionCalculateAABB( m_col, matrix, &min.x, &max.x );
+    if( m_col )
+    {
+    	NewtonCollisionCalculateAABB( m_col, matrix, &min.x, &max.x );
 
-	box = Ogre::AxisAlignedBox(min, max);
+	    box = Ogre::AxisAlignedBox(min, max);
+    }
 	return box;
 }
 
@@ -48,6 +51,7 @@
 ConvexModifierCollision::ConvexModifierCollision(const World* world, const Collision* col) : Collision(world)
 {
 	m_col = NewtonCreateConvexHullModifier( world->getNewtonWorld(), col->getNewtonCollision() );
+    NewtonAddCollisionReference(m_col);
 }
 
 ConvexModifierCollision::~ConvexModifierCollision()
@@ -59,7 +63,8 @@
 	float matrix[16];
 	OgreNewt::Converters::Matrix4ToMatrix( mat, matrix );
 
-	NewtonConvexHullModifierSetMatrix( m_col, matrix );	
+    if( m_col )
+    	NewtonConvexHullModifierSetMatrix( m_col, matrix );	
 }
 
 Ogre::Matrix4 ConvexModifierCollision::getScalarMatrix() const
@@ -67,9 +72,12 @@
 	float matrix[16];
 	Ogre::Matrix4 mat;
 	
-	NewtonConvexHullModifierGetMatrix( m_col, matrix );
+    if( m_col )
+    {
+    	NewtonConvexHullModifierGetMatrix( m_col, matrix );
 
-	OgreNewt::Converters::MatrixToMatrix4( matrix, mat );
+    	OgreNewt::Converters::MatrixToMatrix4( matrix, mat );
+    }
 
 	return mat;
 }
@@ -77,3 +85,4 @@
 
 
 }	// end NAMESPACE OgreNewt
+

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp	2009-01-21 19:52:59 UTC (rev 4714)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp	2009-01-21 19:56:28 UTC (rev 4715)
@@ -13,6 +13,8 @@
 		Null::Null(const OgreNewt::World *world) : Collision( world )
 		{
 			m_col = NewtonCreateNull( m_world->getNewtonWorld() );
+
+            NewtonAddCollisionReference(m_col);
 		}
 
 
@@ -24,6 +26,8 @@
 			OgreNewt::Converters::QuatPosToMatrix( orient, pos, &matrix[0] );
 
 			m_col = NewtonCreateBox( m_world->getNewtonWorld(), (float)size.x, (float)size.y, (float)size.z, &matrix[0] );
+
+            NewtonAddCollisionReference(m_col);
 		}
 
 
@@ -36,6 +40,8 @@
 			OgreNewt::Converters::QuatPosToMatrix( orient, pos, &matrix[0] );
 
 			m_col = NewtonCreateSphere( m_world->getNewtonWorld(), (float)size.x, (float)size.y, (float)size.z, &matrix[0] );
+
+            NewtonAddCollisionReference(m_col);
 		}
 
 
@@ -48,6 +54,8 @@
 			OgreNewt::Converters::QuatPosToMatrix( orient, pos, &matrix[0] );
 
 			m_col = NewtonCreateCylinder( m_world->getNewtonWorld(), (float)radius, (float)height, &matrix[0] );
+
+            NewtonAddCollisionReference(m_col);
 		}
 
 
@@ -60,6 +68,8 @@
 			OgreNewt::Converters::QuatPosToMatrix( orient, pos, &matrix[0] );
 
 			m_col = NewtonCreateCapsule( m_world->getNewtonWorld(), (float)radius, (float)height, &matrix[0] );
+
+            NewtonAddCollisionReference(m_col);
 		}
 
 
@@ -72,6 +82,8 @@
 			OgreNewt::Converters::QuatPosToMatrix( orient, pos, &matrix[0] );
 
 			m_col = NewtonCreateCone( m_world->getNewtonWorld(), (float)radius, (float)height, &matrix[0] );
+
+            NewtonAddCollisionReference(m_col);
 		}
 
 		// OgreNewt::CollisionPrimitives::ChamferCylinder
@@ -83,6 +95,8 @@
 			OgreNewt::Converters::QuatPosToMatrix( orient, pos, &matrix[0] );
 
 			m_col = NewtonCreateChamferCylinder( m_world->getNewtonWorld(), (float)radius, (float)height, &matrix[0] );
+
+            NewtonAddCollisionReference(m_col);
 		}
 
 
@@ -204,6 +218,8 @@
 			//okay, let's try making the ConvexHull!
 			m_col = NewtonCreateConvexHull( m_world->getNewtonWorld(), (int)total_verts, (float*)&vertices[0].x, sizeof(Ogre::Vector3), 0.001f, &matrix[0] );
 
+            NewtonAddCollisionReference(m_col);
+
 			delete []vertices;
 
 		}
@@ -218,6 +234,8 @@
 			//make the collision primitive.
 			m_col = NewtonCreateConvexHull( m_world->getNewtonWorld(), vertcount, (float*)&verts[0].x, sizeof(Ogre::Vector3), 0.001f, &matrix[0]);
 
+            NewtonAddCollisionReference(m_col);
+
 		}
 
 
@@ -481,6 +499,8 @@
 		void TreeCollision::finish( bool optimize)
 		{
 			NewtonTreeCollisionEndBuild( m_col, optimize );
+
+            NewtonAddCollisionReference(m_col);
 		}
 
 
@@ -677,6 +697,8 @@
 
 			m_col = NewtonCreateCompoundCollision( world->getNewtonWorld(), num, array );
 
+            NewtonAddCollisionReference(m_col);
+
 			delete[] array;
 
 		}
@@ -714,6 +736,8 @@
 			//make the collision primitive.
 			m_col = NewtonCreateConvexHull( m_world->getNewtonWorld(), 5, vertices, sizeof(float)*3, 0.001f, &matrix[0]);
 
+            NewtonAddCollisionReference(m_col);
+
 			delete []vertices;
 
 		}

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp	2009-01-21 19:52:59 UTC (rev 4714)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp	2009-01-21 19:56:28 UTC (rev 4715)
@@ -1,6 +1,7 @@
 #include <OgreNewt_ContactCallback.h>
 #include <OgreNewt_Body.h>
 
+
 namespace OgreNewt
 {
 
@@ -31,6 +32,20 @@
 
 void _CDECL ContactCallback::contactProcess(const NewtonJoint *contactJoint, float timeStep, int threadIndex )
 {
+/*    // pruefe ob nur TriggerVolume - funktioniert mit aktuellem newton noch nicht
+    if( NewtonCollisionIsTriggerVolume(NewtonBodyGetCollision(NewtonJointGetBody1(contactJoint))) ||
+        NewtonCollisionIsTriggerVolume(NewtonBodyGetCollision(NewtonJointGetBody1(contactJoint))) )
+    {
+	    ContactCallback *me = (ContactCallback*)NewtonJointGetUserData(contactJoint);
+        me->m_material = NULL;
+        me->m_body0 = (OgreNewt::Body*)NewtonBodyGetUserData( NewtonJointGetBody0(contactJoint) );
+    	me->m_body1 = (OgreNewt::Body*)NewtonBodyGetUserData( NewtonJointGetBody1(contactJoint) );
+        me->contactProcess( (Ogre::Real)timeStep, threadIndex );
+
+        return;
+    }
+*/
+bool test = false;
         for (void* contact = NewtonContactJointGetFirstContact (contactJoint); contact; contact = NewtonContactJointGetNextContact (contactJoint, contact))
         {
 	        ContactCallback *me;



From blakharaz at mail.berlios.de  Thu Jan 22 22:53:13 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Thu, 22 Jan 2009 22:53:13 +0100
Subject: [Dsa-hl-svn] r4716 - in rl/trunk: . engine/ai engine/core
	engine/core/include engine/core/include/fmod4driver
	engine/core/src engine/core/src/fmod4driver engine/ui/include
	engine/ui/src tools
Message-ID: <200901222153.n0MLrDQI014131@sheep.berlios.de>

Author: blakharaz
Date: 2009-01-22 22:53:04 +0100 (Thu, 22 Jan 2009)
New Revision: 4716

Added:
   rl/trunk/engine/core/include/fmod4driver/
   rl/trunk/engine/core/include/fmod4driver/Fmod4Driver.h
   rl/trunk/engine/core/include/fmod4driver/Fmod4Listener.h
   rl/trunk/engine/core/include/fmod4driver/Fmod4Sound.h
   rl/trunk/engine/core/include/fmod4driver/Fmod4SoundStitching.h
   rl/trunk/engine/core/src/fmod4driver/
   rl/trunk/engine/core/src/fmod4driver/Fmod4Driver.cpp
   rl/trunk/engine/core/src/fmod4driver/Fmod4Listener.cpp
   rl/trunk/engine/core/src/fmod4driver/Fmod4Sound.cpp
   rl/trunk/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp
   rl/trunk/engine/ui/include/Fmod4ConfigComponent.h
   rl/trunk/engine/ui/src/Fmod4ConfigComponent.cpp
Removed:
   rl/trunk/plugins/
Modified:
   rl/trunk/Rastullah2005.sln
   rl/trunk/engine/ai/
   rl/trunk/engine/core/CMakeLists.txt
   rl/trunk/engine/core/RlCore2005.vcproj
   rl/trunk/engine/core/src/SoundManager.cpp
   rl/trunk/engine/ui/src/GameSettings.cpp
   rl/trunk/tools/copy_dependencies.bat
   rl/trunk/tools/copy_dlls.bat
Log:
Removed sound driver plugins, Fmod 4 is now linked with RlCore

Modified: rl/trunk/Rastullah2005.sln
===================================================================
--- rl/trunk/Rastullah2005.sln	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/Rastullah2005.sln	2009-01-22 21:53:04 UTC (rev 4716)
@@ -1,19 +1,35 @@
 Microsoft Visual Studio Solution File, Format Version 9.00
 # Visual Studio 2005
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlCommon", "engine\common\RlCommon2005.vcproj", "{D3185FC6-9384-431A-A237-80284F859B21}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlCore", "engine\core\RlCore2005.vcproj", "{0935F495-4540-40E3-AC8F-AA54C85DC5B2}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlRules", "engine\rules\RlRules2005.vcproj", "{1D1D45B2-A9C3-4D10-93EC-22AE4AA5C070}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
 		{0935F495-4540-40E3-AC8F-AA54C85DC5B2} = {0935F495-4540-40E3-AC8F-AA54C85DC5B2}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlScript", "engine\script\RlScript2005.vcproj", "{9A41EAE4-302A-4823-8F20-FA1AD58189A1}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{53FE20F3-E726-44FE-BBEC-D29CAE210D25} = {53FE20F3-E726-44FE-BBEC-D29CAE210D25}
 		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
@@ -23,6 +39,10 @@
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlStartup", "engine\startup\RlStartup2005.vcproj", "{B78AEF70-E618-4E9D-BD67-E17995ECF714}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{53FE20F3-E726-44FE-BBEC-D29CAE210D25} = {53FE20F3-E726-44FE-BBEC-D29CAE210D25}
 		{9A41EAE4-302A-4823-8F20-FA1AD58189A1} = {9A41EAE4-302A-4823-8F20-FA1AD58189A1}
@@ -33,6 +53,10 @@
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlUI", "engine\ui\RlUI2005.vcproj", "{53FE20F3-E726-44FE-BBEC-D29CAE210D25}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{C3E78B89-587B-499A-BE7D-4FE8564F0CD7} = {C3E78B89-587B-499A-BE7D-4FE8564F0CD7}
 		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
@@ -41,19 +65,16 @@
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlAI", "engine\ai\RlAI2005.vcproj", "{C3E78B89-587B-499A-BE7D-4FE8564F0CD7}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{0935F495-4540-40E3-AC8F-AA54C85DC5B2} = {0935F495-4540-40E3-AC8F-AA54C85DC5B2}
 		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
 		{1D1D45B2-A9C3-4D10-93EC-22AE4AA5C070} = {1D1D45B2-A9C3-4D10-93EC-22AE4AA5C070}
 	EndProjectSection
 EndProject
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlFmod4Driver", "plugins\fmod4driver\RlFmod4Driver.vcproj", "{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}"
-	ProjectSection(ProjectDependencies) = postProject
-		{53FE20F3-E726-44FE-BBEC-D29CAE210D25} = {53FE20F3-E726-44FE-BBEC-D29CAE210D25}
-		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
-		{0935F495-4540-40E3-AC8F-AA54C85DC5B2} = {0935F495-4540-40E3-AC8F-AA54C85DC5B2}
-	EndProjectSection
-EndProject
 Global
 	GlobalSection(SolutionConfigurationPlatforms) = preSolution
 		Debug|Win32 = Debug|Win32
@@ -103,12 +124,6 @@
 		{C3E78B89-587B-499A-BE7D-4FE8564F0CD7}.Release|Win32.Build.0 = Release|Win32
 		{C3E78B89-587B-499A-BE7D-4FE8564F0CD7}.ReleaseWithSymbols|Win32.ActiveCfg = Release with Symbols|Win32
 		{C3E78B89-587B-499A-BE7D-4FE8564F0CD7}.ReleaseWithSymbols|Win32.Build.0 = Release with Symbols|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.Debug|Win32.ActiveCfg = Debug|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.Debug|Win32.Build.0 = Debug|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.Release|Win32.ActiveCfg = Release|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.Release|Win32.Build.0 = Release|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.ReleaseWithSymbols|Win32.ActiveCfg = Release with Symbols|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.ReleaseWithSymbols|Win32.Build.0 = Release with Symbols|Win32
 	EndGlobalSection
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE


Property changes on: rl/trunk/engine/ai
___________________________________________________________________
Name: svn:ignore
   - 
Makefile.in
Makefile

   + Makefile.in
Makefile
obj
lib


Modified: rl/trunk/engine/core/CMakeLists.txt
===================================================================
--- rl/trunk/engine/core/CMakeLists.txt	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/core/CMakeLists.txt	2009-01-22 21:53:04 UTC (rev 4716)
@@ -1,5 +1,6 @@
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include
+${CMAKE_CURRENT_SOURCE_DIR}/include/fmod4driver
 ${CMAKE_CURRENT_SOURCE_DIR}/include/nulldriver
 ${RL_COMMON_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
@@ -82,6 +83,10 @@
 src/World.cpp
 src/Zone.cpp
 src/ZoneManager.cpp
+src/fmod4driver/Fmod4Driver.cpp
+src/fmod4driver/Fmod4Listener.cpp
+src/fmod4driver/Fmod4Sound.cpp
+src/fmod4driver/Fmod4SoundStitching.cpp
 src/nulldriver/NullDriver.cpp
 src/nulldriver/NullListener.cpp
 src/nulldriver/NullSound.cpp

Modified: rl/trunk/engine/core/RlCore2005.vcproj
===================================================================
--- rl/trunk/engine/core/RlCore2005.vcproj	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/core/RlCore2005.vcproj	2009-01-22 21:53:04 UTC (rev 4716)
@@ -48,7 +48,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalOptions="-Zm130"
 				Optimization="0"
-				AdditionalIncludeDirectories=".\include;.\include\nulldriver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include"
+				AdditionalIncludeDirectories=".\include;.\include\nulldriver;.\include\fmod4driver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include;..\..\dependencies\FMOD4\api\inc"
 				PreprocessorDefinitions="WITH_FMOD3;_WINDOWS,_DEBUG,WIN32,RLCORE_EXPORTS;_CRT_SECURE_NO_DEPRECATE;RL_USE_PCH"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
@@ -85,12 +85,12 @@
 				Name="VCLinkerTool"
 				IgnoreImportLibrary="true"
 				AdditionalOptions="/MACHINE:I386"
-				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt_d.lib OgreMain_d.lib xerces-c_2D.lib CEGUIBase_d.lib Newton.lib meshmagick_d.lib"
+				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt_d.lib OgreMain_d.lib xerces-c_2D.lib CEGUIBase_d.lib Newton.lib meshmagick_d.lib fmodex_vc.lib"
 				ShowProgress="0"
 				OutputFile="./lib/$(ConfigurationName)/RlCore.dll"
 				LinkIncremental="2"
 				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib"
+				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib;..\..\dependencies\FMOD4\api\lib"
 				IgnoreDefaultLibraryNames=""
 				TypeLibraryFile="$(OutDir)\RlCore.lib"
 				GenerateDebugInformation="true"
@@ -163,7 +163,7 @@
 				Optimization="3"
 				EnableIntrinsicFunctions="true"
 				FavorSizeOrSpeed="1"
-				AdditionalIncludeDirectories=".\include;.\include\nulldriver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include"
+				AdditionalIncludeDirectories=".\include;.\include\nulldriver;.\include\fmod4driver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include;..\..\dependencies\FMOD4\api\inc"
 				PreprocessorDefinitions="WITH_FMOD3;NDEBUG,_WINDOWS,WIN32,RLCORE_EXPORTS;_CRT_SECURE_NO_DEPRECATE;RL_USE_PCH"
 				StringPooling="false"
 				ExceptionHandling="1"
@@ -198,11 +198,11 @@
 				Name="VCLinkerTool"
 				IgnoreImportLibrary="true"
 				AdditionalOptions="/MACHINE:I386"
-				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib"
+				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib fmodex_vc.lib"
 				OutputFile="./lib/$(ConfigurationName)/RlCore.dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib"
+				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib;..\..\dependencies\FMOD4\api\lib"
 				TypeLibraryFile="$(OutDir)\RlCore.lib"
 				ProgramDatabaseFile=""
 				SubSystem="2"
@@ -270,7 +270,7 @@
 				Optimization="3"
 				EnableIntrinsicFunctions="true"
 				FavorSizeOrSpeed="1"
-				AdditionalIncludeDirectories=".\include;.\include\nulldriver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include"
+				AdditionalIncludeDirectories=".\include;.\include\nulldriver;.\include\fmod4driver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include;..\..\dependencies\FMOD4\api\inc"
 				PreprocessorDefinitions="WITH_FMOD3;NDEBUG,_WINDOWS,WIN32,RLCORE_EXPORTS;_CRT_SECURE_NO_DEPRECATE;RL_USE_PCH"
 				StringPooling="false"
 				ExceptionHandling="1"
@@ -305,11 +305,11 @@
 				Name="VCLinkerTool"
 				IgnoreImportLibrary="true"
 				AdditionalOptions="/MACHINE:I386"
-				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib"
+				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib fmodex_vc.lib"
 				OutputFile="$(OutDir)/RlCore.dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="..\common\lib\Release;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;..\..\dependencies\ogrenewt\lib\release;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib"
+				AdditionalLibraryDirectories="..\common\lib\Release;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;..\..\dependencies\ogrenewt\lib\release;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib;..\..\dependencies\FMOD4\api\lib"
 				TypeLibraryFile="$(OutDir)\RlCore.lib"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
@@ -699,6 +699,26 @@
 					>
 				</File>
 			</Filter>
+			<Filter
+				Name="fmod4driver"
+				>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4Driver.h"
+					>
+				</File>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4Listener.h"
+					>
+				</File>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4Sound.h"
+					>
+				</File>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4SoundStitching.h"
+					>
+				</File>
+			</Filter>
 		</Filter>
 		<Filter
 			Name="Source Files"
@@ -1044,6 +1064,26 @@
 					>
 				</File>
 			</Filter>
+			<Filter
+				Name="fmod4driver"
+				>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4Driver.cpp"
+					>
+				</File>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4Listener.cpp"
+					>
+				</File>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4Sound.cpp"
+					>
+				</File>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4SoundStitching.cpp"
+					>
+				</File>
+			</Filter>
 		</Filter>
 		<Filter
 			Name="Resource Files"

Copied: rl/trunk/engine/core/include/fmod4driver/Fmod4Driver.h (from rev 4715, rl/trunk/plugins/fmod4driver/include/Fmod4Driver.h)
===================================================================
--- rl/trunk/plugins/fmod4driver/include/Fmod4Driver.h	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/core/include/fmod4driver/Fmod4Driver.h	2009-01-22 21:53:04 UTC (rev 4716)
@@ -0,0 +1,165 @@
+/* This source file is part of Rastullahs Lockenpracht.
+ * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the Clarified Artistic License.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  Clarified Artistic License for more details.
+ *
+ *  You should have received a copy of the Clarified Artistic License
+ *  along with this program; if not you can get it here
+ *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+ */
+#ifndef _FMODDRIVER_H_
+#define _FMODDRIVER_H_
+
+#include "CorePrerequisites.h"
+
+#include <fmod.hpp>
+
+#include "SoundDriver.h"
+
+namespace rl
+{
+
+    typedef std::map<Ogre::String, StringList> DriverMap;
+
+    #define CHECK_FMOD4_ERRORS(fmod4_errorcode)\
+    {\
+        if (fmod4_errorcode != FMOD_OK)\
+        {\
+            Throw(rl::RuntimeException,\
+                "FMOD error #"\
+                + StringConverter::toString(fmod4_errorcode)\
+                + " "\
+                + FMOD_ErrorString(fmod4_errorcode));\
+        }\
+    }
+
+    class Fmod4Sound;
+
+    /** Diese Klasse ist der Treiber, der OpenAL zur
+     * Ausgabe benutzt.
+     */
+    class Fmod4Driver : public rl::SoundDriver
+    {
+    public:
+        /// Der Treibername
+        static Ogre::String NAME;
+        /// Der Konstruktor
+        Fmod4Driver(Ogre::ResourceManager* soundResourceManager);
+        /// Der Destruktor
+        virtual ~Fmod4Driver();
+        /// Ist der Treiber angeschaltet?
+        virtual bool isDriverAvailable();
+        /// Initialisiere den Treiber.
+        virtual bool initialize();
+        /// Deinitialisiere den Treiber.
+        virtual void shutdown();
+        /// Der Name des Treibers
+        virtual Ogre::String getName() const;
+        /// Ist ein Ogre plugin
+        virtual bool isDriverPlugin() { return true; }
+        /// Update-Aufgaben erledigen
+        virtual void update();
+        /// Einen Soundlistener erzeugen
+        virtual ListenerMovable *createListener(const Ogre::String &name);
+
+        virtual void setMasterVolume(const Ogre::Real& vol);
+
+        /**
+         * Returns the current sound driver settings as a key-value list
+         *
+         * @return key-value list of sound options
+         */
+        virtual Ogre::NameValuePairList getSettings() const;
+
+        /**
+         * Sets certain options for the sound driver, like volume settings for
+         * sound effects and music.
+         *
+         * @param settings key-value list of settings
+         */
+        virtual void applySettings(const Ogre::NameValuePairList& settings);
+
+        /**
+         * Sets an eax preset, the preset is defined by a string
+         * @retval true if successfull
+        */
+        virtual bool setEaxPreset(const Ogre::String& name);
+
+        /// Setzt den Faktor f, mit der die Lautstaerke nach der Formel 1/(f*Entfernung) abnimmt
+        virtual void setRolloffFactor(const Ogre::Real&);
+        virtual const Ogre::Real getRolloffFactor();
+
+        /// Datensammlung zurueckgeben
+        const DriverMap& getDriverData() const;
+
+        FMOD::System* _getFmodSystem();
+        void _registerChannel(FMOD::Channel* channel, Fmod4Sound* sound);
+        
+    protected:
+        virtual Sound* createSoundImpl(SoundResourcePtr res, SoundType type);
+        virtual SoundStitching* createSoundStitchingImpl(unsigned int numSlots, const CeGuiString& name);
+
+    private:
+
+        typedef std::map<FMOD::Channel*, Fmod4Sound*> ChannelSoundMap;
+
+        static FMOD_RESULT F_CALLBACK open(
+            const char *  name,
+            int  unicode,
+            unsigned int *  filesize,
+            void **  handle,
+            void **  userdata
+        );
+
+        static FMOD_RESULT F_CALLBACK close(
+            void *  handle,
+            void *  userdata
+        );
+
+        static FMOD_RESULT F_CALLBACK read(
+            void *  handle,
+            void *  buffer,
+            unsigned int  sizebytes,
+            unsigned int *  bytesread,
+            void *  userdata
+        );
+
+        static FMOD_RESULT F_CALLBACK seek(
+            void *  handle,
+            unsigned int  pos,
+            void *  userdata
+        );
+
+        static FMOD_RESULT F_CALLBACK channelCallback(
+            FMOD_CHANNEL* channel,
+            FMOD_CHANNEL_CALLBACKTYPE type,
+            void* commanddata1,
+            void* commanddata2
+        );
+
+        typedef std::map<const Ogre::String, FMOD_REVERB_PROPERTIES> EaxPresetMap;
+        EaxPresetMap mEaxPresetMap;
+
+        void initializeEaxPresetMap();
+
+        /// Log driver config data
+        virtual void printData() const;
+        void printDriverInfo(int driver) const;
+
+        // Wir merken uns die Konfiguration von Fmod4
+        DriverMap mDriverData;
+        /// Stores sounds that are automatically destroyed after having been played.
+        ChannelSoundMap mChannelSoundMap;
+        FMOD::System* mFmod4System;
+        FMOD::ChannelGroup* mMasterChannelGroup;
+
+    };
+}
+
+#endif /*FMODDRIVER_H_*/

Copied: rl/trunk/engine/core/include/fmod4driver/Fmod4Listener.h (from rev 4715, rl/trunk/plugins/fmod4driver/include/Fmod4Listener.h)
===================================================================
--- rl/trunk/plugins/fmod4driver/include/Fmod4Listener.h	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/core/include/fmod4driver/Fmod4Listener.h	2009-01-22 21:53:04 UTC (rev 4716)
@@ -0,0 +1,61 @@
+/* This source file is part of Rastullahs Lockenpracht.
+* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+* 
+*  This program is free software; you can redistribute it and/or modify
+*  it under the terms of the Clarified Artistic License.
+*
+*  This program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*  Clarified Artistic License for more details.
+*
+*  You should have received a copy of the Clarified Artistic License
+*  along with this program; if not you can get it here
+*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+*/
+#ifndef __Fmod4Listener_H__
+#define __Fmod4Listener_H__
+
+#include "CorePrerequisites.h"
+
+#include <fmod.hpp>
+
+#include "ListenerMovable.h"
+
+namespace rl {
+    
+   /** Diese Klasse dient der Interkation mit Ogre3d und Fmod4
+    * und kapselt den Hoerer.
+    * @author Josch
+    * @date 06-29-2005
+    * @version 1.0
+    * @version 2.0
+    */
+    class Fmod4Listener : public ListenerMovable
+    {
+    public:
+        /// Konstruktor
+        Fmod4Listener(const Ogre::String& name, FMOD::System* fmod4system, int listenerId = 0);
+        /// Destruktor
+        virtual ~Fmod4Listener();
+        /// Moveable-Typ
+        virtual const Ogre::String& getMovableType() const;
+    
+        /// Setzt die Position der Soundquelle.
+        virtual void setPosition(const Ogre::Vector3& direction);
+        /// Setzt die Richtung der Soundquelle.
+        virtual void setOrientation(const Ogre::Quaternion &orientation);
+        /// Setzt die Geschwindigkeit der Soundquelle.
+        virtual void setVelocity(const Ogre::Vector3&);
+   
+    protected:
+         /// Shared class-level name for Movable type
+        static Ogre::String msMovableType;
+
+    private:
+        FMOD::System* mFmod4System;
+        int mListenerId;
+    };
+
+}
+#endif

Copied: rl/trunk/engine/core/include/fmod4driver/Fmod4Sound.h (from rev 4715, rl/trunk/plugins/fmod4driver/include/Fmod4Sound.h)
===================================================================
--- rl/trunk/plugins/fmod4driver/include/Fmod4Sound.h	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/core/include/fmod4driver/Fmod4Sound.h	2009-01-22 21:53:04 UTC (rev 4716)
@@ -0,0 +1,112 @@
+/* This source file is part of Rastullahs Lockenpracht.
+* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+* 
+*  This program is free software; you can redistribute it and/or modify
+*  it under the terms of the Clarified Artistic License.
+*
+*  This program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*  Clarified Artistic License for more details.
+*
+*  You should have received a copy of the Clarified Artistic License
+*  along with this program; if not you can get it here
+*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+*/
+#ifndef _FMOD4SOUND_H_
+#define _FMOD4SOUND_H_
+
+#include "CorePrerequisites.h"
+
+#include <fmod.hpp>
+
+#include "Sound.h"
+#include "SoundDriver.h"
+
+namespace rl {
+
+    class Fmod4Driver;
+
+    class Fmod4Sound : public Sound
+    {
+    public:
+        /// Konstruktor
+        Fmod4Sound(Fmod4Driver* driver, SoundResourcePtr soundres, SoundType type = ST_SAMPLE);
+
+        /// Laedt den Sound.
+        virtual void load() throw (RuntimeException);
+        /// Entlaedt den Sound.
+        virtual void unload() throw (RuntimeException);
+        // Running length in seconds
+	    virtual float getLength() const;
+
+		// Sind wir gueltig
+		bool isValid() const throw (RuntimeException);
+
+	    /// Moveable-Typ
+		virtual const Ogre::String& getMovableType() const;
+        /// Gibt die eingestellte Position der Soundquelle zurueck
+		virtual const Ogre::Vector3 getPosition() const;
+		/// Setzt die Position der Soundquelle.
+		virtual void setPosition(const Ogre::Vector3& direction);
+		/// Gibt die eingestellte relative Lautstaerke der Soundquelle zurueck (0..1)
+		virtual const float getVolume() const; 
+		/// Setzt die relative Lautstaerke der Soundquelle (0..1)
+		virtual void setVolume(const float gain);
+		/// Gibt die Richtung der Soundquelle zurueck.
+		virtual const Ogre::Quaternion getDirection() const;
+		/// Gibt die Geschwindigkeit der Soundquelle zurueck.
+		virtual const Ogre::Vector3 getVelocity() const;
+		/// Setzt die Richtung der Soundquelle.
+		virtual void setDirection(const Ogre::Quaternion&);
+		/// Setzt die Geschwindigkeit der Soundquelle.
+		virtual void setVelocity(const Ogre::Vector3&);
+        
+        /// Gibt den FMOD Channel zur?ck.
+        FMOD::Channel* getFmodChannel() const;
+        /// Gibt den FMOD Sound zur?ck.
+        FMOD::Sound* getFmodSound() const;
+
+        virtual void play(bool destroyWhenDone=false);
+		/// Pausiert den Sound.
+		virtual void pause(bool pausing);
+		/// Ist der Sound pausiert?
+		virtual bool isPaused();
+		/// Stoppt den Sound.
+		virtual void stop();
+		/// Laeuft der Sound noch
+		virtual const bool isPlaying() const;
+        
+        // Sets the priority of this sound
+        virtual void setPriority(const int priority);
+        // Gets the priority of this sound
+        virtual const int getPriority() const;
+        
+        
+        /// Should the sound be autodestructed when playing is done.
+        bool isAutoDestroying() const;
+
+    private:
+		/// Shared class-level name for Movable type
+		static Ogre::String msMovableType;
+        FMOD::Channel* mChannel;
+        SoundType mType;
+        FMOD::Sound *mSound;
+        Fmod4Driver* mDriver;
+        bool mAutoDestroy;
+    };
+
+    class Fmod4SoundPtr :
+        public Ogre::SharedPtr<Fmod4Sound>
+    {
+    public:
+        Fmod4SoundPtr() : Ogre::SharedPtr<Fmod4Sound>() {}
+        explicit Fmod4SoundPtr(Fmod4Sound* rep) : Ogre::SharedPtr<Fmod4Sound>(rep) {}
+        Fmod4SoundPtr(const Fmod4SoundPtr& res) : Ogre::SharedPtr<Fmod4Sound>(res) {}
+    protected:
+        void destroy();
+    };
+
+}
+
+#endif /* FMOD3SOUND_H_ */

Copied: rl/trunk/engine/core/include/fmod4driver/Fmod4SoundStitching.h (from rev 4715, rl/trunk/plugins/fmod4driver/include/Fmod4SoundStitching.h)
===================================================================
--- rl/trunk/plugins/fmod4driver/include/Fmod4SoundStitching.h	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/core/include/fmod4driver/Fmod4SoundStitching.h	2009-01-22 21:53:04 UTC (rev 4716)
@@ -0,0 +1,116 @@
+/* This source file is part of Rastullahs Lockenpracht.
+* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+* 
+*  This program is free software; you can redistribute it and/or modify
+*  it under the terms of the Clarified Artistic License.
+*
+*  This program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*  Clarified Artistic License for more details.
+*
+*  You should have received a copy of the Clarified Artistic License
+*  along with this program; if not you can get it here
+*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+*/
+#ifndef _FMOD4SOUNDSTITCHING_H_
+#define _FMOD4SOUNDSTITCHING_H_
+
+#include "CorePrerequisites.h"
+
+#include <fmod.hpp>
+
+#include "SoundStitching.h"
+#include "SoundDriver.h"
+
+namespace rl {
+
+    class Fmod4Driver;
+    typedef std::vector<FMOD::Sound*> SubsoundVector;
+
+    class Fmod4SoundStitching : public SoundStitching
+    {
+    public:
+        /// Konstruktor
+        Fmod4SoundStitching(unsigned int numSlots, const CeGuiString& name, SoundDriver* creator);
+
+        /// Laedt den Sound.
+        virtual void load() throw (RuntimeException);
+        /// Entlaedt den Sound.
+        virtual void unload() throw (RuntimeException);
+
+		// Sind wir gueltig
+		bool isValid() const throw (RuntimeException);
+
+	    /// Moveable-Typ
+		virtual const Ogre::String& getMovableType() const;
+        /// Gibt die eingestellte Position der Soundquelle zurueck
+		virtual const Ogre::Vector3 getPosition() const;
+		/// Setzt die Position der Soundquelle.
+		virtual void setPosition(const Ogre::Vector3& direction);
+		/// Gibt die eingestellte relative Lautstaerke der Soundquelle zurueck (0..1)
+		virtual const float getVolume() const; 
+		/// Setzt die relative Lautstaerke der Soundquelle (0..1)
+		virtual void setVolume(const float gain);
+		/// Gibt die Richtung der Soundquelle zurueck.
+		virtual const Ogre::Quaternion getDirection() const;
+		/// Gibt die Geschwindigkeit der Soundquelle zurueck.
+		virtual const Ogre::Vector3 getVelocity() const;
+		/// Setzt die Richtung der Soundquelle.
+		virtual void setDirection(const Ogre::Quaternion&);
+		/// Setzt die Geschwindigkeit der Soundquelle.
+		virtual void setVelocity(const Ogre::Vector3&);
+        
+        /// Gibt den FMOD Channel zur?ck.
+        FMOD::Channel* getFmodChannel() const;
+        /// Gibt den FMOD Sound zur?ck.
+        FMOD::Sound* getFmodSound() const;
+
+        virtual void play(bool destroyWhenDone=false);
+		/// Pausiert den Sound.
+		virtual void pause(bool pausing);
+		/// Ist der Sound pausiert?
+		virtual bool isPaused();
+		/// Stoppt den Sound.
+		virtual void stop();
+		/// Laeuft der Sound noch
+		virtual const bool isPlaying() const;
+        
+        // Sets the priority of this sound
+        virtual void setPriority(const int priority);
+        // Gets the priority of this sound
+        virtual const int getPriority() const;
+        
+        
+        /// Should the sound be autodestructed when playing is done.
+        bool isAutoDestroying() const;
+
+        /// Assign a sound recource to a slot.
+        virtual void putSoundIntoSlot(unsigned int, CeGuiString label);
+        /// Get the slot of the plaing sound.
+        virtual unsigned int getPlayingSlot();
+
+    private:
+		/// Shared class-level name for Movable type
+		static Ogre::String msMovableType;
+        FMOD::Channel* mChannel;
+        FMOD::Sound *mSound;
+        Fmod4Driver* mDriver;
+        bool mAutoDestroy;
+        SubsoundVector mSoundSlots;
+    };
+
+    class Fmod4SoundStitchingPtr :
+        public Ogre::SharedPtr<Fmod4SoundStitching>
+    {
+    public:
+        Fmod4SoundStitchingPtr() : Ogre::SharedPtr<Fmod4SoundStitching>() {}
+        explicit Fmod4SoundStitchingPtr(Fmod4SoundStitching* rep) : Ogre::SharedPtr<Fmod4SoundStitching>(rep) {}
+        Fmod4SoundStitchingPtr(const Fmod4SoundStitchingPtr& res) : Ogre::SharedPtr<Fmod4SoundStitching>(res) {}
+    protected:
+        void destroy();
+    };
+
+}
+
+#endif /* FMOD3SOUNDSTITCHING_H_ */

Modified: rl/trunk/engine/core/src/SoundManager.cpp
===================================================================
--- rl/trunk/engine/core/src/SoundManager.cpp	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/core/src/SoundManager.cpp	2009-01-22 21:53:04 UTC (rev 4716)
@@ -29,6 +29,7 @@
 #include "SoundDriver.h"
 #include "SoundResource.h"
 
+#include "Fmod4Driver.h"
 #include "NullDriver.h"
 
 using namespace std;
@@ -59,6 +60,9 @@
         registerDriver(nullDriver);
         setActiveDriver(nullDriver);
 
+		Fmod4Driver* fmod4Driver = new Fmod4Driver(this);
+		registerDriver(fmod4Driver);
+
         mResourceType = "Sound";
         ResourceGroupManager::getSingleton()._registerResourceManager(mResourceType, this);
 
@@ -250,25 +254,31 @@
             drivername = it->second;
         }
 
-        try
+
+		SoundDriver *driver = getDriverByName(drivername);
+
+        if (driver == NULL)
         {
-            CoreSubsystem::getSingleton().loadPlugin(drivername);
-        }
-        catch(Ogre::Exception &e)
-        {
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                CeGuiString("Soundtreiber kann nicht geladen werden: ")
-                    + drivername + "\n"
-                    + e.getFullDescription());
-        }
-        catch(...)
-        {
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                 CeGuiString("Soundtreiber kann nicht geladen werden: ")
-                    + drivername);
-        }
+			try
+			{
+				CoreSubsystem::getSingleton().loadPlugin(drivername);
+			}
+			catch(Ogre::Exception &e)
+			{
+				LOG_MESSAGE(Logger::MULTIMEDIA,
+					CeGuiString("Soundtreiber kann nicht geladen werden: ")
+						+ drivername + "\n"
+						+ e.getFullDescription());
+			}
+			catch(...)
+			{
+				LOG_MESSAGE(Logger::MULTIMEDIA,
+					 CeGuiString("Soundtreiber kann nicht geladen werden: ")
+						+ drivername);
+			}
+		}
 
-        SoundDriver *driver = getDriverByName(drivername);
+        driver = getDriverByName(drivername);
 
         if (driver == NULL)
         {

Copied: rl/trunk/engine/core/src/fmod4driver/Fmod4Driver.cpp (from rev 4715, rl/trunk/plugins/fmod4driver/src/Fmod4Driver.cpp)
===================================================================
--- rl/trunk/plugins/fmod4driver/src/Fmod4Driver.cpp	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/core/src/fmod4driver/Fmod4Driver.cpp	2009-01-22 21:53:04 UTC (rev 4716)
@@ -0,0 +1,493 @@
+/* This source file is part of Rastullahs Lockenpracht.
+ * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+ *
+ *  This program is free software; you can redistribute it and/or modify
+ *  it under the terms of the Clarified Artistic License.
+ *
+ *  This program is distributed in the hope that it will be useful,
+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *  Clarified Artistic License for more details.
+ *
+ *  You should have received a copy of the Clarified Artistic License
+ *  along with this program; if not you can get it here
+ *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+ */
+#include "stdinc.h"
+
+#include <fmod_errors.h>
+
+#include "Fmod4Driver.h"
+#include "Fmod4Sound.h"
+#include "Fmod4SoundStitching.h"
+#include "Fmod4Listener.h"
+#include "Logger.h"
+#include "SoundResource.h"
+
+using namespace Ogre;
+using namespace std;
+
+namespace rl
+{
+    // Used by FMOD-Callbacks, which are not C++-functions, but C-functions.
+    Ogre::ResourceManager* gSoundResourceManager = NULL;
+    Fmod4Driver* gDriver = NULL;
+
+    String Fmod4Driver::NAME = "RlFmod4Driver";
+
+    Fmod4Driver::Fmod4Driver(Ogre::ResourceManager *soundResourceManager)
+        : SoundDriver(soundResourceManager),
+        mMasterChannelGroup(NULL)
+    {
+        gSoundResourceManager = soundResourceManager;
+        gDriver = this;
+    }
+
+    Fmod4Driver::~Fmod4Driver()
+    {
+    }
+
+    String Fmod4Driver::getName() const
+    {
+        return NAME;
+    }
+
+    bool Fmod4Driver::initialize()
+    {
+        static int MAX_VIRTUAL_CHANNELS = 100;
+
+        CHECK_FMOD4_ERRORS(FMOD::System_Create(&mFmod4System));
+
+        mFmod4System->setFileSystem(
+            Fmod4Driver::open,
+            Fmod4Driver::close,
+            Fmod4Driver::read,
+            Fmod4Driver::seek,
+            -1);
+
+        printData();
+
+        mFmod4System->setDriver(-1);
+        //CHECK_FMOD4_ERRORS(mFmod4System->setOutput(FMOD_OUTPUTTYPE_ESD));
+
+        FMOD_RESULT result = mFmod4System->init(MAX_VIRTUAL_CHANNELS, FMOD_INIT_NORMAL, NULL);
+        if (result != FMOD_OK)
+        {
+            LOG_ERROR(Logger::CORE,
+                "FMOD error #"
+                + StringConverter::toString(result)
+                + " "
+                + FMOD_ErrorString(result));
+
+            return false;
+        }
+
+        mFmod4System->getMasterChannelGroup(&mMasterChannelGroup);
+
+        initializeEaxPresetMap();
+        return true;
+    }
+
+    void Fmod4Driver::shutdown()
+    {
+        CHECK_FMOD4_ERRORS(mFmod4System->close());
+        CHECK_FMOD4_ERRORS(mFmod4System->release());
+    }
+
+    bool Fmod4Driver::isDriverAvailable()
+    {
+        FMOD::System* system;
+        FMOD_RESULT result = FMOD::System_Create(&system);
+        if (result != FMOD_OK)
+        {
+            return false;
+        }
+
+        system->release();
+        return true;
+    }
+
+    void Fmod4Driver::update()
+    {
+        mFmod4System->update();
+    }
+
+    Sound* Fmod4Driver::createSoundImpl(SoundResourcePtr res, SoundType type)
+    {
+        Sound* sound = new Fmod4Sound(this, res, type);
+        return sound;
+    }
+
+
+    SoundStitching *Fmod4Driver::createSoundStitchingImpl(unsigned int numSlots, const CeGuiString& name)
+    {
+         SoundStitching* soundstitching = new Fmod4SoundStitching(numSlots, name, this);
+         return soundstitching;
+    }
+
+    ListenerMovable *Fmod4Driver::createListener(const Ogre::String &name)
+    {
+        return new Fmod4Listener(name, mFmod4System);
+    }
+
+    FMOD::System* Fmod4Driver::_getFmodSystem()
+    {
+        return mFmod4System;
+    }
+
+    void Fmod4Driver::applySettings(const Ogre::NameValuePairList& settings)
+    {
+        SoundDriver::applySettings(settings);
+        mMasterChannelGroup->setVolume(mMasterVolume);
+    }
+
+#define DEF_PRESET(NAME, DEFINITION) \
+    { \
+        FMOD_REVERB_PROPERTIES prop = DEFINITION; \
+        mEaxPresetMap.insert(make_pair(NAME, prop)); \
+    }
+
+    void Fmod4Driver::initializeEaxPresetMap()
+    {
+        DEF_PRESET("Alley", FMOD_PRESET_ALLEY);
+        DEF_PRESET("Arena", FMOD_PRESET_ARENA);
+        DEF_PRESET("Auditorium", FMOD_PRESET_AUDITORIUM);
+        DEF_PRESET("Bathroom", FMOD_PRESET_BATHROOM);
+        DEF_PRESET("Carpetted Hallway", FMOD_PRESET_CARPETTEDHALLWAY);
+        DEF_PRESET("Cave", FMOD_PRESET_CAVE);
+        DEF_PRESET("City", FMOD_PRESET_CITY);
+        DEF_PRESET("Concert Hall", FMOD_PRESET_CONCERTHALL);
+        DEF_PRESET("Dizzy", FMOD_PRESET_DIZZY);
+        DEF_PRESET("Drugged", FMOD_PRESET_DRUGGED);
+        DEF_PRESET("Forest", FMOD_PRESET_FOREST);
+        DEF_PRESET("Generic", FMOD_PRESET_GENERIC);
+        DEF_PRESET("Hallway", FMOD_PRESET_HALLWAY);
+        DEF_PRESET("Hangar", FMOD_PRESET_HANGAR);
+        DEF_PRESET("Living Room", FMOD_PRESET_LIVINGROOM);
+        DEF_PRESET("Mountains", FMOD_PRESET_MOUNTAINS);
+        DEF_PRESET("Off", FMOD_PRESET_OFF);
+        DEF_PRESET("Padded Cell", FMOD_PRESET_PADDEDCELL);
+        DEF_PRESET("Parkinglot", FMOD_PRESET_PARKINGLOT);
+        DEF_PRESET("Plain", FMOD_PRESET_PLAIN);
+        DEF_PRESET("Psychotic", FMOD_PRESET_PSYCHOTIC);
+        DEF_PRESET("Quarry", FMOD_PRESET_QUARRY);
+        DEF_PRESET("Room", FMOD_PRESET_ROOM);
+        DEF_PRESET("Sewerpipe", FMOD_PRESET_SEWERPIPE);
+        DEF_PRESET("Stone Corridor", FMOD_PRESET_STONECORRIDOR);
+        DEF_PRESET("Stone Room", FMOD_PRESET_STONEROOM);
+        DEF_PRESET("Underwater", FMOD_PRESET_UNDERWATER);
+    }
+#undef DEF_PRESET
+
+    bool Fmod4Driver::setEaxPreset(const Ogre::String& name)
+    {
+        EaxPresetMap::iterator it = mEaxPresetMap.find(name);
+
+        if( it != mEaxPresetMap.end() )
+        {
+            FMOD_RESULT result;
+            result = mFmod4System->setReverbProperties(&(it->second)); ///@todo seems not to work correctly
+            CHECK_FMOD4_ERRORS(result);
+        }
+
+        return false;
+    }
+
+    Ogre::NameValuePairList Fmod4Driver::getSettings() const
+    {
+        return SoundDriver::getSettings();
+    }
+
+    void Fmod4Driver::printData() const
+    {
+        int numDrivers;
+        mFmod4System->getNumDrivers(&numDrivers);
+
+        for (int i = 0; i < numDrivers; i++)
+        {
+            printDriverInfo(i);
+        }
+
+        int numPlugins;
+        mFmod4System->getNumPlugins(FMOD_PLUGINTYPE_CODEC, &numPlugins);
+        for (int i = 0; i < numPlugins; i++)
+        {
+            char pluginName[128];
+            unsigned int version;
+			FMOD_PLUGINTYPE type = FMOD_PLUGINTYPE_CODEC;
+			unsigned int handle;
+			FMOD_RESULT result = mFmod4System->getPluginHandle(FMOD_PLUGINTYPE_CODEC, i, &handle);
+			CHECK_FMOD4_ERRORS(result);
+
+            result = mFmod4System->getPluginInfo(
+                handle,
+                &type,
+				pluginName,
+                127,
+                &version);
+			CHECK_FMOD4_ERRORS(result);
+            LOG_MESSAGE(Logger::MULTIMEDIA,
+                String("Fmod4Driver Plugin '")
+                + pluginName
+                + "' Version "
+                + StringConverter::toString(version));
+        }
+    }
+
+    void Fmod4Driver::printDriverInfo(int driver) const
+    {
+        int curdriver;
+        mFmod4System->getDriver(&curdriver);
+
+        char name[128];
+        mFmod4System->getDriverInfo(driver, name, 127, NULL);
+
+        FMOD_CAPS caps;
+        int minfreq, maxfreq;
+        FMOD_SPEAKERMODE speakermode;
+        mFmod4System->getDriverCaps(driver, &caps, &minfreq, &maxfreq, &speakermode);
+
+        LOG_MESSAGE(Logger::MULTIMEDIA,
+            String("Fmod4Driver '")
+            + name
+            + "'"
+            + (driver == curdriver ? "(cur)" : "")
+            + ": \n"
+            + "Freq " + StringConverter::toString(minfreq)
+            + " - " + StringConverter::toString(maxfreq));
+
+        int hard2d, hard3d, hardtotal;
+        mFmod4System->getHardwareChannels(&hard2d, &hard3d, &hardtotal);
+        LOG_MESSAGE(Logger::MULTIMEDIA,
+            String("Fmod4Driver '")
+            + name + "' Hardware Channels: "
+            + "2D #" + StringConverter::toString(hard2d)
+            + ", 3D #" + StringConverter::toString(hard3d)
+            + ", Total #" + StringConverter::toString(hardtotal));
+
+        int softchannels;
+        mFmod4System->getSoftwareChannels(&softchannels);
+        LOG_MESSAGE(Logger::MULTIMEDIA,
+            String("Fmod4Driver '")
+            + name + "' Software Channels: "
+            + "#" + StringConverter::toString(softchannels));
+
+        FMOD_OUTPUTTYPE output;
+        mFmod4System->getOutput(&output);
+        String outputName;
+
+        if(output == FMOD_OUTPUTTYPE_AUTODETECT)
+            outputName = "Autodetect";
+        else if(output == FMOD_OUTPUTTYPE_UNKNOWN)
+            outputName = "Unknown";
+        else if(output == FMOD_OUTPUTTYPE_NOSOUND)
+            outputName = "No Sound";
+        else if(output == FMOD_OUTPUTTYPE_WAVWRITER)
+            outputName = "Wave Writer";
+        else if(output == FMOD_OUTPUTTYPE_NOSOUND_NRT)
+            outputName = "No Sound non realtime";
+        else if(output == FMOD_OUTPUTTYPE_WAVWRITER_NRT)
+            outputName = "Wave Writer non realtime";
+        else if(output == FMOD_OUTPUTTYPE_DSOUND)
+            outputName = "DirectSound";
+        else if(output == FMOD_OUTPUTTYPE_WINMM)
+            outputName = "Windows Multimedia";
+        else if(output == FMOD_OUTPUTTYPE_ASIO)
+            outputName = "Low Latency ASIO driver";
+        else if(output == FMOD_OUTPUTTYPE_OSS)
+            outputName = "Open Sound System (OSS)";
+        else if(output == FMOD_OUTPUTTYPE_ALSA)
+            outputName = "Advanced Linux Sound Architecture (ALSA)";
+        else if(output == FMOD_OUTPUTTYPE_ESD)
+            outputName = "Enlightment Sound Daemon (ESD)";
+        else if(output == FMOD_OUTPUTTYPE_SOUNDMANAGER)
+            outputName = "Macintosh SoundManager";
+        else if(output == FMOD_OUTPUTTYPE_COREAUDIO)
+            outputName = "Macintosh CoreAudio";
+
+        LOG_MESSAGE(Logger::MULTIMEDIA,
+            String("Fmod4Driver '")
+            + name + "' Output: " + outputName);
+    }
+
+    FMOD_RESULT F_CALLBACK Fmod4Driver::open(
+        const char *  name,
+        int  unicode,
+        unsigned int *  filesize,
+        void **  handle,
+        void **  userdata)
+    {
+        SoundResourcePtr* res = new SoundResourcePtr(gSoundResourceManager->getByName(name));
+        LOG_DEBUG(Logger::MULTIMEDIA,
+            "Opened stream " + (*res)->getName());
+        (*res)->load();
+        *filesize = (*res)->getSize();
+        *handle = res;
+        return FMOD_OK;
+    }
+
+    FMOD_RESULT F_CALLBACK Fmod4Driver::close(
+        void *  handle,
+        void *  userdata)
+    {
+           SoundResourcePtr *res = static_cast<SoundResourcePtr*>(handle);
+        LOG_DEBUG(Logger::MULTIMEDIA,
+            "Closing stream " + (*res)->getName());
+        (*res)->unload();
+        delete res;
+        return FMOD_OK;
+    }
+
+    FMOD_RESULT F_CALLBACK Fmod4Driver::read(
+        void*  handle,
+        void*  buffer,
+        unsigned int  sizebytes,
+        unsigned int* bytesread,
+        void*  userdata)
+    {
+        if (handle == NULL)
+        {
+            return FMOD_ERR_INVALID_PARAM;
+        }
+
+        SoundResourcePtr *sound = static_cast<SoundResourcePtr*>(handle);
+        if (!sound->isNull())
+        {
+            if (!(*sound)->isLoaded())
+            {
+                (*sound)->load();
+            }
+
+            DataStreamPtr ds = (*sound)->getDataStream();
+            if (!ds.isNull())
+            {
+                *bytesread = ds->read(buffer, sizebytes);
+                if (*bytesread < sizebytes)
+                {
+                    return FMOD_ERR_FILE_EOF;
+                }
+                return FMOD_OK;
+            }
+        }
+
+        return FMOD_ERR_FILE_EOF;
+    }
+
+    FMOD_RESULT F_CALLBACK Fmod4Driver::seek(
+        void *  handle,
+        unsigned int  pos,
+        void *  userdata)
+    {
+        if (handle == NULL)
+        {
+            return FMOD_ERR_INVALID_PARAM;
+        }
+
+        SoundResourcePtr *sound = static_cast<SoundResourcePtr*>(handle);
+        if (!sound->isNull())
+        {
+            DataStreamPtr ds = (*sound)->getDataStream();
+            if (!ds.isNull())
+            {
+                ds->seek(pos);
+                return FMOD_OK;
+            }
+        }
+        return FMOD_ERR_INVALID_PARAM;
+    }
+
+/**
+ * This static method is as channel callback, so that we get callbacks
+ * from FMOD
+ * @author Blakharaz
+ * @version 1.0
+ * @author JoSch
+ * @version 1.1
+ * @date 07-03-2007
+ * @param _channel The channel for which the callback is registered.
+ * @param type Type of the event.
+ * @param command A commando
+ * @param commanddata1 Data
+ * @param commanddata2 Data
+ */
+FMOD_RESULT F_CALLBACK Fmod4Driver::channelCallback(
+    FMOD_CHANNEL *_channel,
+    FMOD_CHANNEL_CALLBACKTYPE type,
+    void* commanddata1, 
+    void* commanddata2)
+{
+    /// Extract the Fmod channel and then our Sound object.
+    FMOD::Channel* channel = (FMOD::Channel*)_channel;
+    RlAssert1(channel != NULL);
+    ChannelSoundMap::iterator it = gDriver->mChannelSoundMap.find((FMOD::Channel*)channel);
+    if (it != gDriver->mChannelSoundMap.end())
+    {
+        Fmod4Sound* sound = it->second;
+        RlAssert1(sound != NULL);
+        switch(type)
+        {
+            case FMOD_CHANNEL_CALLBACKTYPE_END:
+                {
+                    // We dispatch a stop event
+                    SoundPlayEvent event(NULL, SoundPlayEvent::STOPEVENT);
+                    sound->dispatchEvent(&event);
+                    // If the sound is set for autodestruction,
+                    // we destroy it now.
+                    if (sound->isAutoDestroying())
+                    {
+                        gDriver->destroySound(sound);
+                        gDriver->mChannelSoundMap.erase(it);
+                    }
+                }
+                break;
+                
+            case FMOD_CHANNEL_CALLBACKTYPE_SYNCPOINT:
+                {
+                    FMOD::Sound *fmodsound = NULL;
+                    FMOD_SYNCPOINT* syncpoint = NULL;
+                    SoundTimingEvent event(NULL, SoundTimingEvent::TIMEEVENT);
+        
+                    // We get the time point of the sync point and put it in a timing event.
+                    sound->getFmodChannel()->getCurrentSound(&fmodsound);
+                    fmodsound->getSyncPoint(*static_cast<int*>(commanddata1), &syncpoint);
+                    fmodsound->getSyncPointInfo(syncpoint, NULL, 0, &event.mTime, FMOD_TIMEUNIT_MS);
+                    sound->dispatchEvent(&event);
+                }
+                break;
+             case FMOD_CHANNEL_CALLBACKTYPE_VIRTUALVOICE:
+                {
+                }
+                break;
+        }
+    }  
+    return FMOD_OK;
+}
+
+
+    void Fmod4Driver::setMasterVolume(const Ogre::Real& vol)
+    {
+        SoundDriver::setMasterVolume(vol);
+    }
+
+    void Fmod4Driver::setRolloffFactor(const Ogre::Real& factor)
+    {
+        float dopplerScale;
+        mFmod4System->get3DSettings(&dopplerScale, NULL, NULL);
+        mFmod4System->set3DSettings(dopplerScale, 1.0, factor);
+    }
+
+    const Ogre::Real Fmod4Driver::getRolloffFactor()
+    {
+        float factor;
+        mFmod4System->get3DSettings(NULL, NULL, &factor);
+        return factor;
+    }
+
+    void Fmod4Driver::_registerChannel(FMOD::Channel* channel, Fmod4Sound* sound)
+    {
+        FMOD_RESULT res = channel->setCallback(channelCallback);
+        CHECK_FMOD4_ERRORS(res);
+        mChannelSoundMap.insert(std::make_pair(channel, sound));
+    }
+
+}

Copied: rl/trunk/engine/core/src/fmod4driver/Fmod4Listener.cpp (from rev 4715, rl/trunk/plugins/fmod4driver/src/Fmod4Listener.cpp)
===================================================================
--- rl/trunk/plugins/fmod4driver/src/Fmod4Listener.cpp	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/core/src/fmod4driver/Fmod4Listener.cpp	2009-01-22 21:53:04 UTC (rev 4716)
@@ -0,0 +1,77 @@
+/* This source file is part of Rastullahs Lockenpracht.
+* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+* 
+*  This program is free software; you can redistribute it and/or modify
+*  it under the terms of the Clarified Artistic License.
+*
+*  This program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*  Clarified Artistic License for more details.
+*
+*  You should have received a copy of the Clarified Artistic License
+*  along with this program; if not you can get it here
+*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+*/
+#include "stdinc.h"
+
+#include "Fmod4Listener.h"
+
+using namespace Ogre;
+
+namespace rl {
+
+String rl::Fmod4Listener::msMovableType = "Fmod4Listener"; 
+
+Fmod4Listener::Fmod4Listener(const Ogre::String &name, FMOD::System *fmod4system, int listenerId)
+: ListenerMovable(name),
+  mFmod4System(fmod4system),
+  mListenerId(listenerId)
+{
+}
+
+Fmod4Listener::~Fmod4Listener()
+{
+}
+
+const String& Fmod4Listener::getMovableType() const
+{
+    return msMovableType;
+}
+
+void Fmod4Listener::setPosition(const Vector3& position)
+{
+    FMOD_VECTOR pos;
+    pos.x = position.x;
+    pos.y = position.y;
+    pos.z = -position.z;
+    mFmod4System->set3DListenerAttributes(mListenerId, &pos, NULL, NULL, NULL);
+}
+
+void Fmod4Listener::setOrientation(const Ogre::Quaternion &orientation)
+{
+    FMOD_VECTOR up, to;
+
+    Vector3 upVec = orientation * Vector3::UNIT_Y;
+    up.x = upVec.x;
+    up.y = upVec.y;
+    up.z = -upVec.z;
+
+    Vector3 toVec = orientation * Vector3::NEGATIVE_UNIT_Z;
+    to.x = toVec.x;
+    to.y = toVec.y;
+    to.z = -toVec.z;
+
+    mFmod4System->set3DListenerAttributes(mListenerId, NULL, NULL, &to, &up);
+}
+
+void Fmod4Listener::setVelocity(const Ogre::Vector3& velocity)
+{
+    FMOD_VECTOR vel;
+    vel.x = velocity.x;
+    vel.y = velocity.y;
+    vel.z = -velocity.z;
+    mFmod4System->set3DListenerAttributes(mListenerId, NULL, &vel, NULL, NULL);
+}
+
+}

Copied: rl/trunk/engine/core/src/fmod4driver/Fmod4Sound.cpp (from rev 4715, rl/trunk/plugins/fmod4driver/src/Fmod4Sound.cpp)
===================================================================
--- rl/trunk/plugins/fmod4driver/src/Fmod4Sound.cpp	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/core/src/fmod4driver/Fmod4Sound.cpp	2009-01-22 21:53:04 UTC (rev 4716)
@@ -0,0 +1,377 @@
+/* This source file is part of Rastullahs Lockenpracht.
+* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+* 
+*  This program is free software; you can redistribute it and/or modify
+*  it under the terms of the Clarified Artistic License.
+*
+*  This program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*  Clarified Artistic License for more details.
+*
+*  You should have received a copy of the Clarified Artistic License
+*  along with this program; if not you can get it here
+*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+*/
+#include "stdinc.h"
+
+#include "Fmod4Sound.h"
+
+#include <fmod_errors.h>
+
+#include "Fmod4Driver.h"
+#include "SoundManager.h"
+#include "SoundResource.h"
+
+using namespace Ogre;
+
+namespace rl {
+
+String Fmod4Sound::msMovableType = "Fmod4Sound";
+ 
+Fmod4Sound::Fmod4Sound(Fmod4Driver* driver, SoundResourcePtr soundres, SoundType type)
+  : Sound(soundres, driver),
+    mType(type),
+    mSound(NULL),
+    mDriver(driver),
+    mChannel(NULL)	
+{
+    setPriority(128);
+}
+
+float Fmod4Sound::getLength() const
+{
+    if (!isValid())
+    {
+        return 0.0;
+    }
+
+    unsigned int length;
+    mSound->getLength(&length, FMOD_TIMEUNIT_MS);
+    return (float)length/1000.0;
+}
+
+void Fmod4Sound::load() throw (RuntimeException)
+{
+    FMOD_MODE mode = FMOD_DEFAULT;
+
+    if (is3d())
+    {
+        mode |= FMOD_3D;
+    }
+    else
+    {
+        mode |= FMOD_2D;
+    }
+
+    if (isLooping())
+    {
+        mode |= FMOD_LOOP_NORMAL;
+    }
+    else
+    {
+        mode |= FMOD_LOOP_OFF;
+    }
+
+    if (mType == ST_SAMPLE)
+    {
+        FMOD_RESULT res = mDriver->_getFmodSystem()->createSound(
+            getSoundResource()->getName().c_str(), 
+            mode, 
+            NULL, 
+            &mSound);
+
+        CHECK_FMOD4_ERRORS(res);
+    }
+    else if (mType == ST_STREAM)
+    {
+        FMOD_RESULT res = mDriver->_getFmodSystem()->createStream(
+            getSoundResource()->getName().c_str(), 
+            mode, 
+            NULL, 
+            &mSound);
+
+        CHECK_FMOD4_ERRORS(res);
+    }
+    else
+    {
+        RlFail("Unsupported SoundType.");
+    }
+}
+
+void Fmod4Sound::unload() throw (RuntimeException)
+{
+    mSound->release();
+}
+
+bool Fmod4Sound::isValid() const throw (RuntimeException)
+{
+    return mSound != NULL && mChannel != NULL;
+}
+
+void Fmod4SoundPtr::destroy()
+{
+    SharedPtr<Fmod4Sound>::destroy();
+}
+
+const String& Fmod4Sound::getMovableType() const
+{
+    return msMovableType;
+}
+
+void Fmod4Sound::play(bool destroyWhenDone)
+{
+    if (!isValid())
+    {
+        load();
+    }
+
+    FMOD_RESULT res = mDriver->_getFmodSystem()->playSound(
+        FMOD_CHANNEL_FREE, 
+        mSound, 
+        true,
+        &mChannel);
+
+    CHECK_FMOD4_ERRORS(res);
+
+    RlAssert1(mChannel != NULL);
+    mAutoDestroy = destroyWhenDone;
+    mDriver->_registerChannel(mChannel, this);
+
+    float vol;
+	if (is3d())
+	{
+		vol = mDriver->getDefaultSoundVolume();
+	}
+	else
+	{
+		vol = mDriver->getDefaultMusicVolume();
+	}
+	setVolume(vol);
+
+    setPriority(mPriority);
+    setPosition(mPosition);
+    setDirection(mDirection);
+	setVelocity(mVelocity); 
+    pause(false);
+    SoundPlayEvent event = SoundPlayEvent(this, SoundPlayEvent::STARTEVENT);
+    dispatchEvent(&event);
+}
+
+void Fmod4Sound::stop()
+{
+    mChannel->stop();
+}
+
+void Fmod4Sound::setPosition(const Ogre::Vector3& position)
+{
+	mPosition = position;
+
+	if (isValid())
+	{
+		FMOD_VECTOR pos;
+		pos.x = position.x;
+		pos.y = position.y;
+		pos.z = -position.z;
+		mChannel->set3DAttributes(&pos, NULL);
+	}
+}
+
+const Ogre::Vector3 Fmod4Sound::getPosition() const
+{
+	if (isValid())
+	{
+		FMOD_VECTOR pos;
+		mChannel->get3DAttributes(&pos, NULL);
+
+		Vector3 rval;
+		rval.x = pos.x;
+		rval.y = pos.y;
+		rval.z = -pos.z;
+
+		return rval;
+	}
+
+	return mPosition;
+}
+
+const Ogre::Vector3 Fmod4Sound::getVelocity() const
+{
+	if (isValid())
+	{
+		FMOD_VECTOR vel;
+		mChannel->get3DAttributes(NULL, &vel);
+
+		Vector3 rval;
+		rval.x = vel.x;
+		rval.y = vel.y;
+		rval.z = -vel.z;
+
+		return rval;
+	}
+
+	return mVelocity;
+}
+
+void Fmod4Sound::setVelocity(const Ogre::Vector3& velocity)
+{
+	mVelocity = velocity;
+
+	if (isValid())
+	{
+		FMOD_VECTOR vel;
+		vel.x = velocity.x;
+		vel.y = velocity.y;
+		vel.z = -velocity.z;
+		mChannel->set3DAttributes(NULL, &vel);
+	}
+}
+
+void Fmod4Sound::setDirection(const Ogre::Quaternion &orientation)
+{
+	mDirection = orientation;
+
+	if (isValid())
+	{
+		FMOD_VECTOR to;
+
+		Vector3 toVec = orientation * Vector3::NEGATIVE_UNIT_Z;
+		to.x = toVec.x;
+		to.y = toVec.y;
+		to.z = -toVec.z;
+
+		mChannel->set3DConeOrientation(&to);
+	}
+}
+
+const Ogre::Quaternion Fmod4Sound::getDirection() const
+{
+	if (isValid())
+	{
+		FMOD_VECTOR to;
+		mChannel->get3DConeOrientation(&to);
+
+		Vector3 toVec;
+		toVec.x = to.x;
+		toVec.y = to.y;
+		toVec.z = -to.z;
+
+		return Vector3::NEGATIVE_UNIT_Z.getRotationTo(toVec);
+	}
+
+	return mDirection;
+}
+
+bool Fmod4Sound::isPaused()
+{
+    bool paused;
+    FMOD_RESULT error = mChannel->getPaused(&paused);
+    return !paused;
+}
+
+const bool Fmod4Sound::isPlaying() const
+{
+    bool playing;
+    FMOD_RESULT error = mChannel->isPlaying(&playing);
+    return playing;
+}
+
+void Fmod4Sound::pause(bool pause)
+{
+    mChannel->setPaused(pause);
+}
+
+void Fmod4Sound::setVolume(float vol)
+{
+	mVolume = vol;
+	if (isValid())
+	{
+	    mChannel->setVolume(vol);
+	}
+}
+
+const float Fmod4Sound::getVolume() const
+{
+	if (isValid())
+	{
+		float vol;
+		mChannel->getVolume(&vol);
+		return vol;
+	}
+	return mVolume;
+}
+
+/**
+ * @author JoSch
+ * @date 14-03-2007
+ * @version 1.0
+ * @param priority The new priority of this sound
+ */ 
+void Fmod4Sound::setPriority(const int priority)
+{
+    mPriority = priority;
+    if (mPriority < 0)
+    {
+        mPriority = 0;
+    }
+    if (mPriority > 256)
+    {
+        mPriority = 256;
+    }
+    if (isValid())
+    {
+        mChannel->setPriority(mPriority);
+    }
+}
+
+/**
+ * @author JoSch
+ * @date 14-03-2007
+ * @version 1.0
+ * @return The new priority of this sound
+ */ 
+const int Fmod4Sound::getPriority() const
+{
+    int priority = mPriority;
+    if (isValid())
+    {
+        mChannel->getPriority(&priority);
+    }
+    return priority;
+}
+
+
+/**
+ * @author JoSch
+ * @date 15-03-2007
+ * @version 1.0
+ * @return The Fmod4 Channel object
+ */ 
+FMOD::Channel *Fmod4Sound::getFmodChannel() const
+{
+    return mChannel;
+}
+
+/**
+ * @author JoSch
+ * @date 15-03-2007
+ * @version 1.0
+ * @return The Fmod4 Sound object
+ */ 
+FMOD::Sound *Fmod4Sound::getFmodSound() const
+{
+    return mSound;
+}
+
+/**
+ * @author JoSch
+ * @date 15-03-2007
+ * @version 1.0
+ * @return TRUE, if the sound should autodestroy when playing ended.
+ */ 
+bool Fmod4Sound::isAutoDestroying() const
+{
+    return mAutoDestroy;
+}
+
+} // Namespace

Copied: rl/trunk/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp (from rev 4715, rl/trunk/plugins/fmod4driver/src/Fmod4SoundStitching.cpp)
===================================================================
--- rl/trunk/plugins/fmod4driver/src/Fmod4SoundStitching.cpp	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp	2009-01-22 21:53:04 UTC (rev 4716)
@@ -0,0 +1,427 @@
+/* This source file is part of Rastullahs Lockenpracht.
+* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+* 
+*  This program is free software; you can redistribute it and/or modify
+*  it under the terms of the Clarified Artistic License.
+*
+*  This program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*  Clarified Artistic License for more details.
+*
+*  You should have received a copy of the Clarified Artistic License
+*  along with this program; if not you can get it here
+*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+*/
+#include "stdinc.h"
+
+#include "Fmod4SoundStitching.h"
+
+#include <fmod_errors.h>
+
+#include "Fmod4Driver.h"
+#include "SoundManager.h"
+#include "SoundResource.h"
+
+using namespace Ogre;
+
+namespace rl {
+
+String Fmod4SoundStitching::msMovableType = "Fmod4SoundStitching";
+ 
+Fmod4SoundStitching::Fmod4SoundStitching(unsigned int numSlots, const CeGuiString& name, SoundDriver* creator)
+  : SoundStitching(numSlots, name, creator),
+    mSound(NULL),
+    mChannel(NULL)	
+{
+    setPriority(128);
+}
+
+void Fmod4SoundStitching::load() throw (RuntimeException)
+{
+    FMOD_CREATESOUNDEXINFO exinfo;
+    FMOD_MODE mode = FMOD_OPENUSER;
+
+    if (is3d())
+    {
+        mode |= FMOD_3D;
+    }
+    else
+    {
+        mode |= FMOD_2D;
+    }
+
+    if (isLooping())
+    {
+        mode |= FMOD_LOOP_NORMAL;
+    }
+    else
+    {
+        mode |= FMOD_LOOP_OFF;
+    }
+
+    memset(&exinfo, 0, sizeof(FMOD_CREATESOUNDEXINFO));
+    
+    exinfo.cbsize = sizeof(FMOD_CREATESOUNDEXINFO);
+    exinfo.defaultfrequency = 44100;
+    exinfo.numsubsounds = getNumSlots();
+    exinfo.numchannels = is3d() ? 1 : 2;
+    exinfo.format = FMOD_SOUND_FORMAT_PCM16;
+
+    FMOD_RESULT res = mDriver->_getFmodSystem()->createStream(
+        getSoundResource()->getName().c_str(), 
+        mode, 
+        &exinfo, 
+        &mSound);
+
+    CHECK_FMOD4_ERRORS(res);
+
+    int *sentence = new int[getNumSlots()];
+    for(unsigned int i = 0; i < getNumSlots(); i++)
+    {
+        sentence[i] = i;
+    }
+    res = mSound->setSubSoundSentence(sentence, getNumSlots());
+    CHECK_FMOD4_ERRORS(res);
+}
+
+void Fmod4SoundStitching::unload() throw (RuntimeException)
+{
+    mSound->release();
+}
+
+bool Fmod4SoundStitching::isValid() const throw (RuntimeException)
+{
+    return mSound != NULL && mChannel != NULL;
+}
+
+void Fmod4SoundStitchingPtr::destroy()
+{
+    SharedPtr<Fmod4SoundStitching>::destroy();
+}
+
+const String& Fmod4SoundStitching::getMovableType() const
+{
+    return msMovableType;
+}
+
+void Fmod4SoundStitching::play(bool destroyWhenDone)
+{
+    if (!isValid())
+    {
+        load();
+    }
+
+    FMOD_RESULT res = mDriver->_getFmodSystem()->playSound(
+        FMOD_CHANNEL_FREE, 
+        mSound, 
+        true,
+        &mChannel);
+
+    CHECK_FMOD4_ERRORS(res);
+
+    RlAssert1(mChannel != NULL);
+    mAutoDestroy = destroyWhenDone;
+//    mDriver->_registerChannel(mChannel, this);
+
+    float vol;
+	if (is3d())
+	{
+		vol = mDriver->getDefaultSoundVolume();
+	}
+	else
+	{
+		vol = mDriver->getDefaultMusicVolume();
+	}
+	setVolume(vol);
+
+    setPriority(mPriority);
+    setPosition(mPosition);
+    setDirection(mDirection);
+	setVelocity(mVelocity); 
+    pause(false);
+    SoundPlayEvent event = SoundPlayEvent(this, SoundPlayEvent::STARTEVENT);
+    dispatchEvent(&event);
+}
+
+void Fmod4SoundStitching::stop()
+{
+    mChannel->stop();
+}
+
+void Fmod4SoundStitching::setPosition(const Ogre::Vector3& position)
+{
+	mPosition = position;
+
+	if (isValid())
+	{
+		FMOD_VECTOR pos;
+		pos.x = position.x;
+		pos.y = position.y;
+		pos.z = -position.z;
+		mChannel->set3DAttributes(&pos, NULL);
+	}
+}
+
+const Ogre::Vector3 Fmod4SoundStitching::getPosition() const
+{
+	if (isValid())
+	{
+		FMOD_VECTOR pos;
+		mChannel->get3DAttributes(&pos, NULL);
+
+		Vector3 rval;
+		rval.x = pos.x;
+		rval.y = pos.y;
+		rval.z = -pos.z;
+
+		return rval;
+	}
+
+	return mPosition;
+}
+
+const Ogre::Vector3 Fmod4SoundStitching::getVelocity() const
+{
+	if (isValid())
+	{
+		FMOD_VECTOR vel;
+		mChannel->get3DAttributes(NULL, &vel);
+
+		Vector3 rval;
+		rval.x = vel.x;
+		rval.y = vel.y;
+		rval.z = -vel.z;
+
+		return rval;
+	}
+
+	return mVelocity;
+}
+
+void Fmod4SoundStitching::setVelocity(const Ogre::Vector3& velocity)
+{
+	mVelocity = velocity;
+
+	if (isValid())
+	{
+		FMOD_VECTOR vel;
+		vel.x = velocity.x;
+		vel.y = velocity.y;
+		vel.z = -velocity.z;
+		mChannel->set3DAttributes(NULL, &vel);
+	}
+}
+
+void Fmod4SoundStitching::setDirection(const Ogre::Quaternion &orientation)
+{
+	mDirection = orientation;
+
+	if (isValid())
+	{
+		FMOD_VECTOR to;
+
+		Vector3 toVec = orientation * Vector3::NEGATIVE_UNIT_Z;
+		to.x = toVec.x;
+		to.y = toVec.y;
+		to.z = -toVec.z;
+
+		mChannel->set3DConeOrientation(&to);
+	}
+}
+
+const Ogre::Quaternion Fmod4SoundStitching::getDirection() const
+{
+	if (isValid())
+	{
+		FMOD_VECTOR to;
+		mChannel->get3DConeOrientation(&to);
+
+		Vector3 toVec;
+		toVec.x = to.x;
+		toVec.y = to.y;
+		toVec.z = -to.z;
+
+		return Vector3::NEGATIVE_UNIT_Z.getRotationTo(toVec);
+	}
+
+	return mDirection;
+}
+
+bool Fmod4SoundStitching::isPaused()
+{
+    bool paused;
+    FMOD_RESULT error = mChannel->getPaused(&paused);
+    return !paused;
+}
+
+const bool Fmod4SoundStitching::isPlaying() const
+{
+    bool playing;
+    FMOD_RESULT error = mChannel->isPlaying(&playing);
+    return playing;
+}
+
+void Fmod4SoundStitching::pause(bool pause)
+{
+    mChannel->setPaused(pause);
+}
+
+void Fmod4SoundStitching::setVolume(float vol)
+{
+	mVolume = vol;
+	if (isValid())
+	{
+	    mChannel->setVolume(vol);
+	}
+}
+
+const float Fmod4SoundStitching::getVolume() const
+{
+	if (isValid())
+	{
+		float vol;
+		mChannel->getVolume(&vol);
+		return vol;
+	}
+	return mVolume;
+}
+
+/**
+ * @author JoSch
+ * @date 14-03-2007
+ * @version 1.0
+ * @param priority The new priority of this sound
+ */ 
+void Fmod4SoundStitching::setPriority(const int priority)
+{
+    mPriority = priority;
+    if (mPriority < 0)
+    {
+        mPriority = 0;
+    }
+    if (mPriority > 256)
+    {
+        mPriority = 256;
+    }
+    if (isValid())
+    {
+        mChannel->setPriority(mPriority);
+    }
+}
+
+/**
+ * @author JoSch
+ * @date 14-03-2007
+ * @version 1.0
+ * @return The new priority of this sound
+ */ 
+const int Fmod4SoundStitching::getPriority() const
+{
+    int priority = mPriority;
+    if (isValid())
+    {
+        mChannel->getPriority(&priority);
+    }
+    return priority;
+}
+
+
+/**
+ * @author JoSch
+ * @date 15-03-2007
+ * @version 1.0
+ * @return The Fmod4 Channel object
+ */ 
+FMOD::Channel *Fmod4SoundStitching::getFmodChannel() const
+{
+    return mChannel;
+}
+
+/**
+ * @author JoSch
+ * @date 15-03-2007
+ * @version 1.0
+ * @return The Fmod4 Sound object
+ */ 
+FMOD::Sound *Fmod4SoundStitching::getFmodSound() const
+{
+    return mSound;
+}
+
+/**
+ * @author JoSch
+ * @date 15-03-2007
+ * @version 1.0
+ * @return TRUE, if the sound should autodestroy when playing ended.
+ */ 
+bool Fmod4SoundStitching::isAutoDestroying() const
+{
+    return mAutoDestroy;
+}
+
+/**
+ * @author JoSch
+ * @date 08-03-2008
+ * @version 1.0
+ */ 
+void Fmod4SoundStitching::putSoundIntoSlot(unsigned int slot, CeGuiString label)
+{
+    if (isValid())
+    {
+        FMOD_MODE mode = FMOD_DEFAULT;
+
+        if (is3d())
+        {
+            mode |= FMOD_3D;
+        }
+        else
+        {
+            mode |= FMOD_2D;
+        }
+
+        if (isLooping())
+        {
+            mode |= FMOD_LOOP_NORMAL;
+        }
+        else
+        {
+            mode |= FMOD_LOOP_OFF;
+        }
+        FMOD::Sound *sound;
+        FMOD_RESULT result = mDriver->_getFmodSystem()->createStream(
+            mSoundCache[label]->getName().c_str(), 
+            mode, 
+            NULL, 
+            &sound);
+        CHECK_FMOD4_ERRORS(result);
+        if (mSoundSlots[slot] != NULL)
+        {
+            mSoundSlots[slot]->release();
+        }
+        mSoundSlots[slot] = sound;
+
+        result = sound->setSubSound(slot, sound);
+        CHECK_FMOD4_ERRORS(result);
+    }
+}
+
+/**
+ * @author JoSch
+ * @date 08-03-2008
+ * @version 1.0
+ * @return TRUE, if the sound should autodestroy when playing ended.
+ */ 
+unsigned int Fmod4SoundStitching::getPlayingSlot()
+{
+    if (isValid())
+    {
+        unsigned int currentslot = -1;
+        FMOD_RESULT result = mChannel->getPosition(&currentslot, (FMOD_TIMEUNIT)(FMOD_TIMEUNIT_SENTENCE_SUBSOUND | FMOD_TIMEUNIT_BUFFERED));
+        CHECK_FMOD4_ERRORS(result);
+        return currentslot;
+    }
+    return -1;
+}
+
+} // Namespace

Copied: rl/trunk/engine/ui/include/Fmod4ConfigComponent.h (from rev 4715, rl/trunk/plugins/fmod4driver/include/Fmod4ConfigComponent.h)

Copied: rl/trunk/engine/ui/src/Fmod4ConfigComponent.cpp (from rev 4715, rl/trunk/plugins/fmod4driver/src/Fmod4ConfigComponent.cpp)

Modified: rl/trunk/engine/ui/src/GameSettings.cpp
===================================================================
--- rl/trunk/engine/ui/src/GameSettings.cpp	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/engine/ui/src/GameSettings.cpp	2009-01-22 21:53:04 UTC (rev 4716)
@@ -48,7 +48,7 @@
         {
             if ((*it)->isDriverPlugin())
             {
-                registerSoundDriverConfig((*it)->getConfigComponent());
+                //registerSoundDriverConfig((*it)->getConfigComponent());
             }
         }
 

Modified: rl/trunk/tools/copy_dependencies.bat
===================================================================
--- rl/trunk/tools/copy_dependencies.bat	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/tools/copy_dependencies.bat	2009-01-22 21:53:04 UTC (rev 4716)
@@ -51,7 +51,6 @@
 REM Die restlichen Abh?ngigkeiten
 REM -----------------------------
 REM 
-copy "%RL_ROOT%\dependencies\fmod\api\fmod.dll" "%RL_DIST%"
 copy "%RL_ROOT%\dependencies\FMOD4\api\fmodex.dll" "%RL_DIST%"
 
 copy "%RL_ROOT%\Dependencies\NewtonSDK\sdk\dll\Newton.dll" "%RL_DIST%"

Modified: rl/trunk/tools/copy_dlls.bat
===================================================================
--- rl/trunk/tools/copy_dlls.bat	2009-01-21 19:56:28 UTC (rev 4715)
+++ rl/trunk/tools/copy_dlls.bat	2009-01-22 21:53:04 UTC (rev 4716)
@@ -18,7 +18,3 @@
 copy "%RL_ROOT%\engine\ui\lib\%BUILD%\RlUi.dll" "%RL_DIST%"
 copy "%RL_ROOT%\engine\uicomponents\lib\%BUILD%\RlUiComponents.dll" "%RL_DIST%"
 copy "%RL_ROOT%\engine\ai\lib\%BUILD%\RlAI.dll" "%RL_DIST%"
-
-copy "%RL_ROOT%\plugins\fmod3driver\lib\%BUILD%\RlFmod3Driver.dll" "%RL_DIST%"
-copy "%RL_ROOT%\plugins\fmod4driver\lib\%BUILD%\RlFmod4Driver.dll" "%RL_DIST%"
-copy "%RL_ROOT%\plugins\openaldriver\lib\%BUILD%\RlOpenALDriver.dll" "%RL_DIST%"



From blakharaz at mail.berlios.de  Fri Jan 23 22:41:45 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Fri, 23 Jan 2009 22:41:45 +0100
Subject: [Dsa-hl-svn] r4717 - rl/trunk/Mac/Rastullah.xcodeproj
Message-ID: <200901232141.n0NLfjFx014534@sheep.berlios.de>

Author: blakharaz
Date: 2009-01-23 22:41:43 +0100 (Fri, 23 Jan 2009)
New Revision: 4717

Modified:
   rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj
Log:
Mac OS X: Link Fmod4 to RlCore

Modified: rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj
===================================================================
--- rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj	2009-01-22 21:53:04 UTC (rev 4716)
+++ rl/trunk/Mac/Rastullah.xcodeproj/project.pbxproj	2009-01-23 21:41:43 UTC (rev 4717)
@@ -439,18 +439,12 @@
 		483646C40D83D62E00912FEC /* SaveGameFileWriter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485A05820D71EDF20024198D /* SaveGameFileWriter.cpp */; };
 		483646C50D83D62E00912FEC /* SaveGameManager.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485A05830D71EDF20024198D /* SaveGameManager.cpp */; };
 		483646D30D83D6DD00912FEC /* SaveGameFile.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485A05800D71EDF20024198D /* SaveGameFile.cpp */; };
-		48365BE60D8D560E00BF3313 /* Ogre.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 444EAEBE0BD0F09900C6D4A0 /* Ogre.framework */; };
-		48365BE80D8D562D00BF3313 /* libRlCore.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 444EAB610BD0E2DA00C6D4A0 /* libRlCore.dylib */; };
-		48365BE90D8D562D00BF3313 /* libRlUi.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */; };
-		48365BEC0D8D56DC00BF3313 /* libRlCommon.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 444EAAB20BD0E0FB00C6D4A0 /* libRlCommon.dylib */; };
-		48365C950D8D56EA00BF3313 /* CEGUI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 444EAEBD0BD0F09900C6D4A0 /* CEGUI.framework */; };
 		4836CBC90D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836CBCA0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836CBCB0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836CBCC0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836CBCD0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836CBCE0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
-		4836CBCF0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836F8BC0D885AAA00E3632F /* libruby.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 483646A10D83D57800912FEC /* libruby.dylib */; };
 		48380B190D800EED0013EE0C /* StartAnimationJob.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48380B180D800EED0013EE0C /* StartAnimationJob.cpp */; };
 		48380B1A0D8010ED0013EE0C /* TimeSource.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485A05850D71EDF20024198D /* TimeSource.cpp */; };
@@ -522,18 +516,6 @@
 		483D31800D85B3B7003477A0 /* SimpleVehicle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D31710D85B3B7003477A0 /* SimpleVehicle.cpp */; };
 		483D31810D85B3B7003477A0 /* stdinc.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D31720D85B3B7003477A0 /* stdinc.cpp */; };
 		483D31820D85B3B7003477A0 /* WalkPathBehaviour.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D31730D85B3B7003477A0 /* WalkPathBehaviour.cpp */; };
-		483D869D0D8C3DA200F3629E /* Fmod4ConfigComponent.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D868C0D8C3DA200F3629E /* Fmod4ConfigComponent.h */; };
-		483D869E0D8C3DA200F3629E /* Fmod4Driver.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D868D0D8C3DA200F3629E /* Fmod4Driver.h */; };
-		483D869F0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D868E0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h */; };
-		483D86A00D8C3DA200F3629E /* Fmod4Listener.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D868F0D8C3DA200F3629E /* Fmod4Listener.h */; };
-		483D86A10D8C3DA200F3629E /* Fmod4Sound.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D86900D8C3DA200F3629E /* Fmod4Sound.h */; };
-		483D86A20D8C3DA200F3629E /* Fmod4SoundStitching.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D86910D8C3DA200F3629E /* Fmod4SoundStitching.h */; };
-		483D86A30D8C3DA200F3629E /* Fmod4ConfigComponent.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D86960D8C3DA200F3629E /* Fmod4ConfigComponent.cpp */; };
-		483D86A40D8C3DA200F3629E /* Fmod4Driver.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D86970D8C3DA200F3629E /* Fmod4Driver.cpp */; };
-		483D86A50D8C3DA200F3629E /* Fmod4DriverDllMain.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D86980D8C3DA200F3629E /* Fmod4DriverDllMain.cpp */; };
-		483D86A60D8C3DA200F3629E /* Fmod4Listener.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D86990D8C3DA200F3629E /* Fmod4Listener.cpp */; };
-		483D86A70D8C3DA200F3629E /* Fmod4Sound.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D869A0D8C3DA200F3629E /* Fmod4Sound.cpp */; };
-		483D86A80D8C3DA200F3629E /* Fmod4SoundStitching.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D869B0D8C3DA200F3629E /* Fmod4SoundStitching.cpp */; };
 		483D87CE0D8C564400F3629E /* libRlScript.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48570C1B0D8A6C5400096E35 /* libRlScript.dylib */; };
 		484D8D0B0E1E05F400BCFC2B /* OgreCEGUIRenderer.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 444EB3720BD1784A00C6D4A0 /* OgreCEGUIRenderer.framework */; };
 		484D8D0C0E1E05F400BCFC2B /* OpenSteer.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 444EB0DA0BD119BB00C6D4A0 /* OpenSteer.framework */; };
@@ -548,7 +530,6 @@
 		484D92210E1E078100BCFC2B /* libRlRules.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 444EAC370BD0E44900C6D4A0 /* libRlRules.dylib */; };
 		484D92220E1E078100BCFC2B /* libRlUi.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */; };
 		484D92230E1E078100BCFC2B /* libRlScript.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48570C1B0D8A6C5400096E35 /* libRlScript.dylib */; };
-		484D92240E1E078100BCFC2B /* RlFmod4Driver.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */; };
 		484D92250E1E078100BCFC2B /* RlScript.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 483D87C90D8C55E500F3629E /* RlScript.bundle */; };
 		484FE6BA0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		484FE6BB0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
@@ -557,7 +538,6 @@
 		484FE6BE0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		484FE6BF0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		484FE6C00E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
-		484FE6C10E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		484FE6C20E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		48500B790D906A1000EAD8DB /* RlScriptExportsMac.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48500B780D906A1000EAD8DB /* RlScriptExportsMac.cpp */; };
 		4851EA4F0EDDC93300AB79E9 /* NullSoundStitching.h in Headers */ = {isa = PBXBuildFile; fileRef = 4851EA4E0EDDC93300AB79E9 /* NullSoundStitching.h */; };
@@ -665,13 +645,11 @@
 		48A52CBF0E0EF77C008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
 		48A52CC00E0EF77D008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
 		48A52CC20E0EF77E008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
-		48A52CC30E0EF785008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
 		48B006C50ECAC05F008141C2 /* CharacterSelectionWindow.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48B006C40ECAC05F008141C2 /* CharacterSelectionWindow.cpp */; };
 		48B006C80ECAC11D008141C2 /* CharacterSelectionWindow.h in Headers */ = {isa = PBXBuildFile; fileRef = 48B006C70ECAC11D008141C2 /* CharacterSelectionWindow.h */; };
 		48B0B0350E6534690023B198 /* PlaneNodeProcessor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48B0B0340E6534690023B198 /* PlaneNodeProcessor.cpp */; };
 		48B0B0370E6534810023B198 /* PlaneNodeProcessor.h in Headers */ = {isa = PBXBuildFile; fileRef = 48B0B0360E6534810023B198 /* PlaneNodeProcessor.h */; };
 		48B0B03C0E6535AB0023B198 /* libmeshmagick.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 440785DD0C09D231006E496D /* libmeshmagick.dylib */; };
-		48B0B0490E65BBB30023B198 /* libfmodex.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48B0B0480E65BBB30023B198 /* libfmodex.dylib */; };
 		48B0B04A0E65BBC10023B198 /* libfmodex.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48B0B0480E65BBB30023B198 /* libfmodex.dylib */; };
 		48B772DD0D58350B000A3B97 /* XmlProcessor.h in Headers */ = {isa = PBXBuildFile; fileRef = 48B772DA0D58350B000A3B97 /* XmlProcessor.h */; };
 		48B772DE0D58350B000A3B97 /* XmlPropertyReader.h in Headers */ = {isa = PBXBuildFile; fileRef = 48B772DB0D58350B000A3B97 /* XmlPropertyReader.h */; };
@@ -680,6 +658,15 @@
 		48B772E40D583521000A3B97 /* XmlPropertyReader.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48B772E10D583521000A3B97 /* XmlPropertyReader.cpp */; };
 		48B772E50D583521000A3B97 /* XmlPropertyWriter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48B772E20D583521000A3B97 /* XmlPropertyWriter.cpp */; };
 		48C04B8A0E67DF0300CD3A7D /* PCRE.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48C04B890E67DF0300CD3A7D /* PCRE.framework */; };
+		48CA78CB0F2A511E00F8E471 /* Fmod4Driver.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48CA78C70F2A511E00F8E471 /* Fmod4Driver.cpp */; };
+		48CA78CC0F2A511E00F8E471 /* Fmod4Listener.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48CA78C80F2A511E00F8E471 /* Fmod4Listener.cpp */; };
+		48CA78CD0F2A511E00F8E471 /* Fmod4Sound.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48CA78C90F2A511E00F8E471 /* Fmod4Sound.cpp */; };
+		48CA78CE0F2A511E00F8E471 /* Fmod4SoundStitching.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48CA78CA0F2A511E00F8E471 /* Fmod4SoundStitching.cpp */; };
+		48CA78D30F2A513100F8E471 /* Fmod4Driver.h in Headers */ = {isa = PBXBuildFile; fileRef = 48CA78CF0F2A513100F8E471 /* Fmod4Driver.h */; };
+		48CA78D40F2A513100F8E471 /* Fmod4Listener.h in Headers */ = {isa = PBXBuildFile; fileRef = 48CA78D00F2A513100F8E471 /* Fmod4Listener.h */; };
+		48CA78D50F2A513100F8E471 /* Fmod4Sound.h in Headers */ = {isa = PBXBuildFile; fileRef = 48CA78D10F2A513100F8E471 /* Fmod4Sound.h */; };
+		48CA78D60F2A513100F8E471 /* Fmod4SoundStitching.h in Headers */ = {isa = PBXBuildFile; fileRef = 48CA78D20F2A513100F8E471 /* Fmod4SoundStitching.h */; };
+		48CA78D80F2A51A400F8E471 /* libfmodex.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48CA78D70F2A51A400F8E471 /* libfmodex.dylib */; };
 		48CFBF8F0E2E869000CD0C51 /* FreeType.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48CFBF8E0E2E869000CD0C51 /* FreeType.framework */; };
 		48D0BDC70E23375E00863824 /* libruby.dylib in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 483646A10D83D57800912FEC /* libruby.dylib */; };
 		48D0BE2C0E273C5E00863824 /* SaveAble.h in Headers */ = {isa = PBXBuildFile; fileRef = 48D0BE280E273C5E00863824 /* SaveAble.h */; };
@@ -824,20 +811,6 @@
 			remoteGlobalIDString = 444EAAB10BD0E0FB00C6D4A0;
 			remoteInfo = RlCommon;
 		};
-		483B6A010D8D4C0A00C4C190 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 20286C28FDCF999611CA2CEA /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 483D866F0D8C3A3300F3629E;
-			remoteInfo = RlFmod4Driver;
-		};
-		483B6A040D8D4C2700C4C190 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 20286C28FDCF999611CA2CEA /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 444EAC3D0BD0E46000C6D4A0;
-			remoteInfo = RlUi;
-		};
 		483D87D70D8C566400F3629E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 20286C28FDCF999611CA2CEA /* Project object */;
@@ -852,6 +825,13 @@
 			remoteGlobalIDString = 48570C1A0D8A6C5400096E35;
 			remoteInfo = RlScript;
 		};
+		48CA789F0F2218BF00F8E471 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 20286C28FDCF999611CA2CEA /* Project object */;
+			proxyType = 1;
+			remoteGlobalIDString = 8D0C4E890486CD37000505A6 /* Rastullah */;
+			remoteInfo = Rastullah;
+		};
 /* End PBXContainerItemProxy section */
 
 /* Begin PBXCopyFilesBuildPhase section */
@@ -1402,19 +1382,6 @@
 		483D31710D85B3B7003477A0 /* SimpleVehicle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = SimpleVehicle.cpp; path = ../engine/ai/src/SimpleVehicle.cpp; sourceTree = SOURCE_ROOT; };
 		483D31720D85B3B7003477A0 /* stdinc.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = stdinc.cpp; path = ../engine/ai/src/stdinc.cpp; sourceTree = SOURCE_ROOT; };
 		483D31730D85B3B7003477A0 /* WalkPathBehaviour.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = WalkPathBehaviour.cpp; path = ../engine/ai/src/WalkPathBehaviour.cpp; sourceTree = SOURCE_ROOT; };
-		483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; includeInIndex = 0; path = RlFmod4Driver.bundle; sourceTree = BUILT_PRODUCTS_DIR; };
-		483D868C0D8C3DA200F3629E /* Fmod4ConfigComponent.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4ConfigComponent.h; sourceTree = "<group>"; };
-		483D868D0D8C3DA200F3629E /* Fmod4Driver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4Driver.h; sourceTree = "<group>"; };
-		483D868E0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4DriverPrerequisites.h; sourceTree = "<group>"; };
-		483D868F0D8C3DA200F3629E /* Fmod4Listener.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4Listener.h; sourceTree = "<group>"; };
-		483D86900D8C3DA200F3629E /* Fmod4Sound.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4Sound.h; sourceTree = "<group>"; };
-		483D86910D8C3DA200F3629E /* Fmod4SoundStitching.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4SoundStitching.h; sourceTree = "<group>"; };
-		483D86960D8C3DA200F3629E /* Fmod4ConfigComponent.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4ConfigComponent.cpp; sourceTree = "<group>"; };
-		483D86970D8C3DA200F3629E /* Fmod4Driver.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4Driver.cpp; sourceTree = "<group>"; };
-		483D86980D8C3DA200F3629E /* Fmod4DriverDllMain.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4DriverDllMain.cpp; sourceTree = "<group>"; };
-		483D86990D8C3DA200F3629E /* Fmod4Listener.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4Listener.cpp; sourceTree = "<group>"; };
-		483D869A0D8C3DA200F3629E /* Fmod4Sound.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4Sound.cpp; sourceTree = "<group>"; };
-		483D869B0D8C3DA200F3629E /* Fmod4SoundStitching.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4SoundStitching.cpp; sourceTree = "<group>"; };
 		483D87C90D8C55E500F3629E /* RlScript.bundle */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; includeInIndex = 0; path = RlScript.bundle; sourceTree = BUILT_PRODUCTS_DIR; };
 		484FE6B90E17BC8800FA880F /* Carbon.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Carbon.framework; path = /System/Library/Frameworks/Carbon.framework; sourceTree = "<absolute>"; };
 		48500B780D906A1000EAD8DB /* RlScriptExportsMac.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = RlScriptExportsMac.cpp; path = ../engine/script/swig/RlScriptExportsMac.cpp; sourceTree = SOURCE_ROOT; };
@@ -1504,6 +1471,17 @@
 		48B772E10D583521000A3B97 /* XmlPropertyReader.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = XmlPropertyReader.cpp; path = ../engine/common/src/XmlPropertyReader.cpp; sourceTree = SOURCE_ROOT; };
 		48B772E20D583521000A3B97 /* XmlPropertyWriter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = XmlPropertyWriter.cpp; path = ../engine/common/src/XmlPropertyWriter.cpp; sourceTree = SOURCE_ROOT; };
 		48C04B890E67DF0300CD3A7D /* PCRE.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = PCRE.framework; path = /Library/Frameworks/PCRE.framework; sourceTree = "<absolute>"; };
+		48CA78990F2218B100F8E471 /* RastullahDeploy.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = RastullahDeploy.app; sourceTree = BUILT_PRODUCTS_DIR; };
+		48CA789B0F2218B100F8E471 /* Rastullah complete-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Rastullah complete-Info.plist"; path = "../Rastullah complete-Info.plist"; sourceTree = "<group>"; };
+		48CA78C70F2A511E00F8E471 /* Fmod4Driver.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = Fmod4Driver.cpp; path = fmod4driver/Fmod4Driver.cpp; sourceTree = "<group>"; };
+		48CA78C80F2A511E00F8E471 /* Fmod4Listener.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = Fmod4Listener.cpp; path = fmod4driver/Fmod4Listener.cpp; sourceTree = "<group>"; };
+		48CA78C90F2A511E00F8E471 /* Fmod4Sound.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = Fmod4Sound.cpp; path = fmod4driver/Fmod4Sound.cpp; sourceTree = "<group>"; };
+		48CA78CA0F2A511E00F8E471 /* Fmod4SoundStitching.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = Fmod4SoundStitching.cpp; path = fmod4driver/Fmod4SoundStitching.cpp; sourceTree = "<group>"; };
+		48CA78CF0F2A513100F8E471 /* Fmod4Driver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Fmod4Driver.h; path = fmod4driver/Fmod4Driver.h; sourceTree = "<group>"; };
+		48CA78D00F2A513100F8E471 /* Fmod4Listener.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Fmod4Listener.h; path = fmod4driver/Fmod4Listener.h; sourceTree = "<group>"; };
+		48CA78D10F2A513100F8E471 /* Fmod4Sound.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Fmod4Sound.h; path = fmod4driver/Fmod4Sound.h; sourceTree = "<group>"; };
+		48CA78D20F2A513100F8E471 /* Fmod4SoundStitching.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Fmod4SoundStitching.h; path = fmod4driver/Fmod4SoundStitching.h; sourceTree = "<group>"; };
+		48CA78D70F2A51A400F8E471 /* libfmodex.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libfmodex.dylib; path = "FMOD Programmers API/api/lib/libfmodex.dylib"; sourceTree = SYSTEM_DEVELOPER_DIR; };
 		48CFBF8E0E2E869000CD0C51 /* FreeType.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = FreeType.framework; path = /Library/Frameworks/FreeType.framework; sourceTree = "<absolute>"; };
 		48D0BE280E273C5E00863824 /* SaveAble.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SaveAble.h; sourceTree = "<group>"; };
 		48D0BE290E273C5E00863824 /* SaveAbleCollection.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SaveAbleCollection.h; sourceTree = "<group>"; };
@@ -1560,6 +1538,7 @@
 				4836CBCD0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */,
 				48A52CB10E0EF55C008DBDD8 /* libboost_system.dylib in Frameworks */,
 				484FE6BC0E17BC8800FA880F /* Carbon.framework in Frameworks */,
+				48CA78D80F2A51A400F8E471 /* libfmodex.dylib in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1616,22 +1595,6 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		483D866E0D8C3A3300F3629E /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				48365BE60D8D560E00BF3313 /* Ogre.framework in Frameworks */,
-				48365BE80D8D562D00BF3313 /* libRlCore.dylib in Frameworks */,
-				48365BE90D8D562D00BF3313 /* libRlUi.dylib in Frameworks */,
-				48365BEC0D8D56DC00BF3313 /* libRlCommon.dylib in Frameworks */,
-				48365C950D8D56EA00BF3313 /* CEGUI.framework in Frameworks */,
-				4836CBCF0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */,
-				48A52CC30E0EF785008DBDD8 /* libboost_system.dylib in Frameworks */,
-				484FE6C10E17BC8800FA880F /* Carbon.framework in Frameworks */,
-				48B0B0490E65BBB30023B198 /* libfmodex.dylib in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
 		483D87C70D8C55E500F3629E /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
@@ -1661,6 +1624,13 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
+		48CA78970F2218B100F8E471 /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
 		8D0C4E910486CD37000505A6 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
@@ -1695,8 +1665,8 @@
 				444EAC370BD0E44900C6D4A0 /* libRlRules.dylib */,
 				444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */,
 				48570C1B0D8A6C5400096E35 /* libRlScript.dylib */,
-				483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */,
 				483D87C90D8C55E500F3629E /* RlScript.bundle */,
+				48CA78990F2218B100F8E471 /* RastullahDeploy.app */,
 			);
 			name = Products;
 			sourceTree = "<group>";
@@ -1704,6 +1674,7 @@
 		20286C29FDCF999611CA2CEA /* Rastullah */ = {
 			isa = PBXGroup;
 			children = (
+				48CA78D70F2A51A400F8E471 /* libfmodex.dylib */,
 				20286C2AFDCF999611CA2CEA /* Engine */,
 				48D401810D9E483200AE5340 /* modules */,
 				20286C2CFDCF999611CA2CEA /* Resources */,
@@ -1720,7 +1691,6 @@
 				444EAC220BD0E3E000C6D4A0 /* RlAi */,
 				444EAB1F0BD0E25C00C6D4A0 /* RlCommon */,
 				444EAB200BD0E27400C6D4A0 /* RlCore */,
-				483D86890D8C3DA200F3629E /* RlFmod4Driver */,
 				444EAC590BD0E50600C6D4A0 /* RlRules */,
 				444EAE600BD0E66500C6D4A0 /* RlScript */,
 				444EAC570BD0E4CD00C6D4A0 /* RlUi */,
@@ -1980,45 +1950,13 @@
 			name = swig;
 			sourceTree = "<group>";
 		};
-		483D86890D8C3DA200F3629E /* RlFmod4Driver */ = {
-			isa = PBXGroup;
-			children = (
-				483D868B0D8C3DA200F3629E /* include */,
-				483D86950D8C3DA200F3629E /* src */,
-			);
-			name = RlFmod4Driver;
-			path = ../plugins/fmod4driver;
-			sourceTree = SOURCE_ROOT;
-		};
-		483D868B0D8C3DA200F3629E /* include */ = {
-			isa = PBXGroup;
-			children = (
-				483D868C0D8C3DA200F3629E /* Fmod4ConfigComponent.h */,
-				483D868D0D8C3DA200F3629E /* Fmod4Driver.h */,
-				483D868E0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h */,
-				483D868F0D8C3DA200F3629E /* Fmod4Listener.h */,
-				483D86900D8C3DA200F3629E /* Fmod4Sound.h */,
-				483D86910D8C3DA200F3629E /* Fmod4SoundStitching.h */,
-			);
-			path = include;
-			sourceTree = "<group>";
-		};
-		483D86950D8C3DA200F3629E /* src */ = {
-			isa = PBXGroup;
-			children = (
-				483D86960D8C3DA200F3629E /* Fmod4ConfigComponent.cpp */,
-				483D86970D8C3DA200F3629E /* Fmod4Driver.cpp */,
-				483D86980D8C3DA200F3629E /* Fmod4DriverDllMain.cpp */,
-				483D86990D8C3DA200F3629E /* Fmod4Listener.cpp */,
-				483D869A0D8C3DA200F3629E /* Fmod4Sound.cpp */,
-				483D869B0D8C3DA200F3629E /* Fmod4SoundStitching.cpp */,
-			);
-			path = src;
-			sourceTree = "<group>";
-		};
 		4851EA4C0EDDC82400AB79E9 /* Source */ = {
 			isa = PBXGroup;
 			children = (
+				48CA78C70F2A511E00F8E471 /* Fmod4Driver.cpp */,
+				48CA78C80F2A511E00F8E471 /* Fmod4Listener.cpp */,
+				48CA78C90F2A511E00F8E471 /* Fmod4Sound.cpp */,
+				48CA78CA0F2A511E00F8E471 /* Fmod4SoundStitching.cpp */,
 				48D0BE3C0E273CB000863824 /* SaveAble.cpp */,
 				48D0BE3D0E273CB000863824 /* SaveAbleCollection.cpp */,
 				48D0BE3E0E273CB000863824 /* SaveAbleFactory.cpp */,
@@ -2104,6 +2042,10 @@
 		4851EA4D0EDDC8CA00AB79E9 /* Header */ = {
 			isa = PBXGroup;
 			children = (
+				48CA78CF0F2A513100F8E471 /* Fmod4Driver.h */,
+				48CA78D00F2A513100F8E471 /* Fmod4Listener.h */,
+				48CA78D10F2A513100F8E471 /* Fmod4Sound.h */,
+				48CA78D20F2A513100F8E471 /* Fmod4SoundStitching.h */,
 				48D0BE280E273C5E00863824 /* SaveAble.h */,
 				48D0BE290E273C5E00863824 /* SaveAbleCollection.h */,
 				48D0BE2A0E273C5E00863824 /* SaveAbleFactory.h */,
@@ -2340,6 +2282,7 @@
 		48CFBFD60E2E87A800CD0C51 /* Mac Scripts */ = {
 			isa = PBXGroup;
 			children = (
+				48CA789B0F2218B100F8E471 /* Rastullah complete-Info.plist */,
 				48EFE0D70E8B6EB1007EB7F8 /* mkdmg.sh */,
 				48EFE0D80E8B6EB1007EB7F8 /* renameinstalldirs.sh */,
 			);
@@ -2684,6 +2627,10 @@
 				48D0BE2E0E273C5E00863824 /* SaveAbleFactory.h in Headers */,
 				48D0BE2F0E273C5E00863824 /* SaveAbleManager.h in Headers */,
 				4851EA4F0EDDC93300AB79E9 /* NullSoundStitching.h in Headers */,
+				48CA78D30F2A513100F8E471 /* Fmod4Driver.h in Headers */,
+				48CA78D40F2A513100F8E471 /* Fmod4Listener.h in Headers */,
+				48CA78D50F2A513100F8E471 /* Fmod4Sound.h in Headers */,
+				48CA78D60F2A513100F8E471 /* Fmod4SoundStitching.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -2879,19 +2826,6 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		483D866C0D8C3A3300F3629E /* Headers */ = {
-			isa = PBXHeadersBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				483D869D0D8C3DA200F3629E /* Fmod4ConfigComponent.h in Headers */,
-				483D869E0D8C3DA200F3629E /* Fmod4Driver.h in Headers */,
-				483D869F0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h in Headers */,
-				483D86A00D8C3DA200F3629E /* Fmod4Listener.h in Headers */,
-				483D86A10D8C3DA200F3629E /* Fmod4Sound.h in Headers */,
-				483D86A20D8C3DA200F3629E /* Fmod4SoundStitching.h in Headers */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
 		483D87C50D8C55E500F3629E /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
@@ -3020,24 +2954,6 @@
 			productReference = 444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */;
 			productType = "com.apple.product-type.library.dynamic";
 		};
-		483D866F0D8C3A3300F3629E /* RlFmod4Driver */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 483D86750D8C3A5F00F3629E /* Build configuration list for PBXNativeTarget "RlFmod4Driver" */;
-			buildPhases = (
-				483D866C0D8C3A3300F3629E /* Headers */,
-				483D866D0D8C3A3300F3629E /* Sources */,
-				483D866E0D8C3A3300F3629E /* Frameworks */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				483B6A050D8D4C2700C4C190 /* PBXTargetDependency */,
-			);
-			name = RlFmod4Driver;
-			productName = RlFmod4Driver;
-			productReference = 483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */;
-			productType = "com.apple.product-type.library.dynamic";
-		};
 		483D87C80D8C55E500F3629E /* RlScriptExports */ = {
 			isa = PBXNativeTarget;
 			buildConfigurationList = 483D87D60D8C564E00F3629E /* Build configuration list for PBXNativeTarget "RlScriptExports" */;
@@ -3079,6 +2995,23 @@
 			productReference = 48570C1B0D8A6C5400096E35 /* libRlScript.dylib */;
 			productType = "com.apple.product-type.library.dynamic";
 		};
+		48CA78980F2218B100F8E471 /* RastullahDeploy */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 48CA789E0F2218B300F8E471 /* Build configuration list for PBXNativeTarget "RastullahDeploy" */;
+			buildPhases = (
+				48CA78970F2218B100F8E471 /* Frameworks */,
+				48CA78BF0F221DD700F8E471 /* ShellScript */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+				48CA78A00F2218BF00F8E471 /* PBXTargetDependency */,
+			);
+			name = RastullahDeploy;
+			productName = "Rastullah complete";
+			productReference = 48CA78990F2218B100F8E471 /* RastullahDeploy.app */;
+			productType = "com.apple.product-type.application";
+		};
 		8D0C4E890486CD37000505A6 /* Rastullah */ = {
 			isa = PBXNativeTarget;
 			buildConfigurationList = C0E91AC508A95435008D54AB /* Build configuration list for PBXNativeTarget "Rastullah" */;
@@ -3092,7 +3025,6 @@
 			buildRules = (
 			);
 			dependencies = (
-				483B6A020D8D4C0A00C4C190 /* PBXTargetDependency */,
 				483D87D80D8C566400F3629E /* PBXTargetDependency */,
 				444EAC1F0BD0E3A800C6D4A0 /* PBXTargetDependency */,
 				444EAC210BD0E3A800C6D4A0 /* PBXTargetDependency */,
@@ -3129,8 +3061,8 @@
 				444EAC360BD0E44900C6D4A0 /* RlRules */,
 				444EAC3D0BD0E46000C6D4A0 /* RlUi */,
 				48570C1A0D8A6C5400096E35 /* RlScript */,
-				483D866F0D8C3A3300F3629E /* RlFmod4Driver */,
 				483D87C80D8C55E500F3629E /* RlScriptExports */,
+				48CA78980F2218B100F8E471 /* RastullahDeploy */,
 			);
 		};
 /* End PBXProject section */
@@ -3150,7 +3082,6 @@
 				484D92220E1E078100BCFC2B /* libRlUi.dylib in Resources */,
 				48B0B04A0E65BBC10023B198 /* libfmodex.dylib in Resources */,
 				484D92230E1E078100BCFC2B /* libRlScript.dylib in Resources */,
-				484D92240E1E078100BCFC2B /* RlFmod4Driver.bundle in Resources */,
 				484D92250E1E078100BCFC2B /* RlScript.bundle in Resources */,
 				8D0C4E8D0486CD37000505A6 /* InfoPlist.strings in Resources */,
 				8D0C4E8E0486CD37000505A6 /* main.nib in Resources */,
@@ -3173,6 +3104,19 @@
 			shellPath = /bin/sh;
 			shellScript = "pwd\ncd ../engine/script/swig\n/usr/local/bin/swig -ruby -minherit -c++ -Fmicrosoft -addextern RlExports.i";
 		};
+		48CA78BF0F221DD700F8E471 /* ShellScript */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputPaths = (
+			);
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "cp -r ${BUILT_PRODUCTS_DIR}/Rastullah.app/* ${BUILT_PRODUCTS_DIR}/RastullahDeploy.app\nsvn export http://svn.berlios.de/svnroot/repos/dsa-hl/modules ${BUILT_PRODUCTS_DIR}/RastullahDeploy.app/Contents/Resources/modules";
+		};
 		48D0BDF20E2342F600863824 /* Rename Libs */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -3297,6 +3241,10 @@
 				48D0BE410E273CB000863824 /* SaveAbleCollection.cpp in Sources */,
 				48D0BE420E273CB000863824 /* SaveAbleFactory.cpp in Sources */,
 				48D0BE430E273CB000863824 /* SaveAbleManager.cpp in Sources */,
+				48CA78CB0F2A511E00F8E471 /* Fmod4Driver.cpp in Sources */,
+				48CA78CC0F2A511E00F8E471 /* Fmod4Listener.cpp in Sources */,
+				48CA78CD0F2A511E00F8E471 /* Fmod4Sound.cpp in Sources */,
+				48CA78CE0F2A511E00F8E471 /* Fmod4SoundStitching.cpp in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -3477,19 +3425,6 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		483D866D0D8C3A3300F3629E /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				483D86A30D8C3DA200F3629E /* Fmod4ConfigComponent.cpp in Sources */,
-				483D86A40D8C3DA200F3629E /* Fmod4Driver.cpp in Sources */,
-				483D86A50D8C3DA200F3629E /* Fmod4DriverDllMain.cpp in Sources */,
-				483D86A60D8C3DA200F3629E /* Fmod4Listener.cpp in Sources */,
-				483D86A70D8C3DA200F3629E /* Fmod4Sound.cpp in Sources */,
-				483D86A80D8C3DA200F3629E /* Fmod4SoundStitching.cpp in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
 		483D87C60D8C55E500F3629E /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
@@ -3614,16 +3549,6 @@
 			target = 444EAAB10BD0E0FB00C6D4A0 /* RlCommon */;
 			targetProxy = 483B69CB0D8D4A3500C4C190 /* PBXContainerItemProxy */;
 		};
-		483B6A020D8D4C0A00C4C190 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 483D866F0D8C3A3300F3629E /* RlFmod4Driver */;
-			targetProxy = 483B6A010D8D4C0A00C4C190 /* PBXContainerItemProxy */;
-		};
-		483B6A050D8D4C2700C4C190 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 444EAC3D0BD0E46000C6D4A0 /* RlUi */;
-			targetProxy = 483B6A040D8D4C2700C4C190 /* PBXContainerItemProxy */;
-		};
 		483D87D80D8C566400F3629E /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			target = 483D87C80D8C55E500F3629E /* RlScriptExports */;
@@ -3634,6 +3559,11 @@
 			target = 48570C1A0D8A6C5400096E35 /* RlScript */;
 			targetProxy = 48570C1E0D8A6C6900096E35 /* PBXContainerItemProxy */;
 		};
+		48CA78A00F2218BF00F8E471 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			target = 8D0C4E890486CD37000505A6 /* Rastullah */;
+			targetProxy = 48CA789F0F2218BF00F8E471 /* PBXContainerItemProxy */;
+		};
 /* End PBXTargetDependency section */
 
 /* Begin PBXVariantGroup section */
@@ -3750,15 +3680,19 @@
 					/usr/local/include/meshmagick,
 					/System/Library/Frameworks/Ruby.framework/Headers,
 					/Library/Frameworks/Xerces.framework/Headers,
+					"$(HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
 				);
+				HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/inc\"";
 				INSTALL_PATH = "@executable_path/../Resources";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
 					/System/Library/Frameworks/Ruby.framework/Versions/Current/usr/lib,
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
 					/opt/local/lib,
+					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2)",
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Ruby.framework/Versions/1.8/usr/lib\"";
+				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
 				MACH_O_TYPE = mh_dylib;
 				OTHER_LDFLAGS = "";
 				PREBINDING = NO;
@@ -3785,14 +3719,15 @@
 				GCC_PRECOMPILE_PREFIX_HEADER = YES;
 				GCC_PREFIX_HEADER = ../engine/core/include/stdinc.h;
 				HEADER_SEARCH_PATHS = (
-					"/usr/local/include/boost-1_33_1",
+					"$(inherited)",
 					"/usr/local/lib/ruby/1.8/i686-darwin8.9.1",
 					/usr/local/include/OIS,
 					/usr/local/include/meshmagick,
-					/sw/include,
-					/usr/local/include,
 					/System/Library/Frameworks/Ruby.framework/Headers,
+					/Library/Frameworks/Xerces.framework/Headers,
+					"$(HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
 				);
+				HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/inc\"";
 				INSTALL_PATH = "@executable_path/../Resources";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
@@ -3800,8 +3735,10 @@
 					/System/Library/Frameworks/Ruby.framework/Versions/Current/usr/lib,
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
 					/opt/local/lib,
+					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2)",
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Ruby.framework/Versions/1.8/usr/lib\"";
+				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
 				OTHER_LDFLAGS = "";
 				PREBINDING = NO;
 				PRODUCT_NAME = RlCore;
@@ -4034,79 +3971,6 @@
 			};
 			name = Release;
 		};
-		483D86710D8C3A3400F3629E /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				COPY_PHASE_STRIP = NO;
-				DYLIB_COMPATIBILITY_VERSION = "";
-				DYLIB_CURRENT_VERSION = "";
-				EXECUTABLE_EXTENSION = bundle;
-				EXECUTABLE_PREFIX = "";
-				FRAMEWORK_SEARCH_PATHS = (
-					"$(inherited)",
-					"$(FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-				);
-				FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Carbon.framework/Versions/A/Frameworks\"";
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_FIX_AND_CONTINUE = YES;
-				GCC_MODEL_TUNING = G5;
-				GCC_OPTIMIZATION_LEVEL = 0;
-				HEADER_SEARCH_PATHS = (
-					"$(inherited)",
-					"$(HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-				);
-				HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/inc\"";
-				INSTALL_PATH = "@executable_path/../Resources";
-				LIBRARY_SEARCH_PATHS = (
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2)",
-				);
-				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/lib\"";
-				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
-				MACH_O_TYPE = mh_bundle;
-				OTHER_LDFLAGS = "-lfmodex";
-				PREBINDING = NO;
-				PRODUCT_NAME = RlFmod4Driver;
-				ZERO_LINK = NO;
-			};
-			name = Debug;
-		};
-		483D86720D8C3A3400F3629E /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				DYLIB_COMPATIBILITY_VERSION = "";
-				DYLIB_CURRENT_VERSION = "";
-				EXECUTABLE_EXTENSION = bundle;
-				EXECUTABLE_PREFIX = "";
-				FRAMEWORK_SEARCH_PATHS = (
-					"$(inherited)",
-					"$(FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-				);
-				FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Carbon.framework/Versions/A/Frameworks\"";
-				GCC_ENABLE_FIX_AND_CONTINUE = NO;
-				GCC_MODEL_TUNING = G5;
-				HEADER_SEARCH_PATHS = (
-					"$(inherited)",
-					"$(HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-				);
-				HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/inc\"";
-				INSTALL_PATH = "@executable_path/../Resources";
-				LIBRARY_SEARCH_PATHS = (
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2)",
-				);
-				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/lib\"";
-				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
-				MACH_O_TYPE = mh_bundle;
-				OTHER_LDFLAGS = "-lfmodex";
-				PREBINDING = NO;
-				PRODUCT_NAME = RlFmod4Driver;
-				ZERO_LINK = NO;
-			};
-			name = Release;
-		};
 		483D87CA0D8C55E500F3629E /* Debug */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
@@ -4237,6 +4101,54 @@
 			};
 			name = Release;
 		};
+		48CA789C0F2218B200F8E471 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				COPY_PHASE_STRIP = NO;
+				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_ENABLE_FIX_AND_CONTINUE = YES;
+				GCC_MODEL_TUNING = G5;
+				GCC_OPTIMIZATION_LEVEL = 0;
+				GCC_PRECOMPILE_PREFIX_HEADER = YES;
+				GCC_PREFIX_HEADER = "$(SYSTEM_LIBRARY_DIR)/Frameworks/AppKit.framework/Headers/AppKit.h";
+				INFOPLIST_FILE = "Rastullah complete-Info.plist";
+				INSTALL_PATH = "$(HOME)/Applications";
+				OTHER_LDFLAGS = (
+					"-framework",
+					Foundation,
+					"-framework",
+					AppKit,
+				);
+				PREBINDING = NO;
+				PRODUCT_NAME = RastullahDeploy;
+			};
+			name = Debug;
+		};
+		48CA789D0F2218B200F8E471 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				COPY_PHASE_STRIP = YES;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				GCC_ENABLE_FIX_AND_CONTINUE = NO;
+				GCC_MODEL_TUNING = G5;
+				GCC_PRECOMPILE_PREFIX_HEADER = YES;
+				GCC_PREFIX_HEADER = "$(SYSTEM_LIBRARY_DIR)/Frameworks/AppKit.framework/Headers/AppKit.h";
+				INFOPLIST_FILE = "Rastullah complete-Info.plist";
+				INSTALL_PATH = "$(HOME)/Applications";
+				OTHER_LDFLAGS = (
+					"-framework",
+					Foundation,
+					"-framework",
+					AppKit,
+				);
+				PREBINDING = NO;
+				PRODUCT_NAME = RastullahDeploy;
+				ZERO_LINK = NO;
+			};
+			name = Release;
+		};
 		C0E91AC608A95435008D54AB /* Debug */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
@@ -4409,15 +4321,6 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		483D86750D8C3A5F00F3629E /* Build configuration list for PBXNativeTarget "RlFmod4Driver" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				483D86710D8C3A3400F3629E /* Debug */,
-				483D86720D8C3A3400F3629E /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
 		483D87D60D8C564E00F3629E /* Build configuration list for PBXNativeTarget "RlScriptExports" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
@@ -4436,6 +4339,15 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
+		48CA789E0F2218B300F8E471 /* Build configuration list for PBXNativeTarget "RastullahDeploy" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				48CA789C0F2218B200F8E471 /* Debug */,
+				48CA789D0F2218B200F8E471 /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
 		C0E91AC508A95435008D54AB /* Build configuration list for PBXNativeTarget "Rastullah" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (



From blakharaz at mail.berlios.de  Fri Jan 23 22:41:54 2009
From: blakharaz at mail.berlios.de (blakharaz at mail.berlios.de)
Date: Fri, 23 Jan 2009 22:41:54 +0100
Subject: [Dsa-hl-svn] r4718 - rl/trunk/Mac/tools
Message-ID: <200901232141.n0NLfs5Q014549@sheep.berlios.de>

Author: blakharaz
Date: 2009-01-23 22:41:53 +0100 (Fri, 23 Jan 2009)
New Revision: 4718

Modified:
   rl/trunk/Mac/tools/renameinstalldirs.sh
Log:
Mac OS X: Link Fmod4 to RlCore

Modified: rl/trunk/Mac/tools/renameinstalldirs.sh
===================================================================
--- rl/trunk/Mac/tools/renameinstalldirs.sh	2009-01-23 21:41:43 UTC (rev 4717)
+++ rl/trunk/Mac/tools/renameinstalldirs.sh	2009-01-23 21:41:53 UTC (rev 4718)
@@ -17,7 +17,6 @@
     $RASTULLAH_RES_DIR/libRlRules.dylib \
     $RASTULLAH_RES_DIR/libRlScript.dylib \
     $RASTULLAH_RES_DIR/libRlUi.dylib \
-    $RASTULLAH_RES_DIR/libRlFmod4Driver.dylib \
     $RASTULLAH_RES_DIR/libboost_filesystem.dylib \
     $RASTULLAH_RES_DIR/libboost_system.dylib \
     $RASTULLAH_RES_DIR/RlScript.bundle"
@@ -28,6 +27,7 @@
     echo Processing $cur
     install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI $cur
     install_name_tool -change libboost_system-mt-1_35.dylib @executable_path/../Resources/libboost_system.dylib $cur
+    install_name_tool -change ./libfmodex.dylib @executable_path/../Resources/libfmodex.dylib $cur
     install_name_tool -change libboost_filesystem-mt-1_35.dylib @executable_path/../Resources/libboost_filesystem.dylib $cur
     install_name_tool -change /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/libruby.1.dylib @executable_path/../Frameworks/libruby.1.dylib $cur
     install_name_tool -change /Users/blakharaz/Library/Frameworks/OgreNewt.framework/Versions/A/OgreNewt @executable_path/../Frameworks/OgreNewt.framework/Versions/A/OgreNewt $cur



From melven at mail.berlios.de  Mon Jan 26 18:27:07 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Mon, 26 Jan 2009 18:27:07 +0100
Subject: [Dsa-hl-svn] r4719 - in rl/branches/newton20: .
	Mac/Rastullah.xcodeproj Mac/tools engine/ai engine/core
	engine/core/include engine/core/include/fmod4driver
	engine/core/src engine/core/src/fmod4driver engine/ui/include
	engine/ui/src tools
Message-ID: <200901261727.n0QHR7id023826@sheep.berlios.de>

Author: melven
Date: 2009-01-26 18:26:56 +0100 (Mon, 26 Jan 2009)
New Revision: 4719

Added:
   rl/branches/newton20/engine/core/include/fmod4driver/
   rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Driver.h
   rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Listener.h
   rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Sound.h
   rl/branches/newton20/engine/core/include/fmod4driver/Fmod4SoundStitching.h
   rl/branches/newton20/engine/core/src/fmod4driver/
   rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Driver.cpp
   rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Listener.cpp
   rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Sound.cpp
   rl/branches/newton20/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp
   rl/branches/newton20/engine/ui/include/Fmod4ConfigComponent.h
   rl/branches/newton20/engine/ui/src/Fmod4ConfigComponent.cpp
Removed:
   rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Driver.h
   rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Listener.h
   rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Sound.h
   rl/branches/newton20/engine/core/include/fmod4driver/Fmod4SoundStitching.h
   rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Driver.cpp
   rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Listener.cpp
   rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Sound.cpp
   rl/branches/newton20/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp
   rl/branches/newton20/plugins/
Modified:
   rl/branches/newton20/Mac/Rastullah.xcodeproj/project.pbxproj
   rl/branches/newton20/Mac/tools/renameinstalldirs.sh
   rl/branches/newton20/Rastullah2005.sln
   rl/branches/newton20/engine/ai/
   rl/branches/newton20/engine/core/CMakeLists.txt
   rl/branches/newton20/engine/core/RlCore2005.vcproj
   rl/branches/newton20/engine/core/include/PhysicsMaterialRaycast.h
   rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp
   rl/branches/newton20/engine/core/src/SoundManager.cpp
   rl/branches/newton20/engine/ui/src/GameSettings.cpp
   rl/branches/newton20/tools/copy_dependencies.bat
   rl/branches/newton20/tools/copy_dlls.bat
Log:
-merged changes from trunk
-PhysicsMaterialRaycast uses now a prefilter for the materials


Modified: rl/branches/newton20/Mac/Rastullah.xcodeproj/project.pbxproj
===================================================================
--- rl/branches/newton20/Mac/Rastullah.xcodeproj/project.pbxproj	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/Mac/Rastullah.xcodeproj/project.pbxproj	2009-01-26 17:26:56 UTC (rev 4719)
@@ -439,18 +439,12 @@
 		483646C40D83D62E00912FEC /* SaveGameFileWriter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485A05820D71EDF20024198D /* SaveGameFileWriter.cpp */; };
 		483646C50D83D62E00912FEC /* SaveGameManager.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485A05830D71EDF20024198D /* SaveGameManager.cpp */; };
 		483646D30D83D6DD00912FEC /* SaveGameFile.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485A05800D71EDF20024198D /* SaveGameFile.cpp */; };
-		48365BE60D8D560E00BF3313 /* Ogre.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 444EAEBE0BD0F09900C6D4A0 /* Ogre.framework */; };
-		48365BE80D8D562D00BF3313 /* libRlCore.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 444EAB610BD0E2DA00C6D4A0 /* libRlCore.dylib */; };
-		48365BE90D8D562D00BF3313 /* libRlUi.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */; };
-		48365BEC0D8D56DC00BF3313 /* libRlCommon.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 444EAAB20BD0E0FB00C6D4A0 /* libRlCommon.dylib */; };
-		48365C950D8D56EA00BF3313 /* CEGUI.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 444EAEBD0BD0F09900C6D4A0 /* CEGUI.framework */; };
 		4836CBC90D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836CBCA0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836CBCB0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836CBCC0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836CBCD0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836CBCE0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
-		4836CBCF0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 4836CBC80D8FB0BE002FE5D7 /* Xerces.framework */; };
 		4836F8BC0D885AAA00E3632F /* libruby.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 483646A10D83D57800912FEC /* libruby.dylib */; };
 		48380B190D800EED0013EE0C /* StartAnimationJob.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48380B180D800EED0013EE0C /* StartAnimationJob.cpp */; };
 		48380B1A0D8010ED0013EE0C /* TimeSource.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 485A05850D71EDF20024198D /* TimeSource.cpp */; };
@@ -522,18 +516,6 @@
 		483D31800D85B3B7003477A0 /* SimpleVehicle.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D31710D85B3B7003477A0 /* SimpleVehicle.cpp */; };
 		483D31810D85B3B7003477A0 /* stdinc.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D31720D85B3B7003477A0 /* stdinc.cpp */; };
 		483D31820D85B3B7003477A0 /* WalkPathBehaviour.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D31730D85B3B7003477A0 /* WalkPathBehaviour.cpp */; };
-		483D869D0D8C3DA200F3629E /* Fmod4ConfigComponent.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D868C0D8C3DA200F3629E /* Fmod4ConfigComponent.h */; };
-		483D869E0D8C3DA200F3629E /* Fmod4Driver.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D868D0D8C3DA200F3629E /* Fmod4Driver.h */; };
-		483D869F0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D868E0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h */; };
-		483D86A00D8C3DA200F3629E /* Fmod4Listener.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D868F0D8C3DA200F3629E /* Fmod4Listener.h */; };
-		483D86A10D8C3DA200F3629E /* Fmod4Sound.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D86900D8C3DA200F3629E /* Fmod4Sound.h */; };
-		483D86A20D8C3DA200F3629E /* Fmod4SoundStitching.h in Headers */ = {isa = PBXBuildFile; fileRef = 483D86910D8C3DA200F3629E /* Fmod4SoundStitching.h */; };
-		483D86A30D8C3DA200F3629E /* Fmod4ConfigComponent.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D86960D8C3DA200F3629E /* Fmod4ConfigComponent.cpp */; };
-		483D86A40D8C3DA200F3629E /* Fmod4Driver.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D86970D8C3DA200F3629E /* Fmod4Driver.cpp */; };
-		483D86A50D8C3DA200F3629E /* Fmod4DriverDllMain.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D86980D8C3DA200F3629E /* Fmod4DriverDllMain.cpp */; };
-		483D86A60D8C3DA200F3629E /* Fmod4Listener.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D86990D8C3DA200F3629E /* Fmod4Listener.cpp */; };
-		483D86A70D8C3DA200F3629E /* Fmod4Sound.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D869A0D8C3DA200F3629E /* Fmod4Sound.cpp */; };
-		483D86A80D8C3DA200F3629E /* Fmod4SoundStitching.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 483D869B0D8C3DA200F3629E /* Fmod4SoundStitching.cpp */; };
 		483D87CE0D8C564400F3629E /* libRlScript.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48570C1B0D8A6C5400096E35 /* libRlScript.dylib */; };
 		484D8D0B0E1E05F400BCFC2B /* OgreCEGUIRenderer.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 444EB3720BD1784A00C6D4A0 /* OgreCEGUIRenderer.framework */; };
 		484D8D0C0E1E05F400BCFC2B /* OpenSteer.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 444EB0DA0BD119BB00C6D4A0 /* OpenSteer.framework */; };
@@ -548,7 +530,6 @@
 		484D92210E1E078100BCFC2B /* libRlRules.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 444EAC370BD0E44900C6D4A0 /* libRlRules.dylib */; };
 		484D92220E1E078100BCFC2B /* libRlUi.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */; };
 		484D92230E1E078100BCFC2B /* libRlScript.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48570C1B0D8A6C5400096E35 /* libRlScript.dylib */; };
-		484D92240E1E078100BCFC2B /* RlFmod4Driver.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */; };
 		484D92250E1E078100BCFC2B /* RlScript.bundle in Resources */ = {isa = PBXBuildFile; fileRef = 483D87C90D8C55E500F3629E /* RlScript.bundle */; };
 		484FE6BA0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		484FE6BB0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
@@ -557,7 +538,6 @@
 		484FE6BE0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		484FE6BF0E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		484FE6C00E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
-		484FE6C10E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		484FE6C20E17BC8800FA880F /* Carbon.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 484FE6B90E17BC8800FA880F /* Carbon.framework */; };
 		48500B790D906A1000EAD8DB /* RlScriptExportsMac.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48500B780D906A1000EAD8DB /* RlScriptExportsMac.cpp */; };
 		4851EA4F0EDDC93300AB79E9 /* NullSoundStitching.h in Headers */ = {isa = PBXBuildFile; fileRef = 4851EA4E0EDDC93300AB79E9 /* NullSoundStitching.h */; };
@@ -665,13 +645,11 @@
 		48A52CBF0E0EF77C008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
 		48A52CC00E0EF77D008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
 		48A52CC20E0EF77E008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
-		48A52CC30E0EF785008DBDD8 /* libboost_system.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48A52CAF0E0EF55C008DBDD8 /* libboost_system.dylib */; };
 		48B006C50ECAC05F008141C2 /* CharacterSelectionWindow.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48B006C40ECAC05F008141C2 /* CharacterSelectionWindow.cpp */; };
 		48B006C80ECAC11D008141C2 /* CharacterSelectionWindow.h in Headers */ = {isa = PBXBuildFile; fileRef = 48B006C70ECAC11D008141C2 /* CharacterSelectionWindow.h */; };
 		48B0B0350E6534690023B198 /* PlaneNodeProcessor.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48B0B0340E6534690023B198 /* PlaneNodeProcessor.cpp */; };
 		48B0B0370E6534810023B198 /* PlaneNodeProcessor.h in Headers */ = {isa = PBXBuildFile; fileRef = 48B0B0360E6534810023B198 /* PlaneNodeProcessor.h */; };
 		48B0B03C0E6535AB0023B198 /* libmeshmagick.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 440785DD0C09D231006E496D /* libmeshmagick.dylib */; };
-		48B0B0490E65BBB30023B198 /* libfmodex.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48B0B0480E65BBB30023B198 /* libfmodex.dylib */; };
 		48B0B04A0E65BBC10023B198 /* libfmodex.dylib in Resources */ = {isa = PBXBuildFile; fileRef = 48B0B0480E65BBB30023B198 /* libfmodex.dylib */; };
 		48B772DD0D58350B000A3B97 /* XmlProcessor.h in Headers */ = {isa = PBXBuildFile; fileRef = 48B772DA0D58350B000A3B97 /* XmlProcessor.h */; };
 		48B772DE0D58350B000A3B97 /* XmlPropertyReader.h in Headers */ = {isa = PBXBuildFile; fileRef = 48B772DB0D58350B000A3B97 /* XmlPropertyReader.h */; };
@@ -680,6 +658,15 @@
 		48B772E40D583521000A3B97 /* XmlPropertyReader.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48B772E10D583521000A3B97 /* XmlPropertyReader.cpp */; };
 		48B772E50D583521000A3B97 /* XmlPropertyWriter.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48B772E20D583521000A3B97 /* XmlPropertyWriter.cpp */; };
 		48C04B8A0E67DF0300CD3A7D /* PCRE.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48C04B890E67DF0300CD3A7D /* PCRE.framework */; };
+		48CA78CB0F2A511E00F8E471 /* Fmod4Driver.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48CA78C70F2A511E00F8E471 /* Fmod4Driver.cpp */; };
+		48CA78CC0F2A511E00F8E471 /* Fmod4Listener.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48CA78C80F2A511E00F8E471 /* Fmod4Listener.cpp */; };
+		48CA78CD0F2A511E00F8E471 /* Fmod4Sound.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48CA78C90F2A511E00F8E471 /* Fmod4Sound.cpp */; };
+		48CA78CE0F2A511E00F8E471 /* Fmod4SoundStitching.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 48CA78CA0F2A511E00F8E471 /* Fmod4SoundStitching.cpp */; };
+		48CA78D30F2A513100F8E471 /* Fmod4Driver.h in Headers */ = {isa = PBXBuildFile; fileRef = 48CA78CF0F2A513100F8E471 /* Fmod4Driver.h */; };
+		48CA78D40F2A513100F8E471 /* Fmod4Listener.h in Headers */ = {isa = PBXBuildFile; fileRef = 48CA78D00F2A513100F8E471 /* Fmod4Listener.h */; };
+		48CA78D50F2A513100F8E471 /* Fmod4Sound.h in Headers */ = {isa = PBXBuildFile; fileRef = 48CA78D10F2A513100F8E471 /* Fmod4Sound.h */; };
+		48CA78D60F2A513100F8E471 /* Fmod4SoundStitching.h in Headers */ = {isa = PBXBuildFile; fileRef = 48CA78D20F2A513100F8E471 /* Fmod4SoundStitching.h */; };
+		48CA78D80F2A51A400F8E471 /* libfmodex.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 48CA78D70F2A51A400F8E471 /* libfmodex.dylib */; };
 		48CFBF8F0E2E869000CD0C51 /* FreeType.framework in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 48CFBF8E0E2E869000CD0C51 /* FreeType.framework */; };
 		48D0BDC70E23375E00863824 /* libruby.dylib in Copy Frameworks */ = {isa = PBXBuildFile; fileRef = 483646A10D83D57800912FEC /* libruby.dylib */; };
 		48D0BE2C0E273C5E00863824 /* SaveAble.h in Headers */ = {isa = PBXBuildFile; fileRef = 48D0BE280E273C5E00863824 /* SaveAble.h */; };
@@ -824,20 +811,6 @@
 			remoteGlobalIDString = 444EAAB10BD0E0FB00C6D4A0;
 			remoteInfo = RlCommon;
 		};
-		483B6A010D8D4C0A00C4C190 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 20286C28FDCF999611CA2CEA /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 483D866F0D8C3A3300F3629E;
-			remoteInfo = RlFmod4Driver;
-		};
-		483B6A040D8D4C2700C4C190 /* PBXContainerItemProxy */ = {
-			isa = PBXContainerItemProxy;
-			containerPortal = 20286C28FDCF999611CA2CEA /* Project object */;
-			proxyType = 1;
-			remoteGlobalIDString = 444EAC3D0BD0E46000C6D4A0;
-			remoteInfo = RlUi;
-		};
 		483D87D70D8C566400F3629E /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 20286C28FDCF999611CA2CEA /* Project object */;
@@ -852,6 +825,13 @@
 			remoteGlobalIDString = 48570C1A0D8A6C5400096E35;
 			remoteInfo = RlScript;
 		};
+		48CA789F0F2218BF00F8E471 /* PBXContainerItemProxy */ = {
+			isa = PBXContainerItemProxy;
+			containerPortal = 20286C28FDCF999611CA2CEA /* Project object */;
+			proxyType = 1;
+			remoteGlobalIDString = 8D0C4E890486CD37000505A6 /* Rastullah */;
+			remoteInfo = Rastullah;
+		};
 /* End PBXContainerItemProxy section */
 
 /* Begin PBXCopyFilesBuildPhase section */
@@ -1402,19 +1382,6 @@
 		483D31710D85B3B7003477A0 /* SimpleVehicle.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = SimpleVehicle.cpp; path = ../engine/ai/src/SimpleVehicle.cpp; sourceTree = SOURCE_ROOT; };
 		483D31720D85B3B7003477A0 /* stdinc.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = stdinc.cpp; path = ../engine/ai/src/stdinc.cpp; sourceTree = SOURCE_ROOT; };
 		483D31730D85B3B7003477A0 /* WalkPathBehaviour.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = WalkPathBehaviour.cpp; path = ../engine/ai/src/WalkPathBehaviour.cpp; sourceTree = SOURCE_ROOT; };
-		483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; includeInIndex = 0; path = RlFmod4Driver.bundle; sourceTree = BUILT_PRODUCTS_DIR; };
-		483D868C0D8C3DA200F3629E /* Fmod4ConfigComponent.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4ConfigComponent.h; sourceTree = "<group>"; };
-		483D868D0D8C3DA200F3629E /* Fmod4Driver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4Driver.h; sourceTree = "<group>"; };
-		483D868E0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4DriverPrerequisites.h; sourceTree = "<group>"; };
-		483D868F0D8C3DA200F3629E /* Fmod4Listener.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4Listener.h; sourceTree = "<group>"; };
-		483D86900D8C3DA200F3629E /* Fmod4Sound.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4Sound.h; sourceTree = "<group>"; };
-		483D86910D8C3DA200F3629E /* Fmod4SoundStitching.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = Fmod4SoundStitching.h; sourceTree = "<group>"; };
-		483D86960D8C3DA200F3629E /* Fmod4ConfigComponent.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4ConfigComponent.cpp; sourceTree = "<group>"; };
-		483D86970D8C3DA200F3629E /* Fmod4Driver.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4Driver.cpp; sourceTree = "<group>"; };
-		483D86980D8C3DA200F3629E /* Fmod4DriverDllMain.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4DriverDllMain.cpp; sourceTree = "<group>"; };
-		483D86990D8C3DA200F3629E /* Fmod4Listener.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4Listener.cpp; sourceTree = "<group>"; };
-		483D869A0D8C3DA200F3629E /* Fmod4Sound.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4Sound.cpp; sourceTree = "<group>"; };
-		483D869B0D8C3DA200F3629E /* Fmod4SoundStitching.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = Fmod4SoundStitching.cpp; sourceTree = "<group>"; };
 		483D87C90D8C55E500F3629E /* RlScript.bundle */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; includeInIndex = 0; path = RlScript.bundle; sourceTree = BUILT_PRODUCTS_DIR; };
 		484FE6B90E17BC8800FA880F /* Carbon.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Carbon.framework; path = /System/Library/Frameworks/Carbon.framework; sourceTree = "<absolute>"; };
 		48500B780D906A1000EAD8DB /* RlScriptExportsMac.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = RlScriptExportsMac.cpp; path = ../engine/script/swig/RlScriptExportsMac.cpp; sourceTree = SOURCE_ROOT; };
@@ -1504,6 +1471,17 @@
 		48B772E10D583521000A3B97 /* XmlPropertyReader.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = XmlPropertyReader.cpp; path = ../engine/common/src/XmlPropertyReader.cpp; sourceTree = SOURCE_ROOT; };
 		48B772E20D583521000A3B97 /* XmlPropertyWriter.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = XmlPropertyWriter.cpp; path = ../engine/common/src/XmlPropertyWriter.cpp; sourceTree = SOURCE_ROOT; };
 		48C04B890E67DF0300CD3A7D /* PCRE.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = PCRE.framework; path = /Library/Frameworks/PCRE.framework; sourceTree = "<absolute>"; };
+		48CA78990F2218B100F8E471 /* RastullahDeploy.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = RastullahDeploy.app; sourceTree = BUILT_PRODUCTS_DIR; };
+		48CA789B0F2218B100F8E471 /* Rastullah complete-Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = "Rastullah complete-Info.plist"; path = "../Rastullah complete-Info.plist"; sourceTree = "<group>"; };
+		48CA78C70F2A511E00F8E471 /* Fmod4Driver.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = Fmod4Driver.cpp; path = fmod4driver/Fmod4Driver.cpp; sourceTree = "<group>"; };
+		48CA78C80F2A511E00F8E471 /* Fmod4Listener.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = Fmod4Listener.cpp; path = fmod4driver/Fmod4Listener.cpp; sourceTree = "<group>"; };
+		48CA78C90F2A511E00F8E471 /* Fmod4Sound.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = Fmod4Sound.cpp; path = fmod4driver/Fmod4Sound.cpp; sourceTree = "<group>"; };
+		48CA78CA0F2A511E00F8E471 /* Fmod4SoundStitching.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; name = Fmod4SoundStitching.cpp; path = fmod4driver/Fmod4SoundStitching.cpp; sourceTree = "<group>"; };
+		48CA78CF0F2A513100F8E471 /* Fmod4Driver.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Fmod4Driver.h; path = fmod4driver/Fmod4Driver.h; sourceTree = "<group>"; };
+		48CA78D00F2A513100F8E471 /* Fmod4Listener.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Fmod4Listener.h; path = fmod4driver/Fmod4Listener.h; sourceTree = "<group>"; };
+		48CA78D10F2A513100F8E471 /* Fmod4Sound.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Fmod4Sound.h; path = fmod4driver/Fmod4Sound.h; sourceTree = "<group>"; };
+		48CA78D20F2A513100F8E471 /* Fmod4SoundStitching.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; name = Fmod4SoundStitching.h; path = fmod4driver/Fmod4SoundStitching.h; sourceTree = "<group>"; };
+		48CA78D70F2A51A400F8E471 /* libfmodex.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libfmodex.dylib; path = "FMOD Programmers API/api/lib/libfmodex.dylib"; sourceTree = SYSTEM_DEVELOPER_DIR; };
 		48CFBF8E0E2E869000CD0C51 /* FreeType.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = FreeType.framework; path = /Library/Frameworks/FreeType.framework; sourceTree = "<absolute>"; };
 		48D0BE280E273C5E00863824 /* SaveAble.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SaveAble.h; sourceTree = "<group>"; };
 		48D0BE290E273C5E00863824 /* SaveAbleCollection.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = SaveAbleCollection.h; sourceTree = "<group>"; };
@@ -1560,6 +1538,7 @@
 				4836CBCD0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */,
 				48A52CB10E0EF55C008DBDD8 /* libboost_system.dylib in Frameworks */,
 				484FE6BC0E17BC8800FA880F /* Carbon.framework in Frameworks */,
+				48CA78D80F2A51A400F8E471 /* libfmodex.dylib in Frameworks */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -1616,22 +1595,6 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		483D866E0D8C3A3300F3629E /* Frameworks */ = {
-			isa = PBXFrameworksBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				48365BE60D8D560E00BF3313 /* Ogre.framework in Frameworks */,
-				48365BE80D8D562D00BF3313 /* libRlCore.dylib in Frameworks */,
-				48365BE90D8D562D00BF3313 /* libRlUi.dylib in Frameworks */,
-				48365BEC0D8D56DC00BF3313 /* libRlCommon.dylib in Frameworks */,
-				48365C950D8D56EA00BF3313 /* CEGUI.framework in Frameworks */,
-				4836CBCF0D8FB0BE002FE5D7 /* Xerces.framework in Frameworks */,
-				48A52CC30E0EF785008DBDD8 /* libboost_system.dylib in Frameworks */,
-				484FE6C10E17BC8800FA880F /* Carbon.framework in Frameworks */,
-				48B0B0490E65BBB30023B198 /* libfmodex.dylib in Frameworks */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
 		483D87C70D8C55E500F3629E /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
@@ -1661,6 +1624,13 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
+		48CA78970F2218B100F8E471 /* Frameworks */ = {
+			isa = PBXFrameworksBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+		};
 		8D0C4E910486CD37000505A6 /* Frameworks */ = {
 			isa = PBXFrameworksBuildPhase;
 			buildActionMask = 2147483647;
@@ -1695,8 +1665,8 @@
 				444EAC370BD0E44900C6D4A0 /* libRlRules.dylib */,
 				444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */,
 				48570C1B0D8A6C5400096E35 /* libRlScript.dylib */,
-				483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */,
 				483D87C90D8C55E500F3629E /* RlScript.bundle */,
+				48CA78990F2218B100F8E471 /* RastullahDeploy.app */,
 			);
 			name = Products;
 			sourceTree = "<group>";
@@ -1704,6 +1674,7 @@
 		20286C29FDCF999611CA2CEA /* Rastullah */ = {
 			isa = PBXGroup;
 			children = (
+				48CA78D70F2A51A400F8E471 /* libfmodex.dylib */,
 				20286C2AFDCF999611CA2CEA /* Engine */,
 				48D401810D9E483200AE5340 /* modules */,
 				20286C2CFDCF999611CA2CEA /* Resources */,
@@ -1720,7 +1691,6 @@
 				444EAC220BD0E3E000C6D4A0 /* RlAi */,
 				444EAB1F0BD0E25C00C6D4A0 /* RlCommon */,
 				444EAB200BD0E27400C6D4A0 /* RlCore */,
-				483D86890D8C3DA200F3629E /* RlFmod4Driver */,
 				444EAC590BD0E50600C6D4A0 /* RlRules */,
 				444EAE600BD0E66500C6D4A0 /* RlScript */,
 				444EAC570BD0E4CD00C6D4A0 /* RlUi */,
@@ -1980,45 +1950,13 @@
 			name = swig;
 			sourceTree = "<group>";
 		};
-		483D86890D8C3DA200F3629E /* RlFmod4Driver */ = {
-			isa = PBXGroup;
-			children = (
-				483D868B0D8C3DA200F3629E /* include */,
-				483D86950D8C3DA200F3629E /* src */,
-			);
-			name = RlFmod4Driver;
-			path = ../plugins/fmod4driver;
-			sourceTree = SOURCE_ROOT;
-		};
-		483D868B0D8C3DA200F3629E /* include */ = {
-			isa = PBXGroup;
-			children = (
-				483D868C0D8C3DA200F3629E /* Fmod4ConfigComponent.h */,
-				483D868D0D8C3DA200F3629E /* Fmod4Driver.h */,
-				483D868E0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h */,
-				483D868F0D8C3DA200F3629E /* Fmod4Listener.h */,
-				483D86900D8C3DA200F3629E /* Fmod4Sound.h */,
-				483D86910D8C3DA200F3629E /* Fmod4SoundStitching.h */,
-			);
-			path = include;
-			sourceTree = "<group>";
-		};
-		483D86950D8C3DA200F3629E /* src */ = {
-			isa = PBXGroup;
-			children = (
-				483D86960D8C3DA200F3629E /* Fmod4ConfigComponent.cpp */,
-				483D86970D8C3DA200F3629E /* Fmod4Driver.cpp */,
-				483D86980D8C3DA200F3629E /* Fmod4DriverDllMain.cpp */,
-				483D86990D8C3DA200F3629E /* Fmod4Listener.cpp */,
-				483D869A0D8C3DA200F3629E /* Fmod4Sound.cpp */,
-				483D869B0D8C3DA200F3629E /* Fmod4SoundStitching.cpp */,
-			);
-			path = src;
-			sourceTree = "<group>";
-		};
 		4851EA4C0EDDC82400AB79E9 /* Source */ = {
 			isa = PBXGroup;
 			children = (
+				48CA78C70F2A511E00F8E471 /* Fmod4Driver.cpp */,
+				48CA78C80F2A511E00F8E471 /* Fmod4Listener.cpp */,
+				48CA78C90F2A511E00F8E471 /* Fmod4Sound.cpp */,
+				48CA78CA0F2A511E00F8E471 /* Fmod4SoundStitching.cpp */,
 				48D0BE3C0E273CB000863824 /* SaveAble.cpp */,
 				48D0BE3D0E273CB000863824 /* SaveAbleCollection.cpp */,
 				48D0BE3E0E273CB000863824 /* SaveAbleFactory.cpp */,
@@ -2104,6 +2042,10 @@
 		4851EA4D0EDDC8CA00AB79E9 /* Header */ = {
 			isa = PBXGroup;
 			children = (
+				48CA78CF0F2A513100F8E471 /* Fmod4Driver.h */,
+				48CA78D00F2A513100F8E471 /* Fmod4Listener.h */,
+				48CA78D10F2A513100F8E471 /* Fmod4Sound.h */,
+				48CA78D20F2A513100F8E471 /* Fmod4SoundStitching.h */,
 				48D0BE280E273C5E00863824 /* SaveAble.h */,
 				48D0BE290E273C5E00863824 /* SaveAbleCollection.h */,
 				48D0BE2A0E273C5E00863824 /* SaveAbleFactory.h */,
@@ -2340,6 +2282,7 @@
 		48CFBFD60E2E87A800CD0C51 /* Mac Scripts */ = {
 			isa = PBXGroup;
 			children = (
+				48CA789B0F2218B100F8E471 /* Rastullah complete-Info.plist */,
 				48EFE0D70E8B6EB1007EB7F8 /* mkdmg.sh */,
 				48EFE0D80E8B6EB1007EB7F8 /* renameinstalldirs.sh */,
 			);
@@ -2684,6 +2627,10 @@
 				48D0BE2E0E273C5E00863824 /* SaveAbleFactory.h in Headers */,
 				48D0BE2F0E273C5E00863824 /* SaveAbleManager.h in Headers */,
 				4851EA4F0EDDC93300AB79E9 /* NullSoundStitching.h in Headers */,
+				48CA78D30F2A513100F8E471 /* Fmod4Driver.h in Headers */,
+				48CA78D40F2A513100F8E471 /* Fmod4Listener.h in Headers */,
+				48CA78D50F2A513100F8E471 /* Fmod4Sound.h in Headers */,
+				48CA78D60F2A513100F8E471 /* Fmod4SoundStitching.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -2879,19 +2826,6 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		483D866C0D8C3A3300F3629E /* Headers */ = {
-			isa = PBXHeadersBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				483D869D0D8C3DA200F3629E /* Fmod4ConfigComponent.h in Headers */,
-				483D869E0D8C3DA200F3629E /* Fmod4Driver.h in Headers */,
-				483D869F0D8C3DA200F3629E /* Fmod4DriverPrerequisites.h in Headers */,
-				483D86A00D8C3DA200F3629E /* Fmod4Listener.h in Headers */,
-				483D86A10D8C3DA200F3629E /* Fmod4Sound.h in Headers */,
-				483D86A20D8C3DA200F3629E /* Fmod4SoundStitching.h in Headers */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
 		483D87C50D8C55E500F3629E /* Headers */ = {
 			isa = PBXHeadersBuildPhase;
 			buildActionMask = 2147483647;
@@ -3020,24 +2954,6 @@
 			productReference = 444EAC3E0BD0E46000C6D4A0 /* libRlUi.dylib */;
 			productType = "com.apple.product-type.library.dynamic";
 		};
-		483D866F0D8C3A3300F3629E /* RlFmod4Driver */ = {
-			isa = PBXNativeTarget;
-			buildConfigurationList = 483D86750D8C3A5F00F3629E /* Build configuration list for PBXNativeTarget "RlFmod4Driver" */;
-			buildPhases = (
-				483D866C0D8C3A3300F3629E /* Headers */,
-				483D866D0D8C3A3300F3629E /* Sources */,
-				483D866E0D8C3A3300F3629E /* Frameworks */,
-			);
-			buildRules = (
-			);
-			dependencies = (
-				483B6A050D8D4C2700C4C190 /* PBXTargetDependency */,
-			);
-			name = RlFmod4Driver;
-			productName = RlFmod4Driver;
-			productReference = 483D86700D8C3A3300F3629E /* RlFmod4Driver.bundle */;
-			productType = "com.apple.product-type.library.dynamic";
-		};
 		483D87C80D8C55E500F3629E /* RlScriptExports */ = {
 			isa = PBXNativeTarget;
 			buildConfigurationList = 483D87D60D8C564E00F3629E /* Build configuration list for PBXNativeTarget "RlScriptExports" */;
@@ -3079,6 +2995,23 @@
 			productReference = 48570C1B0D8A6C5400096E35 /* libRlScript.dylib */;
 			productType = "com.apple.product-type.library.dynamic";
 		};
+		48CA78980F2218B100F8E471 /* RastullahDeploy */ = {
+			isa = PBXNativeTarget;
+			buildConfigurationList = 48CA789E0F2218B300F8E471 /* Build configuration list for PBXNativeTarget "RastullahDeploy" */;
+			buildPhases = (
+				48CA78970F2218B100F8E471 /* Frameworks */,
+				48CA78BF0F221DD700F8E471 /* ShellScript */,
+			);
+			buildRules = (
+			);
+			dependencies = (
+				48CA78A00F2218BF00F8E471 /* PBXTargetDependency */,
+			);
+			name = RastullahDeploy;
+			productName = "Rastullah complete";
+			productReference = 48CA78990F2218B100F8E471 /* RastullahDeploy.app */;
+			productType = "com.apple.product-type.application";
+		};
 		8D0C4E890486CD37000505A6 /* Rastullah */ = {
 			isa = PBXNativeTarget;
 			buildConfigurationList = C0E91AC508A95435008D54AB /* Build configuration list for PBXNativeTarget "Rastullah" */;
@@ -3092,7 +3025,6 @@
 			buildRules = (
 			);
 			dependencies = (
-				483B6A020D8D4C0A00C4C190 /* PBXTargetDependency */,
 				483D87D80D8C566400F3629E /* PBXTargetDependency */,
 				444EAC1F0BD0E3A800C6D4A0 /* PBXTargetDependency */,
 				444EAC210BD0E3A800C6D4A0 /* PBXTargetDependency */,
@@ -3129,8 +3061,8 @@
 				444EAC360BD0E44900C6D4A0 /* RlRules */,
 				444EAC3D0BD0E46000C6D4A0 /* RlUi */,
 				48570C1A0D8A6C5400096E35 /* RlScript */,
-				483D866F0D8C3A3300F3629E /* RlFmod4Driver */,
 				483D87C80D8C55E500F3629E /* RlScriptExports */,
+				48CA78980F2218B100F8E471 /* RastullahDeploy */,
 			);
 		};
 /* End PBXProject section */
@@ -3150,7 +3082,6 @@
 				484D92220E1E078100BCFC2B /* libRlUi.dylib in Resources */,
 				48B0B04A0E65BBC10023B198 /* libfmodex.dylib in Resources */,
 				484D92230E1E078100BCFC2B /* libRlScript.dylib in Resources */,
-				484D92240E1E078100BCFC2B /* RlFmod4Driver.bundle in Resources */,
 				484D92250E1E078100BCFC2B /* RlScript.bundle in Resources */,
 				8D0C4E8D0486CD37000505A6 /* InfoPlist.strings in Resources */,
 				8D0C4E8E0486CD37000505A6 /* main.nib in Resources */,
@@ -3173,6 +3104,19 @@
 			shellPath = /bin/sh;
 			shellScript = "pwd\ncd ../engine/script/swig\n/usr/local/bin/swig -ruby -minherit -c++ -Fmicrosoft -addextern RlExports.i";
 		};
+		48CA78BF0F221DD700F8E471 /* ShellScript */ = {
+			isa = PBXShellScriptBuildPhase;
+			buildActionMask = 2147483647;
+			files = (
+			);
+			inputPaths = (
+			);
+			outputPaths = (
+			);
+			runOnlyForDeploymentPostprocessing = 0;
+			shellPath = /bin/sh;
+			shellScript = "cp -r ${BUILT_PRODUCTS_DIR}/Rastullah.app/* ${BUILT_PRODUCTS_DIR}/RastullahDeploy.app\nsvn export http://svn.berlios.de/svnroot/repos/dsa-hl/modules ${BUILT_PRODUCTS_DIR}/RastullahDeploy.app/Contents/Resources/modules";
+		};
 		48D0BDF20E2342F600863824 /* Rename Libs */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
@@ -3297,6 +3241,10 @@
 				48D0BE410E273CB000863824 /* SaveAbleCollection.cpp in Sources */,
 				48D0BE420E273CB000863824 /* SaveAbleFactory.cpp in Sources */,
 				48D0BE430E273CB000863824 /* SaveAbleManager.cpp in Sources */,
+				48CA78CB0F2A511E00F8E471 /* Fmod4Driver.cpp in Sources */,
+				48CA78CC0F2A511E00F8E471 /* Fmod4Listener.cpp in Sources */,
+				48CA78CD0F2A511E00F8E471 /* Fmod4Sound.cpp in Sources */,
+				48CA78CE0F2A511E00F8E471 /* Fmod4SoundStitching.cpp in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
@@ -3477,19 +3425,6 @@
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
-		483D866D0D8C3A3300F3629E /* Sources */ = {
-			isa = PBXSourcesBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-				483D86A30D8C3DA200F3629E /* Fmod4ConfigComponent.cpp in Sources */,
-				483D86A40D8C3DA200F3629E /* Fmod4Driver.cpp in Sources */,
-				483D86A50D8C3DA200F3629E /* Fmod4DriverDllMain.cpp in Sources */,
-				483D86A60D8C3DA200F3629E /* Fmod4Listener.cpp in Sources */,
-				483D86A70D8C3DA200F3629E /* Fmod4Sound.cpp in Sources */,
-				483D86A80D8C3DA200F3629E /* Fmod4SoundStitching.cpp in Sources */,
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
 		483D87C60D8C55E500F3629E /* Sources */ = {
 			isa = PBXSourcesBuildPhase;
 			buildActionMask = 2147483647;
@@ -3614,16 +3549,6 @@
 			target = 444EAAB10BD0E0FB00C6D4A0 /* RlCommon */;
 			targetProxy = 483B69CB0D8D4A3500C4C190 /* PBXContainerItemProxy */;
 		};
-		483B6A020D8D4C0A00C4C190 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 483D866F0D8C3A3300F3629E /* RlFmod4Driver */;
-			targetProxy = 483B6A010D8D4C0A00C4C190 /* PBXContainerItemProxy */;
-		};
-		483B6A050D8D4C2700C4C190 /* PBXTargetDependency */ = {
-			isa = PBXTargetDependency;
-			target = 444EAC3D0BD0E46000C6D4A0 /* RlUi */;
-			targetProxy = 483B6A040D8D4C2700C4C190 /* PBXContainerItemProxy */;
-		};
 		483D87D80D8C566400F3629E /* PBXTargetDependency */ = {
 			isa = PBXTargetDependency;
 			target = 483D87C80D8C55E500F3629E /* RlScriptExports */;
@@ -3634,6 +3559,11 @@
 			target = 48570C1A0D8A6C5400096E35 /* RlScript */;
 			targetProxy = 48570C1E0D8A6C6900096E35 /* PBXContainerItemProxy */;
 		};
+		48CA78A00F2218BF00F8E471 /* PBXTargetDependency */ = {
+			isa = PBXTargetDependency;
+			target = 8D0C4E890486CD37000505A6 /* Rastullah */;
+			targetProxy = 48CA789F0F2218BF00F8E471 /* PBXContainerItemProxy */;
+		};
 /* End PBXTargetDependency section */
 
 /* Begin PBXVariantGroup section */
@@ -3750,15 +3680,19 @@
 					/usr/local/include/meshmagick,
 					/System/Library/Frameworks/Ruby.framework/Headers,
 					/Library/Frameworks/Xerces.framework/Headers,
+					"$(HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
 				);
+				HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/inc\"";
 				INSTALL_PATH = "@executable_path/../Resources";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
 					/System/Library/Frameworks/Ruby.framework/Versions/Current/usr/lib,
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
 					/opt/local/lib,
+					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2)",
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Ruby.framework/Versions/1.8/usr/lib\"";
+				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
 				MACH_O_TYPE = mh_dylib;
 				OTHER_LDFLAGS = "";
 				PREBINDING = NO;
@@ -3785,14 +3719,15 @@
 				GCC_PRECOMPILE_PREFIX_HEADER = YES;
 				GCC_PREFIX_HEADER = ../engine/core/include/stdinc.h;
 				HEADER_SEARCH_PATHS = (
-					"/usr/local/include/boost-1_33_1",
+					"$(inherited)",
 					"/usr/local/lib/ruby/1.8/i686-darwin8.9.1",
 					/usr/local/include/OIS,
 					/usr/local/include/meshmagick,
-					/sw/include,
-					/usr/local/include,
 					/System/Library/Frameworks/Ruby.framework/Headers,
+					/Library/Frameworks/Xerces.framework/Headers,
+					"$(HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
 				);
+				HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/inc\"";
 				INSTALL_PATH = "@executable_path/../Resources";
 				LIBRARY_SEARCH_PATHS = (
 					"$(inherited)",
@@ -3800,8 +3735,10 @@
 					/System/Library/Frameworks/Ruby.framework/Versions/Current/usr/lib,
 					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
 					/opt/local/lib,
+					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2)",
 				);
 				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Ruby.framework/Versions/1.8/usr/lib\"";
+				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
 				OTHER_LDFLAGS = "";
 				PREBINDING = NO;
 				PRODUCT_NAME = RlCore;
@@ -4034,79 +3971,6 @@
 			};
 			name = Release;
 		};
-		483D86710D8C3A3400F3629E /* Debug */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				COPY_PHASE_STRIP = NO;
-				DYLIB_COMPATIBILITY_VERSION = "";
-				DYLIB_CURRENT_VERSION = "";
-				EXECUTABLE_EXTENSION = bundle;
-				EXECUTABLE_PREFIX = "";
-				FRAMEWORK_SEARCH_PATHS = (
-					"$(inherited)",
-					"$(FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-				);
-				FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Carbon.framework/Versions/A/Frameworks\"";
-				GCC_DYNAMIC_NO_PIC = NO;
-				GCC_ENABLE_FIX_AND_CONTINUE = YES;
-				GCC_MODEL_TUNING = G5;
-				GCC_OPTIMIZATION_LEVEL = 0;
-				HEADER_SEARCH_PATHS = (
-					"$(inherited)",
-					"$(HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-				);
-				HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/inc\"";
-				INSTALL_PATH = "@executable_path/../Resources";
-				LIBRARY_SEARCH_PATHS = (
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2)",
-				);
-				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/lib\"";
-				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
-				MACH_O_TYPE = mh_bundle;
-				OTHER_LDFLAGS = "-lfmodex";
-				PREBINDING = NO;
-				PRODUCT_NAME = RlFmod4Driver;
-				ZERO_LINK = NO;
-			};
-			name = Debug;
-		};
-		483D86720D8C3A3400F3629E /* Release */ = {
-			isa = XCBuildConfiguration;
-			buildSettings = {
-				COPY_PHASE_STRIP = YES;
-				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
-				DYLIB_COMPATIBILITY_VERSION = "";
-				DYLIB_CURRENT_VERSION = "";
-				EXECUTABLE_EXTENSION = bundle;
-				EXECUTABLE_PREFIX = "";
-				FRAMEWORK_SEARCH_PATHS = (
-					"$(inherited)",
-					"$(FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-				);
-				FRAMEWORK_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"$(SYSTEM_LIBRARY_DIR)/Frameworks/Carbon.framework/Versions/A/Frameworks\"";
-				GCC_ENABLE_FIX_AND_CONTINUE = NO;
-				GCC_MODEL_TUNING = G5;
-				HEADER_SEARCH_PATHS = (
-					"$(inherited)",
-					"$(HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-				);
-				HEADER_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/inc\"";
-				INSTALL_PATH = "@executable_path/../Resources";
-				LIBRARY_SEARCH_PATHS = (
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1)",
-					"$(LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2)",
-				);
-				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_1 = "\"/Developer/FMOD Programmers API/api/lib\"";
-				LIBRARY_SEARCH_PATHS_QUOTED_FOR_TARGET_2 = "\"$(DEVELOPER_DIR)/FMOD Programmers API/api/lib\"";
-				MACH_O_TYPE = mh_bundle;
-				OTHER_LDFLAGS = "-lfmodex";
-				PREBINDING = NO;
-				PRODUCT_NAME = RlFmod4Driver;
-				ZERO_LINK = NO;
-			};
-			name = Release;
-		};
 		483D87CA0D8C55E500F3629E /* Debug */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
@@ -4237,6 +4101,54 @@
 			};
 			name = Release;
 		};
+		48CA789C0F2218B200F8E471 /* Debug */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				COPY_PHASE_STRIP = NO;
+				GCC_DYNAMIC_NO_PIC = NO;
+				GCC_ENABLE_FIX_AND_CONTINUE = YES;
+				GCC_MODEL_TUNING = G5;
+				GCC_OPTIMIZATION_LEVEL = 0;
+				GCC_PRECOMPILE_PREFIX_HEADER = YES;
+				GCC_PREFIX_HEADER = "$(SYSTEM_LIBRARY_DIR)/Frameworks/AppKit.framework/Headers/AppKit.h";
+				INFOPLIST_FILE = "Rastullah complete-Info.plist";
+				INSTALL_PATH = "$(HOME)/Applications";
+				OTHER_LDFLAGS = (
+					"-framework",
+					Foundation,
+					"-framework",
+					AppKit,
+				);
+				PREBINDING = NO;
+				PRODUCT_NAME = RastullahDeploy;
+			};
+			name = Debug;
+		};
+		48CA789D0F2218B200F8E471 /* Release */ = {
+			isa = XCBuildConfiguration;
+			buildSettings = {
+				ALWAYS_SEARCH_USER_PATHS = NO;
+				COPY_PHASE_STRIP = YES;
+				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
+				GCC_ENABLE_FIX_AND_CONTINUE = NO;
+				GCC_MODEL_TUNING = G5;
+				GCC_PRECOMPILE_PREFIX_HEADER = YES;
+				GCC_PREFIX_HEADER = "$(SYSTEM_LIBRARY_DIR)/Frameworks/AppKit.framework/Headers/AppKit.h";
+				INFOPLIST_FILE = "Rastullah complete-Info.plist";
+				INSTALL_PATH = "$(HOME)/Applications";
+				OTHER_LDFLAGS = (
+					"-framework",
+					Foundation,
+					"-framework",
+					AppKit,
+				);
+				PREBINDING = NO;
+				PRODUCT_NAME = RastullahDeploy;
+				ZERO_LINK = NO;
+			};
+			name = Release;
+		};
 		C0E91AC608A95435008D54AB /* Debug */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
@@ -4409,15 +4321,6 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
-		483D86750D8C3A5F00F3629E /* Build configuration list for PBXNativeTarget "RlFmod4Driver" */ = {
-			isa = XCConfigurationList;
-			buildConfigurations = (
-				483D86710D8C3A3400F3629E /* Debug */,
-				483D86720D8C3A3400F3629E /* Release */,
-			);
-			defaultConfigurationIsVisible = 0;
-			defaultConfigurationName = Release;
-		};
 		483D87D60D8C564E00F3629E /* Build configuration list for PBXNativeTarget "RlScriptExports" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (
@@ -4436,6 +4339,15 @@
 			defaultConfigurationIsVisible = 0;
 			defaultConfigurationName = Release;
 		};
+		48CA789E0F2218B300F8E471 /* Build configuration list for PBXNativeTarget "RastullahDeploy" */ = {
+			isa = XCConfigurationList;
+			buildConfigurations = (
+				48CA789C0F2218B200F8E471 /* Debug */,
+				48CA789D0F2218B200F8E471 /* Release */,
+			);
+			defaultConfigurationIsVisible = 0;
+			defaultConfigurationName = Release;
+		};
 		C0E91AC508A95435008D54AB /* Build configuration list for PBXNativeTarget "Rastullah" */ = {
 			isa = XCConfigurationList;
 			buildConfigurations = (

Modified: rl/branches/newton20/Mac/tools/renameinstalldirs.sh
===================================================================
--- rl/branches/newton20/Mac/tools/renameinstalldirs.sh	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/Mac/tools/renameinstalldirs.sh	2009-01-26 17:26:56 UTC (rev 4719)
@@ -17,7 +17,6 @@
     $RASTULLAH_RES_DIR/libRlRules.dylib \
     $RASTULLAH_RES_DIR/libRlScript.dylib \
     $RASTULLAH_RES_DIR/libRlUi.dylib \
-    $RASTULLAH_RES_DIR/libRlFmod4Driver.dylib \
     $RASTULLAH_RES_DIR/libboost_filesystem.dylib \
     $RASTULLAH_RES_DIR/libboost_system.dylib \
     $RASTULLAH_RES_DIR/RlScript.bundle"
@@ -28,6 +27,7 @@
     echo Processing $cur
     install_name_tool -change /Library/Frameworks/CEGUI.framework/Versions/A/CEGUI @executable_path/../Frameworks/CEGUI.framework/Versions/A/CEGUI $cur
     install_name_tool -change libboost_system-mt-1_35.dylib @executable_path/../Resources/libboost_system.dylib $cur
+    install_name_tool -change ./libfmodex.dylib @executable_path/../Resources/libfmodex.dylib $cur
     install_name_tool -change libboost_filesystem-mt-1_35.dylib @executable_path/../Resources/libboost_filesystem.dylib $cur
     install_name_tool -change /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/libruby.1.dylib @executable_path/../Frameworks/libruby.1.dylib $cur
     install_name_tool -change /Users/blakharaz/Library/Frameworks/OgreNewt.framework/Versions/A/OgreNewt @executable_path/../Frameworks/OgreNewt.framework/Versions/A/OgreNewt $cur

Modified: rl/branches/newton20/Rastullah2005.sln
===================================================================
--- rl/branches/newton20/Rastullah2005.sln	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/Rastullah2005.sln	2009-01-26 17:26:56 UTC (rev 4719)
@@ -1,19 +1,35 @@
 Microsoft Visual Studio Solution File, Format Version 9.00
 # Visual Studio 2005
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlCommon", "engine\common\RlCommon2005.vcproj", "{D3185FC6-9384-431A-A237-80284F859B21}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlCore", "engine\core\RlCore2005.vcproj", "{0935F495-4540-40E3-AC8F-AA54C85DC5B2}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlRules", "engine\rules\RlRules2005.vcproj", "{1D1D45B2-A9C3-4D10-93EC-22AE4AA5C070}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
 		{0935F495-4540-40E3-AC8F-AA54C85DC5B2} = {0935F495-4540-40E3-AC8F-AA54C85DC5B2}
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlScript", "engine\script\RlScript2005.vcproj", "{9A41EAE4-302A-4823-8F20-FA1AD58189A1}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{53FE20F3-E726-44FE-BBEC-D29CAE210D25} = {53FE20F3-E726-44FE-BBEC-D29CAE210D25}
 		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
@@ -23,6 +39,10 @@
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlStartup", "engine\startup\RlStartup2005.vcproj", "{B78AEF70-E618-4E9D-BD67-E17995ECF714}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{53FE20F3-E726-44FE-BBEC-D29CAE210D25} = {53FE20F3-E726-44FE-BBEC-D29CAE210D25}
 		{9A41EAE4-302A-4823-8F20-FA1AD58189A1} = {9A41EAE4-302A-4823-8F20-FA1AD58189A1}
@@ -33,6 +53,10 @@
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlUI", "engine\ui\RlUI2005.vcproj", "{53FE20F3-E726-44FE-BBEC-D29CAE210D25}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{C3E78B89-587B-499A-BE7D-4FE8564F0CD7} = {C3E78B89-587B-499A-BE7D-4FE8564F0CD7}
 		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
@@ -41,19 +65,16 @@
 	EndProjectSection
 EndProject
 Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlAI", "engine\ai\RlAI2005.vcproj", "{C3E78B89-587B-499A-BE7D-4FE8564F0CD7}"
+	ProjectSection(WebsiteProperties) = preProject
+		Debug.AspNetCompiler.Debug = "True"
+		Release.AspNetCompiler.Debug = "False"
+	EndProjectSection
 	ProjectSection(ProjectDependencies) = postProject
 		{0935F495-4540-40E3-AC8F-AA54C85DC5B2} = {0935F495-4540-40E3-AC8F-AA54C85DC5B2}
 		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
 		{1D1D45B2-A9C3-4D10-93EC-22AE4AA5C070} = {1D1D45B2-A9C3-4D10-93EC-22AE4AA5C070}
 	EndProjectSection
 EndProject
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "RlFmod4Driver", "plugins\fmod4driver\RlFmod4Driver.vcproj", "{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}"
-	ProjectSection(ProjectDependencies) = postProject
-		{53FE20F3-E726-44FE-BBEC-D29CAE210D25} = {53FE20F3-E726-44FE-BBEC-D29CAE210D25}
-		{D3185FC6-9384-431A-A237-80284F859B21} = {D3185FC6-9384-431A-A237-80284F859B21}
-		{0935F495-4540-40E3-AC8F-AA54C85DC5B2} = {0935F495-4540-40E3-AC8F-AA54C85DC5B2}
-	EndProjectSection
-EndProject
 Global
 	GlobalSection(SolutionConfigurationPlatforms) = preSolution
 		Debug|Win32 = Debug|Win32
@@ -103,12 +124,6 @@
 		{C3E78B89-587B-499A-BE7D-4FE8564F0CD7}.Release|Win32.Build.0 = Release|Win32
 		{C3E78B89-587B-499A-BE7D-4FE8564F0CD7}.ReleaseWithSymbols|Win32.ActiveCfg = Release with Symbols|Win32
 		{C3E78B89-587B-499A-BE7D-4FE8564F0CD7}.ReleaseWithSymbols|Win32.Build.0 = Release with Symbols|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.Debug|Win32.ActiveCfg = Debug|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.Debug|Win32.Build.0 = Debug|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.Release|Win32.ActiveCfg = Release|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.Release|Win32.Build.0 = Release|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.ReleaseWithSymbols|Win32.ActiveCfg = Release with Symbols|Win32
-		{A2DD1E40-4D80-44C5-B04E-1B1C4B07131C}.ReleaseWithSymbols|Win32.Build.0 = Release with Symbols|Win32
 	EndGlobalSection
 	GlobalSection(SolutionProperties) = preSolution
 		HideSolutionNode = FALSE


Property changes on: rl/branches/newton20/engine/ai
___________________________________________________________________
Name: svn:ignore
   - 
Makefile.in
Makefile

   + Makefile.in
Makefile
obj
lib


Modified: rl/branches/newton20/engine/core/CMakeLists.txt
===================================================================
--- rl/branches/newton20/engine/core/CMakeLists.txt	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/CMakeLists.txt	2009-01-26 17:26:56 UTC (rev 4719)
@@ -1,5 +1,6 @@
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include
+${CMAKE_CURRENT_SOURCE_DIR}/include/fmod4driver
 ${CMAKE_CURRENT_SOURCE_DIR}/include/nulldriver
 ${RL_COMMON_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
@@ -82,6 +83,10 @@
 src/World.cpp
 src/Zone.cpp
 src/ZoneManager.cpp
+src/fmod4driver/Fmod4Driver.cpp
+src/fmod4driver/Fmod4Listener.cpp
+src/fmod4driver/Fmod4Sound.cpp
+src/fmod4driver/Fmod4SoundStitching.cpp
 src/nulldriver/NullDriver.cpp
 src/nulldriver/NullListener.cpp
 src/nulldriver/NullSound.cpp

Modified: rl/branches/newton20/engine/core/RlCore2005.vcproj
===================================================================
--- rl/branches/newton20/engine/core/RlCore2005.vcproj	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/RlCore2005.vcproj	2009-01-26 17:26:56 UTC (rev 4719)
@@ -48,7 +48,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalOptions="-Zm130"
 				Optimization="0"
-				AdditionalIncludeDirectories=".\include;.\include\nulldriver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include"
+				AdditionalIncludeDirectories=".\include;.\include\nulldriver;.\include\fmod4driver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include;..\..\dependencies\FMOD4\api\inc"
 				PreprocessorDefinitions="WITH_FMOD3;_WINDOWS,_DEBUG,WIN32,RLCORE_EXPORTS;_CRT_SECURE_NO_DEPRECATE;RL_USE_PCH"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
@@ -85,12 +85,12 @@
 				Name="VCLinkerTool"
 				IgnoreImportLibrary="true"
 				AdditionalOptions="/MACHINE:I386"
-				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt_d.lib OgreMain_d.lib xerces-c_2D.lib CEGUIBase_d.lib Newton.lib meshmagick_d.lib"
+				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt_d.lib OgreMain_d.lib xerces-c_2D.lib CEGUIBase_d.lib Newton.lib meshmagick_d.lib fmodex_vc.lib"
 				ShowProgress="0"
 				OutputFile="./lib/$(ConfigurationName)/RlCore.dll"
 				LinkIncremental="2"
 				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib"
+				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib;..\..\dependencies\FMOD4\api\lib"
 				IgnoreDefaultLibraryNames=""
 				TypeLibraryFile="$(OutDir)\RlCore.lib"
 				GenerateDebugInformation="true"
@@ -163,7 +163,7 @@
 				Optimization="3"
 				EnableIntrinsicFunctions="true"
 				FavorSizeOrSpeed="1"
-				AdditionalIncludeDirectories=".\include;.\include\nulldriver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include"
+				AdditionalIncludeDirectories=".\include;.\include\nulldriver;.\include\fmod4driver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include;..\..\dependencies\FMOD4\api\inc"
 				PreprocessorDefinitions="WITH_FMOD3;NDEBUG,_WINDOWS,WIN32,RLCORE_EXPORTS;_CRT_SECURE_NO_DEPRECATE;RL_USE_PCH"
 				StringPooling="false"
 				ExceptionHandling="1"
@@ -198,11 +198,11 @@
 				Name="VCLinkerTool"
 				IgnoreImportLibrary="true"
 				AdditionalOptions="/MACHINE:I386"
-				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib"
+				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib fmodex_vc.lib"
 				OutputFile="./lib/$(ConfigurationName)/RlCore.dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib"
+				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib;..\..\dependencies\FMOD4\api\lib"
 				TypeLibraryFile="$(OutDir)\RlCore.lib"
 				ProgramDatabaseFile=""
 				SubSystem="2"
@@ -270,7 +270,7 @@
 				Optimization="3"
 				EnableIntrinsicFunctions="true"
 				FavorSizeOrSpeed="1"
-				AdditionalIncludeDirectories=".\include;.\include\nulldriver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include"
+				AdditionalIncludeDirectories=".\include;.\include\nulldriver;.\include\fmod4driver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include;..\..\dependencies\FMOD4\api\inc"
 				PreprocessorDefinitions="WITH_FMOD3;NDEBUG,_WINDOWS,WIN32,RLCORE_EXPORTS;_CRT_SECURE_NO_DEPRECATE;RL_USE_PCH"
 				StringPooling="false"
 				ExceptionHandling="1"
@@ -305,11 +305,11 @@
 				Name="VCLinkerTool"
 				IgnoreImportLibrary="true"
 				AdditionalOptions="/MACHINE:I386"
-				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib"
+				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib fmodex_vc.lib"
 				OutputFile="$(OutDir)/RlCore.dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="..\common\lib\Release;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;..\..\dependencies\ogrenewt\lib\release;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib"
+				AdditionalLibraryDirectories="..\common\lib\Release;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;..\..\dependencies\ogrenewt\lib\release;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib;..\..\dependencies\FMOD4\api\lib"
 				TypeLibraryFile="$(OutDir)\RlCore.lib"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
@@ -699,6 +699,26 @@
 					>
 				</File>
 			</Filter>
+			<Filter
+				Name="fmod4driver"
+				>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4Driver.h"
+					>
+				</File>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4Listener.h"
+					>
+				</File>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4Sound.h"
+					>
+				</File>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4SoundStitching.h"
+					>
+				</File>
+			</Filter>
 		</Filter>
 		<Filter
 			Name="Source Files"
@@ -1044,6 +1064,26 @@
 					>
 				</File>
 			</Filter>
+			<Filter
+				Name="fmod4driver"
+				>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4Driver.cpp"
+					>
+				</File>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4Listener.cpp"
+					>
+				</File>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4Sound.cpp"
+					>
+				</File>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4SoundStitching.cpp"
+					>
+				</File>
+			</Filter>
 		</Filter>
 		<Filter
 			Name="Resource Files"

Modified: rl/branches/newton20/engine/core/include/PhysicsMaterialRaycast.h
===================================================================
--- rl/branches/newton20/engine/core/include/PhysicsMaterialRaycast.h	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/include/PhysicsMaterialRaycast.h	2009-01-26 17:26:56 UTC (rev 4719)
@@ -71,11 +71,13 @@
             const Ogre::Vector3& startpt, const Ogre::Vector3& endpt, bool invertmat = false);
 
         bool userCallback(OgreNewt::Body* body, Ogre::Real distance, const Ogre::Vector3& normal, int collisionID);
+
+
+        bool userPreFilterCallback( OgreNewt::Body *body );  // filtering is now done here!
     private:
         RaycastInfo mInfo;
         const MaterialVector *mMaterialVector;
         const OgreNewt::MaterialID* mMaterial;
-        bool mGetNearest;
         bool mInvertMat;
     };
 

Copied: rl/branches/newton20/engine/core/include/fmod4driver (from rev 4718, rl/trunk/engine/core/include/fmod4driver)

Deleted: rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Driver.h
===================================================================
--- rl/trunk/engine/core/include/fmod4driver/Fmod4Driver.h	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Driver.h	2009-01-26 17:26:56 UTC (rev 4719)
@@ -1,165 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
- * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the Clarified Artistic License.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  Clarified Artistic License for more details.
- *
- *  You should have received a copy of the Clarified Artistic License
- *  along with this program; if not you can get it here
- *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
- */
-#ifndef _FMODDRIVER_H_
-#define _FMODDRIVER_H_
-
-#include "CorePrerequisites.h"
-
-#include <fmod.hpp>
-
-#include "SoundDriver.h"
-
-namespace rl
-{
-
-    typedef std::map<Ogre::String, StringList> DriverMap;
-
-    #define CHECK_FMOD4_ERRORS(fmod4_errorcode)\
-    {\
-        if (fmod4_errorcode != FMOD_OK)\
-        {\
-            Throw(rl::RuntimeException,\
-                "FMOD error #"\
-                + StringConverter::toString(fmod4_errorcode)\
-                + " "\
-                + FMOD_ErrorString(fmod4_errorcode));\
-        }\
-    }
-
-    class Fmod4Sound;
-
-    /** Diese Klasse ist der Treiber, der OpenAL zur
-     * Ausgabe benutzt.
-     */
-    class Fmod4Driver : public rl::SoundDriver
-    {
-    public:
-        /// Der Treibername
-        static Ogre::String NAME;
-        /// Der Konstruktor
-        Fmod4Driver(Ogre::ResourceManager* soundResourceManager);
-        /// Der Destruktor
-        virtual ~Fmod4Driver();
-        /// Ist der Treiber angeschaltet?
-        virtual bool isDriverAvailable();
-        /// Initialisiere den Treiber.
-        virtual bool initialize();
-        /// Deinitialisiere den Treiber.
-        virtual void shutdown();
-        /// Der Name des Treibers
-        virtual Ogre::String getName() const;
-        /// Ist ein Ogre plugin
-        virtual bool isDriverPlugin() { return true; }
-        /// Update-Aufgaben erledigen
-        virtual void update();
-        /// Einen Soundlistener erzeugen
-        virtual ListenerMovable *createListener(const Ogre::String &name);
-
-        virtual void setMasterVolume(const Ogre::Real& vol);
-
-        /**
-         * Returns the current sound driver settings as a key-value list
-         *
-         * @return key-value list of sound options
-         */
-        virtual Ogre::NameValuePairList getSettings() const;
-
-        /**
-         * Sets certain options for the sound driver, like volume settings for
-         * sound effects and music.
-         *
-         * @param settings key-value list of settings
-         */
-        virtual void applySettings(const Ogre::NameValuePairList& settings);
-
-        /**
-         * Sets an eax preset, the preset is defined by a string
-         * @retval true if successfull
-        */
-        virtual bool setEaxPreset(const Ogre::String& name);
-
-        /// Setzt den Faktor f, mit der die Lautstaerke nach der Formel 1/(f*Entfernung) abnimmt
-        virtual void setRolloffFactor(const Ogre::Real&);
-        virtual const Ogre::Real getRolloffFactor();
-
-        /// Datensammlung zurueckgeben
-        const DriverMap& getDriverData() const;
-
-        FMOD::System* _getFmodSystem();
-        void _registerChannel(FMOD::Channel* channel, Fmod4Sound* sound);
-        
-    protected:
-        virtual Sound* createSoundImpl(SoundResourcePtr res, SoundType type);
-        virtual SoundStitching* createSoundStitchingImpl(unsigned int numSlots, const CeGuiString& name);
-
-    private:
-
-        typedef std::map<FMOD::Channel*, Fmod4Sound*> ChannelSoundMap;
-
-        static FMOD_RESULT F_CALLBACK open(
-            const char *  name,
-            int  unicode,
-            unsigned int *  filesize,
-            void **  handle,
-            void **  userdata
-        );
-
-        static FMOD_RESULT F_CALLBACK close(
-            void *  handle,
-            void *  userdata
-        );
-
-        static FMOD_RESULT F_CALLBACK read(
-            void *  handle,
-            void *  buffer,
-            unsigned int  sizebytes,
-            unsigned int *  bytesread,
-            void *  userdata
-        );
-
-        static FMOD_RESULT F_CALLBACK seek(
-            void *  handle,
-            unsigned int  pos,
-            void *  userdata
-        );
-
-        static FMOD_RESULT F_CALLBACK channelCallback(
-            FMOD_CHANNEL* channel,
-            FMOD_CHANNEL_CALLBACKTYPE type,
-            void* commanddata1,
-            void* commanddata2
-        );
-
-        typedef std::map<const Ogre::String, FMOD_REVERB_PROPERTIES> EaxPresetMap;
-        EaxPresetMap mEaxPresetMap;
-
-        void initializeEaxPresetMap();
-
-        /// Log driver config data
-        virtual void printData() const;
-        void printDriverInfo(int driver) const;
-
-        // Wir merken uns die Konfiguration von Fmod4
-        DriverMap mDriverData;
-        /// Stores sounds that are automatically destroyed after having been played.
-        ChannelSoundMap mChannelSoundMap;
-        FMOD::System* mFmod4System;
-        FMOD::ChannelGroup* mMasterChannelGroup;
-
-    };
-}
-
-#endif /*FMODDRIVER_H_*/

Copied: rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Driver.h (from rev 4718, rl/trunk/engine/core/include/fmod4driver/Fmod4Driver.h)

Deleted: rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Listener.h
===================================================================
--- rl/trunk/engine/core/include/fmod4driver/Fmod4Listener.h	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Listener.h	2009-01-26 17:26:56 UTC (rev 4719)
@@ -1,61 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#ifndef __Fmod4Listener_H__
-#define __Fmod4Listener_H__
-
-#include "CorePrerequisites.h"
-
-#include <fmod.hpp>
-
-#include "ListenerMovable.h"
-
-namespace rl {
-    
-   /** Diese Klasse dient der Interkation mit Ogre3d und Fmod4
-    * und kapselt den Hoerer.
-    * @author Josch
-    * @date 06-29-2005
-    * @version 1.0
-    * @version 2.0
-    */
-    class Fmod4Listener : public ListenerMovable
-    {
-    public:
-        /// Konstruktor
-        Fmod4Listener(const Ogre::String& name, FMOD::System* fmod4system, int listenerId = 0);
-        /// Destruktor
-        virtual ~Fmod4Listener();
-        /// Moveable-Typ
-        virtual const Ogre::String& getMovableType() const;
-    
-        /// Setzt die Position der Soundquelle.
-        virtual void setPosition(const Ogre::Vector3& direction);
-        /// Setzt die Richtung der Soundquelle.
-        virtual void setOrientation(const Ogre::Quaternion &orientation);
-        /// Setzt die Geschwindigkeit der Soundquelle.
-        virtual void setVelocity(const Ogre::Vector3&);
-   
-    protected:
-         /// Shared class-level name for Movable type
-        static Ogre::String msMovableType;
-
-    private:
-        FMOD::System* mFmod4System;
-        int mListenerId;
-    };
-
-}
-#endif

Copied: rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Listener.h (from rev 4718, rl/trunk/engine/core/include/fmod4driver/Fmod4Listener.h)

Deleted: rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Sound.h
===================================================================
--- rl/trunk/engine/core/include/fmod4driver/Fmod4Sound.h	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Sound.h	2009-01-26 17:26:56 UTC (rev 4719)
@@ -1,112 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#ifndef _FMOD4SOUND_H_
-#define _FMOD4SOUND_H_
-
-#include "CorePrerequisites.h"
-
-#include <fmod.hpp>
-
-#include "Sound.h"
-#include "SoundDriver.h"
-
-namespace rl {
-
-    class Fmod4Driver;
-
-    class Fmod4Sound : public Sound
-    {
-    public:
-        /// Konstruktor
-        Fmod4Sound(Fmod4Driver* driver, SoundResourcePtr soundres, SoundType type = ST_SAMPLE);
-
-        /// Laedt den Sound.
-        virtual void load() throw (RuntimeException);
-        /// Entlaedt den Sound.
-        virtual void unload() throw (RuntimeException);
-        // Running length in seconds
-	    virtual float getLength() const;
-
-		// Sind wir gueltig
-		bool isValid() const throw (RuntimeException);
-
-	    /// Moveable-Typ
-		virtual const Ogre::String& getMovableType() const;
-        /// Gibt die eingestellte Position der Soundquelle zurueck
-		virtual const Ogre::Vector3 getPosition() const;
-		/// Setzt die Position der Soundquelle.
-		virtual void setPosition(const Ogre::Vector3& direction);
-		/// Gibt die eingestellte relative Lautstaerke der Soundquelle zurueck (0..1)
-		virtual const float getVolume() const; 
-		/// Setzt die relative Lautstaerke der Soundquelle (0..1)
-		virtual void setVolume(const float gain);
-		/// Gibt die Richtung der Soundquelle zurueck.
-		virtual const Ogre::Quaternion getDirection() const;
-		/// Gibt die Geschwindigkeit der Soundquelle zurueck.
-		virtual const Ogre::Vector3 getVelocity() const;
-		/// Setzt die Richtung der Soundquelle.
-		virtual void setDirection(const Ogre::Quaternion&);
-		/// Setzt die Geschwindigkeit der Soundquelle.
-		virtual void setVelocity(const Ogre::Vector3&);
-        
-        /// Gibt den FMOD Channel zur?ck.
-        FMOD::Channel* getFmodChannel() const;
-        /// Gibt den FMOD Sound zur?ck.
-        FMOD::Sound* getFmodSound() const;
-
-        virtual void play(bool destroyWhenDone=false);
-		/// Pausiert den Sound.
-		virtual void pause(bool pausing);
-		/// Ist der Sound pausiert?
-		virtual bool isPaused();
-		/// Stoppt den Sound.
-		virtual void stop();
-		/// Laeuft der Sound noch
-		virtual const bool isPlaying() const;
-        
-        // Sets the priority of this sound
-        virtual void setPriority(const int priority);
-        // Gets the priority of this sound
-        virtual const int getPriority() const;
-        
-        
-        /// Should the sound be autodestructed when playing is done.
-        bool isAutoDestroying() const;
-
-    private:
-		/// Shared class-level name for Movable type
-		static Ogre::String msMovableType;
-        FMOD::Channel* mChannel;
-        SoundType mType;
-        FMOD::Sound *mSound;
-        Fmod4Driver* mDriver;
-        bool mAutoDestroy;
-    };
-
-    class Fmod4SoundPtr :
-        public Ogre::SharedPtr<Fmod4Sound>
-    {
-    public:
-        Fmod4SoundPtr() : Ogre::SharedPtr<Fmod4Sound>() {}
-        explicit Fmod4SoundPtr(Fmod4Sound* rep) : Ogre::SharedPtr<Fmod4Sound>(rep) {}
-        Fmod4SoundPtr(const Fmod4SoundPtr& res) : Ogre::SharedPtr<Fmod4Sound>(res) {}
-    protected:
-        void destroy();
-    };
-
-}
-
-#endif /* FMOD3SOUND_H_ */

Copied: rl/branches/newton20/engine/core/include/fmod4driver/Fmod4Sound.h (from rev 4718, rl/trunk/engine/core/include/fmod4driver/Fmod4Sound.h)

Deleted: rl/branches/newton20/engine/core/include/fmod4driver/Fmod4SoundStitching.h
===================================================================
--- rl/trunk/engine/core/include/fmod4driver/Fmod4SoundStitching.h	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/include/fmod4driver/Fmod4SoundStitching.h	2009-01-26 17:26:56 UTC (rev 4719)
@@ -1,116 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#ifndef _FMOD4SOUNDSTITCHING_H_
-#define _FMOD4SOUNDSTITCHING_H_
-
-#include "CorePrerequisites.h"
-
-#include <fmod.hpp>
-
-#include "SoundStitching.h"
-#include "SoundDriver.h"
-
-namespace rl {
-
-    class Fmod4Driver;
-    typedef std::vector<FMOD::Sound*> SubsoundVector;
-
-    class Fmod4SoundStitching : public SoundStitching
-    {
-    public:
-        /// Konstruktor
-        Fmod4SoundStitching(unsigned int numSlots, const CeGuiString& name, SoundDriver* creator);
-
-        /// Laedt den Sound.
-        virtual void load() throw (RuntimeException);
-        /// Entlaedt den Sound.
-        virtual void unload() throw (RuntimeException);
-
-		// Sind wir gueltig
-		bool isValid() const throw (RuntimeException);
-
-	    /// Moveable-Typ
-		virtual const Ogre::String& getMovableType() const;
-        /// Gibt die eingestellte Position der Soundquelle zurueck
-		virtual const Ogre::Vector3 getPosition() const;
-		/// Setzt die Position der Soundquelle.
-		virtual void setPosition(const Ogre::Vector3& direction);
-		/// Gibt die eingestellte relative Lautstaerke der Soundquelle zurueck (0..1)
-		virtual const float getVolume() const; 
-		/// Setzt die relative Lautstaerke der Soundquelle (0..1)
-		virtual void setVolume(const float gain);
-		/// Gibt die Richtung der Soundquelle zurueck.
-		virtual const Ogre::Quaternion getDirection() const;
-		/// Gibt die Geschwindigkeit der Soundquelle zurueck.
-		virtual const Ogre::Vector3 getVelocity() const;
-		/// Setzt die Richtung der Soundquelle.
-		virtual void setDirection(const Ogre::Quaternion&);
-		/// Setzt die Geschwindigkeit der Soundquelle.
-		virtual void setVelocity(const Ogre::Vector3&);
-        
-        /// Gibt den FMOD Channel zur?ck.
-        FMOD::Channel* getFmodChannel() const;
-        /// Gibt den FMOD Sound zur?ck.
-        FMOD::Sound* getFmodSound() const;
-
-        virtual void play(bool destroyWhenDone=false);
-		/// Pausiert den Sound.
-		virtual void pause(bool pausing);
-		/// Ist der Sound pausiert?
-		virtual bool isPaused();
-		/// Stoppt den Sound.
-		virtual void stop();
-		/// Laeuft der Sound noch
-		virtual const bool isPlaying() const;
-        
-        // Sets the priority of this sound
-        virtual void setPriority(const int priority);
-        // Gets the priority of this sound
-        virtual const int getPriority() const;
-        
-        
-        /// Should the sound be autodestructed when playing is done.
-        bool isAutoDestroying() const;
-
-        /// Assign a sound recource to a slot.
-        virtual void putSoundIntoSlot(unsigned int, CeGuiString label);
-        /// Get the slot of the plaing sound.
-        virtual unsigned int getPlayingSlot();
-
-    private:
-		/// Shared class-level name for Movable type
-		static Ogre::String msMovableType;
-        FMOD::Channel* mChannel;
-        FMOD::Sound *mSound;
-        Fmod4Driver* mDriver;
-        bool mAutoDestroy;
-        SubsoundVector mSoundSlots;
-    };
-
-    class Fmod4SoundStitchingPtr :
-        public Ogre::SharedPtr<Fmod4SoundStitching>
-    {
-    public:
-        Fmod4SoundStitchingPtr() : Ogre::SharedPtr<Fmod4SoundStitching>() {}
-        explicit Fmod4SoundStitchingPtr(Fmod4SoundStitching* rep) : Ogre::SharedPtr<Fmod4SoundStitching>(rep) {}
-        Fmod4SoundStitchingPtr(const Fmod4SoundStitchingPtr& res) : Ogre::SharedPtr<Fmod4SoundStitching>(res) {}
-    protected:
-        void destroy();
-    };
-
-}
-
-#endif /* FMOD3SOUNDSTITCHING_H_ */

Copied: rl/branches/newton20/engine/core/include/fmod4driver/Fmod4SoundStitching.h (from rev 4718, rl/trunk/engine/core/include/fmod4driver/Fmod4SoundStitching.h)

Modified: rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp	2009-01-26 17:26:56 UTC (rev 4719)
@@ -23,7 +23,7 @@
 
 namespace rl {
     PhysicsMaterialRaycast::PhysicsMaterialRaycast()
-        : Raycast(), mInfo(), mMaterial(0), mGetNearest(false)
+        : Raycast(), mInfo(), mMaterial(0)
     {
     }
 
@@ -38,7 +38,6 @@
         mInfo.mDistance = 1.1;
         mInfo.mNormal = Vector3::ZERO;
 
-        mGetNearest = false;
         go(world, start, end);
 
         return mInfo;
@@ -55,14 +54,63 @@
         mInfo.mDistance = 1.1;
         mInfo.mNormal = Vector3::ZERO;
 
-        mGetNearest = false;
         go(world, start, end);
 
         return mInfo;
     }
 
+    bool PhysicsMaterialRaycast::userPreFilterCallback( OgreNewt::Body *body )
+    {
+        if( body->getMaterialGroupID() == NULL )
+        {
+            LOG_MESSAGE(Logger::CORE, "Warning PhysicsMaterialRaycast found body without material (getMaterialGroupId() == NULL)!");
+            return true;
+        }
+        else if( body->getMaterialGroupID() == PhysicsManager::getSingleton().createMaterialID("gamearea") ) // don't trigger gameareas
+        {
+            return false;
+        }
+        else
+        {
+            if( mMaterial == NULL && mMaterialVector == NULL)
+            {
+                return true;
+            }
+            else if( mMaterial != NULL )
+            {
+                if (body->getMaterialGroupID()->getID() == mMaterial->getID() && !mInvertMat ||
+                    body->getMaterialGroupID()->getID() != mMaterial->getID() && mInvertMat)
+                {
+                    return true;
+                }
+            }
+            else // mMaterialVector != NULL
+            {
+                bool found = false;
+
+                MaterialVector::const_iterator iter;
+                for(iter = mMaterialVector->begin(); iter != mMaterialVector->end(); iter++)
+                {
+                    if (body->getMaterialGroupID()->getID() == (*iter)->getID())
+                    {
+                        found = true;
+                        break;
+                    }
+                }
+
+                if( found && !mInvertMat || !found && mInvertMat )
+                {
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
     bool PhysicsMaterialRaycast::userCallback(Body* body, Ogre::Real distance, const Ogre::Vector3& normal, int collisionID)
     {
+        return true;
+        /*
         if( body->getMaterialGroupID() == NULL )
         {
             mInfo.mBody = body;
@@ -118,6 +166,7 @@
             }
         }
         return mGetNearest;
+        */
     }
 
 

Modified: rl/branches/newton20/engine/core/src/SoundManager.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/SoundManager.cpp	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/src/SoundManager.cpp	2009-01-26 17:26:56 UTC (rev 4719)
@@ -29,6 +29,7 @@
 #include "SoundDriver.h"
 #include "SoundResource.h"
 
+#include "Fmod4Driver.h"
 #include "NullDriver.h"
 
 using namespace std;
@@ -59,6 +60,9 @@
         registerDriver(nullDriver);
         setActiveDriver(nullDriver);
 
+		Fmod4Driver* fmod4Driver = new Fmod4Driver(this);
+		registerDriver(fmod4Driver);
+
         mResourceType = "Sound";
         ResourceGroupManager::getSingleton()._registerResourceManager(mResourceType, this);
 
@@ -250,25 +254,31 @@
             drivername = it->second;
         }
 
-        try
+
+		SoundDriver *driver = getDriverByName(drivername);
+
+        if (driver == NULL)
         {
-            CoreSubsystem::getSingleton().loadPlugin(drivername);
-        }
-        catch(Ogre::Exception &e)
-        {
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                CeGuiString("Soundtreiber kann nicht geladen werden: ")
-                    + drivername + "\n"
-                    + e.getFullDescription());
-        }
-        catch(...)
-        {
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                 CeGuiString("Soundtreiber kann nicht geladen werden: ")
-                    + drivername);
-        }
+			try
+			{
+				CoreSubsystem::getSingleton().loadPlugin(drivername);
+			}
+			catch(Ogre::Exception &e)
+			{
+				LOG_MESSAGE(Logger::MULTIMEDIA,
+					CeGuiString("Soundtreiber kann nicht geladen werden: ")
+						+ drivername + "\n"
+						+ e.getFullDescription());
+			}
+			catch(...)
+			{
+				LOG_MESSAGE(Logger::MULTIMEDIA,
+					 CeGuiString("Soundtreiber kann nicht geladen werden: ")
+						+ drivername);
+			}
+		}
 
-        SoundDriver *driver = getDriverByName(drivername);
+        driver = getDriverByName(drivername);
 
         if (driver == NULL)
         {

Copied: rl/branches/newton20/engine/core/src/fmod4driver (from rev 4718, rl/trunk/engine/core/src/fmod4driver)

Deleted: rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Driver.cpp
===================================================================
--- rl/trunk/engine/core/src/fmod4driver/Fmod4Driver.cpp	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Driver.cpp	2009-01-26 17:26:56 UTC (rev 4719)
@@ -1,493 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
- * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the Clarified Artistic License.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  Clarified Artistic License for more details.
- *
- *  You should have received a copy of the Clarified Artistic License
- *  along with this program; if not you can get it here
- *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
- */
-#include "stdinc.h"
-
-#include <fmod_errors.h>
-
-#include "Fmod4Driver.h"
-#include "Fmod4Sound.h"
-#include "Fmod4SoundStitching.h"
-#include "Fmod4Listener.h"
-#include "Logger.h"
-#include "SoundResource.h"
-
-using namespace Ogre;
-using namespace std;
-
-namespace rl
-{
-    // Used by FMOD-Callbacks, which are not C++-functions, but C-functions.
-    Ogre::ResourceManager* gSoundResourceManager = NULL;
-    Fmod4Driver* gDriver = NULL;
-
-    String Fmod4Driver::NAME = "RlFmod4Driver";
-
-    Fmod4Driver::Fmod4Driver(Ogre::ResourceManager *soundResourceManager)
-        : SoundDriver(soundResourceManager),
-        mMasterChannelGroup(NULL)
-    {
-        gSoundResourceManager = soundResourceManager;
-        gDriver = this;
-    }
-
-    Fmod4Driver::~Fmod4Driver()
-    {
-    }
-
-    String Fmod4Driver::getName() const
-    {
-        return NAME;
-    }
-
-    bool Fmod4Driver::initialize()
-    {
-        static int MAX_VIRTUAL_CHANNELS = 100;
-
-        CHECK_FMOD4_ERRORS(FMOD::System_Create(&mFmod4System));
-
-        mFmod4System->setFileSystem(
-            Fmod4Driver::open,
-            Fmod4Driver::close,
-            Fmod4Driver::read,
-            Fmod4Driver::seek,
-            -1);
-
-        printData();
-
-        mFmod4System->setDriver(-1);
-        //CHECK_FMOD4_ERRORS(mFmod4System->setOutput(FMOD_OUTPUTTYPE_ESD));
-
-        FMOD_RESULT result = mFmod4System->init(MAX_VIRTUAL_CHANNELS, FMOD_INIT_NORMAL, NULL);
-        if (result != FMOD_OK)
-        {
-            LOG_ERROR(Logger::CORE,
-                "FMOD error #"
-                + StringConverter::toString(result)
-                + " "
-                + FMOD_ErrorString(result));
-
-            return false;
-        }
-
-        mFmod4System->getMasterChannelGroup(&mMasterChannelGroup);
-
-        initializeEaxPresetMap();
-        return true;
-    }
-
-    void Fmod4Driver::shutdown()
-    {
-        CHECK_FMOD4_ERRORS(mFmod4System->close());
-        CHECK_FMOD4_ERRORS(mFmod4System->release());
-    }
-
-    bool Fmod4Driver::isDriverAvailable()
-    {
-        FMOD::System* system;
-        FMOD_RESULT result = FMOD::System_Create(&system);
-        if (result != FMOD_OK)
-        {
-            return false;
-        }
-
-        system->release();
-        return true;
-    }
-
-    void Fmod4Driver::update()
-    {
-        mFmod4System->update();
-    }
-
-    Sound* Fmod4Driver::createSoundImpl(SoundResourcePtr res, SoundType type)
-    {
-        Sound* sound = new Fmod4Sound(this, res, type);
-        return sound;
-    }
-
-
-    SoundStitching *Fmod4Driver::createSoundStitchingImpl(unsigned int numSlots, const CeGuiString& name)
-    {
-         SoundStitching* soundstitching = new Fmod4SoundStitching(numSlots, name, this);
-         return soundstitching;
-    }
-
-    ListenerMovable *Fmod4Driver::createListener(const Ogre::String &name)
-    {
-        return new Fmod4Listener(name, mFmod4System);
-    }
-
-    FMOD::System* Fmod4Driver::_getFmodSystem()
-    {
-        return mFmod4System;
-    }
-
-    void Fmod4Driver::applySettings(const Ogre::NameValuePairList& settings)
-    {
-        SoundDriver::applySettings(settings);
-        mMasterChannelGroup->setVolume(mMasterVolume);
-    }
-
-#define DEF_PRESET(NAME, DEFINITION) \
-    { \
-        FMOD_REVERB_PROPERTIES prop = DEFINITION; \
-        mEaxPresetMap.insert(make_pair(NAME, prop)); \
-    }
-
-    void Fmod4Driver::initializeEaxPresetMap()
-    {
-        DEF_PRESET("Alley", FMOD_PRESET_ALLEY);
-        DEF_PRESET("Arena", FMOD_PRESET_ARENA);
-        DEF_PRESET("Auditorium", FMOD_PRESET_AUDITORIUM);
-        DEF_PRESET("Bathroom", FMOD_PRESET_BATHROOM);
-        DEF_PRESET("Carpetted Hallway", FMOD_PRESET_CARPETTEDHALLWAY);
-        DEF_PRESET("Cave", FMOD_PRESET_CAVE);
-        DEF_PRESET("City", FMOD_PRESET_CITY);
-        DEF_PRESET("Concert Hall", FMOD_PRESET_CONCERTHALL);
-        DEF_PRESET("Dizzy", FMOD_PRESET_DIZZY);
-        DEF_PRESET("Drugged", FMOD_PRESET_DRUGGED);
-        DEF_PRESET("Forest", FMOD_PRESET_FOREST);
-        DEF_PRESET("Generic", FMOD_PRESET_GENERIC);
-        DEF_PRESET("Hallway", FMOD_PRESET_HALLWAY);
-        DEF_PRESET("Hangar", FMOD_PRESET_HANGAR);
-        DEF_PRESET("Living Room", FMOD_PRESET_LIVINGROOM);
-        DEF_PRESET("Mountains", FMOD_PRESET_MOUNTAINS);
-        DEF_PRESET("Off", FMOD_PRESET_OFF);
-        DEF_PRESET("Padded Cell", FMOD_PRESET_PADDEDCELL);
-        DEF_PRESET("Parkinglot", FMOD_PRESET_PARKINGLOT);
-        DEF_PRESET("Plain", FMOD_PRESET_PLAIN);
-        DEF_PRESET("Psychotic", FMOD_PRESET_PSYCHOTIC);
-        DEF_PRESET("Quarry", FMOD_PRESET_QUARRY);
-        DEF_PRESET("Room", FMOD_PRESET_ROOM);
-        DEF_PRESET("Sewerpipe", FMOD_PRESET_SEWERPIPE);
-        DEF_PRESET("Stone Corridor", FMOD_PRESET_STONECORRIDOR);
-        DEF_PRESET("Stone Room", FMOD_PRESET_STONEROOM);
-        DEF_PRESET("Underwater", FMOD_PRESET_UNDERWATER);
-    }
-#undef DEF_PRESET
-
-    bool Fmod4Driver::setEaxPreset(const Ogre::String& name)
-    {
-        EaxPresetMap::iterator it = mEaxPresetMap.find(name);
-
-        if( it != mEaxPresetMap.end() )
-        {
-            FMOD_RESULT result;
-            result = mFmod4System->setReverbProperties(&(it->second)); ///@todo seems not to work correctly
-            CHECK_FMOD4_ERRORS(result);
-        }
-
-        return false;
-    }
-
-    Ogre::NameValuePairList Fmod4Driver::getSettings() const
-    {
-        return SoundDriver::getSettings();
-    }
-
-    void Fmod4Driver::printData() const
-    {
-        int numDrivers;
-        mFmod4System->getNumDrivers(&numDrivers);
-
-        for (int i = 0; i < numDrivers; i++)
-        {
-            printDriverInfo(i);
-        }
-
-        int numPlugins;
-        mFmod4System->getNumPlugins(FMOD_PLUGINTYPE_CODEC, &numPlugins);
-        for (int i = 0; i < numPlugins; i++)
-        {
-            char pluginName[128];
-            unsigned int version;
-			FMOD_PLUGINTYPE type = FMOD_PLUGINTYPE_CODEC;
-			unsigned int handle;
-			FMOD_RESULT result = mFmod4System->getPluginHandle(FMOD_PLUGINTYPE_CODEC, i, &handle);
-			CHECK_FMOD4_ERRORS(result);
-
-            result = mFmod4System->getPluginInfo(
-                handle,
-                &type,
-				pluginName,
-                127,
-                &version);
-			CHECK_FMOD4_ERRORS(result);
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                String("Fmod4Driver Plugin '")
-                + pluginName
-                + "' Version "
-                + StringConverter::toString(version));
-        }
-    }
-
-    void Fmod4Driver::printDriverInfo(int driver) const
-    {
-        int curdriver;
-        mFmod4System->getDriver(&curdriver);
-
-        char name[128];
-        mFmod4System->getDriverInfo(driver, name, 127, NULL);
-
-        FMOD_CAPS caps;
-        int minfreq, maxfreq;
-        FMOD_SPEAKERMODE speakermode;
-        mFmod4System->getDriverCaps(driver, &caps, &minfreq, &maxfreq, &speakermode);
-
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            String("Fmod4Driver '")
-            + name
-            + "'"
-            + (driver == curdriver ? "(cur)" : "")
-            + ": \n"
-            + "Freq " + StringConverter::toString(minfreq)
-            + " - " + StringConverter::toString(maxfreq));
-
-        int hard2d, hard3d, hardtotal;
-        mFmod4System->getHardwareChannels(&hard2d, &hard3d, &hardtotal);
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            String("Fmod4Driver '")
-            + name + "' Hardware Channels: "
-            + "2D #" + StringConverter::toString(hard2d)
-            + ", 3D #" + StringConverter::toString(hard3d)
-            + ", Total #" + StringConverter::toString(hardtotal));
-
-        int softchannels;
-        mFmod4System->getSoftwareChannels(&softchannels);
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            String("Fmod4Driver '")
-            + name + "' Software Channels: "
-            + "#" + StringConverter::toString(softchannels));
-
-        FMOD_OUTPUTTYPE output;
-        mFmod4System->getOutput(&output);
-        String outputName;
-
-        if(output == FMOD_OUTPUTTYPE_AUTODETECT)
-            outputName = "Autodetect";
-        else if(output == FMOD_OUTPUTTYPE_UNKNOWN)
-            outputName = "Unknown";
-        else if(output == FMOD_OUTPUTTYPE_NOSOUND)
-            outputName = "No Sound";
-        else if(output == FMOD_OUTPUTTYPE_WAVWRITER)
-            outputName = "Wave Writer";
-        else if(output == FMOD_OUTPUTTYPE_NOSOUND_NRT)
-            outputName = "No Sound non realtime";
-        else if(output == FMOD_OUTPUTTYPE_WAVWRITER_NRT)
-            outputName = "Wave Writer non realtime";
-        else if(output == FMOD_OUTPUTTYPE_DSOUND)
-            outputName = "DirectSound";
-        else if(output == FMOD_OUTPUTTYPE_WINMM)
-            outputName = "Windows Multimedia";
-        else if(output == FMOD_OUTPUTTYPE_ASIO)
-            outputName = "Low Latency ASIO driver";
-        else if(output == FMOD_OUTPUTTYPE_OSS)
-            outputName = "Open Sound System (OSS)";
-        else if(output == FMOD_OUTPUTTYPE_ALSA)
-            outputName = "Advanced Linux Sound Architecture (ALSA)";
-        else if(output == FMOD_OUTPUTTYPE_ESD)
-            outputName = "Enlightment Sound Daemon (ESD)";
-        else if(output == FMOD_OUTPUTTYPE_SOUNDMANAGER)
-            outputName = "Macintosh SoundManager";
-        else if(output == FMOD_OUTPUTTYPE_COREAUDIO)
-            outputName = "Macintosh CoreAudio";
-
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            String("Fmod4Driver '")
-            + name + "' Output: " + outputName);
-    }
-
-    FMOD_RESULT F_CALLBACK Fmod4Driver::open(
-        const char *  name,
-        int  unicode,
-        unsigned int *  filesize,
-        void **  handle,
-        void **  userdata)
-    {
-        SoundResourcePtr* res = new SoundResourcePtr(gSoundResourceManager->getByName(name));
-        LOG_DEBUG(Logger::MULTIMEDIA,
-            "Opened stream " + (*res)->getName());
-        (*res)->load();
-        *filesize = (*res)->getSize();
-        *handle = res;
-        return FMOD_OK;
-    }
-
-    FMOD_RESULT F_CALLBACK Fmod4Driver::close(
-        void *  handle,
-        void *  userdata)
-    {
-           SoundResourcePtr *res = static_cast<SoundResourcePtr*>(handle);
-        LOG_DEBUG(Logger::MULTIMEDIA,
-            "Closing stream " + (*res)->getName());
-        (*res)->unload();
-        delete res;
-        return FMOD_OK;
-    }
-
-    FMOD_RESULT F_CALLBACK Fmod4Driver::read(
-        void*  handle,
-        void*  buffer,
-        unsigned int  sizebytes,
-        unsigned int* bytesread,
-        void*  userdata)
-    {
-        if (handle == NULL)
-        {
-            return FMOD_ERR_INVALID_PARAM;
-        }
-
-        SoundResourcePtr *sound = static_cast<SoundResourcePtr*>(handle);
-        if (!sound->isNull())
-        {
-            if (!(*sound)->isLoaded())
-            {
-                (*sound)->load();
-            }
-
-            DataStreamPtr ds = (*sound)->getDataStream();
-            if (!ds.isNull())
-            {
-                *bytesread = ds->read(buffer, sizebytes);
-                if (*bytesread < sizebytes)
-                {
-                    return FMOD_ERR_FILE_EOF;
-                }
-                return FMOD_OK;
-            }
-        }
-
-        return FMOD_ERR_FILE_EOF;
-    }
-
-    FMOD_RESULT F_CALLBACK Fmod4Driver::seek(
-        void *  handle,
-        unsigned int  pos,
-        void *  userdata)
-    {
-        if (handle == NULL)
-        {
-            return FMOD_ERR_INVALID_PARAM;
-        }
-
-        SoundResourcePtr *sound = static_cast<SoundResourcePtr*>(handle);
-        if (!sound->isNull())
-        {
-            DataStreamPtr ds = (*sound)->getDataStream();
-            if (!ds.isNull())
-            {
-                ds->seek(pos);
-                return FMOD_OK;
-            }
-        }
-        return FMOD_ERR_INVALID_PARAM;
-    }
-
-/**
- * This static method is as channel callback, so that we get callbacks
- * from FMOD
- * @author Blakharaz
- * @version 1.0
- * @author JoSch
- * @version 1.1
- * @date 07-03-2007
- * @param _channel The channel for which the callback is registered.
- * @param type Type of the event.
- * @param command A commando
- * @param commanddata1 Data
- * @param commanddata2 Data
- */
-FMOD_RESULT F_CALLBACK Fmod4Driver::channelCallback(
-    FMOD_CHANNEL *_channel,
-    FMOD_CHANNEL_CALLBACKTYPE type,
-    void* commanddata1, 
-    void* commanddata2)
-{
-    /// Extract the Fmod channel and then our Sound object.
-    FMOD::Channel* channel = (FMOD::Channel*)_channel;
-    RlAssert1(channel != NULL);
-    ChannelSoundMap::iterator it = gDriver->mChannelSoundMap.find((FMOD::Channel*)channel);
-    if (it != gDriver->mChannelSoundMap.end())
-    {
-        Fmod4Sound* sound = it->second;
-        RlAssert1(sound != NULL);
-        switch(type)
-        {
-            case FMOD_CHANNEL_CALLBACKTYPE_END:
-                {
-                    // We dispatch a stop event
-                    SoundPlayEvent event(NULL, SoundPlayEvent::STOPEVENT);
-                    sound->dispatchEvent(&event);
-                    // If the sound is set for autodestruction,
-                    // we destroy it now.
-                    if (sound->isAutoDestroying())
-                    {
-                        gDriver->destroySound(sound);
-                        gDriver->mChannelSoundMap.erase(it);
-                    }
-                }
-                break;
-                
-            case FMOD_CHANNEL_CALLBACKTYPE_SYNCPOINT:
-                {
-                    FMOD::Sound *fmodsound = NULL;
-                    FMOD_SYNCPOINT* syncpoint = NULL;
-                    SoundTimingEvent event(NULL, SoundTimingEvent::TIMEEVENT);
-        
-                    // We get the time point of the sync point and put it in a timing event.
-                    sound->getFmodChannel()->getCurrentSound(&fmodsound);
-                    fmodsound->getSyncPoint(*static_cast<int*>(commanddata1), &syncpoint);
-                    fmodsound->getSyncPointInfo(syncpoint, NULL, 0, &event.mTime, FMOD_TIMEUNIT_MS);
-                    sound->dispatchEvent(&event);
-                }
-                break;
-             case FMOD_CHANNEL_CALLBACKTYPE_VIRTUALVOICE:
-                {
-                }
-                break;
-        }
-    }  
-    return FMOD_OK;
-}
-
-
-    void Fmod4Driver::setMasterVolume(const Ogre::Real& vol)
-    {
-        SoundDriver::setMasterVolume(vol);
-    }
-
-    void Fmod4Driver::setRolloffFactor(const Ogre::Real& factor)
-    {
-        float dopplerScale;
-        mFmod4System->get3DSettings(&dopplerScale, NULL, NULL);
-        mFmod4System->set3DSettings(dopplerScale, 1.0, factor);
-    }
-
-    const Ogre::Real Fmod4Driver::getRolloffFactor()
-    {
-        float factor;
-        mFmod4System->get3DSettings(NULL, NULL, &factor);
-        return factor;
-    }
-
-    void Fmod4Driver::_registerChannel(FMOD::Channel* channel, Fmod4Sound* sound)
-    {
-        FMOD_RESULT res = channel->setCallback(channelCallback);
-        CHECK_FMOD4_ERRORS(res);
-        mChannelSoundMap.insert(std::make_pair(channel, sound));
-    }
-
-}

Copied: rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Driver.cpp (from rev 4718, rl/trunk/engine/core/src/fmod4driver/Fmod4Driver.cpp)

Deleted: rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Listener.cpp
===================================================================
--- rl/trunk/engine/core/src/fmod4driver/Fmod4Listener.cpp	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Listener.cpp	2009-01-26 17:26:56 UTC (rev 4719)
@@ -1,77 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#include "stdinc.h"
-
-#include "Fmod4Listener.h"
-
-using namespace Ogre;
-
-namespace rl {
-
-String rl::Fmod4Listener::msMovableType = "Fmod4Listener"; 
-
-Fmod4Listener::Fmod4Listener(const Ogre::String &name, FMOD::System *fmod4system, int listenerId)
-: ListenerMovable(name),
-  mFmod4System(fmod4system),
-  mListenerId(listenerId)
-{
-}
-
-Fmod4Listener::~Fmod4Listener()
-{
-}
-
-const String& Fmod4Listener::getMovableType() const
-{
-    return msMovableType;
-}
-
-void Fmod4Listener::setPosition(const Vector3& position)
-{
-    FMOD_VECTOR pos;
-    pos.x = position.x;
-    pos.y = position.y;
-    pos.z = -position.z;
-    mFmod4System->set3DListenerAttributes(mListenerId, &pos, NULL, NULL, NULL);
-}
-
-void Fmod4Listener::setOrientation(const Ogre::Quaternion &orientation)
-{
-    FMOD_VECTOR up, to;
-
-    Vector3 upVec = orientation * Vector3::UNIT_Y;
-    up.x = upVec.x;
-    up.y = upVec.y;
-    up.z = -upVec.z;
-
-    Vector3 toVec = orientation * Vector3::NEGATIVE_UNIT_Z;
-    to.x = toVec.x;
-    to.y = toVec.y;
-    to.z = -toVec.z;
-
-    mFmod4System->set3DListenerAttributes(mListenerId, NULL, NULL, &to, &up);
-}
-
-void Fmod4Listener::setVelocity(const Ogre::Vector3& velocity)
-{
-    FMOD_VECTOR vel;
-    vel.x = velocity.x;
-    vel.y = velocity.y;
-    vel.z = -velocity.z;
-    mFmod4System->set3DListenerAttributes(mListenerId, NULL, &vel, NULL, NULL);
-}
-
-}

Copied: rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Listener.cpp (from rev 4718, rl/trunk/engine/core/src/fmod4driver/Fmod4Listener.cpp)

Deleted: rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Sound.cpp
===================================================================
--- rl/trunk/engine/core/src/fmod4driver/Fmod4Sound.cpp	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Sound.cpp	2009-01-26 17:26:56 UTC (rev 4719)
@@ -1,377 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#include "stdinc.h"
-
-#include "Fmod4Sound.h"
-
-#include <fmod_errors.h>
-
-#include "Fmod4Driver.h"
-#include "SoundManager.h"
-#include "SoundResource.h"
-
-using namespace Ogre;
-
-namespace rl {
-
-String Fmod4Sound::msMovableType = "Fmod4Sound";
- 
-Fmod4Sound::Fmod4Sound(Fmod4Driver* driver, SoundResourcePtr soundres, SoundType type)
-  : Sound(soundres, driver),
-    mType(type),
-    mSound(NULL),
-    mDriver(driver),
-    mChannel(NULL)	
-{
-    setPriority(128);
-}
-
-float Fmod4Sound::getLength() const
-{
-    if (!isValid())
-    {
-        return 0.0;
-    }
-
-    unsigned int length;
-    mSound->getLength(&length, FMOD_TIMEUNIT_MS);
-    return (float)length/1000.0;
-}
-
-void Fmod4Sound::load() throw (RuntimeException)
-{
-    FMOD_MODE mode = FMOD_DEFAULT;
-
-    if (is3d())
-    {
-        mode |= FMOD_3D;
-    }
-    else
-    {
-        mode |= FMOD_2D;
-    }
-
-    if (isLooping())
-    {
-        mode |= FMOD_LOOP_NORMAL;
-    }
-    else
-    {
-        mode |= FMOD_LOOP_OFF;
-    }
-
-    if (mType == ST_SAMPLE)
-    {
-        FMOD_RESULT res = mDriver->_getFmodSystem()->createSound(
-            getSoundResource()->getName().c_str(), 
-            mode, 
-            NULL, 
-            &mSound);
-
-        CHECK_FMOD4_ERRORS(res);
-    }
-    else if (mType == ST_STREAM)
-    {
-        FMOD_RESULT res = mDriver->_getFmodSystem()->createStream(
-            getSoundResource()->getName().c_str(), 
-            mode, 
-            NULL, 
-            &mSound);
-
-        CHECK_FMOD4_ERRORS(res);
-    }
-    else
-    {
-        RlFail("Unsupported SoundType.");
-    }
-}
-
-void Fmod4Sound::unload() throw (RuntimeException)
-{
-    mSound->release();
-}
-
-bool Fmod4Sound::isValid() const throw (RuntimeException)
-{
-    return mSound != NULL && mChannel != NULL;
-}
-
-void Fmod4SoundPtr::destroy()
-{
-    SharedPtr<Fmod4Sound>::destroy();
-}
-
-const String& Fmod4Sound::getMovableType() const
-{
-    return msMovableType;
-}
-
-void Fmod4Sound::play(bool destroyWhenDone)
-{
-    if (!isValid())
-    {
-        load();
-    }
-
-    FMOD_RESULT res = mDriver->_getFmodSystem()->playSound(
-        FMOD_CHANNEL_FREE, 
-        mSound, 
-        true,
-        &mChannel);
-
-    CHECK_FMOD4_ERRORS(res);
-
-    RlAssert1(mChannel != NULL);
-    mAutoDestroy = destroyWhenDone;
-    mDriver->_registerChannel(mChannel, this);
-
-    float vol;
-	if (is3d())
-	{
-		vol = mDriver->getDefaultSoundVolume();
-	}
-	else
-	{
-		vol = mDriver->getDefaultMusicVolume();
-	}
-	setVolume(vol);
-
-    setPriority(mPriority);
-    setPosition(mPosition);
-    setDirection(mDirection);
-	setVelocity(mVelocity); 
-    pause(false);
-    SoundPlayEvent event = SoundPlayEvent(this, SoundPlayEvent::STARTEVENT);
-    dispatchEvent(&event);
-}
-
-void Fmod4Sound::stop()
-{
-    mChannel->stop();
-}
-
-void Fmod4Sound::setPosition(const Ogre::Vector3& position)
-{
-	mPosition = position;
-
-	if (isValid())
-	{
-		FMOD_VECTOR pos;
-		pos.x = position.x;
-		pos.y = position.y;
-		pos.z = -position.z;
-		mChannel->set3DAttributes(&pos, NULL);
-	}
-}
-
-const Ogre::Vector3 Fmod4Sound::getPosition() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR pos;
-		mChannel->get3DAttributes(&pos, NULL);
-
-		Vector3 rval;
-		rval.x = pos.x;
-		rval.y = pos.y;
-		rval.z = -pos.z;
-
-		return rval;
-	}
-
-	return mPosition;
-}
-
-const Ogre::Vector3 Fmod4Sound::getVelocity() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR vel;
-		mChannel->get3DAttributes(NULL, &vel);
-
-		Vector3 rval;
-		rval.x = vel.x;
-		rval.y = vel.y;
-		rval.z = -vel.z;
-
-		return rval;
-	}
-
-	return mVelocity;
-}
-
-void Fmod4Sound::setVelocity(const Ogre::Vector3& velocity)
-{
-	mVelocity = velocity;
-
-	if (isValid())
-	{
-		FMOD_VECTOR vel;
-		vel.x = velocity.x;
-		vel.y = velocity.y;
-		vel.z = -velocity.z;
-		mChannel->set3DAttributes(NULL, &vel);
-	}
-}
-
-void Fmod4Sound::setDirection(const Ogre::Quaternion &orientation)
-{
-	mDirection = orientation;
-
-	if (isValid())
-	{
-		FMOD_VECTOR to;
-
-		Vector3 toVec = orientation * Vector3::NEGATIVE_UNIT_Z;
-		to.x = toVec.x;
-		to.y = toVec.y;
-		to.z = -toVec.z;
-
-		mChannel->set3DConeOrientation(&to);
-	}
-}
-
-const Ogre::Quaternion Fmod4Sound::getDirection() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR to;
-		mChannel->get3DConeOrientation(&to);
-
-		Vector3 toVec;
-		toVec.x = to.x;
-		toVec.y = to.y;
-		toVec.z = -to.z;
-
-		return Vector3::NEGATIVE_UNIT_Z.getRotationTo(toVec);
-	}
-
-	return mDirection;
-}
-
-bool Fmod4Sound::isPaused()
-{
-    bool paused;
-    FMOD_RESULT error = mChannel->getPaused(&paused);
-    return !paused;
-}
-
-const bool Fmod4Sound::isPlaying() const
-{
-    bool playing;
-    FMOD_RESULT error = mChannel->isPlaying(&playing);
-    return playing;
-}
-
-void Fmod4Sound::pause(bool pause)
-{
-    mChannel->setPaused(pause);
-}
-
-void Fmod4Sound::setVolume(float vol)
-{
-	mVolume = vol;
-	if (isValid())
-	{
-	    mChannel->setVolume(vol);
-	}
-}
-
-const float Fmod4Sound::getVolume() const
-{
-	if (isValid())
-	{
-		float vol;
-		mChannel->getVolume(&vol);
-		return vol;
-	}
-	return mVolume;
-}
-
-/**
- * @author JoSch
- * @date 14-03-2007
- * @version 1.0
- * @param priority The new priority of this sound
- */ 
-void Fmod4Sound::setPriority(const int priority)
-{
-    mPriority = priority;
-    if (mPriority < 0)
-    {
-        mPriority = 0;
-    }
-    if (mPriority > 256)
-    {
-        mPriority = 256;
-    }
-    if (isValid())
-    {
-        mChannel->setPriority(mPriority);
-    }
-}
-
-/**
- * @author JoSch
- * @date 14-03-2007
- * @version 1.0
- * @return The new priority of this sound
- */ 
-const int Fmod4Sound::getPriority() const
-{
-    int priority = mPriority;
-    if (isValid())
-    {
-        mChannel->getPriority(&priority);
-    }
-    return priority;
-}
-
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return The Fmod4 Channel object
- */ 
-FMOD::Channel *Fmod4Sound::getFmodChannel() const
-{
-    return mChannel;
-}
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return The Fmod4 Sound object
- */ 
-FMOD::Sound *Fmod4Sound::getFmodSound() const
-{
-    return mSound;
-}
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return TRUE, if the sound should autodestroy when playing ended.
- */ 
-bool Fmod4Sound::isAutoDestroying() const
-{
-    return mAutoDestroy;
-}
-
-} // Namespace

Copied: rl/branches/newton20/engine/core/src/fmod4driver/Fmod4Sound.cpp (from rev 4718, rl/trunk/engine/core/src/fmod4driver/Fmod4Sound.cpp)

Deleted: rl/branches/newton20/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp
===================================================================
--- rl/trunk/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp	2009-01-26 17:26:56 UTC (rev 4719)
@@ -1,427 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#include "stdinc.h"
-
-#include "Fmod4SoundStitching.h"
-
-#include <fmod_errors.h>
-
-#include "Fmod4Driver.h"
-#include "SoundManager.h"
-#include "SoundResource.h"
-
-using namespace Ogre;
-
-namespace rl {
-
-String Fmod4SoundStitching::msMovableType = "Fmod4SoundStitching";
- 
-Fmod4SoundStitching::Fmod4SoundStitching(unsigned int numSlots, const CeGuiString& name, SoundDriver* creator)
-  : SoundStitching(numSlots, name, creator),
-    mSound(NULL),
-    mChannel(NULL)	
-{
-    setPriority(128);
-}
-
-void Fmod4SoundStitching::load() throw (RuntimeException)
-{
-    FMOD_CREATESOUNDEXINFO exinfo;
-    FMOD_MODE mode = FMOD_OPENUSER;
-
-    if (is3d())
-    {
-        mode |= FMOD_3D;
-    }
-    else
-    {
-        mode |= FMOD_2D;
-    }
-
-    if (isLooping())
-    {
-        mode |= FMOD_LOOP_NORMAL;
-    }
-    else
-    {
-        mode |= FMOD_LOOP_OFF;
-    }
-
-    memset(&exinfo, 0, sizeof(FMOD_CREATESOUNDEXINFO));
-    
-    exinfo.cbsize = sizeof(FMOD_CREATESOUNDEXINFO);
-    exinfo.defaultfrequency = 44100;
-    exinfo.numsubsounds = getNumSlots();
-    exinfo.numchannels = is3d() ? 1 : 2;
-    exinfo.format = FMOD_SOUND_FORMAT_PCM16;
-
-    FMOD_RESULT res = mDriver->_getFmodSystem()->createStream(
-        getSoundResource()->getName().c_str(), 
-        mode, 
-        &exinfo, 
-        &mSound);
-
-    CHECK_FMOD4_ERRORS(res);
-
-    int *sentence = new int[getNumSlots()];
-    for(unsigned int i = 0; i < getNumSlots(); i++)
-    {
-        sentence[i] = i;
-    }
-    res = mSound->setSubSoundSentence(sentence, getNumSlots());
-    CHECK_FMOD4_ERRORS(res);
-}
-
-void Fmod4SoundStitching::unload() throw (RuntimeException)
-{
-    mSound->release();
-}
-
-bool Fmod4SoundStitching::isValid() const throw (RuntimeException)
-{
-    return mSound != NULL && mChannel != NULL;
-}
-
-void Fmod4SoundStitchingPtr::destroy()
-{
-    SharedPtr<Fmod4SoundStitching>::destroy();
-}
-
-const String& Fmod4SoundStitching::getMovableType() const
-{
-    return msMovableType;
-}
-
-void Fmod4SoundStitching::play(bool destroyWhenDone)
-{
-    if (!isValid())
-    {
-        load();
-    }
-
-    FMOD_RESULT res = mDriver->_getFmodSystem()->playSound(
-        FMOD_CHANNEL_FREE, 
-        mSound, 
-        true,
-        &mChannel);
-
-    CHECK_FMOD4_ERRORS(res);
-
-    RlAssert1(mChannel != NULL);
-    mAutoDestroy = destroyWhenDone;
-//    mDriver->_registerChannel(mChannel, this);
-
-    float vol;
-	if (is3d())
-	{
-		vol = mDriver->getDefaultSoundVolume();
-	}
-	else
-	{
-		vol = mDriver->getDefaultMusicVolume();
-	}
-	setVolume(vol);
-
-    setPriority(mPriority);
-    setPosition(mPosition);
-    setDirection(mDirection);
-	setVelocity(mVelocity); 
-    pause(false);
-    SoundPlayEvent event = SoundPlayEvent(this, SoundPlayEvent::STARTEVENT);
-    dispatchEvent(&event);
-}
-
-void Fmod4SoundStitching::stop()
-{
-    mChannel->stop();
-}
-
-void Fmod4SoundStitching::setPosition(const Ogre::Vector3& position)
-{
-	mPosition = position;
-
-	if (isValid())
-	{
-		FMOD_VECTOR pos;
-		pos.x = position.x;
-		pos.y = position.y;
-		pos.z = -position.z;
-		mChannel->set3DAttributes(&pos, NULL);
-	}
-}
-
-const Ogre::Vector3 Fmod4SoundStitching::getPosition() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR pos;
-		mChannel->get3DAttributes(&pos, NULL);
-
-		Vector3 rval;
-		rval.x = pos.x;
-		rval.y = pos.y;
-		rval.z = -pos.z;
-
-		return rval;
-	}
-
-	return mPosition;
-}
-
-const Ogre::Vector3 Fmod4SoundStitching::getVelocity() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR vel;
-		mChannel->get3DAttributes(NULL, &vel);
-
-		Vector3 rval;
-		rval.x = vel.x;
-		rval.y = vel.y;
-		rval.z = -vel.z;
-
-		return rval;
-	}
-
-	return mVelocity;
-}
-
-void Fmod4SoundStitching::setVelocity(const Ogre::Vector3& velocity)
-{
-	mVelocity = velocity;
-
-	if (isValid())
-	{
-		FMOD_VECTOR vel;
-		vel.x = velocity.x;
-		vel.y = velocity.y;
-		vel.z = -velocity.z;
-		mChannel->set3DAttributes(NULL, &vel);
-	}
-}
-
-void Fmod4SoundStitching::setDirection(const Ogre::Quaternion &orientation)
-{
-	mDirection = orientation;
-
-	if (isValid())
-	{
-		FMOD_VECTOR to;
-
-		Vector3 toVec = orientation * Vector3::NEGATIVE_UNIT_Z;
-		to.x = toVec.x;
-		to.y = toVec.y;
-		to.z = -toVec.z;
-
-		mChannel->set3DConeOrientation(&to);
-	}
-}
-
-const Ogre::Quaternion Fmod4SoundStitching::getDirection() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR to;
-		mChannel->get3DConeOrientation(&to);
-
-		Vector3 toVec;
-		toVec.x = to.x;
-		toVec.y = to.y;
-		toVec.z = -to.z;
-
-		return Vector3::NEGATIVE_UNIT_Z.getRotationTo(toVec);
-	}
-
-	return mDirection;
-}
-
-bool Fmod4SoundStitching::isPaused()
-{
-    bool paused;
-    FMOD_RESULT error = mChannel->getPaused(&paused);
-    return !paused;
-}
-
-const bool Fmod4SoundStitching::isPlaying() const
-{
-    bool playing;
-    FMOD_RESULT error = mChannel->isPlaying(&playing);
-    return playing;
-}
-
-void Fmod4SoundStitching::pause(bool pause)
-{
-    mChannel->setPaused(pause);
-}
-
-void Fmod4SoundStitching::setVolume(float vol)
-{
-	mVolume = vol;
-	if (isValid())
-	{
-	    mChannel->setVolume(vol);
-	}
-}
-
-const float Fmod4SoundStitching::getVolume() const
-{
-	if (isValid())
-	{
-		float vol;
-		mChannel->getVolume(&vol);
-		return vol;
-	}
-	return mVolume;
-}
-
-/**
- * @author JoSch
- * @date 14-03-2007
- * @version 1.0
- * @param priority The new priority of this sound
- */ 
-void Fmod4SoundStitching::setPriority(const int priority)
-{
-    mPriority = priority;
-    if (mPriority < 0)
-    {
-        mPriority = 0;
-    }
-    if (mPriority > 256)
-    {
-        mPriority = 256;
-    }
-    if (isValid())
-    {
-        mChannel->setPriority(mPriority);
-    }
-}
-
-/**
- * @author JoSch
- * @date 14-03-2007
- * @version 1.0
- * @return The new priority of this sound
- */ 
-const int Fmod4SoundStitching::getPriority() const
-{
-    int priority = mPriority;
-    if (isValid())
-    {
-        mChannel->getPriority(&priority);
-    }
-    return priority;
-}
-
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return The Fmod4 Channel object
- */ 
-FMOD::Channel *Fmod4SoundStitching::getFmodChannel() const
-{
-    return mChannel;
-}
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return The Fmod4 Sound object
- */ 
-FMOD::Sound *Fmod4SoundStitching::getFmodSound() const
-{
-    return mSound;
-}
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return TRUE, if the sound should autodestroy when playing ended.
- */ 
-bool Fmod4SoundStitching::isAutoDestroying() const
-{
-    return mAutoDestroy;
-}
-
-/**
- * @author JoSch
- * @date 08-03-2008
- * @version 1.0
- */ 
-void Fmod4SoundStitching::putSoundIntoSlot(unsigned int slot, CeGuiString label)
-{
-    if (isValid())
-    {
-        FMOD_MODE mode = FMOD_DEFAULT;
-
-        if (is3d())
-        {
-            mode |= FMOD_3D;
-        }
-        else
-        {
-            mode |= FMOD_2D;
-        }
-
-        if (isLooping())
-        {
-            mode |= FMOD_LOOP_NORMAL;
-        }
-        else
-        {
-            mode |= FMOD_LOOP_OFF;
-        }
-        FMOD::Sound *sound;
-        FMOD_RESULT result = mDriver->_getFmodSystem()->createStream(
-            mSoundCache[label]->getName().c_str(), 
-            mode, 
-            NULL, 
-            &sound);
-        CHECK_FMOD4_ERRORS(result);
-        if (mSoundSlots[slot] != NULL)
-        {
-            mSoundSlots[slot]->release();
-        }
-        mSoundSlots[slot] = sound;
-
-        result = sound->setSubSound(slot, sound);
-        CHECK_FMOD4_ERRORS(result);
-    }
-}
-
-/**
- * @author JoSch
- * @date 08-03-2008
- * @version 1.0
- * @return TRUE, if the sound should autodestroy when playing ended.
- */ 
-unsigned int Fmod4SoundStitching::getPlayingSlot()
-{
-    if (isValid())
-    {
-        unsigned int currentslot = -1;
-        FMOD_RESULT result = mChannel->getPosition(&currentslot, (FMOD_TIMEUNIT)(FMOD_TIMEUNIT_SENTENCE_SUBSOUND | FMOD_TIMEUNIT_BUFFERED));
-        CHECK_FMOD4_ERRORS(result);
-        return currentslot;
-    }
-    return -1;
-}
-
-} // Namespace

Copied: rl/branches/newton20/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp (from rev 4718, rl/trunk/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp)

Copied: rl/branches/newton20/engine/ui/include/Fmod4ConfigComponent.h (from rev 4718, rl/trunk/engine/ui/include/Fmod4ConfigComponent.h)

Copied: rl/branches/newton20/engine/ui/src/Fmod4ConfigComponent.cpp (from rev 4718, rl/trunk/engine/ui/src/Fmod4ConfigComponent.cpp)

Modified: rl/branches/newton20/engine/ui/src/GameSettings.cpp
===================================================================
--- rl/branches/newton20/engine/ui/src/GameSettings.cpp	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/engine/ui/src/GameSettings.cpp	2009-01-26 17:26:56 UTC (rev 4719)
@@ -48,7 +48,7 @@
         {
             if ((*it)->isDriverPlugin())
             {
-                registerSoundDriverConfig((*it)->getConfigComponent());
+                //registerSoundDriverConfig((*it)->getConfigComponent());
             }
         }
 

Modified: rl/branches/newton20/tools/copy_dependencies.bat
===================================================================
--- rl/branches/newton20/tools/copy_dependencies.bat	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/tools/copy_dependencies.bat	2009-01-26 17:26:56 UTC (rev 4719)
@@ -51,7 +51,6 @@
 REM Die restlichen Abh?ngigkeiten
 REM -----------------------------
 REM 
-copy "%RL_ROOT%\dependencies\fmod\api\fmod.dll" "%RL_DIST%"
 copy "%RL_ROOT%\dependencies\FMOD4\api\fmodex.dll" "%RL_DIST%"
 
 copy "%RL_ROOT%\Dependencies\NewtonSDK\sdk\dll\Newton.dll" "%RL_DIST%"

Modified: rl/branches/newton20/tools/copy_dlls.bat
===================================================================
--- rl/branches/newton20/tools/copy_dlls.bat	2009-01-23 21:41:53 UTC (rev 4718)
+++ rl/branches/newton20/tools/copy_dlls.bat	2009-01-26 17:26:56 UTC (rev 4719)
@@ -18,7 +18,3 @@
 copy "%RL_ROOT%\engine\ui\lib\%BUILD%\RlUi.dll" "%RL_DIST%"
 copy "%RL_ROOT%\engine\uicomponents\lib\%BUILD%\RlUiComponents.dll" "%RL_DIST%"
 copy "%RL_ROOT%\engine\ai\lib\%BUILD%\RlAI.dll" "%RL_DIST%"
-
-copy "%RL_ROOT%\plugins\fmod3driver\lib\%BUILD%\RlFmod3Driver.dll" "%RL_DIST%"
-copy "%RL_ROOT%\plugins\fmod4driver\lib\%BUILD%\RlFmod4Driver.dll" "%RL_DIST%"
-copy "%RL_ROOT%\plugins\openaldriver\lib\%BUILD%\RlOpenALDriver.dll" "%RL_DIST%"



From melven at mail.berlios.de  Mon Jan 26 18:28:46 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Mon, 26 Jan 2009 18:28:46 +0100
Subject: [Dsa-hl-svn] r4720 - rl/branches/newton20
Message-ID: <200901261728.n0QHSk5p023936@sheep.berlios.de>

Author: melven
Date: 2009-01-26 18:28:46 +0100 (Mon, 26 Jan 2009)
New Revision: 4720

Modified:
   rl/branches/newton20/CMakeLists.txt
Log:
-removed entry for the plugins subdir


Modified: rl/branches/newton20/CMakeLists.txt
===================================================================
--- rl/branches/newton20/CMakeLists.txt	2009-01-26 17:26:56 UTC (rev 4719)
+++ rl/branches/newton20/CMakeLists.txt	2009-01-26 17:28:46 UTC (rev 4720)
@@ -93,6 +93,5 @@
 
 # Include subdirectories
 ADD_SUBDIRECTORY(engine)
-ADD_SUBDIRECTORY(plugins)
 
 PRINT_ENABLED_FEATURES()



From fusion2 at mail.berlios.de  Mon Jan 26 19:38:28 2009
From: fusion2 at mail.berlios.de (fusion2 at mail.berlios.de)
Date: Mon, 26 Jan 2009 19:38:28 +0100
Subject: [Dsa-hl-svn] r4721 - in rl/trunk/editors/Lockenwickler: .
	_eric4project src src/media src/plugins ui files
Message-ID: <200901261838.n0QIcSjo013846@sheep.berlios.de>

Author: fusion2
Date: 2009-01-26 19:35:47 +0100 (Mon, 26 Jan 2009)
New Revision: 4721

Added:
   rl/trunk/editors/Lockenwickler/_eric4project/
   rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4q
   rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4t
   rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py
   rl/trunk/editors/Lockenwickler/ui files/NewModuleWizard.ui
Removed:
   rl/trunk/editors/Lockenwickler/.eric4project/
   rl/trunk/editors/Lockenwickler/src/SceneExplorer.py
Modified:
   rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
   rl/trunk/editors/Lockenwickler/src/
   rl/trunk/editors/Lockenwickler/src/GameObjectClass.py
   rl/trunk/editors/Lockenwickler/src/GameObjectClassManager.py
   rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
   rl/trunk/editors/Lockenwickler/src/ModuleManager.py
   rl/trunk/editors/Lockenwickler/src/MovePivot.py
   rl/trunk/editors/Lockenwickler/src/MyRaySceneQueryListener.py
   rl/trunk/editors/Lockenwickler/src/NewModuleWizard.py
   rl/trunk/editors/Lockenwickler/src/OgreWidget.py
   rl/trunk/editors/Lockenwickler/src/Ui_NewModuleWizard.py
   rl/trunk/editors/Lockenwickler/src/ViewportGrid.py
   rl/trunk/editors/Lockenwickler/src/media/
   rl/trunk/editors/Lockenwickler/src/plugins/
Log:
- changed how modules are loaded (again)
- added a first version of the module explorer

Modified: rl/trunk/editors/Lockenwickler/Lockenwickler.e4p
===================================================================
--- rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/Lockenwickler.e4p	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,177 +1,179 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE Project SYSTEM "Project-4.5.dtd">
-<!-- eric4 project file for project Lockenwickler -->
-<!-- Saved: 2008-11-09, 21:48:49 -->
-<!-- Copyright (C) 2008 Stefan Stammberger, sstammberger at web.de -->
-<Project version="4.5">
-  <ProgLanguage mixed="0">Python</ProgLanguage>
-  <ProjectType>Qt4</ProjectType>
-  <Description>Lockenwickler is an Editor application for the Rastulahs Lockenpracht game.</Description>
-  <Version>0.1</Version>
-  <Author>Stefan Stammberger</Author>
-  <Email>sstammberger at web.de</Email>
-  <Sources>
-    <Source>src/Lockenwickler.py</Source>
-    <Source>src/ConsoleWindow.py</Source>
-    <Source>src/ModelSelectionDialog.py</Source>
-    <Source>src/ModuleManager.py</Source>
-    <Source>src/MovePivot.py</Source>
-    <Source>src/ObjectPropertyWin.py</Source>
-    <Source>src/OgreMainWindow.py</Source>
-    <Source>src/OgreWidget.py</Source>
-    <Source>src/PreferencesDialog.py</Source>
-    <Source>src/PythonOgreConfig.py</Source>
-    <Source>src/ui_ConsoleWindow.py</Source>
-    <Source>src/SceneExplorer.py</Source>
-    <Source>src/Property.py</Source>
-    <Source>src/ViewportGrid.py</Source>
-    <Source>src/ObjectPropertyModel.py</Source>
-    <Source>src/GameObjectClass.py</Source>
-    <Source>src/GameObjectClassManager.py</Source>
-    <Source>src/setup.py</Source>
-    <Source>src/GameObjectClassView.py</Source>
-    <Source>src/MyRaySceneQueryListener.py</Source>
-    <Source>src/GOStringEditor.py</Source>
-    <Source>src/GOIntEditor.py</Source>
-    <Source>src/CodeDump.py</Source>
-    <Source>src/NewModuleWizard.py</Source>
-  </Sources>
-  <Forms>
-    <Form>ui files/GOPropertyEditorDialogINT.ui</Form>
-    <Form>ui files/GOPropertyEditorDialogSTRING.ui</Form>
-    <Form>ui files/NewModuleWizard.ui</Form>
-  </Forms>
-  <Translations>
-  </Translations>
-  <Resources>
-  </Resources>
-  <Interfaces>
-  </Interfaces>
-  <Others>
-  </Others>
-  <MainScript>src/Lockenwickler.py</MainScript>
-  <Vcs>
-    <VcsType>Subversion</VcsType>
-    <VcsOptions>
-      <dict>
-        <key>
-          <string>add</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>checkout</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>commit</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>diff</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>export</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>global</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>history</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>log</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>remove</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>status</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>tag</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>update</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-      </dict>
-    </VcsOptions>
-    <VcsOtherData>
-      <dict>
-        <key>
-          <string>standardLayout</string>
-        </key>
-        <value>
-          <bool>True</bool>
-        </value>
-      </dict>
-    </VcsOtherData>
-  </Vcs>
-  <FiletypeAssociations>
-    <FiletypeAssociation pattern="*.ui" type="FORMS" />
-    <FiletypeAssociation pattern="*.idl" type="INTERFACES" />
-    <FiletypeAssociation pattern="*.qm" type="TRANSLATIONS" />
-    <FiletypeAssociation pattern="*.ptl" type="SOURCES" />
-    <FiletypeAssociation pattern="*.pyw" type="SOURCES" />
-    <FiletypeAssociation pattern="*.ui.h" type="FORMS" />
-    <FiletypeAssociation pattern="*.ts" type="TRANSLATIONS" />
-    <FiletypeAssociation pattern="*.py" type="SOURCES" />
-    <FiletypeAssociation pattern="*.qrc" type="RESOURCES" />
-  </FiletypeAssociations>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE Project SYSTEM "Project-4.6.dtd">
+<!-- eric4 project file for project Lockenwickler -->
+<!-- Saved: 2009-01-26, 17:27:44 -->
+<!-- Copyright (C) 2009 Stefan Stammberger, sstammberger at web.de -->
+<Project version="4.6">
+  <Language>en</Language>
+  <ProgLanguage mixed="0">Python</ProgLanguage>
+  <ProjectType>Qt4</ProjectType>
+  <Description>Lockenwickler is an Editor application for the Rastulahs Lockenpracht game.</Description>
+  <Version>0.1</Version>
+  <Author>Stefan Stammberger</Author>
+  <Email>sstammberger at web.de</Email>
+  <Sources>
+    <Source>src/Lockenwickler.py</Source>
+    <Source>src/ConsoleWindow.py</Source>
+    <Source>src/ModelSelectionDialog.py</Source>
+    <Source>src/ModuleManager.py</Source>
+    <Source>src/MovePivot.py</Source>
+    <Source>src/ObjectPropertyWin.py</Source>
+    <Source>src/OgreMainWindow.py</Source>
+    <Source>src/OgreWidget.py</Source>
+    <Source>src/PreferencesDialog.py</Source>
+    <Source>src/PythonOgreConfig.py</Source>
+    <Source>src/ui_ConsoleWindow.py</Source>
+    <Source>src/Property.py</Source>
+    <Source>src/ViewportGrid.py</Source>
+    <Source>src/ObjectPropertyModel.py</Source>
+    <Source>src/GameObjectClass.py</Source>
+    <Source>src/GameObjectClassManager.py</Source>
+    <Source>src/setup.py</Source>
+    <Source>src/GameObjectClassView.py</Source>
+    <Source>src/MyRaySceneQueryListener.py</Source>
+    <Source>src/GOStringEditor.py</Source>
+    <Source>src/GOIntEditor.py</Source>
+    <Source>src/CodeDump.py</Source>
+    <Source>src/NewModuleWizard.py</Source>
+    <Source>src/Ui_NewModuleWizard.py</Source>
+    <Source>src/ModuleExplorer.py</Source>
+  </Sources>
+  <Forms>
+    <Form>ui files/GOPropertyEditorDialogINT.ui</Form>
+    <Form>ui files/GOPropertyEditorDialogSTRING.ui</Form>
+    <Form>ui files/NewModuleWizard.ui</Form>
+  </Forms>
+  <Translations>
+  </Translations>
+  <Resources>
+  </Resources>
+  <Interfaces>
+  </Interfaces>
+  <Others>
+  </Others>
+  <MainScript>src/Lockenwickler.py</MainScript>
+  <Vcs>
+    <VcsType>None</VcsType>
+    <VcsOptions>
+      <dict>
+        <key>
+          <string>add</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>checkout</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>commit</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>diff</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>export</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>global</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>history</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>log</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>remove</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>status</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>tag</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>update</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+      </dict>
+    </VcsOptions>
+    <VcsOtherData>
+      <dict>
+        <key>
+          <string>standardLayout</string>
+        </key>
+        <value>
+          <bool>True</bool>
+        </value>
+      </dict>
+    </VcsOtherData>
+  </Vcs>
+  <FiletypeAssociations>
+    <FiletypeAssociation pattern="*.ui" type="FORMS" />
+    <FiletypeAssociation pattern="*.idl" type="INTERFACES" />
+    <FiletypeAssociation pattern="*.qm" type="TRANSLATIONS" />
+    <FiletypeAssociation pattern="*.ptl" type="SOURCES" />
+    <FiletypeAssociation pattern="*.pyw" type="SOURCES" />
+    <FiletypeAssociation pattern="*.ui.h" type="FORMS" />
+    <FiletypeAssociation pattern="*.ts" type="TRANSLATIONS" />
+    <FiletypeAssociation pattern="*.py" type="SOURCES" />
+    <FiletypeAssociation pattern="*.qrc" type="RESOURCES" />
+  </FiletypeAssociations>
 </Project>
\ No newline at end of file

Added: rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4q
===================================================================
--- rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4q	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4q	2009-01-26 18:35:47 UTC (rev 4721)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE UserProject SYSTEM "UserProject-4.0.dtd">
+<!-- eric4 user project file for project Lockenwickler -->
+<!-- Saved: 2009-01-26, 17:27:44 -->
+<!-- Copyright (C) 2009 Stefan Stammberger, sstammberger at web.de -->
+<UserProject version="4.0">
+</UserProject>
\ No newline at end of file

Added: rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4t
===================================================================
--- rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4t	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4t	2009-01-26 18:35:47 UTC (rev 4721)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE Tasks SYSTEM "Tasks-4.2.dtd">
+<!-- eric4 tasks file for project Lockenwickler -->
+<!-- Saved: 2009-01-26, 17:27:44 -->
+<Tasks version="4.2">
+  <Task priority="1" completed="False" bugfix="False">
+    <Summary>TODO: implement save here</Summary>
+    <Description></Description>
+    <Created>2009-01-26, 17:23:59</Created>
+    <Resource>
+      <Filename>src/Lockenwickler.py</Filename>
+      <Linenumber>416</Linenumber>
+    </Resource>
+  </Task>
+</Tasks>
\ No newline at end of file


Property changes on: rl/trunk/editors/Lockenwickler/src
___________________________________________________________________
Name: svn:ignore
   + ogre.cfg


Modified: rl/trunk/editors/Lockenwickler/src/GameObjectClass.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/GameObjectClass.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/GameObjectClass.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,208 +1,209 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-from elementtree.ElementTree import *
-
-from PyQt4.QtCore import *
-from PyQt4.QtGui import *
-
-import ogre.renderer.OGRE as og
-
-from GOStringEditor import *
-from GOIntEditor import *
-
-class GOCStringProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "STRING"
-
-    def openEditor(self, row, parent = None):
-        dlg = GOStringEditor(parent)
-        dlg.nameEdit.setText(self.name)
-        dlg.dataEdit.setText(self.data)
-        result = dlg.exec_()
-        if result:
-            self.name = dlg.nameEdit.text()
-            self.data = dlg.dataEdit.toPlainText()
-
-        return result
-
-class GOCRealProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "REAL"
-
-    def openEditor(self, row, parent = None):
-        dlg = GOStringEditor(parent)
-        dlg.nameEdit.setText(self.name)
-        dlg.dataEdit.setText(self.data)
-        result = dlg.exec_()
-        if result:
-            self.name = dlg.nameEdit.text()
-            self.data = dlg.dataEdit.toPlainText()
-
-        return result
-
-class GOCBoolProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "BOOL"
-
-class GOCIntProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "INT"
-
-    def openEditor(self, row, parent = None):
-        dlg = GOIntEditor(parent)
-        dlg.nameEdit.setText(self.name)
-        dlg.dataEdit.setText(self.data)
-        result = dlg.exec_()
-        if result:
-            self.name = dlg.nameEdit.text()
-            self.data = dlg.dataEdit.toPlainText()
-
-        return result
-
-class GOCIntPairProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "INTPAIR"
-
-class GOCIntTripleProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "INTTRIPPLE"
-
-class GOCMapProperty():
-    def __init__(self, name):
-        self.name = name
-        self.childProperties = []
-
-    def getType(self):
-        return "MAP"
-
-# gameObjectClass is the id of the class itself
-# since a game object can be ingame more than once there is also a id for those
-class GameObjectRepresentation(og.UserDefinedObject):
-    def __init__(self, inWorldId, gameObjectClass, node, meshFile = None):
-        og.UserDefinedObject.__init__(self)
-        self.inWorldId = inWorldId
-        self.gocName = gameObjectClass
-        self.node = node
-        self.meshFile = meshFile
-        self.state = "IN_SCENE"
-
-    def getType(self):
-        return "GAME_OBJECT_REPRESENTATION"
-
-    def setPosition(self, pos):
-        self.node.setPosition(pos)
-
-
-class GameObjectClass():
-    def __init__(self,  parentElement):
-        self.classid = parentElement.get("classid")
-        self.baseclass = parentElement.get("baseclass")
-
-        self.meshFile = None
-
-        self.properties = []
-
-        for property in parentElement:#.getiterator("property"):
-            if property.get("type") == "ARRAY":
-                pass
-            elif property.get("type") == "MAP":
-                self.properties.append(self.createPropertyMap(property))
-            else:
-                self.properties.append(self.createProperty(property))
-
-    def getType(self):
-        return "GAME_OBJECT"
-
-    def createPropertyMap(self, property):
-        propMap = GOCMapProperty(property.get("name"))
-        for subProperty in property:
-            if subProperty.get("type") == "MAP":
-                propMap.childProperties.append(self.createPropertyMap(property))
-            else:
-                for subProperty1 in property:
-                    propMap.childProperties.append(self.createProperty(subProperty1))
-
-        return propMap
-
-    def getMeshFileName(self):
-        if self.meshFile is None:
-            for prop in self.properties:
-                if prop.getType() == "STRING":
-                    if prop.name == "meshfile":
-                        self.meshFile = prop.data
-                        return self.meshFile
-            return None
-        else:
-            return self.meshFile
-
-
-    def createProperty(self, property):
-        if property.get("type") == "STRING":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCStringProperty(name, data)
-        elif property.get("type") == "REAL":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCRealProperty(name, data)
-        elif property.get("type") == "BOOL":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCBoolProperty(name, data)
-        elif property.get("type") == "INT":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCIntProperty(name, data)
-        elif property.get("type") == "INTPAIR":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCIntPairProperty(name, data)
-        elif property.get("type") == "INTTRIPLE":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCIntTripleProperty(name, data)
-        else:
-            print property.get("type")
-
-
-
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+#from elementtree.ElementTree import *
+from xml.etree.cElementTree import *
+
+from PyQt4.QtCore import *
+from PyQt4.QtGui import *
+
+import ogre.renderer.OGRE as og
+
+from GOStringEditor import *
+from GOIntEditor import *
+
+class GOCStringProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "STRING"
+
+    def openEditor(self, row, parent = None):
+        dlg = GOStringEditor(parent)
+        dlg.nameEdit.setText(self.name)
+        dlg.dataEdit.setText(self.data)
+        result = dlg.exec_()
+        if result:
+            self.name = dlg.nameEdit.text()
+            self.data = dlg.dataEdit.toPlainText()
+
+        return result
+
+class GOCRealProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "REAL"
+
+    def openEditor(self, row, parent = None):
+        dlg = GOStringEditor(parent)
+        dlg.nameEdit.setText(self.name)
+        dlg.dataEdit.setText(self.data)
+        result = dlg.exec_()
+        if result:
+            self.name = dlg.nameEdit.text()
+            self.data = dlg.dataEdit.toPlainText()
+
+        return result
+
+class GOCBoolProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "BOOL"
+
+class GOCIntProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "INT"
+
+    def openEditor(self, row, parent = None):
+        dlg = GOIntEditor(parent)
+        dlg.nameEdit.setText(self.name)
+        dlg.dataEdit.setText(self.data)
+        result = dlg.exec_()
+        if result:
+            self.name = dlg.nameEdit.text()
+            self.data = dlg.dataEdit.toPlainText()
+
+        return result
+
+class GOCIntPairProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "INTPAIR"
+
+class GOCIntTripleProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "INTTRIPPLE"
+
+class GOCMapProperty():
+    def __init__(self, name):
+        self.name = name
+        self.childProperties = []
+
+    def getType(self):
+        return "MAP"
+
+# gameObjectClass is the id of the class itself
+# since a game object can be ingame more than once there is also a id for those
+class GameObjectRepresentation(og.UserDefinedObject):
+    def __init__(self, inWorldId, gameObjectClass, node, meshFile = None):
+        og.UserDefinedObject.__init__(self)
+        self.inWorldId = inWorldId
+        self.gocName = gameObjectClass
+        self.node = node
+        self.meshFile = meshFile
+        self.state = "IN_SCENE"
+
+    def getType(self):
+        return "GAME_OBJECT_REPRESENTATION"
+
+    def setPosition(self, pos):
+        self.node.setPosition(pos)
+
+
+class GameObjectClass():
+    def __init__(self,  parentElement):
+        self.classid = parentElement.get("classid")
+        self.baseclass = parentElement.get("baseclass")
+
+        self.meshFile = None
+
+        self.properties = []
+
+        for property in parentElement:#.getiterator("property"):
+            if property.get("type") == "ARRAY":
+                pass
+            elif property.get("type") == "MAP":
+                self.properties.append(self.createPropertyMap(property))
+            else:
+                self.properties.append(self.createProperty(property))
+
+    def getType(self):
+        return "GAME_OBJECT"
+
+    def createPropertyMap(self, property):
+        propMap = GOCMapProperty(property.get("name"))
+        for subProperty in property:
+            if subProperty.get("type") == "MAP":
+                propMap.childProperties.append(self.createPropertyMap(property))
+            else:
+                for subProperty1 in property:
+                    propMap.childProperties.append(self.createProperty(subProperty1))
+
+        return propMap
+
+    def getMeshFileName(self):
+        if self.meshFile is None:
+            for prop in self.properties:
+                if prop.getType() == "STRING":
+                    if prop.name == "meshfile":
+                        self.meshFile = prop.data
+                        return self.meshFile
+            return None
+        else:
+            return self.meshFile
+
+
+    def createProperty(self, property):
+        if property.get("type") == "STRING":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCStringProperty(name, data)
+        elif property.get("type") == "REAL":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCRealProperty(name, data)
+        elif property.get("type") == "BOOL":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCBoolProperty(name, data)
+        elif property.get("type") == "INT":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCIntProperty(name, data)
+        elif property.get("type") == "INTPAIR":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCIntPairProperty(name, data)
+        elif property.get("type") == "INTTRIPLE":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCIntTripleProperty(name, data)
+        else:
+            print property.get("type")
+
+
+

Modified: rl/trunk/editors/Lockenwickler/src/GameObjectClassManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/GameObjectClassManager.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/GameObjectClassManager.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,52 +1,53 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-from elementtree.ElementTree import parse
-
-from GameObjectClass import *
-
-class GameObjectClassManager():
-    def __init__(self):
-        self.fileDict = {}
-        self.callback = None
-
-    def parseGOFFiles(self, filePaths):
-        for filePath in filePaths:
-            tree = parse(filePath)
-            gocList = []
-            for parent in tree.getiterator("gameobjectclass"): # return all allements with the "gameobjectclass" tag
-                go = GameObjectClass(parent)
-                gocList.append(go)
-
-            self.fileDict[filePath] = gocList
-
-        if self.callback is not None:
-            self.callback(self.fileDict)
-
-    def getGameObjectWithClassId(self, id):
-        for key in self.fileDict:
-            for go in self.fileDict[key]:
-                if go.classid == id:
-                    return go
-
-        return None
-
-        # whenever a gameobject changes outside of the view, the view has to update itself wth the new values
-    def setGameObjectsViewUpdateCallback(self, callback):
-        self.callback = callback
-
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+#from elementtree.ElementTree import parse
+from xml.etree.cElementTree import parse
+
+from GameObjectClass import *
+
+class GameObjectClassManager():
+    def __init__(self):
+        self.fileDict = {}
+        self.callback = None
+
+    def parseGOFFiles(self, filePaths):
+        for filePath in filePaths:
+            tree = parse(filePath)
+            gocList = []
+            for parent in tree.getiterator("gameobjectclass"): # return all allements with the "gameobjectclass" tag
+                go = GameObjectClass(parent)
+                gocList.append(go)
+
+            self.fileDict[filePath] = gocList
+
+        if self.callback is not None:
+            self.callback(self.fileDict)
+
+    def getGameObjectWithClassId(self, id):
+        for key in self.fileDict:
+            for go in self.fileDict[key]:
+                if go.classid == id:
+                    return go
+
+        return None
+
+        # whenever a gameobject changes outside of the view, the view has to update itself wth the new values
+    def setGameObjectsViewUpdateCallback(self, callback):
+        self.callback = callback
+

Modified: rl/trunk/editors/Lockenwickler/src/Lockenwickler.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/Lockenwickler.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,445 +1,447 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-
-import os
-import sys
-import platform
-
-#sys.path.insert(0,'..')
-#import PythonOgreConfig
-
-from random import randint
-
-from PyQt4 import QtGui, QtCore
-from PreferencesDialog import *
-from ObjectPropertyWin import *
-from ModelSelectionDialog import *
-from GameObjectClassView import *
-from ConsoleWindow import *
-from ModuleManager import *
-from SceneExplorer import *
-from NewModuleWizard import *
-
-import OgreMainWindow
-import ogre.renderer.OGRE as og
-
-class Lockenwickler(QtGui.QMainWindow):
-    def __init__(self, parent=None):
-        QtGui.QWidget.__init__(self, parent)
-
-        pixmap = QPixmap("media/icons/lockenwickler_provisorium.png")
-        splash = QSplashScreen(pixmap, Qt.WindowStaysOnTopHint)
-        splash.setMask(pixmap.mask())
-        splash.showMessage("Starting...")
-        splash.show()
-
-        self.setupUi()
-
-        self.consoleWindow = ConsoleWindow(False,  self)
-
-        self.setupOgre()
-
-        self.prefDialog = PreferencesDialog(self)
-        self.objectPropertyWin = ObjectPropertyWin(self)
-        self.sceneExplorerWin = SceneExplorer(self)
-        self.modelSelectionDialog = ModelSelectionDialog(self.ogreRoot, self)
-        self.moduleManager.modelSelectionDialog = self.modelSelectionDialog
-
-        self.gameObjectClassView = GameObjectClassView(self.moduleManager.gocManager)
-
-        self.createDockWindows()
-
-        self.mainTimer = QtCore.QTimer(self)
-        self.mainTimer.connect(self.mainTimer, QtCore.SIGNAL("timeout()"), self.update)
-        self.mainTimer.start(5)
-
-        settings = QtCore.QSettings()
-        self.restoreGeometry(settings.value("MainWindow/Geometry").toByteArray())
-        self.restoreState(settings.value("MainWindow/DockWindows").toByteArray())
-        if not self.prefDialog.setCfgPath(settings.value("Preferences/moduleCfgPath").toString()):
-            self.prefDialog.show()
-
-        self.setWindowIcon(QIcon("media/icons/lockenwickler_provisorium_small.png"))
-        self.setWindowTitle("Rastullahs Lockenwickler")
-
-
-#        # Import Psyco if available
-#        try:
-#            import psyco
-#            psyco.full()
-#            #psyco.log()
-#            #psyco.profile()
-#        except ImportError:
-#            pass
-
-        splash.finish(self)
-
-    def createAction(self, text, slot=None, shortcut=None, icon=None, tip=None, checkable=False, signal="triggered()"):
-        action = QtGui.QAction(text, self)
-        if icon is not None:
-            action.setIcon(QtGui.QIcon("media/icons/%s" % icon))
-        if shortcut is not None:
-            action.setShortcut(shortcut)
-        if tip is not None:
-            action.setToolTip(tip)
-            action.setStatusTip(tip)
-        if slot is not None:
-            self.connect(action, QtCore.SIGNAL(signal), slot)
-
-        action.setCheckable(checkable)
-
-        return action
-
-    def addActions(self, target, actions):
-        for act in actions:
-            if act is None:
-               target.addSeparator()
-            else:
-                target.addAction(act)
-
-    def setupUi(self):
-        self.setObjectName("MainWindow")
-
-        self.centralwidget = QtGui.QWidget(self)
-        self.centralwidget.setObjectName("centralwidget")
-
-        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
-        self.hboxlayout.setObjectName("hboxlayout")
-
-        self.gridlayout = QtGui.QGridLayout()
-        self.gridlayout.setObjectName("gridlayout")
-
-        self.menubar = QtGui.QMenuBar(self)
-        self.menubar.setObjectName("menubar")
-
-        self.menuFile = QtGui.QMenu(self.menubar)
-        self.menuFile.setObjectName("menuFile")
-
-        self.menuEdit = QtGui.QMenu(self.menubar)
-        self.menuEdit.setObjectName("menuEdit")
-
-        self.menuView = QtGui.QMenu(self.menubar)
-        self.menuView.setObjectName("menuView")
-        self.setMenuBar(self.menubar)
-
-
-        self.statusbar = QtGui.QStatusBar(self)
-        self.statusbar.setObjectName("statusbar")
-        self.setStatusBar(self.statusbar)
-
-#####################################
-        self.actionNeu =self.createAction("&New Module",  self.actionNewSlot,  QKeySequence.New,  "filenew.png",  "New Module")
-        self.actionNeu.setObjectName("actionNeu")
-
-        self.actionOpen = self.createAction("&Open Module",  self.actionOpenSlot,  QKeySequence.Open,  "filenew.png",  "Open Module")
-        self.actionOpen.setObjectName("actionOpen")
-
-        self.actionClose = self.createAction("Quit",  self.actionQuitSlot,  "Alt + Q",  "exit.png",  "Quit")
-        self.actionClose.setObjectName("actionQuit")
-#####################################
-
-
-#####################################
-        self.actionDelete = self.createAction("Delete",  self.actionDeleteSlot,  QKeySequence.Delete,  "editdelete.png",  "Delete")
-        self.actionDelete.setObjectName("actionDelete")
-
-        self.actionCopy = self.createAction("Copy",  self.actionCopySlot,  QKeySequence.Copy,  "editcopy.png",  "Copy")
-        self.actionCopy.setObjectName("actionCopy")
-
-        self.actionCut = self.createAction("Cut",  self.actionCutSlot,  QKeySequence.Cut,  "editcut.png",  "Cut")
-        self.actionCut.setObjectName("actionCut")
-
-        self.actionPaste = self.createAction("Paste",  self.actionPasteSlot,  QKeySequence.Paste,  "editpaste.png",  "Paste")
-        self.actionPaste.setObjectName("actionPaste")
-
-        self.actionSelect = self.createAction("&Select",  self.actionSelectSlot,  "Space",  "cursor.png",  "Move selected object")
-        self.actionSelect.setObjectName("actionSelect")
-
-        self.actionMove = self.createAction("&Move",  self.actionMoveSlot,  "g",  "move.png",  "Move selected object")
-        self.actionMove.setObjectName("actionMove")
-
-        self.actionRotate = self.createAction("&Rotate",  self.actionRotateSlot,  "r",  "rotate.png",  "Rotate selected object")
-        self.actionRotate.setObjectName("actionRotate")
-
-        self.actionScale = self.createAction("&Scale",  self.actionScaleSlot,  "x",  "resizecol.png",  "Scale selected object")
-        self.actionRotate.setObjectName("actionRotate")
-
-
-#####################################
-#####################################
-        self.actionSceneExplorer = self.createAction("&Scene Exlporer",  self.toggleSceneExplorer,  "Alt + E",  "view_tree.png",  "Scene Explorer",  False)
-        self.actionSceneExplorer.setObjectName("actionSceneExplorer")
-
-        self.actionPreferences = self.createAction("&Preferences",  self.togglePreferencesWindow,  "Alt + P",  "configure.png",  "Lockenwickler Preferences",  False)
-        self.actionPreferences.setObjectName("actionPreferences")
-
-        self.actionProperty_Window = self.createAction("Pr&operty Window",  self.togglePropertyWindow,  "Alt + P",  "unsortedlist1.png",  "Property Window")
-        self.actionProperty_Window.setObjectName("actionProperty_Window")
-
-        self.actionObject_Selection = self.createAction("&Model Preview Window",  self.toggleModelPreviewWindow,  "Alt + O",  "tux.png",  "Model Preview")
-        self.actionObject_Selection.setObjectName("actionObject_Selection")
-
-        self.actionGameObjectClass_Selection = self.createAction("&Game Object Class Preview Window",  self.toggleGameObjectViewWindow,  "Alt + G",  "multirow.png",  "GameObjectClass Preview")
-        self.actionGameObjectClass_Selection.setObjectName("actionObject_Selection")
-
-        self.actionConsole_Window = self.createAction("&Console Window",  self.toggleConsoleWindow,  "Alt + C",  "console.png",  "Console Window")
-        self.actionConsole_Window.setObjectName("actionConsole_Window")
-
-#####################################
-#####################################
-
-
-        self.menuFile.addAction(self.actionNeu)
-        self.menuFile.addAction(self.actionOpen)
-        self.menuFile.addAction(self.actionClose)
-
-        self.menuEdit.addAction(self.actionSelect)
-        self.menuEdit.addAction(self.actionMove)
-        self.menuEdit.addAction(self.actionRotate)
-        self.menuEdit.addAction(self.actionScale)
-        self.menuEdit.addSeparator()
-        self.menuEdit.addAction(self.actionDelete)
-        self.menuEdit.addAction(self.actionCopy)
-        self.menuEdit.addAction(self.actionCut)
-        self.menuEdit.addAction(self.actionPaste)
-
-        self.menuView.addAction(self.actionSceneExplorer)
-        self.menuView.addAction(self.actionPreferences)
-        self.menuView.addAction(self.actionProperty_Window)
-        self.menuView.addAction(self.actionObject_Selection)
-        self.menuView.addAction(self.actionGameObjectClass_Selection)
-        self.menuView.addAction(self.actionConsole_Window)
-        self.menubar.addAction(self.menuFile.menuAction())
-        self.menubar.addAction(self.menuEdit.menuAction())
-        self.menubar.addAction(self.menuView.menuAction())
-
-        self.retranslateUi()
-        QtCore.QMetaObject.connectSlotsByName(self)
-
-    def retranslateUi(self):
-        self.setWindowTitle(QtGui.QApplication.translate("MainWindow", "MainWindow", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuFile.setTitle(QtGui.QApplication.translate("MainWindow", "File", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuEdit.setTitle(QtGui.QApplication.translate("MainWindow", "Edit", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuView.setTitle(QtGui.QApplication.translate("MainWindow", "View", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionNeu.setText(QtGui.QApplication.translate("MainWindow", "New Module", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionMove.setText(QtGui.QApplication.translate("MainWindow", "Move", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionRotate.setText(QtGui.QApplication.translate("MainWindow", "Rotate", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionSceneExplorer.setText(QtGui.QApplication.translate("MainWindow", "Scene Explorer", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionPreferences.setText(QtGui.QApplication.translate("MainWindow", "Preferences", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionProperty_Window.setText(QtGui.QApplication.translate("MainWindow", "Property Window", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionObject_Selection.setText(QtGui.QApplication.translate("MainWindow", "Object Selection", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionClose.setText(QtGui.QApplication.translate("MainWindow", "Quit", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionConsole_Window.setText(QtGui.QApplication.translate("MainWindow", "Console Window", None, QtGui.QApplication.UnicodeUTF8))
-
-    def setupOgre(self, pluginCfgPath="./Plugins.cfg", ogreCfgPath="./ogre.cfg", logPath="./ogre.log"):
-        if platform.system() == "Windows":
-            pluginCfgPath="./Plugins-windows.cfg"
-        else:
-            pluginCfgPath="./Plugins-linux.cfg"
-
-        root = og.Root(pluginCfgPath, ogreCfgPath, logPath)
-        self.ogreRoot = root
-
-        if  not self.ogreRoot.restoreConfig() and not self.ogreRoot.showConfigDialog():
-            sys.exit('Quit from Config Dialog')
-
-        root.initialise(False)
-
-        self.OgreMainWinSceneMgr = self.ogreRoot.createSceneManager(og.ST_GENERIC, "OgreMainWinSceneMgr")
-        self.OgreMainWinSceneMgr.ambientLight = og.ColourValue(4, 4, 4)
-
-        self.moduleName = ""
-        self.moduleManager = ModuleManager(self.ogreRoot,  self.OgreMainWinSceneMgr)
-
-        self.ogreRenderWindow = OgreMainWindow.OgreMainWindow(self.moduleManager,  root,  self.OgreMainWinSceneMgr,  self)
-        self.gridlayout.addWidget(self.ogreRenderWindow,0,0,1,1)
-        self.hboxlayout.addLayout(self.gridlayout)
-        self.setCentralWidget(self.centralwidget)
-
-        og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
-        og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
-
-        self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)
-        self.moduleManager.pivot.hide()
-
-        oglog = og.LogManager.getSingleton().getDefaultLog()
-        oglog.addListener(self.consoleWindow.lockenLog)
-
-    def update(self):
-        self.ogreRoot.renderOneFrame()
-
-    def actionOpenSlot(self):
-        self.moduleManager.openLoadModuleDialog(self.prefDialog.lineEdit.text(), self)
-
-    def actionNewSlot(self):
-        newModuleWiz = NewModuleWizard(self)
-        newModuleWiz.exec_()
-        return
-
-    def actionQuitSlot(self):
-        self.close()
-
-    def actionDeleteSlot(self):
-        self.moduleManager.deleteObjects()
-
-    def actionCopySlot(self):
-        self.moduleManager.copyObjects()
-
-    def actionCutSlot(self):
-        self.moduleManager.cutObjects()
-
-    def actionPasteSlot(self):
-        self.moduleManager.pasteObjects(self.ogreRenderWindow.getCameraToViewportRay())
-
-    def actionSelectSlot(self):
-        self.moduleManager.pivot.hide()
-
-    def actionMoveSlot(self):
-        self.moduleManager.pivot.setMoveMode()
-
-    def actionRotateSlot(self):
-        self.moduleManager.pivot.setRotateMode()
-
-    def actionScaleSlot(self):
-        self.moduleManager.pivot.setScaleMode()
-
-    def togglePreferencesWindow(self):
-        if self.prefDialog.isHidden():
-            self.prefDialog.show()
-        else:
-            self.prefDialog.hide()
-
-    def toggleModelPreviewWindow(self):
-        if self.modelSelectionDock.isHidden():
-            self.modelSelectionDock.show()
-        else:
-            self.modelSelectionDock.hide()
-
-    def toggleGameObjectViewWindow(self):
-        if self.gameObjectClassViewDock.isHidden():
-            self.gameObjectClassViewDock.show()
-        else:
-            self.gameObjectClassViewDock.hide()
-
-    def toggleSceneExplorer(self):
-        if self.sceneExplorerDock.isHidden():
-            self.sceneExplorerDock.show()
-        else:
-            self.sceneExplorerDock.hide()
-
-    def togglePropertyWindow(self):
-        if self.propertyDock.isHidden():
-            self.propertyDock.show()
-        else:
-            self.propertyDock.hide()
-
-    def toggleConsoleWindow(self):
-        if self.consoleDock.isHidden():
-            self.consoleDock.show()
-        else:
-            self.consoleDock.hide()
-
-    def createDockWindows(self):
-        self.propertyDock = QtGui.QDockWidget(self.tr("Properties"), self)
-        self.propertyDock.setObjectName("PropertyDockWindow")
-        self.propertyDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.propertyDock.setWidget(self.objectPropertyWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.propertyDock)
-
-        self.modelSelectionDock = QtGui.QDockWidget(self.tr("Models"), self)
-        self.modelSelectionDock.setObjectName("ModelSelectionDockWindow")
-        self.modelSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.modelSelectionDock.setWidget(self.modelSelectionDialog)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.modelSelectionDock)
-
-        self.gameObjectClassViewDock = QtGui.QDockWidget(self.tr("GameObjectClasses"), self)
-        self.gameObjectClassViewDock.setObjectName("GameObjectClassView")
-        self.gameObjectClassViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.gameObjectClassViewDock.setWidget(self.gameObjectClassView)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.gameObjectClassViewDock)
-
-        self.sceneExplorerDock = QtGui.QDockWidget(self.tr("Scene Explorer"), self)
-        self.sceneExplorerDock.setObjectName("SceneExplorerDockWindow")
-        self.sceneExplorerDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.sceneExplorerDock.setWidget(self.sceneExplorerWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.sceneExplorerDock)
-
-        self.consoleDock = QtGui.QDockWidget(self.tr("Console"), self)
-        self.consoleDock.setObjectName("ConsoleDockWindow")
-        self.consoleDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea | QtCore.Qt.TopDockWidgetArea)
-        self.consoleDock.setWidget(self.consoleWindow)
-        self.addDockWidget(QtCore.Qt.BottomDockWidgetArea, self.consoleDock)
-
-        self.fileToolBar = self.addToolBar("File Toolbar")
-        self.fileToolBar.setObjectName("FileToolBar")
-        self.fileToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
-        self.fileToolBar.addAction(self.actionNeu)
-        self.fileToolBar.addAction(self.actionClose)
-        self.addToolBar(QtCore.Qt.TopToolBarArea, self.fileToolBar)
-
-        self.moveToolBar = self.addToolBar("Transformation Bar")
-        self.moveToolBar.setObjectName("TransformationBar")
-        self.moveToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
-        self.moveToolBar.addAction(self.actionSelect)
-        self.moveToolBar.addAction(self.actionMove)
-        self.moveToolBar.addAction(self.actionRotate)
-        self.moveToolBar.addAction(self.actionScale)
-        self.addToolBar(QtCore.Qt.TopToolBarArea, self.moveToolBar)
-
-    def keyPressEvent(self,  event):
-        if not event.isAutoRepeat():
-            self.ogreRenderWindow.keyPressEvent(event)
-
-    def keyReleaseEvent(self,  event):
-        if not event.isAutoRepeat():
-            self.ogreRenderWindow.keyReleaseEvent(event)
-        pass
-
-    def connectActionButtons(self):
-        pass
-
-    def saveOnClose(self):
-        reply = QtGui.QMessageBox.question(self,  "Rastullahs Lockenwickler - Unsaved Chages",  "Save unsaved changes?",  QtGui.QMessageBox.Yes|QtGui.QMessageBox.No|QtGui.QMessageBox.Cancel)
-        if reply == QtGui.QMessageBox.Cancel:
-            return False
-        if reply == QtGui.QMessageBox.Yes:
-            print""
-            #TODO: implement save here
-        return True
-
-    def closeEvent(self,  event):
-        if self.saveOnClose():
-            settings = QtCore.QSettings()
-            settings.setValue("Preferences/moduleCfgPath", QtCore.QVariant(self.prefDialog.lineEdit.text()))
-            settings.setValue("MainWindow/Geometry",  QtCore.QVariant(self.saveGeometry()))
-            settings.setValue("MainWIndow/DockWindows",  QtCore.QVariant(self.saveState()))
-        else:
-            event.ignore()
-
-if __name__ == "__main__":
-    app = QtGui.QApplication(sys.argv)
-    app.setOrganizationName("Team Pantheon")
-    app.setOrganizationDomain("rastullahs-lockenpracht.de/team")
-    app.setApplicationName("Lockenwickler")
-
-    form = Lockenwickler()
-    form.show()
-
-    sys.exit(app.exec_())
-
+ #################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+
+import os
+import sys
+import platform
+
+sys.path.insert(0,'..')
+import PythonOgreConfig
+
+from random import randint
+
+from PyQt4 import QtGui, QtCore
+from PreferencesDialog import *
+from ObjectPropertyWin import *
+from ModelSelectionDialog import *
+from GameObjectClassView import *
+from ConsoleWindow import *
+from ModuleManager import *
+from ModuleExplorer import *
+from NewModuleWizard import *
+
+import OgreMainWindow
+import ogre.renderer.OGRE as og
+
+class Lockenwickler(QtGui.QMainWindow):
+    def __init__(self, parent=None):
+        QtGui.QWidget.__init__(self, parent)
+
+#        pixmap = QPixmap("media/icons/lockenwickler_provisorium.png")
+#        splash = QSplashScreen(pixmap, Qt.WindowStaysOnTopHint)
+#        splash.setMask(pixmap.mask())
+#        splash.showMessage("Starting...")
+#        splash.show()
+
+        self.setupUi()
+
+        self.consoleWindow = ConsoleWindow(False,  self)
+
+        self.setupOgre()
+
+        self.prefDialog = PreferencesDialog(self)
+        self.objectPropertyWin = ObjectPropertyWin(self)
+        self.moduleExplorerWin = ModuleExplorer(self)
+        self.modelSelectionDialog = ModelSelectionDialog(self.ogreRoot, self)
+        self.moduleManager.modelSelectionDialog = self.modelSelectionDialog
+
+        self.gameObjectClassView = GameObjectClassView(self.moduleManager.gocManager)
+
+        self.createDockWindows()
+
+        self.mainTimer = QtCore.QTimer(self)
+        self.mainTimer.connect(self.mainTimer, QtCore.SIGNAL("timeout()"), self.update)
+        self.mainTimer.start(5)
+
+        settings = QtCore.QSettings()
+        self.restoreGeometry(settings.value("MainWindow/Geometry").toByteArray())
+        self.restoreState(settings.value("MainWindow/DockWindows").toByteArray())
+        if not self.prefDialog.setCfgPath(settings.value("Preferences/moduleCfgPath").toString()):
+            self.prefDialog.show()
+
+        self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
+        self.moduleManager.moduleExplorer = self.moduleExplorerWin
+        
+        self.setWindowIcon(QIcon("media/icons/lockenwickler_provisorium_small.png"))
+        self.setWindowTitle("Rastullahs Lockenwickler")
+
+#        splash.finish(self)
+
+    def createAction(self, text, slot=None, shortcut=None, icon=None, tip=None, checkable=False, signal="triggered()"):
+        action = QtGui.QAction(text, self)
+        if icon is not None:
+            action.setIcon(QtGui.QIcon("media/icons/%s" % icon))
+        if shortcut is not None:
+            action.setShortcut(shortcut)
+        if tip is not None:
+            action.setToolTip(tip)
+            action.setStatusTip(tip)
+        if slot is not None:
+            self.connect(action, QtCore.SIGNAL(signal), slot)
+
+        action.setCheckable(checkable)
+
+        return action
+
+    def addActions(self, target, actions):
+        for act in actions:
+            if act is None:
+               target.addSeparator()
+            else:
+                target.addAction(act)
+
+    def setupUi(self):
+        self.setObjectName("MainWindow")
+
+        self.centralwidget = QtGui.QWidget(self)
+        self.centralwidget.setObjectName("centralwidget")
+
+        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
+        self.hboxlayout.setObjectName("hboxlayout")
+
+        self.gridlayout = QtGui.QGridLayout()
+        self.gridlayout.setObjectName("gridlayout")
+
+        self.menubar = QtGui.QMenuBar(self)
+        self.menubar.setObjectName("menubar")
+
+        self.menuFile = QtGui.QMenu(self.menubar)
+        self.menuFile.setObjectName("menuFile")
+
+        self.menuEdit = QtGui.QMenu(self.menubar)
+        self.menuEdit.setObjectName("menuEdit")
+
+        self.menuView = QtGui.QMenu(self.menubar)
+        self.menuView.setObjectName("menuView")
+        self.setMenuBar(self.menubar)
+
+
+        self.statusbar = QtGui.QStatusBar(self)
+        self.statusbar.setObjectName("statusbar")
+        self.setStatusBar(self.statusbar)
+
+#####################################
+        self.actionNeu =self.createAction("&New Module",  self.actionNewSlot,  QKeySequence.New,  "filenew.png",  "New Module")
+        self.actionNeu.setObjectName("actionNeu")
+
+        self.actionOpen = self.createAction("&Open Module",  self.actionOpenSlot,  QKeySequence.Open,  "filenew.png",  "Open Module")
+        self.actionOpen.setObjectName("actionOpen")
+
+        self.actionClose = self.createAction("Quit",  self.actionQuitSlot,  "Alt + Q",  "exit.png",  "Quit")
+        self.actionClose.setObjectName("actionQuit")
+#####################################
+
+
+#####################################
+        self.actionDelete = self.createAction("Delete",  self.actionDeleteSlot,  QKeySequence.Delete,  "editdelete.png",  "Delete")
+        self.actionDelete.setObjectName("actionDelete")
+
+        self.actionCopy = self.createAction("Copy",  self.actionCopySlot,  QKeySequence.Copy,  "editcopy.png",  "Copy")
+        self.actionCopy.setObjectName("actionCopy")
+
+        self.actionCut = self.createAction("Cut",  self.actionCutSlot,  QKeySequence.Cut,  "editcut.png",  "Cut")
+        self.actionCut.setObjectName("actionCut")
+
+        self.actionPaste = self.createAction("Paste",  self.actionPasteSlot,  QKeySequence.Paste,  "editpaste.png",  "Paste")
+        self.actionPaste.setObjectName("actionPaste")
+
+        self.actionSelect = self.createAction("&Select",  self.actionSelectSlot,  "Space",  "cursor.png",  "Move selected object")
+        self.actionSelect.setObjectName("actionSelect")
+
+        self.actionMove = self.createAction("&Move",  self.actionMoveSlot,  "g",  "move.png",  "Move selected object")
+        self.actionMove.setObjectName("actionMove")
+
+        self.actionRotate = self.createAction("&Rotate",  self.actionRotateSlot,  "r",  "rotate.png",  "Rotate selected object")
+        self.actionRotate.setObjectName("actionRotate")
+
+        self.actionScale = self.createAction("&Scale",  self.actionScaleSlot,  "x",  "resizecol.png",  "Scale selected object")
+        self.actionRotate.setObjectName("actionRotate")
+
+
+#####################################
+#####################################
+        self.actionSceneExplorer = self.createAction("&Scene Exlporer",  self.toggleModuleExplorer,  "Alt + E",  "view_tree.png",  "Module Explorer",  False)
+        self.actionSceneExplorer.setObjectName("actionSceneExplorer")
+        
+        self.actionPreferences = self.createAction("&Preferences",  self.togglePreferencesWindow,  "Alt + P",  "configure.png",  "Lockenwickler Preferences",  False)
+        self.actionPreferences.setObjectName("actionPreferences")
+
+        self.actionProperty_Window = self.createAction("Pr&operty Window",  self.togglePropertyWindow,  "Alt + P",  "unsortedlist1.png",  "Property Window")
+        self.actionProperty_Window.setObjectName("actionProperty_Window")
+
+        self.actionObject_Selection = self.createAction("&Model Preview Window",  self.toggleModelPreviewWindow,  "Alt + O",  "tux.png",  "Model Preview")
+        self.actionObject_Selection.setObjectName("actionObject_Selection")
+
+        self.actionGameObjectClass_Selection = self.createAction("&Game Object Class Preview Window",  self.toggleGameObjectViewWindow,  "Alt + G",  "multirow.png",  "GameObjectClass Preview")
+        self.actionGameObjectClass_Selection.setObjectName("actionObject_Selection")
+
+        self.actionConsole_Window = self.createAction("&Console Window",  self.toggleConsoleWindow,  "Alt + C",  "console.png",  "Console Window")
+        self.actionConsole_Window.setObjectName("actionConsole_Window")
+
+#####################################
+#####################################
+
+
+        self.menuFile.addAction(self.actionNeu)
+        self.menuFile.addAction(self.actionOpen)
+        self.menuFile.addAction(self.actionClose)
+
+        self.menuEdit.addAction(self.actionSelect)
+        self.menuEdit.addAction(self.actionMove)
+        self.menuEdit.addAction(self.actionRotate)
+        self.menuEdit.addAction(self.actionScale)
+        self.menuEdit.addSeparator()
+        self.menuEdit.addAction(self.actionDelete)
+        self.menuEdit.addAction(self.actionCopy)
+        self.menuEdit.addAction(self.actionCut)
+        self.menuEdit.addAction(self.actionPaste)
+
+        self.menuView.addAction(self.actionSceneExplorer)
+        self.menuView.addAction(self.actionPreferences)
+        self.menuView.addAction(self.actionProperty_Window)
+        self.menuView.addAction(self.actionObject_Selection)
+        self.menuView.addAction(self.actionGameObjectClass_Selection)
+        self.menuView.addAction(self.actionConsole_Window)
+        self.menubar.addAction(self.menuFile.menuAction())
+        self.menubar.addAction(self.menuEdit.menuAction())
+        self.menubar.addAction(self.menuView.menuAction())
+
+        self.retranslateUi()
+        QtCore.QMetaObject.connectSlotsByName(self)
+
+    def retranslateUi(self):
+        self.setWindowTitle(QtGui.QApplication.translate("MainWindow", "MainWindow", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuFile.setTitle(QtGui.QApplication.translate("MainWindow", "File", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuEdit.setTitle(QtGui.QApplication.translate("MainWindow", "Edit", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuView.setTitle(QtGui.QApplication.translate("MainWindow", "View", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionNeu.setText(QtGui.QApplication.translate("MainWindow", "New Module", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionMove.setText(QtGui.QApplication.translate("MainWindow", "Move", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionRotate.setText(QtGui.QApplication.translate("MainWindow", "Rotate", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionSceneExplorer.setText(QtGui.QApplication.translate("MainWindow", "Module Explorer", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionPreferences.setText(QtGui.QApplication.translate("MainWindow", "Preferences", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionProperty_Window.setText(QtGui.QApplication.translate("MainWindow", "Property Window", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionObject_Selection.setText(QtGui.QApplication.translate("MainWindow", "Object Selection", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionClose.setText(QtGui.QApplication.translate("MainWindow", "Quit", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionConsole_Window.setText(QtGui.QApplication.translate("MainWindow", "Console Window", None, QtGui.QApplication.UnicodeUTF8))
+
+    def setupOgre(self, pluginCfgPath="./Plugins.cfg", ogreCfgPath="./ogre.cfg", logPath="./ogre.log"):
+        if platform.system() == "Windows":
+            pluginCfgPath="./Plugins-windows.cfg"
+        else:
+            pluginCfgPath="./Plugins-linux.cfg"
+
+        root = og.Root(pluginCfgPath, ogreCfgPath, logPath)
+        self.ogreRoot = root
+
+        if  not self.ogreRoot.restoreConfig() and not self.ogreRoot.showConfigDialog():
+            sys.exit('Quit from Config Dialog')
+
+        root.initialise(False)
+
+        self.OgreMainWinSceneMgr = self.ogreRoot.createSceneManager(og.ST_GENERIC, "OgreMainWinSceneMgr")
+        self.OgreMainWinSceneMgr.ambientLight = og.ColourValue(4, 4, 4)
+
+        self.moduleName = ""
+        self.moduleManager = ModuleManager(self.ogreRoot,  self.OgreMainWinSceneMgr)
+
+        self.ogreRenderWindow = OgreMainWindow.OgreMainWindow(self.moduleManager,  root,  self.OgreMainWinSceneMgr,  self)
+        self.gridlayout.addWidget(self.ogreRenderWindow,0,0,1,1)
+        self.hboxlayout.addLayout(self.gridlayout)
+        self.setCentralWidget(self.centralwidget)
+
+        og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
+        og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
+
+        self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)
+        self.moduleManager.pivot.hide()
+
+        oglog = og.LogManager.getSingleton().getDefaultLog()
+        oglog.addListener(self.consoleWindow.lockenLog)
+
+    def update(self):
+        self.ogreRoot.renderOneFrame()
+
+    def actionOpenSlot(self):
+        self.moduleManager.openLoadModuleDialog()
+
+    def actionNewSlot(self):
+        newModuleWiz = NewModuleWizard(self.moduleManager, self)
+        newModuleWiz.exec_()
+        return
+
+    def actionQuitSlot(self):
+        self.close()
+
+    def actionDeleteSlot(self):
+        self.moduleManager.deleteObjects()
+
+    def actionCopySlot(self):
+        self.moduleManager.copyObjects()
+
+    def actionCutSlot(self):
+        self.moduleManager.cutObjects()
+
+    def actionPasteSlot(self):
+        self.moduleManager.pasteObjects(self.ogreRenderWindow.getCameraToViewportRay())
+
+    def actionSelectSlot(self):
+        self.moduleManager.pivot.hide()
+
+    def actionMoveSlot(self):
+        self.moduleManager.pivot.setMoveMode()
+
+    def actionRotateSlot(self):
+        self.moduleManager.pivot.setRotateMode()
+
+    def actionScaleSlot(self):
+        self.moduleManager.pivot.setScaleMode()
+
+    def togglePreferencesWindow(self):
+        if self.prefDialog.isHidden():
+            self.prefDialog.show()
+        else:
+            self.prefDialog.hide()
+
+    def toggleModelPreviewWindow(self):
+        if self.modelSelectionDock.isHidden():
+            self.modelSelectionDock.show()
+        else:
+            self.modelSelectionDock.hide()
+
+    def toggleGameObjectViewWindow(self):
+        if self.gameObjectClassViewDock.isHidden():
+            self.gameObjectClassViewDock.show()
+        else:
+            self.gameObjectClassViewDock.hide()
+
+    def toggleModuleExplorer(self):
+        if self.moduleExplorerDock.isHidden():
+            self.moduleExplorerDock.show()
+        else:
+            self.moduleExplorerDock.hide()
+
+    def togglePropertyWindow(self):
+        if self.propertyDock.isHidden():
+            self.propertyDock.show()
+        else:
+            self.propertyDock.hide()
+
+    def toggleConsoleWindow(self):
+        if self.consoleDock.isHidden():
+            self.consoleDock.show()
+        else:
+            self.consoleDock.hide()
+
+    def createDockWindows(self):
+        self.propertyDock = QtGui.QDockWidget(self.tr("Properties"), self)
+        self.propertyDock.setObjectName("PropertyDockWindow")
+        self.propertyDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.propertyDock.setWidget(self.objectPropertyWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.propertyDock)
+
+        self.modelSelectionDock = QtGui.QDockWidget(self.tr("Models"), self)
+        self.modelSelectionDock.setObjectName("ModelSelectionDockWindow")
+        self.modelSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.modelSelectionDock.setWidget(self.modelSelectionDialog)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.modelSelectionDock)
+
+        self.gameObjectClassViewDock = QtGui.QDockWidget(self.tr("GameObjectClasses"), self)
+        self.gameObjectClassViewDock.setObjectName("GameObjectClassView")
+        self.gameObjectClassViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.gameObjectClassViewDock.setWidget(self.gameObjectClassView)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.gameObjectClassViewDock)
+
+        self.moduleExplorerDock = QtGui.QDockWidget(self.tr("Module Explorer"), self)
+        self.moduleExplorerDock.setObjectName("SceneExplorerDockWindow")
+        self.moduleExplorerDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.moduleExplorerDock.setWidget(self.moduleExplorerWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleExplorerDock)
+
+        self.consoleDock = QtGui.QDockWidget(self.tr("Console"), self)
+        self.consoleDock.setObjectName("ConsoleDockWindow")
+        self.consoleDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea | QtCore.Qt.TopDockWidgetArea)
+        self.consoleDock.setWidget(self.consoleWindow)
+        self.addDockWidget(QtCore.Qt.BottomDockWidgetArea, self.consoleDock)
+
+        self.fileToolBar = self.addToolBar("File Toolbar")
+        self.fileToolBar.setObjectName("FileToolBar")
+        self.fileToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
+        self.fileToolBar.addAction(self.actionNeu)
+        self.fileToolBar.addAction(self.actionClose)
+        self.addToolBar(QtCore.Qt.TopToolBarArea, self.fileToolBar)
+
+        self.moveToolBar = self.addToolBar("Transformation Bar")
+        self.moveToolBar.setObjectName("TransformationBar")
+        self.moveToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
+        self.moveToolBar.addAction(self.actionSelect)
+        self.moveToolBar.addAction(self.actionMove)
+        self.moveToolBar.addAction(self.actionRotate)
+        self.moveToolBar.addAction(self.actionScale)
+        self.addToolBar(QtCore.Qt.TopToolBarArea, self.moveToolBar)
+
+    def keyPressEvent(self,  event):
+        if not event.isAutoRepeat():
+            self.ogreRenderWindow.keyPressEvent(event)
+
+    def keyReleaseEvent(self,  event):
+        if not event.isAutoRepeat():
+            self.ogreRenderWindow.keyReleaseEvent(event)
+        pass
+
+    def connectActionButtons(self):
+        pass
+
+    def saveOnClose(self):
+        reply = QtGui.QMessageBox.question(self,  "Rastullahs Lockenwickler - Unsaved Chages",  "Save unsaved changes?",  QtGui.QMessageBox.Yes|QtGui.QMessageBox.No|QtGui.QMessageBox.Cancel)
+        if reply == QtGui.QMessageBox.Cancel:
+            return False
+        if reply == QtGui.QMessageBox.Yes:
+            print""
+            #TODO: implement save here
+        return True
+
+    def closeEvent(self,  event):
+        if self.saveOnClose():
+            settings = QtCore.QSettings()
+            settings.setValue("Preferences/moduleCfgPath", QtCore.QVariant(self.prefDialog.lineEdit.text()))
+            settings.setValue("MainWindow/Geometry",  QtCore.QVariant(self.saveGeometry()))
+            settings.setValue("MainWIndow/DockWindows",  QtCore.QVariant(self.saveState()))
+        else:
+            event.ignore()
+
+if __name__ == "__main__":
+#    # Import Psyco if available
+#    try:
+##        import psyco
+##        psyco.full(0.02)
+#        #psyco.log()
+#        #psyco.profile()
+#    except ImportError:
+#        pass
+    
+    app = QtGui.QApplication(sys.argv)
+    app.setOrganizationName("Team Pantheon")
+    app.setOrganizationDomain("rastullahs-lockenpracht.de/team")
+    app.setApplicationName("Lockenwickler")
+
+    form = Lockenwickler()
+    form.show()
+
+    sys.exit(app.exec_())
+

Added: rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -0,0 +1,61 @@
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+
+import sys
+from PyQt4.QtCore import *
+from PyQt4.QtGui import *
+import ogre.renderer.OGRE as og
+
+class ModuleExplorer(QWidget):
+    def __init__(self, parent=None):
+        QWidget.__init__(self, parent)
+        self.sceneTreeView = QTreeWidget()
+
+        vBoxLayout = QVBoxLayout()
+        vBoxLayout.addWidget(self.sceneTreeView)
+
+        self.setLayout(vBoxLayout)
+        
+        self.nodeDict = {}
+        
+    def updateView(self):
+        self.sceneTreeView.clear()
+        
+        for s in self.module.scenes:
+            sceneRootItem = QTreeWidgetItem(self.sceneTreeView)
+            sceneRootItem.setText(0, s.name)
+            
+            for m in s.mapFiles:
+                self.parseMap(m, sceneRootItem)
+
+                
+    def parseMap(self, map, sceneRootItem):
+        childItem =  QTreeWidgetItem(sceneRootItem)
+        childItem.setText(0, map.mapName)
+        
+        iter = map.mapNode.getChildIterator()
+        while iter.hasMoreElements():
+            childItem2 = QTreeWidgetItem(childItem) 
+            childItem2.setText(0, iter.getNext().getName())
+        
+        
+    def setCurrentModule(self, module):
+        self.module = module
+        self.updateView()
+

Modified: rl/trunk/editors/Lockenwickler/src/ModuleManager.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/ModuleManager.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,711 +1,754 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-import sys
-import codecs
-import glob
-import os
-from os.path import isfile,  join
-
-
-import elementtree.ElementTree as xml
-
-import ctypes
-import ogre.renderer.OGRE as og
-
-from PyQt4.QtCore import *
-from PyQt4.QtGui import *
-
-from MovePivot import *
-from GameObjectClassManager import *
-from MyRaySceneQueryListener import *
-
-#                <zone name="Testzone">
-#                        <area type="sphere">
-#                                <position x="-10" y="0" z="-5"/>
-#                                <scale x="6" y="6" z="6"/>
-#                                <transition_distance>0.5</transition_distance>
-#                        </area>
-#                        <area type="mesh" meshfile="arc_UnbHaus_07.mesh">
-#                                <position x="25" y="0" z="-50"/>
-#                                <transition_distance>0.5</transition_distance>
-#                        </area>
-#                        <area type="sphere" subtract="true">
-#                                <position x="-11" y="0" z="-4"/>
-#                                <scale x="2" y="2" z="2"/>
-#                        </area>
-#                        <light name="red pointlight"/>
-#                        <light name="green spotlight"/>
-#                        <sound name="ruchin001.ogg"/>
-#                        <trigger name="test" classname="TestTrigger">
-#                                <property name="message" type="STRING" data="You triggered the dooms day device!" />
-#                        </trigger>
-#                </zone>
-
-class Map():
-    def __init__(self, pathToFile, sceneManager, ogreRoot, gocManager):
-        self.pathToMapFile = pathToFile
-        self.sceneManager = sceneManager
-        self.mapNode = sceneManager.getRootSceneNode().createChildSceneNode(self.pathToMapFile)
-        self.ogreRoot = ogreRoot
-        self.gocManager = gocManager
-
-        xmlTree = xml.parse(pathToFile)
-        root = xmlTree.getroot()
-
-        if root.attrib["formatVersion"] == "0.4.0":
-            self.parseMapNodes(root.find("nodes"))
-            #self.parseMapZones(root.find("zones"))
-        else:
-            print pathToFile + " has wrong format version. It needs to be 0.4.0"
-            return
-
-    def parseMapNodes(self, nodeElement):
-        nodes = nodeElement.getiterator("entity")
-        if len(nodes) > 0:
-            self.createEntites(nodes)
-
-        nodes = nodeElement.getiterator("light")
-        if len(nodes) > 0:
-            self.createLights(nodes)
-
-        nodes = nodeElement.getiterator("sound")
-        if len(nodes) > 0:
-            self.createSound(nodes)
-
-        nodes = nodeElement.getiterator("gameobject")
-        if len(nodes) > 0:
-            self.createGameObjects(nodes)
-
-        nodes = nodeElement.getiterator("particlesystem")
-        if len(nodes) > 0:
-            self.createParticleSystems(nodes)
-
-    def createEntites(self, entityNodes):
-        for nodes in entityNodes:
-            entityName = nodes.attrib["name"]
-            print entityName
-            meshFile = nodes.attrib["meshfile"]
-            nodePosition = None
-            nodeRotation = None
-            nodeScale = None
-
-            transformations = nodes.getiterator()
-            for t in transformations:
-                if t.tag == "position":
-                    x = float(t.attrib["x"])
-                    y = float(t.attrib["y"])
-                    z = float(t.attrib["z"])
-                    nodePosition = og.Vector3(x, y, z)
-                elif t.tag == "rotation":
-                    qw = float(t.attrib["qw"])
-                    qx = float(t.attrib["qx"])
-                    qy = float(t.attrib["qy"])
-                    qz = float(t.attrib["qz"])
-                    nodeRotation = og.Quaternion(qw, qx, qy, qz)
-                elif t.tag == "scale":
-                    x = float(t.attrib["x"])
-                    y = float(t.attrib["y"])
-                    z = float(t.attrib["z"])
-                    nodeScale = og.Vector3(x, y, z)
-
-            try:
-                e = self.sceneManager.createEntity(entityName, meshFile)
-            except:
-                print "Warning: Meshfile " + meshFile + " could not be found."
-                continue
-
-            n = self.mapNode.createChild(entityName + "_node")
-            n.attachObject(e)
-            n.setPosition(nodePosition)
-            n.setOrientation(nodeRotation)
-            n.setScale(nodeScale)
-
-    def createLights(self, lightNodes):
-        for l in lightNodes:
-            lightName = l.attrib["name"]
-            lightType = l.attrib["type"]
-            lightVisible = bool(l.attrib["visible"])
-            castShadows = bool(l.attrib["castShadows"])
-            lightPosition = None
-            colourDiffuse = None
-            colourSpecular = None
-            lightAttenuationRange = None
-            lightAttenuationConstant= None
-            lightAttenuationlinear = None
-            lightAttenuationQuadratic = None
-
-            transformations = l.getiterator()
-            for t in transformations:
-                if t.tag == "position":
-                    x = float(t.attrib["x"])
-                    y = float(t.attrib["y"])
-                    z = float(t.attrib["z"])
-                    lightPosition = og.Vector3(x, y, z)
-                elif t.tag == "colourDiffuse":
-                    r = float(t.attrib["r"])
-                    g = float(t.attrib["g"])
-                    b= float(t.attrib["b"])
-                    colourDiffuse = og.ColourValue(r, g, b)
-                elif t.tag == "colourSpecular":
-                    r = float(t.attrib["r"])
-                    g = float(t.attrib["g"])
-                    b= float(t.attrib["b"])
-                    colourSpecular = og.ColourValue(r, g, b)
-                elif t.tag == "lightAttenuation":
-                    lightAttenuationRange = float(t.attrib["range"])
-                    lightAttenuationConstant= float(t.attrib["constant"])
-                    lightAttenuationlinear = float(t.attrib["linear"])
-                    lightAttenuationQuadratic = float(t.attrib["quadratic"])
-
-            e = self.sceneManager.createEntity(lightName, "lightbulp.mesh")
-            n = self.mapNode.createChild(lightName + "_node")
-            n.attachObject(e)
-            n.setPosition(lightPosition)
-
-    def createSound(self, soundNodes):
-        raise NotImplementedError
-        return
-
-    def createGameObjects(self, gameObjectNodes):
-        for g in gameObjectNodes:
-            classid = g.attrib["class"]
-            id = int(g.attrib["id"])
-            state = g.attrib["state"]
-            nodePosition = None
-            nodeRotation = None
-            nodeScale = None
-
-            transformations = g.getiterator()
-            for t in transformations:
-                if t.tag == "position":
-                    x = float(t.attrib["x"])
-                    y = float(t.attrib["y"])
-                    z = float(t.attrib["z"])
-                    nodePosition = og.Vector3(x, y, z)
-                elif t.tag == "rotation":
-                    qw = float(t.attrib["qw"])
-                    qx = float(t.attrib["qx"])
-                    qy = float(t.attrib["qy"])
-                    qz = float(t.attrib["qz"])
-                    nodeRotation = og.Quaternion(qw, qx, qy, qz)
-                elif t.tag == "scale":
-                    x = float(t.attrib["x"])
-                    y = float(t.attrib["y"])
-                    z = float(t.attrib["z"])
-                    nodeScale = og.Vector3(x, y, z)
-
-            go = self.gocManager.getGameObjectWithClassId(classid)
-            if go is not None:
-                meshFile = go.getMeshFileName()
-                ent = self.sceneManager.createEntity("dropMesh" + str(id), str(meshFile))
-                dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(id))
-                dropNode.attachObject(ent)
-
-                if nodePosition:
-                    dropNode.setPosition(nodePosition)
-                if nodeRotation:
-                    dropNode.setOrientation(nodeRotation)
-                if nodeScale:
-                    dropNode.setScale(nodeScale)
-
-
-                go = GameObjectRepresentation(id, classid, dropNode, meshFile)
-                go.inWorldId = id
-                ent.setUserObject(go)
-
-
-    def createParticleSystems(self, particleNodes):
-        raise NotImplementedError
-        return
-
-class Scene():
-    def __init__(self):
-        return
-
-class Module():
-    def __init__(self,name, modulePath, sceneManager, ogreRoot, gameObjectManager):
-        self.sceneManager = sceneManager
-        self.ogreRoot = ogreRoot
-        self.gocManager = gameObjectManager
-
-        self.name = name
-        self.moduleRoot = join(modulePath, name)
-        self.__isCommon = False
-
-        self.hasDependencies = False
-        self.moduleDependencies = []
-
-        self.mapFiles = [] # a list in case the module has more than one map file
-        self.gofFiles = [] # gof File list
-
-        self.scenes =[]
-
-        self.isLoaded = False
-
-    def isCommon(self):
-        modConfig = join(self.moduleRoot,  "scripts/moduleconfig.rb")
-        if isfile(modConfig): # is the modconfig existing?
-            f = codecs.open(modConfig, 'r', 'utf-8')
-        else:
-            print ("Error: couldn't find module config")
-            return
-        isDependencieLine = False
-        for i, line in enumerate(f):
-            lStripped = line.strip() #strip the whitespace away, not needed here
-            if lStripped.startswith("super("):
-                split = lStripped.split(",")
-                if split[2].strip() == unicode("true"):
-                    self.__isCommon = True
-                    return True
-
-
-            elif isDependencieLine:
-                if lStripped == "end":
-                    isDependencieLine = False
-                else:
-                    self.hasDependencies = True
-                    self.moduleDependencies.append(lStripped.split('"')[1])
-
-            elif lStripped == "def getDependencies()":
-                isDependencieLine = True
-
-        return False
-
-    def load(self):
-        if self.isLoaded:
-            return
-
-        self.isLoaded = True
-        modConfig = join(self.moduleRoot,  "scripts/moduleconfig.rb")
-        if isfile(modConfig): # is the modconfig existing?
-            f = codecs.open(modConfig, 'r', 'utf-8')
-        else:
-            print ("Error: couldn't find module config")
-            return
-
-        #for i, line in enumerate(f):
-            #lStripped = line.strip() #strip the whitespace away, not needed here
-
-        self.setResourcePaths()
-        og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
-
-        cmd = join(self.moduleRoot, "dsa/*.gof")
-        self.gofFiles = glob.glob(cmd)
-        self.gocManager.parseGOFFiles(self.gofFiles)
-
-        if not self.isCommon():
-            cmd = join(self.moduleRoot, "maps/*.rlmap.xml")
-            maps = glob.glob(cmd)
-            for m in maps:
-                self.mapFiles.append(Map(m, self.sceneManager, self.ogreRoot, self.gocManager))
-
-            cmd = join(self.moduleRoot, "maps/*.rlscene")
-            sceneFile = glob.glob(cmd)
-            #self.loadScenes(sceneFile)
-
-    def saveMaps(self):
-        return
-
-    def saveScenes(self):
-        return
-
-    def setResourcePaths(self, recurseFolder = ""):
-        if recurseFolder == "":
-            rootFolder = self.moduleRoot
-        else:
-            rootFolder = join(self.moduleRoot, recurseFolder)
-
-        for file in os.listdir(rootFolder):
-            curFile = join(rootFolder, file)
-
-
-            if file.startswith('.'): #ignore dot files (hidden)
-                continue
-            if os.path.isdir(curFile):
-                og.ResourceGroupManager.getSingleton().addResourceLocation(curFile, "FileSystem", self.name, False)
-                self.setResourcePaths(curFile)
-            if os.path.isfile(curFile):
-                pass
-
-class ModuleManager():
-    def __init__(self,  ogreRoot,  sceneManager):
-        self.sceneManager = sceneManager
-        self.ogreRoot = ogreRoot
-        self.modelSelectionDialog = None
-
-        self.raySceneQuery = self.sceneManager.createRayQuery(og.Ray())
-
-        self.gocManager = GameObjectClassManager()
-        # we need to hold a reference to the game object representaions ourself
-        # python does not recognize the a reference to a c++ object (Entity in our case) is passed
-        # and deletes the object
-        self.gameObjectRepresentationDict = []
-
-
-        self.mainModule = []
-        self.mainModuledependencieList =[]
-        self.moduleList = []
-        self.userSelectionList = []
-        self.cutList = [] # selection objects that has been cut out and wait to be pasted again
-        self.cutListPreviousNodes = [] # contains the nodes they where copnnected to before the cut
-
-        self.listenerDings = MyRaySceneQueryListener()
-
-        self.lastRay = None
-#        self.rayLine = None
-
-        # pivot is initialzed and set in the Lockenwickler.setUpOgre function
-        self.pivot = None
-        self.movingPivot = False
-
-        self.leftMouseDown = False
-        self.middleMouseDown = False
-        self.rightMouseDown = False
-
-        self.dropCount = 0
-        self.dropNode = None
-        self.dropEntity = None
-        self.dropCollisionPlane = og.Plane(og.Vector3.UNIT_Y, og.Vector3.ZERO)
-
-        self.numerOfCopys = 0 #everytime a copy is made this numer is increased to generate unique node and mesh names
-        self.moduleConfigIsParsed = False
-
-
-    def parseModuleConfig(self):
-        if self.moduleConfigIsParsed:
-            return
-
-        import codecs
-        f = codecs.open(self.moduleCfgPath, 'r', 'utf-8')
-
-        for line in f:
-            if line.startswith('#'):
-                continue
-
-            if line.startswith('module='):
-                splines = line.split('=')
-                str = splines[1].rstrip().rstrip()
-                self.moduleList.append(Module(str, self.moduleCfgPath.replace("/modules.cfg",  ""), self.sceneManager, self.ogreRoot, self.gocManager))
-
-        self.moduleConfigIsParsed = True
-
-    def openLoadModuleDialog(self, moduleConfigPath, lw):
-        self.moduleCfgPath = str(moduleConfigPath)
-        self.moduleFolder = str(moduleConfigPath.replace("modules.cfg", ""))
-
-        self.parseModuleConfig()
-
-        dlg = QDialog()
-        list = QListWidget()
-        btnBox = QDialogButtonBox(QDialogButtonBox.Ok | QDialogButtonBox.Cancel)
-        dlg.connect(btnBox, SIGNAL("accepted()"), dlg.accept)
-        dlg.connect(btnBox, SIGNAL("rejected()"), dlg.reject)
-
-        for m in self.moduleList:
-            if not m.isCommon():
-                list.addItem(m.name)
-
-        layout = QVBoxLayout()
-        layout.addWidget(list)
-        layout.addWidget(btnBox)
-        dlg.setLayout(layout)
-        if dlg.exec_():
-            self.loadModule(str(list.currentItem().text()))
-
-    # I'm sorry for this
-    def loadModule(self, moduleName):
-        for m in self.moduleList:
-            if m.name == moduleName:
-                if m.hasDependencies: # load modules on wich the main module depends before the main module is loaded
-                    for moduleDependencie in m.moduleDependencies:
-                        for m2 in self.moduleList:
-                            if m2.name == moduleDependencie:
-                                m2.load()
-                                self.modelSelectionDialog.scanDirForModels(m2.moduleRoot)
-                                self.mainModuledependencieList.append(m2)
-
-                m.load()
-                self.modelSelectionDialog.scanDirForModels(m.moduleRoot)
-                self.mainModule = m
-
-        n = self.sceneManager.getRootSceneNode().createChildSceneNode()
-        e = self.sceneManager.createEntity("west342wt346t",  "UniCube.mesh")
-        e.setMaterialName("Lockenwickler_Area")
-
-        e2 = self.sceneManager.createEntity("west342wt34635t",  "UniSphere.mesh")
-        e2.setMaterialName("Lockenwickler_Area")
-
-        n.attachObject(e)
-        n.attachObject(e2)
-        n.setScale(og.Vector3(10, 5, 20))
-
-    # called when a click into Main Ogre Window occurs
-    def selectionClick(self,  ray,  controlDown=False,  shiftDown=False):
-        self.listenerDings.reset()
-        self.lastRay = ray
-        self.listenerDings.currentRay = ray
-        self.raySceneQuery.Ray = ray
-        self.raySceneQuery.execute(self.listenerDings)
-
-        so = self.listenerDings.rayCastToPolygonLevel(ray)
-
-        if so is not None:
-            if not so.isPivot:
-                if not controlDown and not shiftDown:
-                    self.resetSelection()
-                    so.setSelected(True)
-                    self.userSelectionList.append(so)
-                    self.updatePivots()
-                elif controlDown and not shiftDown:
-                    so.setSelected(True)
-
-                    for soFromList in self.userSelectionList:
-                        if soFromList == so:
-                            return # object already selected
-
-                    self.userSelectionList.append(so)
-                    self.updatePivots()
-
-
-                elif not controlDown and shiftDown:
-                    for selo in self.userSelectionList:
-                        if so == selo:
-                            so.setSelected(False)
-                            self.userSelectionList.remove(selo)
-                    self.updatePivots()
-            else:
-                #so.entity is the pivot direction that was clicked
-                self.pivot.startTransforming(so.entity,  self.userSelectionList)
-        else:
-            self.resetSelection() # click in empty space, deselect everything
-            if self.pivot is not None:
-                self.pivot.hide()
-
-#        if self.rayLine == None:
-#            self.rayLine = self.sceneManager.createManualObject("rayLine")
-#            self.rayLine.setDynamic(True)
-#            self.sceneManager.getRootSceneNode().createChildSceneNode("raynode").attachObject(self.rayLine)
-#
-#            self.rayLine.begin("BaseWhiteNoLighting", og.RenderOperation.OT_LINE_STRIP)
-#
-#            self.rayLine.position(ray.getOrigin())
-#            self.rayLine.position( ray.getPoint(10000))
-#
-#            self.rayLine.end()
-#
-#        else:
-#            self.rayLine.beginUpdate(0)
-#
-#            self.rayLine.position(ray.getOrigin())
-#            self.rayLine.position( ray.getPoint(10000))
-#
-#            self.rayLine.end()
-
-    def deleteObjects(self):
-        if len(self.userSelectionList) < 1:
-            return
-
-        self.pivot.hide()
-
-        for so in self.userSelectionList:
-            self.sceneManager.destroySceneNode(so.entity.getParentNode().getName())
-            del so
-
-        self.userSelectionList = []
-
-    def incrementNameSuffixNumber(self, name):
-        newName = ""
-        split = name.split("_")
-        lastPart = len(split)-1
-        newName = name.rstrip(split[lastPart])
-        newName = newName + str(self.numerOfCopys)
-
-#        if split[lastPart].isdigit() and not split[lastPart].startswith("0"):
-#            num = int(split[lastPart])
-#            num = num + 1
-#            newName = name.rstrip(split[lastPart])
-#            newName = newName + str(num)
-#        else:
-#            newName = name + "_1"
-
-        self.numerOfCopys = self.numerOfCopys + 1
-        return newName
-
-    def copyObjects(self):
-        if len(self.userSelectionList) < 1:
-            return
-
-        newSelectionList = []
-
-        for so in self.userSelectionList:
-            if so.entity.getUserObject() is not None:
-                if so.entity.getUserObject().getType() == "GAME_OBJECT_REPRESENTATION":
-                    go = self.gocManager.getGameObjectWithClassId(so.entity.getUserObject().gocName)
-                    meshFile = go.getMeshFileName()
-
-                    if go is not None:
-                        newEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
-                        newNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
-                        newNode.attachObject(newEntity)
-                        newNode.setPosition(so.entity.getParentNode().getPosition())
-
-                        newGO = GameObjectRepresentation(self.dropCount, so.entity.getUserObject().gocName, newNode, meshFile)
-                        self.gameObjectRepresentationDict.append(newGO)
-                        newEntity.setUserObject(newGO)
-                        newGO.setPosition(og.Vector3(0, 0, 0))
-
-                        newSO = SelectionObject(newEntity, so.distance)
-                        newSO.setSelected(True)
-                        newSelectionList.append(newSO)
-                        self.dropCount += 1
-            else:
-                nodeName = self.incrementNameSuffixNumber(so.entity.getParentNode().getName())
-                newNode = self.sceneManager.getRootSceneNode().createChild(nodeName)
-
-                entityName = self.incrementNameSuffixNumber(so.entity.getName())
-                newEntity = self.sceneManager.createEntity(entityName, so.entity.getMesh().getName())
-
-                newNode.attachObject(newEntity)
-                newNode.setPosition(so.entity.getParentNode().getPosition())
-                newNode.setOrientation(so.entity.getParentNode().getOrientation())
-                newNode.setScale(so.entity.getParentNode().getScale())
-
-                newSO = SelectionObject(newEntity, so.distance)
-                newSO.setSelected(True)
-                newSelectionList.append(newSO)
-
-        self.resetSelection()
-        self.userSelectionList = newSelectionList
-
-    def cutObjects(self):
-        if len(self.userSelectionList) < 1:
-            return
-
-        self.cutList = []
-        for so in self.userSelectionList:
-            self.cutListPreviousNodes.append(so.entity.getParentNode().getParent())
-            so.entity.getParentNode().getParent().removeChild(so.entity.getParentNode())
-            # set the "point of gravity" of all the cutted nodes to world origin at 0,0,0
-            # so we only have to translate them to their new destination when they get pasted
-            # the position of the pivot point is considered as the center of gravity
-            so.entity.getParentNode().setPosition(so.entity.getParentNode().getPosition() - self.pivot.getPosition())
-            self.cutList.append(so)
-        self.resetSelection()
-
-    def pasteObjects(self,  ray):
-        if len(self.cutList) < 1:
-            return
-
-        result = og.Math.intersects(ray, self.dropCollisionPlane)
-        if result.first == True:
-            i=0
-            while i < len(self.cutList):
-                self.cutListPreviousNodes[i].addChild(self.cutList[i].entity.getParentNode())
-                self.cutList[i].entity.getParentNode().translate(ray.getPoint(result.second))
-                i = i+1
-        else:
-            i=0
-            while i < len(self.cutList):
-                self.cutListPreviousNodes[i].addChild(self.cutList[i].entity.getParentNode())
-                self.cutList[i].entity.getParentNode().translate(ray.getPoint(100.0))
-                i = i+1
-        self.cutList = []
-
-    def leftMouseUp(self):
-        if self.pivot is not None and self.pivot.isTransforming:
-            self.pivot.stopTransforming()
-
-    def resetSelection(self):
-        for so in self.userSelectionList:
-            so.setSelected(False)
-
-        self.userSelectionList = []
-
-        self.listenerDings.reset()
-        pass
-
-
-    def updatePivots(self):
-        newPivotPosition = og.Vector3(0, 0, 0)
-
-        for so in self.userSelectionList:
-            newPivotPosition += so.entity.getParentNode().getPosition()
-        if self.pivot is not None:
-            self.pivot.setPosition(newPivotPosition / len(self.userSelectionList))
-
-    def unload(self,  saveOnUnload=True):
-        pass
-
-    def save(self):
-        pass
-
-    def startDropGameObjectAction(self, classid, ray):
-        go = self.gocManager.getGameObjectWithClassId(classid)
-
-        if go is not None:
-            meshFile = go.getMeshFileName()
-            dropEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
-            dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
-            dropNode.attachObject(dropEntity)
-
-            result = og.Math.intersects(ray, self.dropCollisionPlane)
-            if result.first == True:
-                dropNode.setPosition(ray.getPoint(result.second))
-            else:
-                dropNode.setPosition(ray.getPoint(50))
-
-            self.dropGO = GameObjectRepresentation(self.dropCount, classid, dropNode, meshFile)
-            dropEntity.setUserObject(self.dropGO)
-
-        self.dropCount += 1
-
-    def moveDropGameObjectAction(self, ray):
-        result = og.Math.intersects(ray, self.dropCollisionPlane)
-        if result.first == True:
-            self.dropGO.setPosition(ray.getPoint(result.second))
-        else:
-            self.dropGO.setPosition(ray.getPoint(50))
-
-    def stopDropGameObjectAction(self, ray):
-        print "sd"
-
-    def startDropModelAction(self, meshFile, ray):
-        self.dropEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
-        self.dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
-        self.dropNode.attachObject(self.dropEntity)
-
-        result = og.Math.intersects(ray, self.dropCollisionPlane)
-        if result.first == True:
-            self.dropNode.setPosition(ray.getPoint(result.second))
-        else:
-            self.dropNode.setPosition(ray.getPoint(50))
-
-        self.dropCount += 1
-
-    def moveDropModelAction(self, ray):
-        result = og.Math.intersects(ray, self.dropCollisionPlane)
-        if result.first == True:
-            self.dropNode.setPosition(ray.getPoint(result.second))
-        else:
-            self.dropNode.setPosition(ray.getPoint(50))
-
-
-    def stopDropModelAction(self, ray):
-        pass
-
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+import sys
+import codecs
+import glob
+import os
+from os.path import isfile,  join
+
+import xml.etree.cElementTree as xml
+
+import ctypes
+import ogre.renderer.OGRE as og
+
+from PyQt4.QtCore import *
+from PyQt4.QtGui import *
+
+from MovePivot import *
+from GameObjectClassManager import *
+from MyRaySceneQueryListener import *
+
+#                <zone name="Testzone">
+#                        <area type="sphere">
+#                                <position x="-10" y="0" z="-5"/>
+#                                <scale x="6" y="6" z="6"/>
+#                                <transition_distance>0.5</transition_distance>
+#                        </area>
+#                        <area type="mesh" meshfile="arc_UnbHaus_07.mesh">
+#                                <position x="25" y="0" z="-50"/>
+#                                <transition_distance>0.5</transition_distance>
+#                        </area>
+#                        <area type="sphere" subtract="true">
+#                                <position x="-11" y="0" z="-4"/>
+#                                <scale x="2" y="2" z="2"/>
+#                        </area>
+#                        <light name="red pointlight"/>
+#                        <light name="green spotlight"/>
+#                        <sound name="ruchin001.ogg"/>
+#                        <trigger name="test" classname="TestTrigger">
+#                                <property name="message" type="STRING" data="You triggered the dooms day device!" />
+#                        </trigger>
+#                </zone>
+
+class Map():
+    def __init__(self, pathToFile, sceneManager, ogreRoot, gocManager):
+        self.pathToMapFile = pathToFile
+        
+        mapName = pathToFile.replace("\\", "/")
+        mapName = mapName.split("/")
+        mapName = mapName[len(mapName) - 1].split(".")
+        mapName = mapName[len(mapName) - 3]
+        self.mapName = mapName
+        
+        self.sceneManager = sceneManager
+        self.mapNode = sceneManager.getRootSceneNode().createChildSceneNode(self.pathToMapFile)
+        self.ogreRoot = ogreRoot
+        self.gocManager = gocManager
+
+        xmlTree = xml.parse(pathToFile)
+        root = xmlTree.getroot()
+
+        if root.attrib["formatVersion"] == "0.4.0":
+            self.parseMapNodes(root.find("nodes"))
+            #self.parseMapZones(root.find("zones"))
+        else:
+            print pathToFile + " has wrong format version. It needs to be 0.4.0"
+            return
+
+    def parseMapNodes(self, nodeElement):
+        nodes = nodeElement.getiterator("entity")
+        
+        self.createEntites(nodes)
+
+        nodes = nodeElement.getiterator("light")
+        self.createLights(nodes)
+
+        nodes = nodeElement.getiterator("sound")
+        self.createSound(nodes)
+
+        nodes = nodeElement.getiterator("gameobject")
+        self.createGameObjects(nodes)
+
+        nodes = nodeElement.getiterator("particlesystem")
+        self.createParticleSystems(nodes)
+
+    def createEntites(self, entityNodes):
+        for nodes in entityNodes:
+            entityName = nodes.attrib["name"]
+            meshFile = nodes.attrib["meshfile"]
+            nodePosition = None
+            nodeScale = None
+            qw = qx = qy = qz = None
+
+            transformations = nodes.getiterator()
+            for t in transformations:
+                if t.tag == "position":
+                    posx = float(t.attrib["x"])
+                    posy = float(t.attrib["y"])
+                    posz = float(t.attrib["z"])
+                    nodePosition = og.Vector3(posx, posy, posz)
+                elif t.tag == "rotation":
+                    qw = float(t.attrib["qw"])
+                    qx = float(t.attrib["qx"])
+                    qy = float(t.attrib["qy"])
+                    qz = float(t.attrib["qz"])
+                elif t.tag == "scale":
+                    scalex = float(t.attrib["x"])
+                    scaley = float(t.attrib["y"])
+                    scalez = float(t.attrib["z"])
+                    nodeScale = og.Vector3(scalex, scaley, scalez)
+
+            try:
+                e = self.sceneManager.createEntity(entityName, meshFile)
+            except:
+                print "Warning: Meshfile " + meshFile + " could not be found."
+                continue
+
+            n = self.mapNode.createChild(entityName + "_node")
+            n.attachObject(e)
+            n.setPosition(nodePosition)
+            n.setOrientation(qw, qx, qy, qz)
+            n.setScale(nodeScale)
+
+    def createLights(self, lightNodes):
+        for l in lightNodes:
+            lightName = l.attrib["name"]
+            lightType = l.attrib["type"]
+            lightVisible = bool(l.attrib["visible"])
+            castShadows = bool(l.attrib["castShadows"])
+            lightPosition = None
+            colourDiffuse = None
+            colourSpecular = None
+            lightAttenuationRange = None
+            lightAttenuationConstant= None
+            lightAttenuationlinear = None
+            lightAttenuationQuadratic = None
+
+            transformations = l.getiterator()
+            for t in transformations:
+                if t.tag == "position":
+                    x = float(t.attrib["x"])
+                    y = float(t.attrib["y"])
+                    z = float(t.attrib["z"])
+                    lightPosition = og.Vector3(x, y, z)
+                elif t.tag == "colourDiffuse":
+                    r = float(t.attrib["r"])
+                    g = float(t.attrib["g"])
+                    b= float(t.attrib["b"])
+                    colourDiffuse = og.ColourValue(r, g, b)
+                elif t.tag == "colourSpecular":
+                    r = float(t.attrib["r"])
+                    g = float(t.attrib["g"])
+                    b= float(t.attrib["b"])
+                    colourSpecular = og.ColourValue(r, g, b)
+                elif t.tag == "lightAttenuation":
+                    lightAttenuationRange = float(t.attrib["range"])
+                    lightAttenuationConstant= float(t.attrib["constant"])
+                    lightAttenuationlinear = float(t.attrib["linear"])
+                    lightAttenuationQuadratic = float(t.attrib["quadratic"])
+
+            e = self.sceneManager.createEntity(lightName, "lightbulp.mesh")
+            n = self.mapNode.createChild(lightName + "_node")
+            n.attachObject(e)
+            n.setPosition(lightPosition)
+
+    def createSound(self, soundNodes):
+        #raise NotImplementedError
+        return
+
+    def createGameObjects(self, gameObjectNodes):
+        for g in gameObjectNodes:
+            classid = g.attrib["class"]
+            id = int(g.attrib["id"])
+            state = g.attrib["state"]
+            nodePosition = None
+            nodeRotation = None
+            nodeScale = None
+
+            transformations = g.getiterator()
+            for t in transformations:
+                if t.tag == "position":
+                    x = float(t.attrib["x"])
+                    y = float(t.attrib["y"])
+                    z = float(t.attrib["z"])
+                    nodePosition = og.Vector3(x, y, z)
+                elif t.tag == "rotation":
+                    qw = float(t.attrib["qw"])
+                    qx = float(t.attrib["qx"])
+                    qy = float(t.attrib["qy"])
+                    qz = float(t.attrib["qz"])
+                    nodeRotation = og.Quaternion(qw, qx, qy, qz)
+                elif t.tag == "scale":
+                    x = float(t.attrib["x"])
+                    y = float(t.attrib["y"])
+                    z = float(t.attrib["z"])
+                    nodeScale = og.Vector3(x, y, z)
+
+            go = self.gocManager.getGameObjectWithClassId(classid)
+            if go is not None:
+                meshFile = go.getMeshFileName()
+                ent = self.sceneManager.createEntity("dropMesh" + str(id), str(meshFile))
+                dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(id))
+                dropNode.attachObject(ent)
+
+                if nodePosition:
+                    dropNode.setPosition(nodePosition)
+                if nodeRotation:
+                    dropNode.setOrientation(nodeRotation)
+                if nodeScale:
+                    dropNode.setScale(nodeScale)
+
+                go = GameObjectRepresentation(id, classid, dropNode, meshFile)
+                go.inWorldId = id
+                ent.setUserObject(go)
+
+
+    def createParticleSystems(self, particleNodes):
+        #raise NotImplementedError
+        return
+
+class Scene():
+    def __init__(self, moduleroot, pathToFile, sceneManager, ogreRoot, gocManager):
+        self.moduleRoot = moduleroot
+        self.sceneManager = sceneManager
+        self.ogreRoot = ogreRoot
+        self.gocManager = gocManager
+        
+        xmlTree = xml.parse(pathToFile)
+        root = xmlTree.getroot()
+        self.name = root.attrib["name"]
+        
+        self.mapFiles = [] # a list in case the module has more than one map file
+        mappaths = []
+        
+        maps = root.getiterator("map")
+        for m in maps:
+            mappaths.append(join(self.moduleRoot, join("maps", m.attrib["file"])))
+            
+        for m in mappaths:
+            self.mapFiles.append(Map(m, self.sceneManager, self.ogreRoot, self.gocManager))
+            
+        #cmd = join(self.moduleRoot, "maps/*.rlmap.xml")
+        #maps = glob.glob(cmd)
+        #for m in maps:
+            #self.mapFiles.append(Map(m, self.sceneManager, self.ogreRoot, self.gocManager))
+
+
+class Module():
+    def __init__(self,name, modulePath, sceneManager, ogreRoot, gameObjectManager):
+        self.sceneManager = sceneManager
+        self.ogreRoot = ogreRoot
+        self.gocManager = gameObjectManager
+        
+        self.name = name
+        self.moduleRoot = join(modulePath, name)
+        self.__isCommon = False
+
+        self.hasDependencies = False
+        self.moduleDependencies = []
+
+
+        self.gofFiles = [] # gof File list
+
+        self.scenes =[]
+
+        self.isLoaded = False
+
+    def isCommon(self):
+        modConfig = join(self.moduleRoot,  "scripts/moduleconfig.rb")
+        if isfile(modConfig): # is the modconfig existing?
+            f = codecs.open(modConfig, 'r', 'utf-8')
+        else:
+            print ("Error: couldn't find module config")
+            return
+        isDependencieLine = False
+        for i, line in enumerate(f):
+            lStripped = line.strip() #strip the whitespace away, not needed here
+            if lStripped.startswith("super("):
+                split = lStripped.split(",")
+                if split[2].strip() == unicode("true"):
+                    self.__isCommon = True
+                    return True
+
+
+            elif isDependencieLine:
+                if lStripped == "end":
+                    isDependencieLine = False
+                else:
+                    self.hasDependencies = True
+                    self.moduleDependencies.append(lStripped.split('"')[1])
+
+            elif lStripped == "def getDependencies()":
+                isDependencieLine = True
+
+        return False
+
+    def load(self):
+        if self.isLoaded:
+            return
+
+        self.isLoaded = True
+        modConfig = join(self.moduleRoot,  "scripts/moduleconfig.rb")
+        if isfile(modConfig): # is the modconfig existing?
+            f = codecs.open(modConfig, 'r', 'utf-8')
+        else:
+            print ("Error: couldn't find module config")
+            return
+
+        #for i, line in enumerate(f):
+            #lStripped = line.strip() #strip the whitespace away, not needed here
+
+        self.setResourcePaths()
+        
+        try:
+            og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
+        except og.OgreException, e:
+            print e
+        
+        cmd = join(self.moduleRoot, "dsa/*.gof")
+        self.gofFiles = glob.glob(cmd)
+        self.gocManager.parseGOFFiles(self.gofFiles)
+
+        if not self.isCommon():
+            cmd = join(self.moduleRoot, "maps/*.rlscene")
+            sceneFile = glob.glob(cmd)
+            self.loadScenes(sceneFile)
+
+    def loadScenes(self, sceneFiles):
+        for f in sceneFiles:
+            self.scenes.append(Scene(self.moduleRoot, f, self.sceneManager, self.ogreRoot, self.gocManager))
+
+    def saveMaps(self):
+        return
+
+    def saveScenes(self):
+        return
+
+    def setResourcePaths(self, recurseFolder = ""):
+        if recurseFolder == "":
+            rootFolder = self.moduleRoot
+        else:
+            rootFolder = join(self.moduleRoot, recurseFolder)
+
+        for file in os.listdir(rootFolder):
+            curFile = join(rootFolder, file)
+
+
+            if file.startswith('.'): #ignore dot files (hidden)
+                continue
+            if os.path.isdir(curFile):
+                og.ResourceGroupManager.getSingleton().addResourceLocation(curFile, "FileSystem", self.name, False)
+                self.setResourcePaths(curFile)
+            if os.path.isfile(curFile):
+                pass
+
+class ModuleManager():
+    def __init__(self,  ogreRoot,  sceneManager):
+        self.sceneManager = sceneManager
+        self.ogreRoot = ogreRoot
+        self.modelSelectionDialog = None
+
+        self.moduleCfgPath = ""
+
+        self.raySceneQuery = self.sceneManager.createRayQuery(og.Ray())
+
+        self.gocManager = GameObjectClassManager()
+        # we need to hold a reference to the game object representaions ourself
+        # python does not recognize the a reference to a c++ object (Entity in our case) is passed
+        # and deletes the object
+        self.gameObjectRepresentationDict = []
+
+        self.mainModule = []
+        self.mainModuledependencieList =[]
+        self.moduleList = []
+        self.userSelectionList = []
+        self.cutList = [] # selection objects that has been cut out and wait to be pasted again
+        self.cutListPreviousNodes = [] # contains the nodes they where copnnected to before the cut
+
+        self.listenerDings = MyRaySceneQueryListener()
+
+        self.moduleExplorer = None
+
+        self.lastRay = None
+        self.rayLine = None
+
+        # pivot is initialzed and set in the Lockenwickler.setUpOgre function
+        self.pivot = None
+        self.movingPivot = False
+
+        self.leftMouseDown = False
+        self.middleMouseDown = False
+        self.rightMouseDown = False
+
+        self.dropCount = 0
+        self.dropNode = None
+        self.dropEntity = None
+        self.dropCollisionPlane = og.Plane(og.Vector3().UNIT_Y, og.Vector3().ZERO)
+
+        self.numerOfCopys = 0 #everytime a copy is made this numer is increased to generate unique node and mesh names
+        self.moduleConfigIsParsed = False
+
+    def resetParsedModuleConfig(self):
+        self.moduleConfigIsParsed = False
+        self.moduleList = []
+
+    def parseModuleConfig(self):
+        if self.moduleConfigIsParsed:
+            return
+
+        import codecs
+        f = codecs.open(self.moduleCfgPath, 'r', 'utf-8')
+
+        for line in f:
+            if line.startswith('#'):
+                continue
+
+            if line.startswith('module='):
+                splines = line.split('=')
+                str = splines[1].rstrip().rstrip()
+                self.moduleList.append(Module(str, self.moduleCfgPath.replace("/modules.cfg",  ""), self.sceneManager, self.ogreRoot, self.gocManager))
+
+        self.moduleConfigIsParsed = True
+
+
+    def moduleExists(self, name):
+        lowerA = str(name).lower()
+        
+        for m in self.moduleList:
+            lowerB = m.name.lower()
+            if lowerA == lowerB:
+                return True
+        
+        return False
+
+    def openLoadModuleDialog(self):
+        self.moduleFolder = str(self.moduleCfgPath.replace("modules.cfg", ""))
+
+        self.parseModuleConfig()
+
+        dlg = QDialog()
+        list = QListWidget()
+        btnBox = QDialogButtonBox(QDialogButtonBox.Ok | QDialogButtonBox.Cancel)
+        dlg.connect(btnBox, SIGNAL("accepted()"), dlg.accept)
+        dlg.connect(btnBox, SIGNAL("rejected()"), dlg.reject)
+
+        for m in self.moduleList:
+            if not m.isCommon():
+                list.addItem(m.name)
+
+        layout = QVBoxLayout()
+        layout.addWidget(list)
+        layout.addWidget(btnBox)
+        dlg.setLayout(layout)
+        if dlg.exec_():
+            self.loadModule(str(list.currentItem().text()))
+
+    # I'm sorry for this
+    def loadModule(self, moduleName):
+        for m in self.moduleList:
+            if m.name == moduleName:
+                if m.hasDependencies: # load modules on wich the main module depends before the main module is loaded
+                    for moduleDependencie in m.moduleDependencies:
+                        for m2 in self.moduleList:
+                            if m2.name == moduleDependencie:
+                                m2.load()
+                                self.modelSelectionDialog.scanDirForModels(m2.moduleRoot)
+                                self.mainModuledependencieList.append(m2)
+
+                m.load()
+                self.modelSelectionDialog.scanDirForModels(m.moduleRoot)
+                self.mainModule = m
+                self.moduleExplorer.setCurrentModule(m)
+                
+        self.moduleExplorer.updateView()
+#        n = self.sceneManager.getRootSceneNode().createChildSceneNode()
+#        e = self.sceneManager.createEntity("west342wt346t",  "UniCube.mesh")
+#        e.setMaterialName("Lockenwickler_Area")
+#
+#        e2 = self.sceneManager.createEntity("west342wt34635t",  "UniSphere.mesh")
+#        e2.setMaterialName("Lockenwickler_Area")
+
+#        n.attachObject(e)
+#        n.attachObject(e2)
+#        n.setScale(og.Vector3(10, 5, 20))
+
+    # called when a click into Main Ogre Window occurs
+    def selectionClick(self,  ray,  controlDown=False,  shiftDown=False):
+        self.listenerDings.reset()
+        self.lastRay = ray
+        self.listenerDings.currentRay = ray
+        self.raySceneQuery.Ray = ray
+        self.raySceneQuery.execute(self.listenerDings)
+
+        so = self.listenerDings.rayCastToPolygonLevel(ray)
+
+        if so is not None:
+            if not so.isPivot:
+                if not controlDown and not shiftDown:
+                    self.resetSelection()
+                    so.setSelected(True)
+                    self.userSelectionList.append(so)
+                    self.updatePivots()
+                elif controlDown and not shiftDown:
+                    so.setSelected(True)
+
+                    for soFromList in self.userSelectionList:
+                        if soFromList == so:
+                            return # object already selected
+
+                    self.userSelectionList.append(so)
+                    self.updatePivots()
+
+
+                elif not controlDown and shiftDown:
+                    for selo in self.userSelectionList:
+                        if so == selo:
+                            so.setSelected(False)
+                            self.userSelectionList.remove(selo)
+                    self.updatePivots()
+            else:
+                #so.entity is the pivot direction that was clicked
+                self.pivot.startTransforming(so.entity,  self.userSelectionList)
+        else:
+            self.resetSelection() # click in empty space, deselect everything
+            if self.pivot is not None:
+                self.pivot.hide()
+
+        if self.rayLine == None:
+            self.rayLine = self.sceneManager.createManualObject("rayLine")
+            self.rayLine.setDynamic(True)
+            self.sceneManager.getRootSceneNode().createChildSceneNode("raynode").attachObject(self.rayLine)
+
+            self.rayLine.begin("BaseWhiteNoLighting", og.RenderOperation.OT_LINE_STRIP)
+
+            self.rayLine.position(ray.getOrigin())
+            self.rayLine.position( ray.getPoint(10000))
+
+            self.rayLine.end()
+
+        else:
+            self.rayLine.beginUpdate(0)
+
+            self.rayLine.position(ray.getOrigin())
+            self.rayLine.position( ray.getPoint(10000))
+
+            self.rayLine.end()
+
+    def deleteObjects(self):
+        if len(self.userSelectionList) < 1:
+            return
+
+        self.pivot.hide()
+
+        for so in self.userSelectionList:
+            self.sceneManager.destroySceneNode(so.entity.getParentNode().getName())
+            del so
+
+        self.userSelectionList = []
+
+    def incrementNameSuffixNumber(self, name):
+        newName = ""
+        split = name.split("_")
+        lastPart = len(split)-1
+        newName = name.rstrip(split[lastPart])
+        newName = newName + str(self.numerOfCopys)
+
+#        if split[lastPart].isdigit() and not split[lastPart].startswith("0"):
+#            num = int(split[lastPart])
+#            num = num + 1
+#            newName = name.rstrip(split[lastPart])
+#            newName = newName + str(num)
+#        else:
+#            newName = name + "_1"
+
+        self.numerOfCopys = self.numerOfCopys + 1
+        return newName
+
+    def copyObjects(self):
+        if len(self.userSelectionList) < 1:
+            return
+
+        newSelectionList = []
+
+        for so in self.userSelectionList:
+            if so.entity.getUserObject() is not None:
+                if so.entity.getUserObject().getType() == "GAME_OBJECT_REPRESENTATION":
+                    go = self.gocManager.getGameObjectWithClassId(so.entity.getUserObject().gocName)
+                    meshFile = go.getMeshFileName()
+
+                    if go is not None:
+                        newEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
+                        newNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
+                        newNode.attachObject(newEntity)
+                        newNode.setPosition(so.entity.getParentNode().getPosition())
+
+                        newGO = GameObjectRepresentation(self.dropCount, so.entity.getUserObject().gocName, newNode, meshFile)
+                        self.gameObjectRepresentationDict.append(newGO)
+                        newEntity.setUserObject(newGO)
+                        newGO.setPosition(og.Vector3(0, 0, 0))
+
+                        newSO = SelectionObject(newEntity, so.distance)
+                        newSO.setSelected(True)
+                        newSelectionList.append(newSO)
+                        self.dropCount += 1
+            else:
+                nodeName = self.incrementNameSuffixNumber(so.entity.getParentNode().getName())
+                newNode = self.sceneManager.getRootSceneNode().createChild(nodeName)
+
+                entityName = self.incrementNameSuffixNumber(so.entity.getName())
+                newEntity = self.sceneManager.createEntity(entityName, so.entity.getMesh().getName())
+
+                newNode.attachObject(newEntity)
+                newNode.setPosition(so.entity.getParentNode().getPosition())
+                newNode.setOrientation(so.entity.getParentNode().getOrientation())
+                newNode.setScale(so.entity.getParentNode().getScale())
+
+                newSO = SelectionObject(newEntity, so.distance)
+                newSO.setSelected(True)
+                newSelectionList.append(newSO)
+
+        self.resetSelection()
+        self.userSelectionList = newSelectionList
+
+    def cutObjects(self):
+        if len(self.userSelectionList) < 1:
+            return
+
+        self.cutList = []
+        for so in self.userSelectionList:
+            self.cutListPreviousNodes.append(so.entity.getParentNode().getParent())
+            so.entity.getParentNode().getParent().removeChild(so.entity.getParentNode())
+            # set the "point of gravity" of all the cutted nodes to world origin at 0,0,0
+            # so we only have to translate them to their new destination when they get pasted
+            # the position of the pivot point is considered as the center of gravity
+            so.entity.getParentNode().setPosition(so.entity.getParentNode().getPosition() - self.pivot.getPosition())
+            self.cutList.append(so)
+        self.resetSelection()
+
+    def pasteObjects(self,  ray):
+        if len(self.cutList) < 1:
+            return
+
+        result = og.Math.intersects(ray, self.dropCollisionPlane)
+        if result.first == True:
+            i=0
+            while i < len(self.cutList):
+                self.cutListPreviousNodes[i].addChild(self.cutList[i].entity.getParentNode())
+                self.cutList[i].entity.getParentNode().translate(ray.getPoint(result.second))
+                i = i+1
+        else:
+            i=0
+            while i < len(self.cutList):
+                self.cutListPreviousNodes[i].addChild(self.cutList[i].entity.getParentNode())
+                self.cutList[i].entity.getParentNode().translate(ray.getPoint(100.0))
+                i = i+1
+        self.cutList = []
+
+    def leftMouseUp(self):
+        if self.pivot is not None and self.pivot.isTransforming:
+            self.pivot.stopTransforming()
+
+    def resetSelection(self):
+        for so in self.userSelectionList:
+            so.setSelected(False)
+
+        self.userSelectionList = []
+
+        self.listenerDings.reset()
+        pass
+
+
+    def updatePivots(self):
+        newPivotPosition = og.Vector3(0, 0, 0)
+
+        for so in self.userSelectionList:
+            newPivotPosition += so.entity.getParentNode().getPosition()
+        if self.pivot is not None:
+            self.pivot.setPosition(newPivotPosition / len(self.userSelectionList))
+
+    def unload(self,  saveOnUnload=True):
+        pass
+
+    def save(self):
+        pass
+
+    def startDropGameObjectAction(self, classid, ray):
+        go = self.gocManager.getGameObjectWithClassId(classid)
+
+        if go is not None:
+            meshFile = go.getMeshFileName()
+            dropEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
+            dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
+            dropNode.attachObject(dropEntity)
+
+            result = og.Math.intersects(ray, self.dropCollisionPlane)
+            if result.first == True:
+                dropNode.setPosition(ray.getPoint(result.second))
+            else:
+                dropNode.setPosition(ray.getPoint(50))
+
+            self.dropGO = GameObjectRepresentation(self.dropCount, classid, dropNode, meshFile)
+            dropEntity.setUserObject(self.dropGO)
+
+        self.dropCount += 1
+
+    def moveDropGameObjectAction(self, ray):
+        result = og.Math.intersects(ray, self.dropCollisionPlane)
+        if result.first == True:
+            self.dropGO.setPosition(ray.getPoint(result.second))
+        else:
+            self.dropGO.setPosition(ray.getPoint(50))
+
+    def stopDropGameObjectAction(self, ray):
+        print "sd"
+
+    def startDropModelAction(self, meshFile, ray):
+        self.dropEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
+        self.dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
+        self.dropNode.attachObject(self.dropEntity)
+
+        result = og.Math.intersects(ray, self.dropCollisionPlane)
+        if result.first == True:
+            self.dropNode.setPosition(ray.getPoint(result.second))
+        else:
+            self.dropNode.setPosition(ray.getPoint(50))
+
+        self.dropCount += 1
+
+    def moveDropModelAction(self, ray):
+        result = og.Math.intersects(ray, self.dropCollisionPlane)
+        if result.first == True:
+            self.dropNode.setPosition(ray.getPoint(result.second))
+        else:
+            self.dropNode.setPosition(ray.getPoint(50))
+
+
+    def stopDropModelAction(self, ray):
+        pass
+

Modified: rl/trunk/editors/Lockenwickler/src/MovePivot.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MovePivot.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/MovePivot.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,218 +1,218 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-
-import sys
-import ogre.renderer.OGRE as og
-
-class Pivot():
-    def __init__(self,  sceneManager):
-        self.sceneManager = sceneManager
-        self.camera = self.sceneManager.getCamera("MainCam")
-
-        self.mode = None
-        self.isHidden = True
-
-        self.meshManager = og.MeshManager.getSingleton ()
-
-        self.pivotNode = sceneManager.getRootSceneNode().createChildSceneNode("pivotNode")
-        self.__createMovePivot()
-        self.__createRotatePivot()
-        self.__createScalePivot()
-        self.hide()
-        self.setMoveMode()
-
-        self.moveDirection = None
-        self.isTransforming = False
-        self.selectionList = None
-
-    def __createMovePivot(self):
-        self.xMoveEntity = self.sceneManager.createEntity("EditorXArrow",  "Pivot_Arrow.mesh")
-        self.xMoveEntity.setMaterialName("Lockenwickler_Pivot_X")
-#        self.xMoveEntity.getSubEntity(0).getMaterial().setDepthCheckEnabled(False)
-#        self.xMoveEntity.getSubEntity(0).getMaterial().setDepthWriteEnabled(False)
-        self.xMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.xMoveNode = self.pivotNode.createChildSceneNode()
-        self.xMoveNode.attachObject(self.xMoveEntity)
-        self.xMoveNode.translate(og.Vector3(2, 0, 0))
-        self.xMoveNode.rotate(og.Vector3.UNIT_Y,  og.Degree(90))
-
-#        plane = og.Plane (og.Vector3.UNIT_X, 0)
-#        self.meshManager.createPlane ('EditorXArrowSelectionPlane', 'General', plane, 5, 14, 1, 1, False, 1, 5, 5, (0, 0, 1))
-#        self.xMoveEntitySelectionPlane = self.sceneManager.createEntity ('EditorXArrowSelectionPlane', 'EditorXArrowSelectionPlane')
-#        self.xMoveNodeSelectionPlane = self.xMoveNode.createChildSceneNode()
-#        self.xMoveNodeSelectionPlane.attachObject (self.xMoveEntitySelectionPlane)
-#        self.xMoveNodeSelectionPlane.translate(og.Vector3(0, 0, 5))
-#        self.xMoveEntitySelectionPlane.setMaterialName("Lockenwickler_Pivot_X")
-
-
-
-        self.yMoveEntity = self.sceneManager.createEntity("EditorYArrow",  "Pivot_Arrow.mesh")
-        self.yMoveEntity.setMaterialName("Lockenwickler_Pivot_Y")
-        self.yMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.yMoveNode = self.pivotNode.createChildSceneNode()
-        self.yMoveNode.attachObject(self.yMoveEntity)
-        self.yMoveNode.translate(og.Vector3(0, 2, 0))
-        self.yMoveNode.rotate(og.Vector3.UNIT_X,  og.Degree(-90))
-        #self.yNode.showBoundingBox(True)
-
-#        plane = og.Plane (og.Vector3.UNIT_X, 0)
-#        self.meshManager.createPlane ('EditorYArrowSelectionPlane', 'General', plane, 14, 0, 1, 1, False, 1, 5, 5, (0, 0, 1))
-#        self.yMoveEntitySelectionPlane = self.sceneManager.createEntity ('EditorYArrowSelectionPlane', 'EditorYArrowSelectionPlane')
-#        self.yMoveNodeSelectionPlane = self.xMoveNode.createChildSceneNode()
-#        self.yMoveNodeSelectionPlane.attachObject (self.yMoveEntitySelectionPlane)
-#        self.yMoveNodeSelectionPlane.translate(og.Vector3(0, 5, 0))
-#        self.yMoveEntitySelectionPlane.setMaterialName("Lockenwickler_Pivot_Y")
-
-
-        self.zMoveEntity = self.sceneManager.createEntity("EditorZArrow",  "Pivot_Arrow.mesh")
-        self.zMoveEntity.setMaterialName("Lockenwickler_Pivot_Z")
-        self.zMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.zMoveNode = self.pivotNode.createChildSceneNode()
-        self.zMoveNode.attachObject(self.zMoveEntity)
-        self.zMoveNode.translate(og.Vector3(0, 0, 2))
-        #self.zNode.showBoundingBox(True)
-
-        self.freeMoveEntity = self.sceneManager.createEntity("EditorFreeMoveArrow",  "Pivot_FreeMover.mesh")
-        self.freeMoveEntity.setMaterialName("Lockenwickler_FreeMover")
-        self.freeMoveNode = self.pivotNode.createChildSceneNode()
-        self.freeMoveNode.attachObject(self.freeMoveEntity)
-
-
-    def __createRotatePivot(self):
-        self.xRotateEntity = self.sceneManager.createEntity("EditorXRotator",  "Rotate_Torus.mesh")
-        self.xRotateEntity.setMaterialName("Lockenwickler_Pivot_X")
-        self.xRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.xRotateNode = self.pivotNode.createChildSceneNode()
-        self.xRotateNode.attachObject(self.xRotateEntity)
-        #self.xRotateNode.translate(0, 0, -5)
-        self.xRotateNode.rotate(og.Vector3.UNIT_Y,  og.Degree(90))
-
-        self.yRotateEntity = self.sceneManager.createEntity("EditorYRotator",  "Rotate_Torus.mesh")
-        self.yRotateEntity.setMaterialName("Lockenwickler_Pivot_Y")
-        self.yRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.yRotateNode = self.pivotNode.createChildSceneNode()
-        self.yRotateNode.attachObject(self.yRotateEntity)
-        #self.yRotateNode.translate(0, 0, -10)
-        self.yRotateNode.rotate(og.Vector3.UNIT_X,  og.Degree(90))
-
-        self.zRotateEntity = self.sceneManager.createEntity("EditorZRotator",  "Rotate_Torus.mesh")
-        self.zRotateEntity.setMaterialName("Lockenwickler_Pivot_Z")
-        self.zRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.zRotateNode = self.pivotNode.createChildSceneNode()
-        self.zRotateNode.attachObject(self.zRotateEntity)
-
-
-    def __createScalePivot(self):
-        pass
-
-    def setPosition(self,  pos):
-        self.pivotNode.setPosition(pos)
-
-    def getPosition(self):
-        return self.pivotNode.getPosition()
-
-    def startTransforming(self, dirEntity, soList):
-        print "dbg: transforming....."
-        self.moveDirection = dirEntity.getName()
-        self.selectionList = soList
-        self.isTransforming = True
-        pass
-
-    def stopTransforming(self):
-        self.isTransforming = False
-        pass
-
-    def hide(self):
-        self.pivotNode.removeAllChildren()
-        self.isHidden = True
-
-    def show(self):
-        self.hide()
-        if self.mode == 1:
-            self.pivotNode.addChild(self.xMoveNode)
-            self.pivotNode.addChild(self.yMoveNode)
-            self.pivotNode.addChild(self.zMoveNode)
-        elif self.mode == 2:
-            self.pivotNode.addChild(self.xRotateNode)
-            self.pivotNode.addChild(self.yRotateNode)
-            self.pivotNode.addChild(self.zRotateNode)
-        elif self.mode == 3:
-            return
-        self.isHidden = False
-
-    def setMoveMode(self):
-        self.hide()
-        self.mode = 1
-        self.pivotNode.addChild(self.xMoveNode)
-        self.pivotNode.addChild(self.yMoveNode)
-        self.pivotNode.addChild(self.zMoveNode)
-        pass
-
-    def setRotateMode(self):
-        self.hide()
-        self.mode = 2
-        self.pivotNode.addChild(self.xRotateNode)
-        self.pivotNode.addChild(self.yRotateNode)
-        self.pivotNode.addChild(self.zRotateNode)
-        pass
-
-    def settScaleMode(self):
-        pass
-
-    def onMouseMoved(self, globalX, globalY, incX, incY):
-        # move mode
-        if self.isTransforming:
-            if self.mode == 1:
-                transFactor = 0.1
-                transVec = og.Vector3()
-                if self.moveDirection == "EditorXArrow":
-                    transVec = og.Vector3(-incX, 0.0 , 0.0)
-                elif self.moveDirection == "EditorYArrow":
-                    transVec = og.Vector3(0.0, -incY, 0.0)
-                elif self.moveDirection == "EditorZArrow":
-                    transVec = og.Vector3(0.0, 0.0, incX)
-
-                transVec = transVec * transFactor
-                for so in self.selectionList:
-                    so.entity.getParentNode().translate(transVec)
-
-                self.pivotNode.translate(transVec)
-
-            # rotate mode
-            elif self.mode == 2:
-                rotValue = (incX + incY) * 0.05
-
-                if self.moveDirection == "EditorXRotator":
-                    for so in self.selectionList:
-                        so.entity.getParentNode().pitch(rotValue)
-                if self.moveDirection == "EditorYRotator":
-                    for so in self.selectionList:
-                        so.entity.getParentNode().yaw(rotValue)
-                if self.moveDirection == "EditorZRotator":
-                    for so in self.selectionList:
-                        so.entity.getParentNode().roll(rotValue)
-
-        self.update()
-
-    def update(self):
-        if not self.isHidden:
-            dist = self.camera.getPosition().distance(self.pivotNode.getPosition())
-            self.pivotNode.setScale(og.Vector3(0.5,  0.5,  0.5) * (dist / 30))
-
-
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+
+import sys
+import ogre.renderer.OGRE as og
+
+class Pivot():
+    def __init__(self,  sceneManager):
+        self.sceneManager = sceneManager
+        self.camera = self.sceneManager.getCamera("MainCam")
+
+        self.mode = None
+        self.isHidden = True
+
+        self.meshManager = og.MeshManager.getSingleton ()
+
+        self.pivotNode = sceneManager.getRootSceneNode().createChildSceneNode("pivotNode")
+        self.__createMovePivot()
+        self.__createRotatePivot()
+        self.__createScalePivot()
+        self.hide()
+        self.setMoveMode()
+
+        self.moveDirection = None
+        self.isTransforming = False
+        self.selectionList = None
+
+    def __createMovePivot(self):
+        self.xMoveEntity = self.sceneManager.createEntity("EditorXArrow",  "Pivot_Arrow.mesh")
+        self.xMoveEntity.setMaterialName("Lockenwickler_Pivot_X")
+#        self.xMoveEntity.getSubEntity(0).getMaterial().setDepthCheckEnabled(False)
+#        self.xMoveEntity.getSubEntity(0).getMaterial().setDepthWriteEnabled(False)
+        self.xMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.xMoveNode = self.pivotNode.createChildSceneNode()
+        self.xMoveNode.attachObject(self.xMoveEntity)
+        self.xMoveNode.translate(og.Vector3(2, 0, 0))
+        self.xMoveNode.rotate(og.Vector3().UNIT_Y,  og.Degree(90))
+
+#        plane = og.Plane (og.Vector3.UNIT_X, 0)
+#        self.meshManager.createPlane ('EditorXArrowSelectionPlane', 'General', plane, 5, 14, 1, 1, False, 1, 5, 5, (0, 0, 1))
+#        self.xMoveEntitySelectionPlane = self.sceneManager.createEntity ('EditorXArrowSelectionPlane', 'EditorXArrowSelectionPlane')
+#        self.xMoveNodeSelectionPlane = self.xMoveNode.createChildSceneNode()
+#        self.xMoveNodeSelectionPlane.attachObject (self.xMoveEntitySelectionPlane)
+#        self.xMoveNodeSelectionPlane.translate(og.Vector3(0, 0, 5))
+#        self.xMoveEntitySelectionPlane.setMaterialName("Lockenwickler_Pivot_X")
+
+
+
+        self.yMoveEntity = self.sceneManager.createEntity("EditorYArrow",  "Pivot_Arrow.mesh")
+        self.yMoveEntity.setMaterialName("Lockenwickler_Pivot_Y")
+        self.yMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.yMoveNode = self.pivotNode.createChildSceneNode()
+        self.yMoveNode.attachObject(self.yMoveEntity)
+        self.yMoveNode.translate(og.Vector3(0, 2, 0))
+        self.yMoveNode.rotate(og.Vector3().UNIT_X,  og.Degree(-90))
+        #self.yNode.showBoundingBox(True)
+
+#        plane = og.Plane (og.Vector3().UNIT_X, 0)
+#        self.meshManager.createPlane ('EditorYArrowSelectionPlane', 'General', plane, 14, 0, 1, 1, False, 1, 5, 5, (0, 0, 1))
+#        self.yMoveEntitySelectionPlane = self.sceneManager.createEntity ('EditorYArrowSelectionPlane', 'EditorYArrowSelectionPlane')
+#        self.yMoveNodeSelectionPlane = self.xMoveNode.createChildSceneNode()
+#        self.yMoveNodeSelectionPlane.attachObject (self.yMoveEntitySelectionPlane)
+#        self.yMoveNodeSelectionPlane.translate(og.Vector3(0, 5, 0))
+#        self.yMoveEntitySelectionPlane.setMaterialName("Lockenwickler_Pivot_Y")
+
+
+        self.zMoveEntity = self.sceneManager.createEntity("EditorZArrow",  "Pivot_Arrow.mesh")
+        self.zMoveEntity.setMaterialName("Lockenwickler_Pivot_Z")
+        self.zMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.zMoveNode = self.pivotNode.createChildSceneNode()
+        self.zMoveNode.attachObject(self.zMoveEntity)
+        self.zMoveNode.translate(og.Vector3(0, 0, 2))
+        #self.zNode.showBoundingBox(True)
+
+        self.freeMoveEntity = self.sceneManager.createEntity("EditorFreeMoveArrow",  "Pivot_FreeMover.mesh")
+        self.freeMoveEntity.setMaterialName("Lockenwickler_FreeMover")
+        self.freeMoveNode = self.pivotNode.createChildSceneNode()
+        self.freeMoveNode.attachObject(self.freeMoveEntity)
+
+
+    def __createRotatePivot(self):
+        self.xRotateEntity = self.sceneManager.createEntity("EditorXRotator",  "Rotate_Torus.mesh")
+        self.xRotateEntity.setMaterialName("Lockenwickler_Pivot_X")
+        self.xRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.xRotateNode = self.pivotNode.createChildSceneNode()
+        self.xRotateNode.attachObject(self.xRotateEntity)
+        #self.xRotateNode.translate(0, 0, -5)
+        self.xRotateNode.rotate(og.Vector3().UNIT_Y,  og.Degree(90))
+
+        self.yRotateEntity = self.sceneManager.createEntity("EditorYRotator",  "Rotate_Torus.mesh")
+        self.yRotateEntity.setMaterialName("Lockenwickler_Pivot_Y")
+        self.yRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.yRotateNode = self.pivotNode.createChildSceneNode()
+        self.yRotateNode.attachObject(self.yRotateEntity)
+        #self.yRotateNode.translate(0, 0, -10)
+        self.yRotateNode.rotate(og.Vector3().UNIT_X,  og.Degree(90))
+
+        self.zRotateEntity = self.sceneManager.createEntity("EditorZRotator",  "Rotate_Torus.mesh")
+        self.zRotateEntity.setMaterialName("Lockenwickler_Pivot_Z")
+        self.zRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.zRotateNode = self.pivotNode.createChildSceneNode()
+        self.zRotateNode.attachObject(self.zRotateEntity)
+
+
+    def __createScalePivot(self):
+        pass
+
+    def setPosition(self,  pos):
+        self.pivotNode.setPosition(pos)
+
+    def getPosition(self):
+        return self.pivotNode.getPosition()
+
+    def startTransforming(self, dirEntity, soList):
+        print "dbg: transforming....."
+        self.moveDirection = dirEntity.getName()
+        self.selectionList = soList
+        self.isTransforming = True
+        pass
+
+    def stopTransforming(self):
+        self.isTransforming = False
+        pass
+
+    def hide(self):
+        self.pivotNode.removeAllChildren()
+        self.isHidden = True
+
+    def show(self):
+        self.hide()
+        if self.mode == 1:
+            self.pivotNode.addChild(self.xMoveNode)
+            self.pivotNode.addChild(self.yMoveNode)
+            self.pivotNode.addChild(self.zMoveNode)
+        elif self.mode == 2:
+            self.pivotNode.addChild(self.xRotateNode)
+            self.pivotNode.addChild(self.yRotateNode)
+            self.pivotNode.addChild(self.zRotateNode)
+        elif self.mode == 3:
+            return
+        self.isHidden = False
+
+    def setMoveMode(self):
+        self.hide()
+        self.mode = 1
+        self.pivotNode.addChild(self.xMoveNode)
+        self.pivotNode.addChild(self.yMoveNode)
+        self.pivotNode.addChild(self.zMoveNode)
+        pass
+
+    def setRotateMode(self):
+        self.hide()
+        self.mode = 2
+        self.pivotNode.addChild(self.xRotateNode)
+        self.pivotNode.addChild(self.yRotateNode)
+        self.pivotNode.addChild(self.zRotateNode)
+        pass
+
+    def settScaleMode(self):
+        pass
+
+    def onMouseMoved(self, globalX, globalY, incX, incY):
+        # move mode
+        if self.isTransforming:
+            if self.mode == 1:
+                transFactor = 0.1
+                transVec = og.Vector3()
+                if self.moveDirection == "EditorXArrow":
+                    transVec = og.Vector3(-incX, 0.0 , 0.0)
+                elif self.moveDirection == "EditorYArrow":
+                    transVec = og.Vector3(0.0, -incY, 0.0)
+                elif self.moveDirection == "EditorZArrow":
+                    transVec = og.Vector3(0.0, 0.0, incX)
+
+                transVec = transVec * transFactor
+                for so in self.selectionList:
+                    so.entity.getParentNode().translate(transVec)
+
+                self.pivotNode.translate(transVec)
+
+            # rotate mode
+            elif self.mode == 2:
+                rotValue = (incX + incY) * 0.05
+
+                if self.moveDirection == "EditorXRotator":
+                    for so in self.selectionList:
+                        so.entity.getParentNode().pitch(rotValue)
+                if self.moveDirection == "EditorYRotator":
+                    for so in self.selectionList:
+                        so.entity.getParentNode().yaw(rotValue)
+                if self.moveDirection == "EditorZRotator":
+                    for so in self.selectionList:
+                        so.entity.getParentNode().roll(rotValue)
+
+        self.update()
+
+    def update(self):
+        if not self.isHidden:
+            dist = self.camera.getPosition().distance(self.pivotNode.getPosition())
+            self.pivotNode.setScale(og.Vector3(0.5,  0.5,  0.5) * (dist / 30))
+
+

Modified: rl/trunk/editors/Lockenwickler/src/MyRaySceneQueryListener.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/MyRaySceneQueryListener.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/MyRaySceneQueryListener.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,306 +1,347 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-import ctypes
-import ogre.renderer.OGRE as og
-
-# a class to store information about a object that got selected
-class SelectionObject():
-    def __init__(self,  entity,  distance):
-        self.entityName = entity.getName()
-        self.entity = entity #the selected entity
-        self.distance = distance # the distance from camera at the time of selection
-        self.isPivot = False
-
-#        if self.entity.getUserObject() is not None:
-#            self.isGameObject = True
-#        else:
-#            self.isGameObject = False
-
-    #if True this instance will show its bounding box else it will hide it
-    def setSelected(self,  selected):
-        if selected == True:
-            self.entity.getParentNode().showBoundingBox(True)
-        else:
-            self.entity.getParentNode().showBoundingBox(False)
-
-    def __eq__(self, other):
-        return self.entity.getName() == other.entity.getName()
-
-    def __ne__(self, other):
-        return self.entity.getName() != other.entity.getName()
-
-class MyRaySceneQueryListener ( og.RaySceneQueryListener ):
-    def __init__( self ):
-        super ( MyRaySceneQueryListener, self ).__init__()
-        self.previouseSelection = None
-        self.selectionList = []
-        self.previousSelected = -1
-        self.currentSelected = -1
-
-        self.mNormalList = []
-        self.mVertexList = []
-        self.mIndexList = []
-
-        self.currentRay = None
-        self.lastRay = None
-
-    # sort algorithm for the selection list
-    def sortCompareImp(self,  x,  y):
-        if x.distance > y.distance:
-            return 1
-        elif x.distance == y.distance:
-            return 0
-        else: # x<y
-            return -1
-
-    def queryResult ( self, entity, distance ):
-        #print "dbg: " + entity.getName()
-        if distance == 0.0: #camera is in the bounding box, ignore this selection
-            return True
-#        elif entity.getName() == "rayLine" :
-#            return True
-        elif entity.getName() == "OgreMainWin::0::ViewportGrid":
-            return True
-        elif entity.isVisible() and entity.getName() == "EditorXArrow":
-            so = SelectionObject(entity,  distance)
-            so.isPivot = True
-            self.selectionList.append(so)
-            return False
-        elif entity.isVisible() and entity.getName() == "EditorYArrow":
-            so = SelectionObject(entity,  distance)
-            so.isPivot = True
-            self.selectionList.append(so)
-            return False
-        elif entity.isVisible() and entity.getName() == "EditorZArrow":
-            so = SelectionObject(entity,  distance)
-            so.isPivot = True
-            self.selectionList.append(so)
-            return False
-        elif entity.isVisible() and entity.getName() == "EditorFreeMover":
-            return True
-        elif entity.getName() == "EditorXRotator" or entity.getName() == "EditorYRotator" or entity.getName() == "EditorZRotator":
-            if entity.isVisible() and self.rayCastToPolygonLevelOnSingleMesh(self.currentRay,  entity):
-                so = SelectionObject(entity,  distance)
-                so.isPivot = True
-                self.selectionList.append(so)
-                return False
-            else:
-                return True
-        else:
-            so = SelectionObject(entity,  distance)
-            self.selectionList.append(so)
-
-        self.selectionList.sort(self.sortCompareImp)
-
-        return True
-
-    def reset(self):
-        self.previousSelected = -1
-        self.currentSelected = -1
-        del self.selectionList[:]
-        #self.selectionList = []
-
-#    def iterateEntityUnderMouse(self):
-#        self.previousSelected = self.currentSelected
-#        if len(self.selectionList) >= self.currentSelected: # would mean we are out of bounds
-#            self.selectionList[self.currentSelected].setSelected(False)
-#
-#        self.currentSelected += 1
-#
-#        if len(self.selectionList) == self.currentSelected: # means we are out of bounds and reached the end of the list, reset it to zero
-#            self.currentSelected = 0
-#
-#        if len(self.selectionList) >= self.currentSelected: # would mean we are out of bounds
-#            #print str(self.selectionList[self.currentSelected].distance) + " "  + self.selectionList[self.currentSelected].entity.getName()
-#            if self.rayCastToPolygonLevelOnCurrentSelection():
-#                self.selectionList[self.currentSelected].setSelected(True)
-#                return self.selectionList[self.currentSelected]
-
-
-    def getMeshInformation(self,  entity):
-        numVertices = 0
-        numIndices = 0
-        useSharedVertices = False
-
-        if not entity:
-            return False
-
-        pMesh = entity.getMesh()
-
-        pos =    entity.getParentNode().getWorldPosition()
-        orient = entity.getParentNode().getWorldOrientation()
-        scale =  entity.getParentNode().getScale()
-
-        for i in range ( pMesh.getNumSubMeshes() ):
-            pSubMesh = pMesh.getSubMesh(i)
-            if pSubMesh.useSharedVertices:
-                useSharedVertices = True
-            else:
-                numVertices += pSubMesh.vertexData.vertexCount
-            numIndices += pSubMesh.indexData.indexCount
-
-        if useSharedVertices:
-            numVertices += pMesh.sharedVertexData.vertexCount
-
-            storageclass = ctypes.c_float * 3
-            test=storageclass(0.0,  0.0,  0.0)
-#         mVertexList = new Point[numVertices];
-#         mIndexList = new unsigned int[numIndices];
-
-        self.mVertexList = []
-        self.mIndexList = []
-
-        ## Count the number of vertices and incides so we can Set them
-        indexCount = 0
-        vertListCount = 0
-
-        if useSharedVertices:
-            ## Real* pVertices (x, y, z order x numVertices)
-            elem = pMesh.sharedVertexData.vertexDeclaration.findElementBySemantic(og.VES_POSITION)
-
-            if not elem:
-                ogre.Except(Exception.ERR_ITEM_NOT_FOUND, "Can't find position elements in the "
-                    "mesh to be written!", "MeshSerializerImpl.writeGeometry")
-
-            vbuf = pMesh.sharedVertexData.vertexBufferBinding.getBuffer(elem.getSource())
-
-            ## need space for the 3 verticies
-            storageclass = ctypes.c_float * 3
-            test=storageclass(0.0,  0.0,  0.0)
-
-            for j in range ( pMesh.sharedVertexData.vertexCount ):
-                vbuf.readData(j * vbuf.getVertexSize(), 3 * ctype.sizeof(ctype.c_float), ctype.addressof(test))
-                self.mVertexList.append( og.Vector3(test[0], test[1], test[2]) )
-                vertListCount+=1
-
-        for i in range ( pMesh.getNumSubMeshes() ):
-            pSubMesh = pMesh.getSubMesh(i)
-            if not pSubMesh.useSharedVertices:
-                ## Real* pVertices (x, y, z order x numVertices)
-                elem = pSubMesh.vertexData.vertexDeclaration.findElementBySemantic(og.VES_POSITION)
-
-                if not elem:
-                    og.Except(Exception.ERR_ITEM_NOT_FOUND, "Can't find position elements in the "
-                        "mesh to be written!", "MeshSerializerImpl.writeGeometry")
-
-                vbuf = pSubMesh.vertexData.vertexBufferBinding.getBuffer(elem.getSource())
-
-                ## need space for the verticies
-                storageclass = ctypes.c_float * (pSubMesh.vertexData.vertexCount * 6)
-                test=storageclass(0.0)
-
-                vbuf.readData(0, pSubMesh.vertexData.vertexCount * 6 * ctypes.sizeof(ctypes.c_float), ctypes.addressof(test))
-
-                for j in range ( 0,  pSubMesh.vertexData.vertexCount * 6,  6):
-                    #print j
-                    p = og.Vector3(test[j], test[j+1], test[j+2])
-                    p /= scale
-                    p += pos
-                    p = orient * p
-                    self.mVertexList.append( p )
-                    vertListCount += 1
-
-            ibuf = pSubMesh.indexData.indexBuffer
-            ## need space for the verticies
-            storageclass = ctypes.c_ushort * pSubMesh.indexData.indexCount
-            test2=storageclass()
-
-
-            ibuf.readData(0, ibuf.getSizeInBytes(), ctypes.addressof(test2))
-            for j in range ( pSubMesh.indexData.indexCount ):
-                self.mIndexList.append (test2[j])   # unsigned short
-                indexCount += 1
-
-            ih = 0
-            for blah in self.mVertexList:
-                #print str(ih) + ": "  +  str(blah)
-                ih += 1
-
-#            for blah in self.mIndexList:
-#                print blah
-
-
-    # used when a new selection is made, meaning when not iterationg through the selected objects
-    def rayCastToPolygonLevel(self,  ray):
-        self.lastRay = ray
-
-        for so in self.selectionList:
-            if so.isPivot:
-                return so
-
-        if len(self.selectionList) >= 1:
-            for so in self.selectionList:
-                if self.rayCastToPolygonLevelOnSingleMesh(ray,  so.entity):
-                    return so
-
-
-    def rayCastToPolygonLevelOnSingleMesh(self,  ray,  entity):
-        return True
-        self.getMeshInformation(entity)
-        name = entity.getName()
-        print "dbg: " + name
-
-        temp = []
-        for vec in self.mVertexList:
-            temp.append(vec.x)
-            temp.append(vec.y)
-            temp.append(vec.z)
-
-        globalPosition = entity.getParentNode().getWorldPosition()
-        globalOrientation = entity.getParentNode().getWorldOrientation()
-
-
-        i = 0
-        while i <= (len(self.mIndexList) - 3):
-            verta = globalPosition + self.mVertexList[self.mIndexList[i]]
-            vertb = globalPosition + self.mVertexList[self.mIndexList[i+1]]
-            vertc = globalPosition + self.mVertexList[self.mIndexList[i+2]]
-
-            verta = globalOrientation * verta
-            vertb = globalOrientation * vertb
-            vertc = globalOrientation * vertc
-            normal = og.Math.calculateBasicFaceNormal(verta, vertb, vertc)
-
-            result = og.Math.intersects(ray, verta, vertb, vertc, True, True)
-            #result = og.Math.intersects(ray, globalPosition + self.mVertexList[self.mIndexList[i]], globalPosition + self.mVertexList[self.mIndexList[i+1]],
-            #                                                                                                                                              globalPosition + self.mVertexList[self.mIndexList[i+2]], normal,  True, True)
-
-            if result.first:
-                print "dbg: Treffer!!!!!!!!!"
-                return True
-
-            i += 3
-
-        return False
-
-    def rayCastToPolygonLevelOnCurrentSelection(self):
-        if len(self.selectionList) >= 1:
-            self.getMeshInformation(self.selectionList[self.currentSelected].entity)
-
-            i = 0
-            while i <= (len(self.mIndexList) - 3):
-                globalPosition = self.selectionList[self.currentSelected].entity.getParentNode().getPosition()
-                result = og.Math.intersects(self.lastRay, globalPosition + self.mVertexList[self.mIndexList[i]], globalPosition + self.mVertexList[self.mIndexList[i+1]],
-                                                                                                                                                          globalPosition + self.mVertexList[self.mIndexList[i+2]], True, True)
-
-                if result.first:
-                   return True
-
-                i += 3
-            return False
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+import ctypes
+import ogre.renderer.OGRE as og
+import ogre.physics.OgreNewt as on
+
+# a class to store information about a object that got selected
+class SelectionObject():
+    def __init__(self,  entity,  distance):
+        self.entityName = entity.getName()
+        self.entity = entity #the selected entity
+        self.distance = distance # the distance from camera at the time of selection
+        self.isPivot = False
+
+#        if self.entity.getUserObject() is not None:
+#            self.isGameObject = True
+#        else:
+#            self.isGameObject = False
+
+    #if True this instance will show its bounding box else it will hide it
+    def setSelected(self,  selected):
+        if selected == True:
+            self.entity.getParentNode().showBoundingBox(True)
+        else:
+            self.entity.getParentNode().showBoundingBox(False)
+
+    def __eq__(self, other):
+        return self.entity.getName() == other.entity.getName()
+
+    def __ne__(self, other):
+        return self.entity.getName() != other.entity.getName()
+
+class MyRaySceneQueryListener ( og.RaySceneQueryListener ):
+    def __init__( self ):
+        super ( MyRaySceneQueryListener, self ).__init__()
+        self.previouseSelection = None
+        self.selectionList = []
+        self.previousSelected = -1
+        self.currentSelected = -1
+
+        self.mNormalList = []
+        self.mVertexList = []
+        self.mIndexList = []
+
+        self.currentRay = None
+        self.lastRay = None
+
+        self.World = on.World()
+        self.World.setWorldSize(og.Vector3(-1000000, -1000000, -1000000), og.Vector3(1000000, 1000000, 1000000))
+
+    def __del__(self):
+        del self.World
+
+    # sort algorithm for the selection list
+    def sortCompareImp(self,  x,  y):
+        if x.distance > y.distance:
+            return 1
+        elif x.distance == y.distance:
+            return 0
+        else: # x<y
+            return -1
+
+    def queryResult ( self, entity, distance ):
+        #print "dbg: " + entity.getName()
+        if distance == 0.0: #camera is in the bounding box, ignore this selection
+            return True
+        elif entity.getName() == "OgreMainWin::0::ViewportGrid":
+            return True
+        elif entity.getName() == "rayLine":
+            return True
+        elif entity.isVisible() and entity.getName() == "EditorXArrow":
+            so = SelectionObject(entity,  distance)
+            so.isPivot = True
+            self.selectionList.append(so)
+            return False
+        elif entity.isVisible() and entity.getName() == "EditorYArrow":
+            so = SelectionObject(entity,  distance)
+            so.isPivot = True
+            self.selectionList.append(so)
+            return False
+        elif entity.isVisible() and entity.getName() == "EditorZArrow":
+            so = SelectionObject(entity,  distance)
+            so.isPivot = True
+            self.selectionList.append(so)
+            return False
+        elif entity.isVisible() and entity.getName() == "EditorFreeMover":
+            return True
+        elif entity.getName() == "EditorXRotator" or entity.getName() == "EditorYRotator" or entity.getName() == "EditorZRotator":
+            if entity.isVisible() and self.rayCastToPolygonLevelOnSingleMesh(self.currentRay,  entity):
+                so = SelectionObject(entity,  distance)
+                so.isPivot = True
+                self.selectionList.append(so)
+                return False
+            else:
+                return True
+        else:
+            so = SelectionObject(entity,  distance)
+            self.selectionList.append(so)
+
+        self.selectionList.sort(self.sortCompareImp)
+
+        return True
+
+    def reset(self):
+        self.previousSelected = -1
+        self.currentSelected = -1
+        del self.selectionList[:]
+        #self.selectionList = []
+
+    def rayCastToPolygonLevel(self,  ray):
+        self.lastRay = ray
+
+        for so in self.selectionList:
+            if so.isPivot:
+                return so
+
+        if len(self.selectionList) >= 1:
+            for so in self.selectionList:
+                if self.rayCastToPolygonLevelOnSingleMesh(ray,  so.entity):
+                    return so
+
+
+    def rayCastToPolygonLevelOnSingleMesh(self,  ray,  entity):
+        col = on.TreeCollision(self.World, entity.getParentNode(), False)
+        bod = on.Body(self.World, col)
+
+
+        start = ray.getOrigin()
+        end = ray.getPoint(10000)
+
+        retNorm = og.Vector3(0.0, 0.0, 0.0)
+
+        val = on.CollisionRayCast(col, start, end, retNorm)
+#        print val
+#
+#        print retNorm.x
+#        print retNorm.y
+#        print retNorm.z
+        del col
+        self.World.destroyAllBodies()
+        
+        if retNorm.x != 0.0 or retNorm.y != 0.0 or retNorm.z != 0.0:
+#           print "yes"
+           return True
+        else:
+#            print "no"
+            return False
+           
+        
+        
+
+#    def iterateEntityUnderMouse(self):
+#        self.previousSelected = self.currentSelected
+#        if len(self.selectionList) >= self.currentSelected: # would mean we are out of bounds
+#            self.selectionList[self.currentSelected].setSelected(False)
+#
+#        self.currentSelected += 1
+#
+#        if len(self.selectionList) == self.currentSelected: # means we are out of bounds and reached the end of the list, reset it to zero
+#            self.currentSelected = 0
+#
+#        if len(self.selectionList) >= self.currentSelected: # would mean we are out of bounds
+#            #print str(self.selectionList[self.currentSelected].distance) + " "  + self.selectionList[self.currentSelected].entity.getName()
+#            if self.rayCastToPolygonLevelOnCurrentSelection():
+#                self.selectionList[self.currentSelected].setSelected(True)
+#                return self.selectionList[self.currentSelected]
+
+
+#    def getMeshInformation(self,  entity):
+#        numVertices = 0
+#        numIndices = 0
+#        useSharedVertices = False
+#
+#        if not entity:
+#            return False
+#
+#        pMesh = entity.getMesh()
+#
+#        position =    entity.getParentNode()._getDerivedPosition()
+#        orient = entity.getParentNode()._getDerivedOrientation()
+#        scale =  entity.getParentNode().getScale()
+#
+#        for i in range ( pMesh.getNumSubMeshes() ):
+#            pSubMesh = pMesh.getSubMesh(i)
+#            if pSubMesh.useSharedVertices:
+#                useSharedVertices = True
+#            else:
+#                numVertices += pSubMesh.vertexData.vertexCount
+#            numIndices += pSubMesh.indexData.indexCount
+#
+#        if useSharedVertices:
+#            numVertices += pMesh.sharedVertexData.vertexCount
+#
+#            storageclass = ctypes.c_float * 3
+#            test=storageclass(0.0,  0.0,  0.0)
+##         mVertexList = new Point[numVertices];
+##         mIndexList = new unsigned int[numIndices];
+#
+#        self.mVertexList = []
+#        self.mIndexList = []
+#
+#        ## Count the number of vertices and incides so we can Set them
+#        indexCount = 0
+#        vertListCount = 0
+#
+#        if useSharedVertices:
+#            ## Real* pVertices (x, y, z order x numVertices)
+#            elem = pMesh.sharedVertexData.vertexDeclaration.findElementBySemantic(og.VES_POSITION)
+#
+#            if not elem:
+#                ogre.Except(Exception.ERR_ITEM_NOT_FOUND, "Can't find position elements in the "
+#                    "mesh to be written!", "MeshSerializerImpl.writeGeometry")
+#
+#            vbuf = pMesh.sharedVertexData.vertexBufferBinding.getBuffer(elem.getSource())
+#
+#            ## need space for the 3 verticies
+#            storageclass = ctypes.c_float * 3
+#            test=storageclass(0.0,  0.0,  0.0)
+#
+#            for j in range ( pMesh.sharedVertexData.vertexCount ):
+#                vbuf.readData(j * vbuf.getVertexSize(), 3 * ctype.sizeof(ctype.c_float), ctype.addressof(test))
+#                pt = og.Vector3(test[0], test[1], test[2])
+#                self.mVertexList.append( (orient * (pt * scale)) + position )
+#                vertListCount+=1
+#
+#        for i in range ( pMesh.getNumSubMeshes() ):
+#            pSubMesh = pMesh.getSubMesh(i)
+#            if not pSubMesh.useSharedVertices:
+#                ## Real* pVertices (x, y, z order x numVertices)
+#                elem = pSubMesh.vertexData.vertexDeclaration.findElementBySemantic(og.VES_POSITION)
+#
+#                if not elem:
+#                    og.Except(Exception.ERR_ITEM_NOT_FOUND, "Can't find position elements in the "
+#                        "mesh to be written!", "MeshSerializerImpl.writeGeometry")
+#
+#                vbuf = pSubMesh.vertexData.vertexBufferBinding.getBuffer(elem.getSource())
+#
+#                ## need space for the verticies
+#                storageclass = ctypes.c_float * (pSubMesh.vertexData.vertexCount * 6)
+#                test=storageclass(0.0)
+#
+#                vbuf.readData(0, pSubMesh.vertexData.vertexCount * 6 * ctypes.sizeof(ctypes.c_float), ctypes.addressof(test))
+#
+#                for j in range ( 0,  pSubMesh.vertexData.vertexCount * 6,  6):
+#                    #print j
+#                    pt = og.Vector3(test[j], test[j+1], test[j+2])
+#                    self.mVertexList.append( (orient * (pt * scale)) + position )
+#                    vertListCount += 1
+#
+#            ibuf = pSubMesh.indexData.indexBuffer
+#            ## need space for the verticies
+#            storageclass = ctypes.c_ushort * pSubMesh.indexData.indexCount
+#            test2=storageclass()
+#
+#
+#            ibuf.readData(0, ibuf.getSizeInBytes(), ctypes.addressof(test2))
+#            for j in range ( pSubMesh.indexData.indexCount ):
+#                self.mIndexList.append (test2[j])   # unsigned short
+#                indexCount += 1
+#
+#            ih = 0
+#            for blah in self.mVertexList:
+#                #print str(ih) + ": "  +  str(blah)
+#                ih += 1
+#
+#    def rayCastToPolygonLevel(self,  ray):
+#        self.lastRay = ray
+#
+#        for so in self.selectionList:
+#            if so.isPivot:
+#                return so
+#
+#        if len(self.selectionList) >= 1:
+#            for so in self.selectionList:
+#                if self.rayCastToPolygonLevelOnSingleMesh(ray,  so.entity):
+#                    return so
+#
+#
+#    def rayCastToPolygonLevelOnSingleMesh(self,  ray,  entity):
+#        self.getMeshInformation(entity)
+#        name = entity.getName()
+#        print "dbg: " + name
+#
+#        temp = []
+#        for vec in self.mVertexList:
+#            temp.append(vec.x)
+#            temp.append(vec.y)
+#            temp.append(vec.z)
+#
+#        globalPosition = entity.getParentNode()._getDerivedPosition()
+#        globalOrientation = entity.getParentNode()._getDerivedOrientation()
+#
+#
+#        i = 0
+#        while i <= (len(self.mIndexList) - 3):
+#            verta = globalPosition + self.mVertexList[self.mIndexList[i]]
+#            vertb = globalPosition + self.mVertexList[self.mIndexList[i+1]]
+#            vertc = globalPosition + self.mVertexList[self.mIndexList[i+2]]
+#
+#            verta = globalOrientation * verta
+#            vertb = globalOrientation * vertb
+#            vertc = globalOrientation * vertc
+#            normal = og.Math.calculateBasicFaceNormal(verta, vertb, vertc)
+#
+#            result = og.Math.intersects(ray, verta, vertb, vertc, True, True)
+#            #result = og.Math.intersects(ray, globalPosition + self.mVertexList[self.mIndexList[i]], globalPosition + self.mVertexList[self.mIndexList[i+1]],
+#            #                                                                                                                                              globalPosition + self.mVertexList[self.mIndexList[i+2]], normal,  True, True)
+#
+#            if result.first:
+#                #print "dbg: Treffer!!!!!!!!!"
+#                return True
+#
+#            i += 3
+#
+#        return False
+#
+#    def rayCastToPolygonLevelOnCurrentSelection(self):
+#        if len(self.selectionList) >= 1:
+#            self.getMeshInformation(self.selectionList[self.currentSelected].entity)
+#
+#            i = 0
+#            while i <= (len(self.mIndexList) - 3):
+#                globalPosition = self.selectionList[self.currentSelected].entity.getParentNode().getPosition()
+#                result = og.Math.intersects(self.lastRay, globalPosition + self.mVertexList[self.mIndexList[i]], globalPosition + self.mVertexList[self.mIndexList[i+1]],
+#                                                                                                                                                          globalPosition + self.mVertexList[self.mIndexList[i+2]], True, True)
+#
+#                if result.first:
+#                   return True
+#
+#                i += 3
+#            return False

Modified: rl/trunk/editors/Lockenwickler/src/NewModuleWizard.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/NewModuleWizard.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/NewModuleWizard.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,48 +1,146 @@
-# -*- coding: utf-8 -*-
-
-"""
-Module implementing NewModuleWizard.
-"""
-
-from PyQt4.QtGui import QDialog
-from PyQt4.QtCore import pyqtSignature
-
-from Ui_NewModuleWizard import Ui_Dialog
-
-class NewModuleWizard(QDialog, Ui_Dialog):
-    """
-    Class documentation goes here.
-    """
-    def __init__(self, moduleManager, parent = None):
-        """
-        Constructor
-        """
-
-        self.moduleManager = moduleManager
-
-        QDialog.__init__(self, parent)
-        self.setupUi(self)
-
-    @pyqtSignature("QString")
-    def on_moduleNameLineEdit_textChanged(self, p0):
-        return
-        # TODO: not implemented yet
-        #raise NotImplementedError
-
-    @pyqtSignature("")
-    def on_moduleNameLineEdit_returnPressed(self):
-
-        # TODO: not implemented yet
-        raise NotImplementedError
-
-    @pyqtSignature("")
-    def on_okButton_clicked(self):
-
-        # TODO: not implemented yet
-        raise NotImplementedError
-
-    @pyqtSignature("")
-    def on_cancelButton_pressed(self):
-        self.close()
-
-
+# -*- coding: utf-8 -*-
+
+"""
+Module implementing NewModuleWizard.
+"""
+
+import os
+import glob
+
+from PyQt4.QtGui import QDialog
+from PyQt4.QtCore import pyqtSignature
+
+from Ui_NewModuleWizard import Ui_Dialog
+
+class NewModuleWizard(QDialog, Ui_Dialog):
+    """
+    Class documentation goes here.
+    """
+    def __init__(self, moduleManager, parent = None):
+       
+        QDialog.__init__(self, parent)
+        self.setupUi(self)
+
+        self.moduleManager = moduleManager
+        self.moduleManager.parseModuleConfig()
+        
+        for m in self.moduleManager.moduleList:
+            self.moduleDependenciesList.addItem(m.name)
+
+    @pyqtSignature("QString")
+    def on_moduleNameLineEdit_textChanged(self, p0):
+        if not self.moduleManager.moduleExists(str(self.moduleNameLineEdit.text())):
+            self.sceneNameLineEdit.setEnabled(True)
+            self.mapNameLineEdit.setEnabled(True)
+            self.moduleDependenciesList.setEnabled(True)
+            self.scriptDependenciesList.setEnabled(True)
+            self.okButton.setEnabled(True)
+        else:
+            self.sceneNameLineEdit.setEnabled(False)
+            self.mapNameLineEdit.setEnabled(False)
+            self.moduleDependenciesList.setEnabled(False)
+            self.scriptDependenciesList.setEnabled(False)
+            self.okButton.setEnabled(False)
+    
+    def scanDirForScripts(self, dir):
+        for file in os.listdir(dir):
+            curFile = dir + "/" + file
+
+            if file.startswith('.'): #ignore dot files (hidden)
+                continue
+            if os.path.isdir(curFile):
+                self.scanDirForScripts(curFile)
+                continue
+            if os.path.isfile(curFile):
+                if file.endswith(".rb"):
+                    self.scriptDependenciesList.addItem(dir + "/" + file)
+    
+    @pyqtSignature("")
+    def on_moduleDependenciesList_itemSelectionChanged(self):
+        self.scriptDependenciesList.clear()
+        modulePath = self.moduleManager.moduleCfgPath.replace("modules.cfg",  "")
+        
+        for m in self.moduleDependenciesList.selectedItems():
+            path = os.path.join(modulePath, str(m.text()))
+            cmd = os.path.join(path + "/scripts")
+            self.scanDirForScripts(cmd)
+        
+    @pyqtSignature("")
+    def on_moduleNameLineEdit_returnPressed(self):
+        return
+            
+    @pyqtSignature("")
+    def on_mapNameLineEdit_returnPressed(self):
+        return
+        
+    @pyqtSignature("")
+    def on_okButton_clicked(self):
+        f = open(self.moduleManager.moduleCfgPath, "a")
+        f.write("module=" + str(self.moduleNameLineEdit.text()) + "\n")
+        f.close()
+        
+        modulePath = self.moduleManager.moduleCfgPath.replace("modules.cfg",  "")
+        modulePath = str(modulePath + self.moduleNameLineEdit.text())
+        os.mkdir(modulePath)
+        os.mkdir(os.path.join(modulePath, "dialogs"))
+        os.mkdir(os.path.join(modulePath, "dsa"))
+        os.mkdir(os.path.join(modulePath, "gui"))
+        os.mkdir(os.path.join(modulePath, "maps"))
+        os.mkdir(os.path.join(modulePath, "materials"))
+        os.mkdir(os.path.join(modulePath, "materials/textures"))
+        os.mkdir(os.path.join(modulePath, "models"))
+        os.mkdir(os.path.join(modulePath, "quests"))
+        os.mkdir(os.path.join(modulePath, "scripts"))
+        os.mkdir(os.path.join(modulePath, "scripts/maps"))
+        os.mkdir(os.path.join(modulePath, "sound"))
+        
+        mname = str(self.moduleNameLineEdit.text())
+        mdeps = ""
+        for m in self.moduleDependenciesList.selectedItems():
+            mdeps = mdeps + str("\"" + m.text() + "\", ")
+        mdeps = mdeps.strip(", ")
+        
+        sdeps = ""
+        for s in self.scriptDependenciesList.selectedItems():
+            script = str(str(s.text()).replace("\\", "/"))
+            script = script.split("/")
+            script = script[len(script) - 1]
+            sdeps = sdeps + str("       require " + script + "\n")
+        
+        
+        f = open(os.path.join(modulePath, "scripts\\") + "moduleconfig.rb", "w")
+        f.write("include RlScript\n")
+        f.write("\n\n")
+        f.write("class " + mname.capitalize() + "Module < ContentModule\n")
+        f.write("    def initialize()\n")
+        f.write("        super(\"" + mname + "\"" + ", \"" + mname + "\"" + ", false, 200608012)\n")
+        f.write("    end\n\n")
+        f.write("    def getDependencies()\n")
+        f.write("       return [" + str(mdeps) + "];\n")
+        f.write("    end\n\n")
+        f.write("    def getTextureLocation()\n")
+        f.write("       return [\"textures\"];\n")
+        f.write("    end\n\n")
+        f.write("    def getModelLocation()\n")
+        f.write("       return [\"models\"];\n")
+        f.write("    end\n\n")
+        f.write("    def getSoundLocation()\n")
+        f.write("       return [\"sound\"];\n")
+        f.write("    end\n\n")
+        f.write("    def start()\n")
+        f.write(sdeps)
+        f.write("\n\n       SceneManager.getSingleton().loadScene(\"" + self.sceneNameLineEdit.text() + "\");\n")
+        f.write("       $World = $CORE.getWorld();\n")
+        f.write("    end\n")
+        f.write("end\n\n")
+
+        f.write("CoreSubsystem.getSingleton().registerModule(" + mname.capitalize() + "Module.new());\n")
+        
+        self.moduleManager.resetParsedModuleConfig()
+        self.moduleManager.openLoadModuleDialog()
+        
+    @pyqtSignature("")
+    def on_cancelButton_pressed(self):
+        self.close()
+
+

Modified: rl/trunk/editors/Lockenwickler/src/OgreWidget.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/OgreWidget.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/OgreWidget.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,120 +1,120 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-
-import sys
-import platform
-import os
-
-from PyQt4 import QtGui
-import ogre.renderer.OGRE as og
-
-class OgreWidget(QtGui.QWidget):
-    def __init__(self, renderWindowName, ogreRoot, sceneManager, cameraName, parent,  camDistFromFocusNode=100):
-        QtGui.QWidget.__init__(self, parent)
-        self.renderWindowName = renderWindowName
-        self.parent = parent
-        self.ogreRoot = ogreRoot
-        self.sceneManager = sceneManager
-        self.camDistFromFocusNode = camDistFromFocusNode
-        self.initOgreWindow(renderWindowName,cameraName)
-
-    def initOgreWindow(self, renderWindowName, cameraName):
-        self.renderParameters = og.NameValuePairList()
-
-        if platform.system() == "Windows" or platform.system() == "MAC":
-            hwnd = int(self.winId())
-            self.renderParameters['externalWindowHandle'] = str(hwnd)
-        else:
-            import sip
-            info = self.x11Info()
-            disp =  str(sip.unwrapinstance(info.display()))
-            scr = str(info.screen())
-            win = str(int(self.winId()))
-            winHandle = disp + ':' + scr + ':' + win
-            self.renderParameters['parentWindowHandle'] = winHandle
-
-        renderWindow = self.ogreRoot.createRenderWindow(renderWindowName, self.width(), self.height(),
-                                                        False, self.renderParameters)
-
-        renderWindow.active = True
-        self.renderWindow = renderWindow
-
-        self.camera = self.sceneManager.createCamera(cameraName)
-        self.camera.NearClipDistance = 0.1
-
-        # Create focus node (camera always points at this)
-        self.camFocusNode = self.sceneManager.getRootSceneNode().createChildSceneNode()
-        self.camFocusNode.setFixedYawAxis(True, og.Vector3.UNIT_Y)
-        # camera node is offset a ways along the Z axis of focus node
-        self.camNode = self.camFocusNode.createChildSceneNode()
-        # fix yaw on this one too for when we manipulate it directly
-        self.camNode.setFixedYawAxis(True, og.Vector3.UNIT_Y)
-        self.camNode.setPosition(0, 0, self.camDistFromFocusNode)
-        self.camNode.attachObject(self.camera)
-
-        self.viewport = self.renderWindow.addViewport(self.camera, 0, 0.0, 0.0, 1.0, 1.0)
-        self.viewport.setClearEveryFrame(True)
-
-    def setBackgroundColor(self, colorValue):
-        self.viewport.BackgroundColour = colorValue
-
-    def resizeEvent(self, event):
-        self.renderWindow.resize(event.size().width(), event.size().height())
-        self.renderWindow.windowMovedOrResized()
-
-        if platform.system() == "Linux":
-            self.viewport._updateDimensions() # shouldn't actually be needed but it doesn't work without it on linux
-
-        self.renderWindow.update(True)
-        self.ogreRoot.renderOneFrame()
-
-        if self.camera:
-            self.camera.setAspectRatio(float(event.size().width()) / float(event.size().height()));
-
-    def addOgreResourceLocation(self, location, locType, resGroup, recursive=False):
-        og.ResourceGroupManager.getSingleton().addResourceLocation(location, locType, resGroup, recursive)
-
-    def getCamera(self):
-        assert(self.camera)
-        return self.camera
-
-    #(const Ogre::Radian& horz, const Ogre::Radian& vert)
-    def orbitCamera( self, horz, vert):
-        #orbit around focus node
-        #yaw around world Y, pitch around local
-        self.camFocusNode.yaw(horz, og.Node.TS_WORLD)
-        self.camFocusNode.pitch(-vert, og.Node.TS_LOCAL)
-
-    #void ViewOgreWindow::zoomCamera(float zoom)
-    def zoomCamera(self, zoom):
-        #in perspective mode, zoom by altering camera orbit distance from focus
-        self.camNode.translate(0, 0, -zoom * 2, og.Node.TS_LOCAL)
-        #make sure we don't go into -Z or even beyond clip distance to focus
-        pos = self.camNode.getPosition()
-        if pos.z < self.camera.getNearClipDistance():
-            self.camNode.setPosition(pos.x, pos.y, self.camera.getNearClipDistance())
-
-    #Ogre::Vector3& trans
-    def dollyCamera(self,  trans):
-        self.camFocusNode.translate(trans, og.Node.TS_LOCAL)
-
-    #(const Ogre::Radian& horz, const Ogre::Radian& vert)
-    def panCamera( self, horz, vert):
-        self.camNode.yaw(horz, og.Node.TS_WORLD)
-        self.camNode.pitch(vert, og.Node.TS_LOCAL)
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+
+import sys
+import platform
+import os
+
+from PyQt4 import QtGui
+import ogre.renderer.OGRE as og
+
+class OgreWidget(QtGui.QWidget):
+    def __init__(self, renderWindowName, ogreRoot, sceneManager, cameraName, parent,  camDistFromFocusNode=100):
+        QtGui.QWidget.__init__(self, parent)
+        self.renderWindowName = renderWindowName
+        self.parent = parent
+        self.ogreRoot = ogreRoot
+        self.sceneManager = sceneManager
+        self.camDistFromFocusNode = camDistFromFocusNode
+        self.initOgreWindow(renderWindowName,cameraName)
+
+    def initOgreWindow(self, renderWindowName, cameraName):
+        self.renderParameters = og.NameValuePairList()
+
+        if platform.system() == "Windows" or platform.system() == "MAC":
+            hwnd = int(self.winId())
+            self.renderParameters['externalWindowHandle'] = str(hwnd)
+        else:
+            import sip
+            info = self.x11Info()
+            disp =  str(sip.unwrapinstance(info.display()))
+            scr = str(info.screen())
+            win = str(int(self.winId()))
+            winHandle = disp + ':' + scr + ':' + win
+            self.renderParameters['parentWindowHandle'] = winHandle
+
+        renderWindow = self.ogreRoot.createRenderWindow(renderWindowName, self.width(), self.height(),
+                                                        False, self.renderParameters)
+
+        renderWindow.active = True
+        self.renderWindow = renderWindow
+
+        self.camera = self.sceneManager.createCamera(cameraName)
+        self.camera.NearClipDistance = 0.1
+
+        # Create focus node (camera always points at this)
+        self.camFocusNode = self.sceneManager.getRootSceneNode().createChildSceneNode()
+        self.camFocusNode.setFixedYawAxis(True, og.Vector3().UNIT_Y)
+        # camera node is offset a ways along the Z axis of focus node
+        self.camNode = self.camFocusNode.createChildSceneNode()
+        # fix yaw on this one too for when we manipulate it directly
+        self.camNode.setFixedYawAxis(True, og.Vector3().UNIT_Y)
+        self.camNode.setPosition(0, 0, self.camDistFromFocusNode)
+        self.camNode.attachObject(self.camera)
+
+        self.viewport = self.renderWindow.addViewport(self.camera, 0, 0.0, 0.0, 1.0, 1.0)
+        self.viewport.setClearEveryFrame(True)
+
+    def setBackgroundColor(self, colorValue):
+        self.viewport.BackgroundColour = colorValue
+
+    def resizeEvent(self, event):
+        self.renderWindow.resize(event.size().width(), event.size().height())
+        self.renderWindow.windowMovedOrResized()
+
+        if platform.system() == "Linux":
+            self.viewport._updateDimensions() # shouldn't actually be needed but it doesn't work without it on linux
+
+        self.renderWindow.update(True)
+        self.ogreRoot.renderOneFrame()
+
+        if self.camera:
+            self.camera.setAspectRatio(float(event.size().width()) / float(event.size().height()));
+
+    def addOgreResourceLocation(self, location, locType, resGroup, recursive=False):
+        og.ResourceGroupManager.getSingleton().addResourceLocation(location, locType, resGroup, recursive)
+
+    def getCamera(self):
+        assert(self.camera)
+        return self.camera
+
+    #(const Ogre::Radian& horz, const Ogre::Radian& vert)
+    def orbitCamera( self, horz, vert):
+        #orbit around focus node
+        #yaw around world Y, pitch around local
+        self.camFocusNode.yaw(horz, og.Node.TS_WORLD)
+        self.camFocusNode.pitch(-vert, og.Node.TS_LOCAL)
+
+    #void ViewOgreWindow::zoomCamera(float zoom)
+    def zoomCamera(self, zoom):
+        #in perspective mode, zoom by altering camera orbit distance from focus
+        self.camNode.translate(0, 0, -zoom * 2, og.Node.TS_LOCAL)
+        #make sure we don't go into -Z or even beyond clip distance to focus
+        pos = self.camNode.getPosition()
+        if pos.z < self.camera.getNearClipDistance():
+            self.camNode.setPosition(pos.x, pos.y, self.camera.getNearClipDistance())
+
+    #Ogre::Vector3& trans
+    def dollyCamera(self,  trans):
+        self.camFocusNode.translate(trans, og.Node.TS_LOCAL)
+
+    #(const Ogre::Radian& horz, const Ogre::Radian& vert)
+    def panCamera( self, horz, vert):
+        self.camNode.yaw(horz, og.Node.TS_WORLD)
+        self.camNode.pitch(vert, og.Node.TS_LOCAL)

Deleted: rl/trunk/editors/Lockenwickler/src/SceneExplorer.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/SceneExplorer.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/SceneExplorer.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,34 +0,0 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-
-import sys
-from PyQt4.QtCore import *
-from PyQt4.QtGui import *
-import ogre.renderer.OGRE as og
-
-class SceneExplorer(QWidget):
-    def __init__(self, parent=None):
-        QWidget.__init__(self, parent)
-        self.sceneTreeView = QTreeView()
-
-        vBoxLayout = QVBoxLayout()
-        vBoxLayout.addWidget(self.sceneTreeView)
-
-        self.setLayout(vBoxLayout)
-

Modified: rl/trunk/editors/Lockenwickler/src/Ui_NewModuleWizard.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/Ui_NewModuleWizard.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/Ui_NewModuleWizard.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,100 +1,100 @@
-# -*- coding: utf-8 -*-
-
-# Form implementation generated from reading ui file '/home/stefan/Lockenwickler/ui files/NewModuleWizard.ui'
-#
-# Created: Sun Nov  9 14:15:16 2008
-#      by: PyQt4 UI code generator 4.4.3
-#
-# WARNING! All changes made in this file will be lost!
-
-from PyQt4 import QtCore, QtGui
-
-class Ui_Dialog(object):
-    def setupUi(self, Dialog):
-        Dialog.setObjectName("Dialog")
-        Dialog.resize(675, 703)
-        self.gridLayout_3 = QtGui.QGridLayout(Dialog)
-        self.gridLayout_3.setObjectName("gridLayout_3")
-        self.label = QtGui.QLabel(Dialog)
-        self.label.setObjectName("label")
-        self.gridLayout_3.addWidget(self.label, 0, 0, 1, 1)
-        self.moduleNameLineEdit = QtGui.QLineEdit(Dialog)
-        self.moduleNameLineEdit.setObjectName("moduleNameLineEdit")
-        self.gridLayout_3.addWidget(self.moduleNameLineEdit, 0, 1, 1, 1)
-        self.label_2 = QtGui.QLabel(Dialog)
-        self.label_2.setObjectName("label_2")
-        self.gridLayout_3.addWidget(self.label_2, 1, 0, 1, 1)
-        self.sceneNameLineEdit = QtGui.QLineEdit(Dialog)
-        self.sceneNameLineEdit.setEnabled(False)
-        self.sceneNameLineEdit.setObjectName("sceneNameLineEdit")
-        self.gridLayout_3.addWidget(self.sceneNameLineEdit, 1, 1, 1, 1)
-        self.label_3 = QtGui.QLabel(Dialog)
-        self.label_3.setObjectName("label_3")
-        self.gridLayout_3.addWidget(self.label_3, 2, 0, 1, 1)
-        self.mapNameLineEdit = QtGui.QLineEdit(Dialog)
-        self.mapNameLineEdit.setEnabled(False)
-        self.mapNameLineEdit.setObjectName("mapNameLineEdit")
-        self.gridLayout_3.addWidget(self.mapNameLineEdit, 2, 1, 1, 1)
-        self.groupBox = QtGui.QGroupBox(Dialog)
-        self.groupBox.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
-        self.groupBox.setObjectName("groupBox")
-        self.gridLayout_2 = QtGui.QGridLayout(self.groupBox)
-        self.gridLayout_2.setObjectName("gridLayout_2")
-        self.moduleDependenciesList = QtGui.QListView(self.groupBox)
-        self.moduleDependenciesList.setEnabled(False)
-        self.moduleDependenciesList.setSelectionMode(QtGui.QAbstractItemView.MultiSelection)
-        self.moduleDependenciesList.setObjectName("moduleDependenciesList")
-        self.gridLayout_2.addWidget(self.moduleDependenciesList, 1, 0, 1, 1)
-        self.gridLayout_3.addWidget(self.groupBox, 3, 0, 1, 2)
-        self.groupBox_2 = QtGui.QGroupBox(Dialog)
-        self.groupBox_2.setObjectName("groupBox_2")
-        self.gridLayout = QtGui.QGridLayout(self.groupBox_2)
-        self.gridLayout.setObjectName("gridLayout")
-        self.scriptDependenciesList = QtGui.QListView(self.groupBox_2)
-        self.scriptDependenciesList.setEnabled(False)
-        self.scriptDependenciesList.setSelectionMode(QtGui.QAbstractItemView.MultiSelection)
-        self.scriptDependenciesList.setObjectName("scriptDependenciesList")
-        self.gridLayout.addWidget(self.scriptDependenciesList, 0, 0, 1, 1)
-        self.gridLayout_3.addWidget(self.groupBox_2, 4, 0, 1, 2)
-        self.hboxlayout = QtGui.QHBoxLayout()
-        self.hboxlayout.setSpacing(6)
-        self.hboxlayout.setMargin(0)
-        self.hboxlayout.setObjectName("hboxlayout")
-        spacerItem = QtGui.QSpacerItem(131, 31, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.hboxlayout.addItem(spacerItem)
-        self.okButton = QtGui.QPushButton(Dialog)
-        self.okButton.setEnabled(False)
-        self.okButton.setObjectName("okButton")
-        self.hboxlayout.addWidget(self.okButton)
-        self.cancelButton = QtGui.QPushButton(Dialog)
-        self.cancelButton.setObjectName("cancelButton")
-        self.hboxlayout.addWidget(self.cancelButton)
-        self.gridLayout_3.addLayout(self.hboxlayout, 5, 0, 1, 2)
-
-        self.retranslateUi(Dialog)
-        QtCore.QObject.connect(self.okButton, QtCore.SIGNAL("clicked()"), Dialog.accept)
-        QtCore.QObject.connect(self.cancelButton, QtCore.SIGNAL("clicked()"), Dialog.reject)
-        QtCore.QMetaObject.connectSlotsByName(Dialog)
-
-    def retranslateUi(self, Dialog):
-        Dialog.setWindowTitle(QtGui.QApplication.translate("Dialog", "Dialog", None, QtGui.QApplication.UnicodeUTF8))
-        self.label.setText(QtGui.QApplication.translate("Dialog", "Step 1: Module Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_2.setText(QtGui.QApplication.translate("Dialog", "Step 2: Scene Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_3.setText(QtGui.QApplication.translate("Dialog", "Step 3: Map Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.groupBox.setTitle(QtGui.QApplication.translate("Dialog", "Step 4: Module Dependencies", None, QtGui.QApplication.UnicodeUTF8))
-        self.moduleDependenciesList.setToolTip(QtGui.QApplication.translate("Dialog", "Modules the new module will depend on", None, QtGui.QApplication.UnicodeUTF8))
-        self.groupBox_2.setTitle(QtGui.QApplication.translate("Dialog", "Step 5: Script Dependencies", None, QtGui.QApplication.UnicodeUTF8))
-        self.scriptDependenciesList.setToolTip(QtGui.QApplication.translate("Dialog", "Modules the new module will depend on", None, QtGui.QApplication.UnicodeUTF8))
-        self.okButton.setText(QtGui.QApplication.translate("Dialog", "&OK", None, QtGui.QApplication.UnicodeUTF8))
-        self.cancelButton.setText(QtGui.QApplication.translate("Dialog", "&Cancel", None, QtGui.QApplication.UnicodeUTF8))
-
-
-if __name__ == "__main__":
-    import sys
-    app = QtGui.QApplication(sys.argv)
-    Dialog = QtGui.QDialog()
-    ui = Ui_Dialog()
-    ui.setupUi(Dialog)
-    Dialog.show()
-    sys.exit(app.exec_())
-
+# -*- coding: utf-8 -*-
+
+# Form implementation generated from reading ui file '/home/stefan/Lockenwickler/ui files/NewModuleWizard.ui'
+#
+# Created: Sun Nov  9 14:15:16 2008
+#      by: PyQt4 UI code generator 4.4.3
+#
+# WARNING! All changes made in this file will be lost!
+
+from PyQt4 import QtCore, QtGui
+
+class Ui_Dialog(object):
+    def setupUi(self, Dialog):
+        Dialog.setObjectName("Dialog")
+        Dialog.resize(675, 703)
+        self.gridLayout_3 = QtGui.QGridLayout(Dialog)
+        self.gridLayout_3.setObjectName("gridLayout_3")
+        self.label = QtGui.QLabel(Dialog)
+        self.label.setObjectName("label")
+        self.gridLayout_3.addWidget(self.label, 0, 0, 1, 1)
+        self.moduleNameLineEdit = QtGui.QLineEdit(Dialog)
+        self.moduleNameLineEdit.setObjectName("moduleNameLineEdit")
+        self.gridLayout_3.addWidget(self.moduleNameLineEdit, 0, 1, 1, 1)
+        self.label_2 = QtGui.QLabel(Dialog)
+        self.label_2.setObjectName("label_2")
+        self.gridLayout_3.addWidget(self.label_2, 1, 0, 1, 1)
+        self.sceneNameLineEdit = QtGui.QLineEdit(Dialog)
+        self.sceneNameLineEdit.setEnabled(False)
+        self.sceneNameLineEdit.setObjectName("sceneNameLineEdit")
+        self.gridLayout_3.addWidget(self.sceneNameLineEdit, 1, 1, 1, 1)
+        self.label_3 = QtGui.QLabel(Dialog)
+        self.label_3.setObjectName("label_3")
+        self.gridLayout_3.addWidget(self.label_3, 2, 0, 1, 1)
+        self.mapNameLineEdit = QtGui.QLineEdit(Dialog)
+        self.mapNameLineEdit.setEnabled(False)
+        self.mapNameLineEdit.setObjectName("mapNameLineEdit")
+        self.gridLayout_3.addWidget(self.mapNameLineEdit, 2, 1, 1, 1)
+        self.groupBox = QtGui.QGroupBox(Dialog)
+        self.groupBox.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
+        self.groupBox.setObjectName("groupBox")
+        self.gridLayout_2 = QtGui.QGridLayout(self.groupBox)
+        self.gridLayout_2.setObjectName("gridLayout_2")
+        self.moduleDependenciesList = QtGui.QListWidget(self.groupBox)
+        self.moduleDependenciesList.setEnabled(False)
+        self.moduleDependenciesList.setSelectionMode(QtGui.QAbstractItemView.MultiSelection)
+        self.moduleDependenciesList.setObjectName("moduleDependenciesList")
+        self.gridLayout_2.addWidget(self.moduleDependenciesList, 1, 0, 1, 1)
+        self.gridLayout_3.addWidget(self.groupBox, 3, 0, 1, 2)
+        self.groupBox_2 = QtGui.QGroupBox(Dialog)
+        self.groupBox_2.setObjectName("groupBox_2")
+        self.gridLayout = QtGui.QGridLayout(self.groupBox_2)
+        self.gridLayout.setObjectName("gridLayout")
+        self.scriptDependenciesList = QtGui.QListWidget(self.groupBox_2)
+        self.scriptDependenciesList.setEnabled(False)
+        self.scriptDependenciesList.setSelectionMode(QtGui.QAbstractItemView.MultiSelection)
+        self.scriptDependenciesList.setObjectName("scriptDependenciesList")
+        self.gridLayout.addWidget(self.scriptDependenciesList, 0, 0, 1, 1)
+        self.gridLayout_3.addWidget(self.groupBox_2, 4, 0, 1, 2)
+        self.hboxlayout = QtGui.QHBoxLayout()
+        self.hboxlayout.setSpacing(6)
+        self.hboxlayout.setMargin(0)
+        self.hboxlayout.setObjectName("hboxlayout")
+        spacerItem = QtGui.QSpacerItem(131, 31, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
+        self.hboxlayout.addItem(spacerItem)
+        self.okButton = QtGui.QPushButton(Dialog)
+        self.okButton.setEnabled(False)
+        self.okButton.setObjectName("okButton")
+        self.hboxlayout.addWidget(self.okButton)
+        self.cancelButton = QtGui.QPushButton(Dialog)
+        self.cancelButton.setObjectName("cancelButton")
+        self.hboxlayout.addWidget(self.cancelButton)
+        self.gridLayout_3.addLayout(self.hboxlayout, 5, 0, 1, 2)
+
+        self.retranslateUi(Dialog)
+        QtCore.QObject.connect(self.okButton, QtCore.SIGNAL("clicked()"), Dialog.accept)
+        QtCore.QObject.connect(self.cancelButton, QtCore.SIGNAL("clicked()"), Dialog.reject)
+        QtCore.QMetaObject.connectSlotsByName(Dialog)
+
+    def retranslateUi(self, Dialog):
+        Dialog.setWindowTitle(QtGui.QApplication.translate("Dialog", "Dialog", None, QtGui.QApplication.UnicodeUTF8))
+        self.label.setText(QtGui.QApplication.translate("Dialog", "Step 1: Module Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_2.setText(QtGui.QApplication.translate("Dialog", "Step 2: Scene Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_3.setText(QtGui.QApplication.translate("Dialog", "Step 3: Map Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.groupBox.setTitle(QtGui.QApplication.translate("Dialog", "Step 4: Module Dependencies", None, QtGui.QApplication.UnicodeUTF8))
+        self.moduleDependenciesList.setToolTip(QtGui.QApplication.translate("Dialog", "Modules the new module will depend on", None, QtGui.QApplication.UnicodeUTF8))
+        self.groupBox_2.setTitle(QtGui.QApplication.translate("Dialog", "Step 5: Script Dependencies", None, QtGui.QApplication.UnicodeUTF8))
+        self.scriptDependenciesList.setToolTip(QtGui.QApplication.translate("Dialog", "Modules the new module will depend on", None, QtGui.QApplication.UnicodeUTF8))
+        self.okButton.setText(QtGui.QApplication.translate("Dialog", "&OK", None, QtGui.QApplication.UnicodeUTF8))
+        self.cancelButton.setText(QtGui.QApplication.translate("Dialog", "&Cancel", None, QtGui.QApplication.UnicodeUTF8))
+
+
+if __name__ == "__main__":
+    import sys
+    app = QtGui.QApplication(sys.argv)
+    Dialog = QtGui.QDialog()
+    ui = Ui_Dialog()
+    ui.setupUi(Dialog)
+    Dialog.show()
+    sys.exit(app.exec_())
+

Modified: rl/trunk/editors/Lockenwickler/src/ViewportGrid.py
===================================================================
--- rl/trunk/editors/Lockenwickler/src/ViewportGrid.py	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/src/ViewportGrid.py	2009-01-26 18:35:47 UTC (rev 4721)
@@ -1,525 +1,525 @@
-#-----------------------------------------------------------------------------
-#Copyright (c) 2007 Jeroen Dierckx
-#Python Version by Stefan Stammberger
-#
-#This program is free software you can redistribute it and/or modify it under
-#the terms of the GNU Lesser General Public License as published by the Free Software
-#Foundation either version 2 of the License, or (at your option) any later
-#version.
-#
-#This program is distributed in the hope that it will be useful, but WITHOUT
-#ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS
-#FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-#
-#You should have received a copy of the GNU Lesser General Public License along with
-#this program if not, write to the Free Software Foundation, Inc., 59 Temple
-#Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-#http://www.gnu.org/copyleft/lesser.txt.
-#-----------------------------------------------------------------------------
-
-import ogre.renderer.OGRE as og
-
-RL_BEHIND = 1
-INFRONT = 2
-
-class ViewportGrid(og.RenderTargetListener):
-    def __init__(self, pSceneMgr, pViewport):
-        super(ViewportGrid, self).__init__()
-
-        self.sceneManager = pSceneMgr
-        self.viewport = pViewport
-        self.enabled = False
-        self.layer = None
-
-        self.prevCamera = None
-        self.prevOrtho = False
-        self.prevCamPos = None
-        self.prevNear = None
-        self.prevOrtho = None
-        self.prevAspectRatio = None
-        self.bForceUpdate = True
-
-        self.pGrid = None
-        self.created = False
-        self.pNode = None
-
-        self.colour1 = og.ColourValue(0.7, 0.7, 0.7)
-        self.colour2 = og.ColourValue(0.7, 0.7, 0.7)
-        self.division = 10
-        self.perspSize = 100
-        self.renderScale = True
-        self.renderMiniAxes = True
-
-        self.sMatName = "ViewportGrid"
-
-        self.__createGrid()
-        self.setRenderLayer(RL_BEHIND)
-
-        # Add this as a render target listener
-        self.viewport.getTarget().addListener(self)
-
-
-    def getColour(self):
-        return colour1
-
-    def setColour(self, colour):
-        # Force alpha = 1 for the primary colour
-        self.colour1 = colour
-        self.colour1.a = 1.0
-        self.colour2 = colour1
-        self.forceUpdate()
-
-    #Grid division (the number of new lines that are created when zooming in).
-    def getDivision(self):
-        return division
-
-    def setDivision(self, division):
-        self.division = division
-        self.forceUpdate()
-
-    #//! Grid render layer (behind of in front of the objects).
-    def getRenderLayer(self):
-        return layer
-
-    def setRenderLayer(self, layer):
-        self.layer = layer
-
-        if self.layer == RL_BEHIND:
-            # Render just before the world geometry
-            self.pGrid.setRenderQueueGroup(og.RENDER_QUEUE_WORLD_GEOMETRY_1 - 1)
-        elif self.layer == RL_INFRONT:
-            # Render just before the overlays
-            self.pGrid.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY - 1)
-
-
-    def getPerspectiveSize(self):
-        return perspSize
-
-    def setPerspectiveSize(self, size):
-        self.perspSize = size
-        self.forceUpdate()
-
-#       //! Render scaling info? Defaults to true.
-#       //! @todo Implement this
-    def getRenderScale(self):
-        return renderScale
-
-    def setRenderScale(self, enabled = True):
-        self.renderScale = enabled
-        self.forceUpdate()
-
-#       //! Render mini axes? Defaults to true.
-#       //! @todo Implement this
-    def getRenderMiniAxes(self):
-        return renderMiniAxes
-
-    def setRenderMiniAxes(self, enabled = True):
-        self.renderMiniAxes = enabled
-        self.forceUpdate()
-
-    #// Enable / disable
-    def isEnabled(self):
-        return self.enabled
-
-    def enable(self):
-        self.enabled = True
-
-        if not self.pGrid.isAttached():
-            self.pNode.attachObject(self.pGrid)
-
-        self.forceUpdate()
-
-
-    def disable(self):
-        self.enabled = False
-
-        if self.pGrid.isAttached():
-            self.pNode.detachObject(self.pGrid)
-
-
-
-    def  toggle(self):
-        self.setEnabled(not self.enabled)
-
-    def setEnabled(self, enabled):
-        if enabled:
-            self.enable()
-        else:
-            self.disable()
-
-
-    def forceUpdate(self):
-        self.bForceUpdate = True
-
-    def preViewportUpdate(self, evt):
-       #TODO find out why evt.souce and self.viewport differ in their memory address
-       # if evt.source != self.viewport:
-           # return
-
-        self.pGrid.setVisible(True)
-
-        if self.enabled:
-            self.__update()
-
-    def postViewportUpdate(self, evt):
-       # if evt.source != self.viewport:
-           # return
-        self.pGrid.setVisible(False)
-
-    def __createGrid(self):
-        name = self.viewport.getTarget().getName() + "::"
-        name += str(self.viewport.getZOrder()) + "::ViewportGrid"
-
-        #// Create the manual object
-        self.pGrid = self.sceneManager.createManualObject(name)
-        self.pGrid.setDynamic(True)
-
-        #// Create the scene node (not attached yet)
-        self.pNode = self.sceneManager.getRootSceneNode().createChildSceneNode(name)
-        self.enabled = False
-
-        #// Make sure the material is created
-        #//! @todo Should we destroy the material somewhere?
-        matMgr = og.MaterialManager.getSingleton()
-        if not matMgr.resourceExists(self.sMatName):
-            pMaterial = matMgr.create(self.sMatName, og.ResourceGroupManager.DEFAULT_RESOURCE_GROUP_NAME)
-            pMaterial.setLightingEnabled(False)
-            pMaterial.setSceneBlending(og.SBT_TRANSPARENT_ALPHA)
-
-
-
-    def __destroyGrid(self):
-        self.sceneManager.destroyManualObject(self.pGrid)
-        self.pGrid = None
-
-        self.sceneManager.destroySceneNode(self.pNode.getName())
-        self.pNode = None
-
-
-    def __update(self):
-        if not self.enabled:
-            return
-
-        pCamera = self.viewport.getCamera()
-        if not pCamera:
-            return
-
-        # Check if an update is necessary
-        if not self.__checkUpdate() and not self.bForceUpdate:
-            return
-
-        if pCamera.getProjectionType() == og.PT_ORTHOGRAPHIC:
-            self.__updateOrtho()
-        else:
-            self.__updatePersp()
-
-        self.bForceUpdate = False
-
-
-
-    def __updateOrtho(self):
-        # Screen dimensions
-        width = self.viewport.getActualWidth()
-        height = self.viewport.getActualHeight()
-
-        #Camera information
-        pCamera = pViewport.getCamera()
-        camPos = pCamera.getPosition()
-        camDir = pCamera.getDirection()
-        camUp = pCamera.getUp()
-        camRight = pCamera.getRight()
-
-        # Translation in grid space
-        dx = camPos.dotProduct(camRight)
-        dy = camPos.dotProduct(camUp)
-
-        # Frustum dimensions
-        # Note: Tan calculates the opposite side of a _right_ triangle given its angle, so we make sure it is one, and double the result
-        worldWidth = 2 * og.Math.Tan(pCamera.getFOVy() / 2) * pCamera.getAspectRatio() * pCamera.getNearClipDistance()
-        worldHeight = worldWidth / pCamera.getAspectRatio()
-        worldLeft = dx - worldWidth / 2
-        worldRight = dx + worldWidth / 2
-        worldBottom = dy - worldHeight / 2
-        worldTop = dy + worldHeight / 2
-
-        # Conversion values (note: same as working with the height values)
-        worldToScreen = width / worldWidth
-        screenToWorld = worldWidth / width
-
-        # TODO Treshold should be dependent on window width/height (min? max?) so there are no more then division full alpha-lines
-        treshold = 10 # Treshhold in pixels
-
-        # Calculate the spacing multiplier
-        mult = 0
-        exp = 0
-        temp = worldToScreen # 1 world unit
-        if worldToScreen < treshold:
-            while temp < treshold:
-                exp = exp +1
-                temp = temp * treshold # TODO maybe wrong
-
-            mult = og.Math.Pow(self.division, exp)
-        else:
-            while temp > (self.division * treshold):
-                exp = exp +1
-                temp = temp / treshold # TODO maybe wrong
-
-            mult = og.Math.Pow(1.0 / self.division, exp)
-
-        # Interpolate alpha for (multiplied) spacing between treshold and division * treshold
-        self.colour2.a = worldToScreen * mult / (division * treshold - treshold)
-        if colour2.a > 1.0:
-           self.colour2.a = 1.0
-
-        # Calculate the horizontal zero-axis color
-        camRightX = og.Math.Abs(camRight.x)
-        camRightY = og.Math.Abs(camRight.y)
-        camRightZ = og.Math.Abs(camRight.z)
-
-        if og.Math.RealEqual(camRightX, 1.0):
-            horAxisColor = og.ColourValue.Red
-        elif og.Math.RealEqual(camRightY, 1.0):
-            horAxisColor = og.ColourValue.Green
-        elif og.Math.RealEqual(camRightZ, 1.0):
-            horAxisColor = og.ColourValue.Blue
-        else:
-            horAxisColor = self.colour1
-
-        # Calculate the vertical zero-axis color
-        camUpX = og.Math.Abs(camUp.x)
-        camUpY = og.Math.Abs(camUp.y)
-        camUpZ = og.Math.Abs(camUp.z)
-
-        if og.Math.RealEqual(camUpX, 1.0):
-            horAxisColor = og.ColourValue.Red
-        elif og.Math.RealEqual(camUpY, 1.0):
-            horAxisColor = og.ColourValue.Green
-        elif og.Math.RealEqual(camUpZ, 1.0):
-            horAxisColor = og.ColourValue.Blue
-        else:
-            horAxisColor = self.colour1
-
-        # The number of lines
-        numLinesWidth = int((worldWidth / mult) + 1)
-        numLinesHeight = int((worldHeight / mult) + 1)
-
-        # Start creating or updating the grid
-        self.pGrid.estimateVertexCount(2 * numLinesWidth + 2 * numLinesHeight)
-        if created:
-            self.pGrid.beginUpdate(0)
-        else:
-            self.pGrid.begin(self.sMatName, og.RenderOperation.OT_LINE_LIST)
-            self.created = True
-
-        # Vertical lines
-        startX = mult * int(worldLeft / mult)
-        x = startX
-        while x <= worldRight:
-            # Get the right color for this line
-            if x == 0:
-                multX = x
-            elif x < 0:
-                multX = int(x / mult - 0.5)
-            else:
-                multX = int(x / mult + 0.5)
-
-
-            if multX == 0:
-                colour = vertAxisColor
-            elif multX % (int(self.division)):
-                self.colour2
-            else:
-                self.colour1
-
-
-
-
-            # Add the line
-            self.pGrid.position(x, worldBottom, 0)
-            self.pGrid.colour(colour)
-            self.pGrid.position(x, worldTop, 0)
-            self.pGrid.colour(colour)
-
-            x += mult
-
-        # Horizontal lines
-        startY = mult * int(worldBottom / mult)
-        y = startY
-        while y <= worldTop:
-            # Get the right color for this line
-            #multY = (y == 0) ? y : (y < 0) ? int(y / mult - 0.5f) : int(y / mult + 0.5f)
-            if y == 0:
-                multY = y
-            elif y < 0:
-                multY = int(y / mult - 0.5)
-            else:
-                multY = int(y / mult + 0.5)
-
-            #colour = (multY == 0) ? horAxisColor : (multY % int(division)) ? self.colour2 : self.colour1
-            if multY == 0:
-                colour = horAxisColor
-            elif multY % (int(self.division)):
-                self.colour2
-            else:
-                self.colour1
-
-            self.pGrid.position(worldLeft, y, 0)
-            self.pGrid.colour(colour)
-            self.pGrid.position(worldRight, y, 0)
-            self.pGrid.colour(colour)
-
-            y += mult
-
-        self.pGrid.end()
-
-        self.pNode.setOrientation(pCamera.getOrientation())
-
-
-    def __updatePersp(self):
-        #! @todo Calculate the spacing multiplier
-        mult = 1
-
-        #! @todo Interpolate alpha
-        self.colour2.a = 0.5
-        #if(colour2.a > 1.0f) colour2.a = 1.0f
-
-        # Calculate the horizontal zero-axis color
-        horAxisColor = og.ColourValue.Red
-
-        # Calculate the vertical zero-axis color
-        vertAxisColor = og.ColourValue.Blue
-
-        # The number of lines
-        numLines = int(self.perspSize / mult) + 1
-
-        # Start creating or updating the grid
-        self.pGrid.estimateVertexCount(4 * numLines)
-        if self.created:
-            self.pGrid.beginUpdate(0)
-        else:
-            self.pGrid.begin(self.sMatName, og.RenderOperation.OT_LINE_LIST)
-            self.created = True
-
-        # Vertical lines
-        start = mult * int(-self.perspSize / 2 / mult)
-        x = start
-        while x <= (self.perspSize / 2):
-            # Get the right color for this line
-            #multX = (x == 0) ? x : (x < 0) ? int(x / mult - 0.5f) : int(x / mult + 0.5f)
-            if x == 0:
-                multX = x
-            elif x < 0:
-                multX = int(x / mult - 0.5)
-            else:
-                multX = int(x / mult +0.5)
-
-            #colour = (multX == 0) ? vertAxisColor : (multX % (int) self.division) ? self.colour2 : self.colour1
-            if multX == 0:
-                colour = vertAxisColor
-            elif multX % int(self.division):
-                colour = self.colour2
-            else:
-                colour = self.colour1
-
-            # Add the line
-            self.pGrid.position(x, 0, -self.perspSize / 2)
-            self.pGrid.colour(colour)
-            self.pGrid.position(x, 0, self.perspSize / 2)
-            self.pGrid.colour(colour)
-
-            x += mult
-
-        # Horizontal lines
-        y = start
-        while y <= (self.perspSize / 2):
-            # Get the right color for this line
-            #multY = (y == 0) ? y : (y < 0) ? int(y / mult - 0.5f) : int(y / mult + 0.5f)
-            if y == 0:
-                multY = y
-            elif y < 0:
-                multY = int(y / mult - 0.5)
-            else:
-                multY = int(y / mult +0.5)
-
-            #colour = (multY == 0) ? horAxisColor : (multY % int(self.division)) ? self.colour2 : self.colour1
-            if multY == 0:
-                colour = horAxisColor
-            elif multY % int(self.division):
-                colour = self.colour2
-            else:
-                colour = self.colour1
-            # Add the line
-            self.pGrid.position(-self.perspSize / 2, 0, y)
-            self.pGrid.colour(colour)
-            self.pGrid.position(self.perspSize / 2, 0, y)
-            self.pGrid.colour(colour)
-
-            y += mult
-
-        self.pGrid.end()
-
-        # Normal orientation, grid in the X-Z plane
-        self.pNode.resetOrientation()
-
-
-    def __checkUpdate(self):
-        update = False
-
-        pCamera = self.viewport.getCamera()
-        if not pCamera:
-            return False
-
-        if pCamera is not self.prevCamera:
-            self.prevCamera = pCamera
-            update = True
-
-
-        ortho = (pCamera.getProjectionType() == og.PT_ORTHOGRAPHIC)
-        if ortho is not self.prevOrtho:
-            self.prevOrtho = ortho
-            update = True
-
-            # Set correct material properties
-            pMaterial = og.MaterialManager.getSingleton().getByName(self.sMatName)
-
-            pMaterial.setDepthWriteEnabled(not ortho)
-            pMaterial.setDepthCheckEnabled(not ortho)
-
-        #return update || ortho ? checkUpdateOrtho() : checkUpdatePersp()
-        if update:
-            if ortho:
-                return self.__checkUpdateOrtho()
-            else:
-                return self.__checkUpdatePersp()
-
-        return False
-
-
-    def __checkUpdateOrtho(self):
-        update = False
-
-        pCamera = self.viewport.getCamera()
-        if not pCamera:
-            return False
-
-        if pCamera.getPosition() is not self.prevCamPos:
-            self.prevCamPos = pCamera.getPosition()
-            update = True
-
-        if pCamera.getNearClipDistance() is not self.prevNear:
-            self.prevNear = pCamera.getNearClipDistance()
-            update = True
-
-        if pCamera.getFOVy() is not self.prevOrtho:
-            self.prevOrtho = pCamera.getFOVy()
-            update = True
-
-        if pCamera.getAspectRatio() is not self.prevAspectRatio:
-            self.prevAspectRatio = pCamera.getAspectRatio()
-            update = True
-
-        return update
-
-
-    def __checkUpdatePersp(self):
-        return False
+#-----------------------------------------------------------------------------
+#Copyright (c) 2007 Jeroen Dierckx
+#Python Version by Stefan Stammberger
+#
+#This program is free software you can redistribute it and/or modify it under
+#the terms of the GNU Lesser General Public License as published by the Free Software
+#Foundation either version 2 of the License, or (at your option) any later
+#version.
+#
+#This program is distributed in the hope that it will be useful, but WITHOUT
+#ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS
+#FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+#
+#You should have received a copy of the GNU Lesser General Public License along with
+#this program if not, write to the Free Software Foundation, Inc., 59 Temple
+#Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+#http://www.gnu.org/copyleft/lesser.txt.
+#-----------------------------------------------------------------------------
+
+import ogre.renderer.OGRE as og
+
+RL_BEHIND = 1
+INFRONT = 2
+
+class ViewportGrid(og.RenderTargetListener):
+    def __init__(self, pSceneMgr, pViewport):
+        super(ViewportGrid, self).__init__()
+
+        self.sceneManager = pSceneMgr
+        self.viewport = pViewport
+        self.enabled = False
+        self.layer = None
+
+        self.prevCamera = None
+        self.prevOrtho = False
+        self.prevCamPos = None
+        self.prevNear = None
+        self.prevOrtho = None
+        self.prevAspectRatio = None
+        self.bForceUpdate = True
+
+        self.pGrid = None
+        self.created = False
+        self.pNode = None
+
+        self.colour1 = og.ColourValue(0.7, 0.7, 0.7)
+        self.colour2 = og.ColourValue(0.7, 0.7, 0.7)
+        self.division = 10
+        self.perspSize = 100
+        self.renderScale = True
+        self.renderMiniAxes = True
+
+        self.sMatName = "ViewportGrid"
+
+        self.__createGrid()
+        self.setRenderLayer(RL_BEHIND)
+
+        # Add this as a render target listener
+        self.viewport.getTarget().addListener(self)
+
+
+    def getColour(self):
+        return colour1
+
+    def setColour(self, colour):
+        # Force alpha = 1 for the primary colour
+        self.colour1 = colour
+        self.colour1.a = 1.0
+        self.colour2 = colour1
+        self.forceUpdate()
+
+    #Grid division (the number of new lines that are created when zooming in).
+    def getDivision(self):
+        return division
+
+    def setDivision(self, division):
+        self.division = division
+        self.forceUpdate()
+
+    #//! Grid render layer (behind of in front of the objects).
+    def getRenderLayer(self):
+        return layer
+
+    def setRenderLayer(self, layer):
+        self.layer = layer
+
+        if self.layer == RL_BEHIND:
+            # Render just before the world geometry
+            self.pGrid.setRenderQueueGroup(og.RENDER_QUEUE_WORLD_GEOMETRY_1 - 1)
+        elif self.layer == RL_INFRONT:
+            # Render just before the overlays
+            self.pGrid.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY - 1)
+
+
+    def getPerspectiveSize(self):
+        return perspSize
+
+    def setPerspectiveSize(self, size):
+        self.perspSize = size
+        self.forceUpdate()
+
+#       //! Render scaling info? Defaults to true.
+#       //! @todo Implement this
+    def getRenderScale(self):
+        return renderScale
+
+    def setRenderScale(self, enabled = True):
+        self.renderScale = enabled
+        self.forceUpdate()
+
+#       //! Render mini axes? Defaults to true.
+#       //! @todo Implement this
+    def getRenderMiniAxes(self):
+        return renderMiniAxes
+
+    def setRenderMiniAxes(self, enabled = True):
+        self.renderMiniAxes = enabled
+        self.forceUpdate()
+
+    #// Enable / disable
+    def isEnabled(self):
+        return self.enabled
+
+    def enable(self):
+        self.enabled = True
+
+        if not self.pGrid.isAttached():
+            self.pNode.attachObject(self.pGrid)
+
+        self.forceUpdate()
+
+
+    def disable(self):
+        self.enabled = False
+
+        if self.pGrid.isAttached():
+            self.pNode.detachObject(self.pGrid)
+
+
+
+    def  toggle(self):
+        self.setEnabled(not self.enabled)
+
+    def setEnabled(self, enabled):
+        if enabled:
+            self.enable()
+        else:
+            self.disable()
+
+
+    def forceUpdate(self):
+        self.bForceUpdate = True
+
+    def preViewportUpdate(self, evt):
+       #TODO find out why evt.souce and self.viewport differ in their memory address
+       # if evt.source != self.viewport:
+           # return
+
+        self.pGrid.setVisible(True)
+
+        if self.enabled:
+            self.__update()
+
+    def postViewportUpdate(self, evt):
+       # if evt.source != self.viewport:
+           # return
+        self.pGrid.setVisible(False)
+
+    def __createGrid(self):
+        name = self.viewport.getTarget().getName() + "::"
+        name += str(self.viewport.getZOrder()) + "::ViewportGrid"
+
+        #// Create the manual object
+        self.pGrid = self.sceneManager.createManualObject(name)
+        self.pGrid.setDynamic(True)
+
+        #// Create the scene node (not attached yet)
+        self.pNode = self.sceneManager.getRootSceneNode().createChildSceneNode(name)
+        self.enabled = False
+
+        #// Make sure the material is created
+        #//! @todo Should we destroy the material somewhere?
+        matMgr = og.MaterialManager.getSingleton()
+        if not matMgr.resourceExists(self.sMatName):
+            pMaterial = matMgr.create(self.sMatName, og.ResourceGroupManager.DEFAULT_RESOURCE_GROUP_NAME)
+            pMaterial.setLightingEnabled(False)
+            pMaterial.setSceneBlending(og.SBT_TRANSPARENT_ALPHA)
+
+
+
+    def __destroyGrid(self):
+        self.sceneManager.destroyManualObject(self.pGrid)
+        self.pGrid = None
+
+        self.sceneManager.destroySceneNode(self.pNode.getName())
+        self.pNode = None
+
+
+    def __update(self):
+        if not self.enabled:
+            return
+
+        pCamera = self.viewport.getCamera()
+        if not pCamera:
+            return
+
+        # Check if an update is necessary
+        if not self.__checkUpdate() and not self.bForceUpdate:
+            return
+
+        if pCamera.getProjectionType() == og.PT_ORTHOGRAPHIC:
+            self.__updateOrtho()
+        else:
+            self.__updatePersp()
+
+        self.bForceUpdate = False
+
+
+
+    def __updateOrtho(self):
+        # Screen dimensions
+        width = self.viewport.getActualWidth()
+        height = self.viewport.getActualHeight()
+
+        #Camera information
+        pCamera = pViewport.getCamera()
+        camPos = pCamera.getPosition()
+        camDir = pCamera.getDirection()
+        camUp = pCamera.getUp()
+        camRight = pCamera.getRight()
+
+        # Translation in grid space
+        dx = camPos.dotProduct(camRight)
+        dy = camPos.dotProduct(camUp)
+
+        # Frustum dimensions
+        # Note: Tan calculates the opposite side of a _right_ triangle given its angle, so we make sure it is one, and double the result
+        worldWidth = 2 * og.Math.Tan(pCamera.getFOVy() / 2) * pCamera.getAspectRatio() * pCamera.getNearClipDistance()
+        worldHeight = worldWidth / pCamera.getAspectRatio()
+        worldLeft = dx - worldWidth / 2
+        worldRight = dx + worldWidth / 2
+        worldBottom = dy - worldHeight / 2
+        worldTop = dy + worldHeight / 2
+
+        # Conversion values (note: same as working with the height values)
+        worldToScreen = width / worldWidth
+        screenToWorld = worldWidth / width
+
+        # TODO Treshold should be dependent on window width/height (min? max?) so there are no more then division full alpha-lines
+        treshold = 10 # Treshhold in pixels
+
+        # Calculate the spacing multiplier
+        mult = 0
+        exp = 0
+        temp = worldToScreen # 1 world unit
+        if worldToScreen < treshold:
+            while temp < treshold:
+                exp = exp +1
+                temp = temp * treshold # TODO maybe wrong
+
+            mult = og.Math.Pow(self.division, exp)
+        else:
+            while temp > (self.division * treshold):
+                exp = exp +1
+                temp = temp / treshold # TODO maybe wrong
+
+            mult = og.Math.Pow(1.0 / self.division, exp)
+
+        # Interpolate alpha for (multiplied) spacing between treshold and division * treshold
+        self.colour2.a = worldToScreen * mult / (division * treshold - treshold)
+        if colour2.a > 1.0:
+           self.colour2.a = 1.0
+
+        # Calculate the horizontal zero-axis color
+        camRightX = og.Math.Abs(camRight.x)
+        camRightY = og.Math.Abs(camRight.y)
+        camRightZ = og.Math.Abs(camRight.z)
+
+        if og.Math.RealEqual(camRightX, 1.0):
+            horAxisColor = og.ColourValue().Red
+        elif og.Math.RealEqual(camRightY, 1.0):
+            horAxisColor = og.ColourValue().Green
+        elif og.Math.RealEqual(camRightZ, 1.0):
+            horAxisColor = og.ColourValue().Blue
+        else:
+            horAxisColor = self.colour1
+
+        # Calculate the vertical zero-axis color
+        camUpX = og.Math.Abs(camUp.x)
+        camUpY = og.Math.Abs(camUp.y)
+        camUpZ = og.Math.Abs(camUp.z)
+
+        if og.Math.RealEqual(camUpX, 1.0):
+            horAxisColor = og.ColourValue().Red
+        elif og.Math.RealEqual(camUpY, 1.0):
+            horAxisColor = og.ColourValue().Green
+        elif og.Math.RealEqual(camUpZ, 1.0):
+            horAxisColor = og.ColourValue().Blue
+        else:
+            horAxisColor = self.colour1
+
+        # The number of lines
+        numLinesWidth = int((worldWidth / mult) + 1)
+        numLinesHeight = int((worldHeight / mult) + 1)
+
+        # Start creating or updating the grid
+        self.pGrid.estimateVertexCount(2 * numLinesWidth + 2 * numLinesHeight)
+        if created:
+            self.pGrid.beginUpdate(0)
+        else:
+            self.pGrid.begin(self.sMatName, og.RenderOperation.OT_LINE_LIST)
+            self.created = True
+
+        # Vertical lines
+        startX = mult * int(worldLeft / mult)
+        x = startX
+        while x <= worldRight:
+            # Get the right color for this line
+            if x == 0:
+                multX = x
+            elif x < 0:
+                multX = int(x / mult - 0.5)
+            else:
+                multX = int(x / mult + 0.5)
+
+
+            if multX == 0:
+                colour = vertAxisColor
+            elif multX % (int(self.division)):
+                self.colour2
+            else:
+                self.colour1
+
+
+
+
+            # Add the line
+            self.pGrid.position(x, worldBottom, 0)
+            self.pGrid.colour(colour)
+            self.pGrid.position(x, worldTop, 0)
+            self.pGrid.colour(colour)
+
+            x += mult
+
+        # Horizontal lines
+        startY = mult * int(worldBottom / mult)
+        y = startY
+        while y <= worldTop:
+            # Get the right color for this line
+            #multY = (y == 0) ? y : (y < 0) ? int(y / mult - 0.5f) : int(y / mult + 0.5f)
+            if y == 0:
+                multY = y
+            elif y < 0:
+                multY = int(y / mult - 0.5)
+            else:
+                multY = int(y / mult + 0.5)
+
+            #colour = (multY == 0) ? horAxisColor : (multY % int(division)) ? self.colour2 : self.colour1
+            if multY == 0:
+                colour = horAxisColor
+            elif multY % (int(self.division)):
+                self.colour2
+            else:
+                self.colour1
+
+            self.pGrid.position(worldLeft, y, 0)
+            self.pGrid.colour(colour)
+            self.pGrid.position(worldRight, y, 0)
+            self.pGrid.colour(colour)
+
+            y += mult
+
+        self.pGrid.end()
+
+        self.pNode.setOrientation(pCamera.getOrientation())
+
+
+    def __updatePersp(self):
+        #! @todo Calculate the spacing multiplier
+        mult = 1
+
+        #! @todo Interpolate alpha
+        self.colour2.a = 0.5
+        #if(colour2.a > 1.0f) colour2.a = 1.0f
+
+        # Calculate the horizontal zero-axis color
+        horAxisColor = og.ColourValue().Red
+
+        # Calculate the vertical zero-axis color
+        vertAxisColor = og.ColourValue().Blue
+
+        # The number of lines
+        numLines = int(self.perspSize / mult) + 1
+
+        # Start creating or updating the grid
+        self.pGrid.estimateVertexCount(4 * numLines)
+        if self.created:
+            self.pGrid.beginUpdate(0)
+        else:
+            self.pGrid.begin(self.sMatName, og.RenderOperation.OT_LINE_LIST)
+            self.created = True
+
+        # Vertical lines
+        start = mult * int(-self.perspSize / 2 / mult)
+        x = start
+        while x <= (self.perspSize / 2):
+            # Get the right color for this line
+            #multX = (x == 0) ? x : (x < 0) ? int(x / mult - 0.5f) : int(x / mult + 0.5f)
+            if x == 0:
+                multX = x
+            elif x < 0:
+                multX = int(x / mult - 0.5)
+            else:
+                multX = int(x / mult +0.5)
+
+            #colour = (multX == 0) ? vertAxisColor : (multX % (int) self.division) ? self.colour2 : self.colour1
+            if multX == 0:
+                colour = vertAxisColor
+            elif multX % int(self.division):
+                colour = self.colour2
+            else:
+                colour = self.colour1
+
+            # Add the line
+            self.pGrid.position(x, 0, -self.perspSize / 2)
+            self.pGrid.colour(colour)
+            self.pGrid.position(x, 0, self.perspSize / 2)
+            self.pGrid.colour(colour)
+
+            x += mult
+
+        # Horizontal lines
+        y = start
+        while y <= (self.perspSize / 2):
+            # Get the right color for this line
+            #multY = (y == 0) ? y : (y < 0) ? int(y / mult - 0.5f) : int(y / mult + 0.5f)
+            if y == 0:
+                multY = y
+            elif y < 0:
+                multY = int(y / mult - 0.5)
+            else:
+                multY = int(y / mult +0.5)
+
+            #colour = (multY == 0) ? horAxisColor : (multY % int(self.division)) ? self.colour2 : self.colour1
+            if multY == 0:
+                colour = horAxisColor
+            elif multY % int(self.division):
+                colour = self.colour2
+            else:
+                colour = self.colour1
+            # Add the line
+            self.pGrid.position(-self.perspSize / 2, 0, y)
+            self.pGrid.colour(colour)
+            self.pGrid.position(self.perspSize / 2, 0, y)
+            self.pGrid.colour(colour)
+
+            y += mult
+
+        self.pGrid.end()
+
+        # Normal orientation, grid in the X-Z plane
+        self.pNode.resetOrientation()
+
+
+    def __checkUpdate(self):
+        update = False
+
+        pCamera = self.viewport.getCamera()
+        if not pCamera:
+            return False
+
+        if pCamera is not self.prevCamera:
+            self.prevCamera = pCamera
+            update = True
+
+
+        ortho = (pCamera.getProjectionType() == og.PT_ORTHOGRAPHIC)
+        if ortho is not self.prevOrtho:
+            self.prevOrtho = ortho
+            update = True
+
+            # Set correct material properties
+            pMaterial = og.MaterialManager.getSingleton().getByName(self.sMatName)
+
+            pMaterial.setDepthWriteEnabled(not ortho)
+            pMaterial.setDepthCheckEnabled(not ortho)
+
+        #return update || ortho ? checkUpdateOrtho() : checkUpdatePersp()
+        if update:
+            if ortho:
+                return self.__checkUpdateOrtho()
+            else:
+                return self.__checkUpdatePersp()
+
+        return False
+
+
+    def __checkUpdateOrtho(self):
+        update = False
+
+        pCamera = self.viewport.getCamera()
+        if not pCamera:
+            return False
+
+        if pCamera.getPosition() is not self.prevCamPos:
+            self.prevCamPos = pCamera.getPosition()
+            update = True
+
+        if pCamera.getNearClipDistance() is not self.prevNear:
+            self.prevNear = pCamera.getNearClipDistance()
+            update = True
+
+        if pCamera.getFOVy() is not self.prevOrtho:
+            self.prevOrtho = pCamera.getFOVy()
+            update = True
+
+        if pCamera.getAspectRatio() is not self.prevAspectRatio:
+            self.prevAspectRatio = pCamera.getAspectRatio()
+            update = True
+
+        return update
+
+
+    def __checkUpdatePersp(self):
+        return False


Property changes on: rl/trunk/editors/Lockenwickler/src/media
___________________________________________________________________
Name: svn:ignore
   + .Bpib
skelett.blend



Property changes on: rl/trunk/editors/Lockenwickler/src/plugins
___________________________________________________________________
Name: svn:ignore
   + ParticleUniverse.dll
Plugin_BSPSceneManager.dll
Plugin_CgProgramManager.dll
Plugin_OctreeSceneManager.dll
Plugin_OctreeZone.dll
Plugin_ParticleFX.dll
Plugin_PCZSceneManager.dll
Plugin_TheoraVideoSystem.dll
RenderSystem_Direct3D9.dll
RenderSystem_GL.dll


Added: rl/trunk/editors/Lockenwickler/ui files/NewModuleWizard.ui
===================================================================
--- rl/trunk/editors/Lockenwickler/ui files/NewModuleWizard.ui	2009-01-26 17:28:46 UTC (rev 4720)
+++ rl/trunk/editors/Lockenwickler/ui files/NewModuleWizard.ui	2009-01-26 18:35:47 UTC (rev 4721)
@@ -0,0 +1,190 @@
+<ui version="4.0" >
+ <class>Dialog</class>
+ <widget class="QDialog" name="Dialog" >
+  <property name="geometry" >
+   <rect>
+    <x>0</x>
+    <y>0</y>
+    <width>675</width>
+    <height>703</height>
+   </rect>
+  </property>
+  <property name="windowTitle" >
+   <string>Dialog</string>
+  </property>
+  <layout class="QGridLayout" name="gridLayout_3" >
+   <item row="0" column="0" >
+    <widget class="QLabel" name="label" >
+     <property name="text" >
+      <string>Step 1: Module Name</string>
+     </property>
+    </widget>
+   </item>
+   <item row="0" column="1" >
+    <widget class="QLineEdit" name="moduleNameLineEdit" >
+     <property name="text" >
+      <string/>
+     </property>
+    </widget>
+   </item>
+   <item row="1" column="0" >
+    <widget class="QLabel" name="label_2" >
+     <property name="text" >
+      <string>Step 2: Scene Name</string>
+     </property>
+    </widget>
+   </item>
+   <item row="1" column="1" >
+    <widget class="QLineEdit" name="sceneNameLineEdit" >
+     <property name="enabled" >
+      <bool>false</bool>
+     </property>
+     <property name="text" >
+      <string/>
+     </property>
+    </widget>
+   </item>
+   <item row="2" column="0" >
+    <widget class="QLabel" name="label_3" >
+     <property name="text" >
+      <string>Step 3: Map Name</string>
+     </property>
+    </widget>
+   </item>
+   <item row="2" column="1" >
+    <widget class="QLineEdit" name="mapNameLineEdit" >
+     <property name="enabled" >
+      <bool>false</bool>
+     </property>
+     <property name="text" >
+      <string/>
+     </property>
+    </widget>
+   </item>
+   <item row="3" column="0" colspan="2" >
+    <widget class="QGroupBox" name="groupBox" >
+     <property name="title" >
+      <string>Step 4: Module Dependencies</string>
+     </property>
+     <property name="alignment" >
+      <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignVCenter</set>
+     </property>
+     <layout class="QGridLayout" name="gridLayout_2" >
+      <item row="1" column="0" >
+       <widget class="QListView" name="moduleDependenciesList" >
+        <property name="enabled" >
+         <bool>false</bool>
+        </property>
+        <property name="toolTip" >
+         <string>Modules the new module will depend on</string>
+        </property>
+        <property name="selectionMode" >
+         <enum>QAbstractItemView::MultiSelection</enum>
+        </property>
+       </widget>
+      </item>
+     </layout>
+    </widget>
+   </item>
+   <item row="4" column="0" colspan="2" >
+    <widget class="QGroupBox" name="groupBox_2" >
+     <property name="title" >
+      <string>Step 5: Script Dependencies</string>
+     </property>
+     <layout class="QGridLayout" name="gridLayout" >
+      <item row="0" column="0" >
+       <widget class="QListView" name="scriptDependenciesList" >
+        <property name="enabled" >
+         <bool>false</bool>
+        </property>
+        <property name="toolTip" >
+         <string>Modules the new module will depend on</string>
+        </property>
+        <property name="selectionMode" >
+         <enum>QAbstractItemView::MultiSelection</enum>
+        </property>
+       </widget>
+      </item>
+     </layout>
+     <zorder>scriptDependenciesList</zorder>
+     <zorder>layoutWidget</zorder>
+    </widget>
+   </item>
+   <item row="5" column="0" colspan="2" >
+    <layout class="QHBoxLayout" >
+     <property name="spacing" >
+      <number>6</number>
+     </property>
+     <property name="margin" >
+      <number>0</number>
+     </property>
+     <item>
+      <spacer>
+       <property name="orientation" >
+        <enum>Qt::Horizontal</enum>
+       </property>
+       <property name="sizeHint" stdset="0" >
+        <size>
+         <width>131</width>
+         <height>31</height>
+        </size>
+       </property>
+      </spacer>
+     </item>
+     <item>
+      <widget class="QPushButton" name="okButton" >
+       <property name="enabled" >
+        <bool>false</bool>
+       </property>
+       <property name="text" >
+        <string>&amp;OK</string>
+       </property>
+      </widget>
+     </item>
+     <item>
+      <widget class="QPushButton" name="cancelButton" >
+       <property name="text" >
+        <string>&amp;Cancel</string>
+       </property>
+      </widget>
+     </item>
+    </layout>
+   </item>
+  </layout>
+ </widget>
+ <resources/>
+ <connections>
+  <connection>
+   <sender>okButton</sender>
+   <signal>clicked()</signal>
+   <receiver>Dialog</receiver>
+   <slot>accept()</slot>
+   <hints>
+    <hint type="sourcelabel" >
+     <x>278</x>
+     <y>253</y>
+    </hint>
+    <hint type="destinationlabel" >
+     <x>96</x>
+     <y>254</y>
+    </hint>
+   </hints>
+  </connection>
+  <connection>
+   <sender>cancelButton</sender>
+   <signal>clicked()</signal>
+   <receiver>Dialog</receiver>
+   <slot>reject()</slot>
+   <hints>
+    <hint type="sourcelabel" >
+     <x>369</x>
+     <y>253</y>
+    </hint>
+    <hint type="destinationlabel" >
+     <x>179</x>
+     <y>282</y>
+    </hint>
+   </hints>
+  </connection>
+ </connections>
+</ui>



From melven at mail.berlios.de  Tue Jan 27 22:32:54 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Tue, 27 Jan 2009 22:32:54 +0100
Subject: [Dsa-hl-svn] r4722 - in dependencies/OgreNewt_ngt: . inc src
Message-ID: <200901272132.n0RLWsc2022780@sheep.berlios.de>

Author: melven
Date: 2009-01-27 22:32:51 +0100 (Tue, 27 Jan 2009)
New Revision: 4722

Added:
   dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h
   dependencies/OgreNewt_ngt/src/OgreNewt_PlayerController.cpp
Modified:
   dependencies/OgreNewt_ngt/CMakeLists.txt
   dependencies/OgreNewt_ngt/inc/OgreNewt_Body.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_Debugger.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h
   dependencies/OgreNewt_ngt/src/OgreNewt_Body.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_Debugger.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp
Log:
-Debugger: added Ray- and Convexcast ability
-added Classes for PlayerController (not working yet, in fact half of the code is missing)


Modified: dependencies/OgreNewt_ngt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-26 18:35:47 UTC (rev 4721)
+++ dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-27 21:32:51 UTC (rev 4722)
@@ -82,7 +82,8 @@
 src/OgreNewt_RayCast.cpp
 src/OgreNewt_Tools.cpp
 src/OgreNewt_Vehicle.cpp
-src/OgreNewt_World.cpp)
+src/OgreNewt_World.cpp
+src/OgreNewt_PlayerController.cpp)
 
 ADD_LIBRARY(OgreNewt SHARED ${OgreNewt_LIB_SRCS})
 
@@ -106,7 +107,7 @@
 inc/OgreNewt_ContactCallback.h inc/OgreNewt_Debugger.h inc/OgreNewt.h
 inc/OgreNewt_Joint.h inc/OgreNewt_MaterialID.h inc/OgreNewt_MaterialPair.h
 inc/OgreNewt_Prerequisites.h inc/OgreNewt_RayCast.h inc/OgreNewt_Tools.h
-inc/OgreNewt_Vehicle.h inc/OgreNewt_World.h
+inc/OgreNewt_Vehicle.h inc/OgreNewt_World.h inc/OgreNewt_PlayerController.h
 DESTINATION ${CMAKE_INSTALL_PREFIX}/include/OgreNewt)
 
 IF(NOT WIN32)

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Body.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Body.h	2009-01-26 18:35:47 UTC (rev 4721)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Body.h	2009-01-27 21:32:51 UTC (rev 4722)
@@ -321,6 +321,9 @@
 	//! get angular damping
 	Ogre::Vector3 getAngularDamping() const;
 
+    //! calculate force needed for given velocity
+    Ogre::Vector3 calculateInverseDynamicsForce(Ogre::Real timestep, Ogre::Vector3 desiredVelocity);
+
 	//! get the freeze threshold
 	//void getFreezeThreshold( Ogre::Real& speed, Ogre::Real& omega ) const { NewtonBodyGetFreezeTreshold( m_body, &speed, &omega ); }
 

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Debugger.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Debugger.h	2009-01-26 18:35:47 UTC (rev 4721)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Debugger.h	2009-01-27 21:32:51 UTC (rev 4722)
@@ -58,7 +58,36 @@
 
         //! set Material color
         void setMaterialColor(const MaterialID* mat, Ogre::ColourValue col);
-	
+
+        //! enable additional raycast-debugging (this also enables displaying of recorded raycasts!)
+        void startRaycastRecording(bool markhitbodies = false);
+
+        //! returns true, if currently recording raycasts
+        bool isRaycastRecording();
+
+        //! returns true, if hit bodies are currently recording
+        bool isRaycastRecordingHitBodies();
+
+        //! clears all raycasts, that are currently shown, should probably be done once per frame!
+        void clearRaycastsRecorded();
+
+        //! disables raycast-debugging
+        void stopRaycastRecording();
+
+        //! set the color of the raycast-debug-lines
+        void setRaycastRecordingColor(Ogre::ColourValue rayCol, Ogre::ColourValue convexCol, Ogre::ColourValue hitBodyCol, Ogre::ColourValue prefilterDiscardedBodyCol);
+
+        //! this function is used internally
+        void addRay(const Ogre::Vector3 &startpt, const Ogre::Vector3 &endpt);
+
+        //! this function is used internally
+        void addConvexRay(const OgreNewt::Collision* col, const Ogre::Vector3 &startpt, const Ogre::Quaternion &colori, const Ogre::Vector3 &endpt);
+
+        //! this function is used internally
+        void addDiscardedBody(const OgreNewt::Body* body);
+
+        //! this function is used internally
+        void addHitBody(const OgreNewt::Body* body);
 	protected:
 		Debugger();
 	
@@ -68,6 +97,12 @@
         MaterialIdColorMap      m_materialcolors;
         Ogre::ColourValue       m_defaultcolor;
 
+        // raycast-debugging
+        Ogre::SceneNode*        m_raycastsnode;
+        bool                    m_recordraycasts;
+        Ogre::ColourValue       m_raycol, m_convexcol, m_hitbodycol, m_prefilterdiscardedcol;
+        bool                    m_markhitbodies;
+
         struct BodyDebugData
         {
             BodyDebugData() : m_lastcol(NULL), m_node(NULL), m_lines(NULL), m_text(NULL), m_updated(false) {}

Added: dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h	2009-01-26 18:35:47 UTC (rev 4721)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h	2009-01-27 21:32:51 UTC (rev 4722)
@@ -0,0 +1,177 @@
+/* 
+	OgreNewt Library
+
+	Ogre implementation of Newton Game Dynamics SDK
+
+	OgreNewt basically has no license, you may use any or all of the library however you desire... I hope it can help you in any way.
+
+		by melven
+
+*/
+#ifndef _INCLUDE_OGRENEWT_PLAYERCONTROLLER
+#define _INCLUDE_OGRENEWT_PLAYERCONTROLLER
+
+#include <Newton.h>
+#include "OgreNewt_Joint.h"
+#include "OgreNewt_Collision.h"
+#include "OgreNewt_RayCast.h"
+
+
+namespace OgreNewt
+{
+
+//! PlayerController
+/*!
+    this class implements a player-controller based on the code of the CustomPlayerController-class in the Newton-CustomJoints library
+*/
+class _OgreNewtExport PlayerController : public CustomJoint
+{
+public:
+    //! constructor
+    PlayerController(OgreNewt::Body* child);
+    virtual ~PlayerController();
+
+    //! get controlled body
+    OgreNewt::Body* getControlledBody() const {return m_body;}
+
+    //! set the characters velocity, the -Speed-values can be negative, sideSpeed positiv means move to the right, heading is in absolute space
+    void setVelocity(Ogre::Real forwardSpeed, Ogre::Real sideSpeed, Ogre::Radian heading);
+
+    //! get currently set velocity
+    void getVelocity(Ogre::Real &forwardSpeed, Ogre::Real& sideSpeed, Ogre::Radian& heading) const;
+
+    //! set maximum step height (as absolute value)
+    void setMaxStepHeight(Ogre::Real maxStepHeight);
+
+    //! get currently set maximum step height
+    Ogre::Real getMaxStepHeight() const;
+
+    //! set maximum slope
+    void setMaxSlope(Ogre::Radian maxSlope);
+
+    //! get currently set maximum slope
+    Ogre::Radian getMaxSlope() const;
+
+    //! set restitution (usually not needed!)
+    void setRestitution(Ogre::Real restitution);
+
+    //! get currently set restitution
+    Ogre::Real getRestitution() const;
+
+    //! set up-vector pin
+    void setPinVector(Ogre::Vector3 upVector);
+
+    //! get currently set up-vector pin
+    Ogre::Vector3 getPinVector() const;
+
+    //! is the body currently in the air (jumpin?)
+    bool isInJumpState() const;
+
+    //! can be overwritten to specify if a body can be pushed away by this character
+    virtual bool canPushBody(const OgreNewt::Body *hitBody) const {return true;}
+
+    //! overwritten function from CustomJoint, must *NOT* be overwritten
+    virtual void submitConstraint( Ogre::Real timestep, int threadindex );
+
+protected:
+    OgreNewt::Body *m_body; // we need this again, because in the joint it's constant!
+
+    Ogre::Real m_forwardSpeed, m_sideSpeed, m_maxStepHeight;
+    Ogre::Radian m_heading, m_maxSlope, m_restitution;
+    Ogre::Vector3 m_upVector;
+
+    bool m_isInJumpState;
+    OgreNewt::ConvexCollision* m_verticalSensorShape;
+    OgreNewt::ConvexCollision* m_horizontalSensorShape;
+    OgreNewt::ConvexCollision* m_dynamicsSensorShape;
+
+    virtual bool convexStaticCastPreFilter(OgreNewt::Body *body);
+    virtual bool convexDynamicCastPreFilter(OgreNewt::Body *body);
+    virtual bool convexAllBodyCastPreFilter(OgreNewt::Body *body);
+    virtual bool findFloorCastPreFilter(OgreNewt::Body *body);
+
+    // helper function, used internally
+    void getPlayerHeightAndRadius(Ogre::Real &height, Ogre::Real &radius);
+
+    // parameters for the updateSenesorShapes-function, these are set in the constructor!
+    Ogre::Real m_staticRadiusFactor, m_dynamicRadiusFactor, m_floorFinderRadiusFactor, m_maxPlayerHeightPaddFactor;
+    int m_sensorShapeSegments;
+    // internal values, only used in updateSensorShapes!
+    Ogre::Real m_lastPlayerHeight, m_lastPlayerRadius, m_lastSensorHeight;
+    // helper function
+    void updateSensorShapes();
+
+
+    // other parameters
+    int m_maxCollisionsIterations;
+
+    // variables used in submitConstraint
+    Ogre::Quaternion m_lastOri;
+
+private:
+    // we need overloaded versions of the raycasts...
+    class FindFloorRaycast : public OgreNewt::BasicRaycast
+    {
+        public:
+            FindFloorRaycast(PlayerController *pc, const Ogre::Vector3& startpt, const Ogre::Vector3& endpt, bool sorted) :
+                    BasicRaycast(pc->getControlledBody()->getWorld(), startpt, endpt, sorted),
+                    m_parent(pc)
+                {}
+
+            virtual bool userPreFilterCallback(OgreNewt::Body* body) {return m_parent->findFloorCastPreFilter(body);}
+        private:
+            OgreNewt::PlayerController* m_parent;
+    };
+
+    class StaticConvexCast : public OgreNewt::BasicConvexcast
+    {
+        public:
+            StaticConvexCast(PlayerController *pc, const OgreNewt::World* world,
+                             const OgreNewt::Collision* col, const Ogre::Vector3& startpt,
+                             const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount) :
+                    BasicConvexcast(pc->getControlledBody()->getWorld(), col, startpt, colori, endpt, maxcontactscount),
+                    m_parent(pc)
+                {}
+
+            virtual bool userPreFilterCallback(OgreNewt::Body* body) {return m_parent->convexStaticCastPreFilter(body);}
+        private:
+            OgreNewt::PlayerController* m_parent;
+    };
+
+    class DynamicConvexCast : public OgreNewt::BasicConvexcast
+    {
+        public:
+            DynamicConvexCast(PlayerController *pc, const OgreNewt::World* world,
+                             const OgreNewt::Collision* col, const Ogre::Vector3& startpt,
+                             const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount) :
+                    BasicConvexcast(pc->getControlledBody()->getWorld(), col, startpt, colori, endpt, maxcontactscount),
+                    m_parent(pc)
+                {}
+
+            virtual bool userPreFilterCallback(OgreNewt::Body* body) {return m_parent->convexDynamicCastPreFilter(body);}
+        private:
+            OgreNewt::PlayerController* m_parent;
+    };
+
+    class AllBodyConvexCast : public OgreNewt::BasicConvexcast
+    {
+        public:
+            AllBodyConvexCast(PlayerController *pc, const OgreNewt::World* world,
+                             const OgreNewt::Collision* col, const Ogre::Vector3& startpt,
+                             const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount) :
+                    BasicConvexcast(pc->getControlledBody()->getWorld(), col, startpt, colori, endpt, maxcontactscount),
+                    m_parent(pc)
+                {}
+
+            virtual bool userPreFilterCallback(OgreNewt::Body* body) {return m_parent->convexAllBodyCastPreFilter(body);}
+        private:
+            OgreNewt::PlayerController* m_parent;
+    };
+};
+
+
+}	// end NAMESPACE OgreNewt
+
+
+#endif	// _INCLUDE_OGRENEWT_PLAYERCONTROLLER
+

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h	2009-01-26 18:35:47 UTC (rev 4721)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h	2009-01-27 21:32:51 UTC (rev 4722)
@@ -105,12 +105,13 @@
 	//! constructor
 	/*!
 		performs a raycast, then the results can be queried from the object after creation.
-		\param world pointer to the OgreNewt::World
-		\param startpt starting point of the ray in global space
-		\param endpt ending point of the ray in global space
-                \param sorted sort the results by distance
+        \param world pointer to the OgreNewt::World
+        \param startpt starting point of the ray in global space
+        \param endpt ending point of the ray in global space
+        \param sorted sort the results by distance
+        \param prefilter pointer to a prefilter function
 	*/
-	BasicRaycast( const OgreNewt::World* world, const Ogre::Vector3& startpt, const Ogre::Vector3& endpt, bool sorted );
+	BasicRaycast( const OgreNewt::World* world, const Ogre::Vector3& startpt, const Ogre::Vector3& endpt, bool sorted);
 	
 	//! destuctor.
 	~BasicRaycast();
@@ -138,7 +139,6 @@
 	typedef std::vector<BasicRaycastInfo> RaycastInfoList;
 
 	RaycastInfoList mRayList;
-
 };
 
 //! general convexcast
@@ -224,7 +224,6 @@
         //! empty constructor
         BasicConvexcast();
 
-
 	//! constructor
 	/*!
 		performs a raycast, then the results can be queried from the object after creation.
@@ -234,6 +233,7 @@
                 \param colori orientation of the collision in global space
 		\param endpt ending point of ray in global space
                 \param maxcontactscount maximum number of contacts that should be saved
+                \param prefilter pointer to a prefilter function
 	*/
 	BasicConvexcast( const OgreNewt::World* world, const OgreNewt::Collision* col, const Ogre::Vector3& startpt, const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount);
 

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_Body.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_Body.cpp	2009-01-26 18:35:47 UTC (rev 4721)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_Body.cpp	2009-01-27 21:32:51 UTC (rev 4722)
@@ -296,6 +296,15 @@
 	return ret;
 }
 
+Ogre::Vector3 Body::calculateInverseDynamicsForce(Ogre::Real timestep, Ogre::Vector3 desiredVelocity)
+{
+    Ogre::Vector3 ret;
+    NewtonBodyCalculateInverseDynamicsForce(m_body, timestep, &desiredVelocity.x, &ret.x);
+
+    return ret;
+}
+
+
 Ogre::Vector3 Body::getAngularDamping() const
 {
 	Ogre::Vector3 ret;

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_Debugger.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_Debugger.cpp	2009-01-26 18:35:47 UTC (rev 4721)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_Debugger.cpp	2009-01-27 21:32:51 UTC (rev 4722)
@@ -11,6 +11,13 @@
 {
     m_debugnode = NULL;
     m_defaultcolor = Ogre::ColourValue::White;
+
+    m_recordraycasts = false;
+    m_markhitbodies = false;
+    m_raycol = Ogre::ColourValue::Green;
+    m_convexcol = Ogre::ColourValue::Blue;
+    m_hitbodycol = Ogre::ColourValue::Red;
+    m_prefilterdiscardedcol = Ogre::ColourValue::Black;
 }
 
 Debugger::~Debugger()
@@ -31,17 +38,23 @@
         m_debugnode = smgr->getRootSceneNode()->createChildSceneNode("__OgreNewt__Debugger__Node__");
         //m_debuglines = new Ogre::ManualObject("__OgreNewt__Debugger__Lines__");
     }
+
+    if( !m_raycastsnode )
+    {
+        m_raycastsnode = smgr->getRootSceneNode()->createChildSceneNode("__OgreNewt__Raycasts_Debugger__Node__");
+    }
 }
 
 void Debugger::deInit()
 {
 	if (m_debugnode)
 	{
-		m_debugnode->removeAndDestroyAllChildren();
+		m_debugnode->removeAllChildren();
 		m_debugnode->getParentSceneNode()->removeAndDestroyChild( m_debugnode->getName() );
 		m_debugnode = NULL;
 	}
 
+
         for(BodyDebugDataMap::iterator it = m_cachemap.begin(); it != m_cachemap.end(); it++)
         {
             Ogre::ManualObject* mo = it->second.m_lines;
@@ -49,6 +62,14 @@
                 delete mo;
         }
         m_cachemap.clear();
+
+    clearRaycastsRecorded();
+    if( m_raycastsnode )
+    {
+		m_raycastsnode->removeAndDestroyAllChildren();
+		m_raycastsnode->getParentSceneNode()->removeAndDestroyChild( m_debugnode->getName() );
+		m_raycastsnode = NULL;
+    }
 }
 
 
@@ -67,6 +88,12 @@
     {
         if( it->second.m_updated )
             newmap.insert(*it);
+        else
+        {
+            Ogre::ManualObject* mo = it->second.m_lines;
+            if( mo )
+                delete mo;
+        }
     }
     Debugger::getSingleton().m_cachemap.swap(newmap);
 }
@@ -74,7 +101,8 @@
 void Debugger::hideDebugInformation()
 {
 	// erase any existing lines!
-	m_debugnode->removeAllChildren();
+    if( m_debugnode )
+    	m_debugnode->removeAllChildren();
 }
 
 void Debugger::setMaterialColor(const MaterialID* mat, Ogre::ColourValue col)
@@ -177,7 +205,7 @@
         float matrix[16];
         Converters::QuatPosToMatrix(Ogre::Quaternion::IDENTITY, Ogre::Vector3::ZERO, &matrix[0]);
         
-        NewtonCollisionForEachPolygonDo( NewtonBodyGetCollision(body), &matrix[0], newtonPerPoly, data );
+        NewtonCollisionForEachPolygonDo( NewtonBodyGetCollision(body), &matrix[0], newtonPerPoly, data->m_lines );
         
         data->m_lines->end();
         data->m_node->attachObject(data->m_lines);
@@ -186,7 +214,7 @@
 
 void _CDECL Debugger::newtonPerPoly( void* userData, int vertexCount, const float* faceVertec, int id )
 {
-        BodyDebugData* data = (BodyDebugData*)userData;
+    Ogre::ManualObject* lines = (Ogre::ManualObject*)userData;
 	Ogre::Vector3 p0, p1;
 
         if( vertexCount < 2 )
@@ -200,12 +228,163 @@
 	{
 		p1 = Ogre::Vector3( faceVertec[(i*3) + 0], faceVertec[(i*3) + 1], faceVertec[(i*3) + 2] );
 
-		data->m_lines->position( p0 );
-		data->m_lines->position( p1 );
+		lines->position( p0 );
+		lines->position( p1 );
 
 		p0 = p1;
 	}
 }
 
+
+// ----------------- raycast-debugging -----------------------
+void Debugger::startRaycastRecording(bool markhitbodies)
+{
+    m_recordraycasts = true;
+    m_markhitbodies = markhitbodies;
+    clearRaycastsRecorded();
+}
+
+bool Debugger::isRaycastRecording()
+{
+    return m_recordraycasts;
+}
+
+bool Debugger::isRaycastRecordingHitBodies()
+{
+    return m_markhitbodies;
+}
+
+void Debugger::clearRaycastsRecorded()
+{
+    if( m_raycastsnode )
+    {
+        while( m_raycastsnode->numAttachedObjects() > 0 )
+        {
+            delete m_raycastsnode->detachObject((unsigned short)0);
+        }
+
+        m_raycastsnode->detachAllObjects();
+    }
+}
+
+void Debugger::stopRaycastRecording()
+{
+    m_recordraycasts = false;
+}
+
+void Debugger::setRaycastRecordingColor(Ogre::ColourValue rayCol, Ogre::ColourValue convexCol, Ogre::ColourValue hitBodyCol, Ogre::ColourValue prefilterDiscardedBodyCol)
+{
+    m_raycol = rayCol;
+    m_convexcol = convexCol;
+    m_hitbodycol = hitBodyCol;
+    m_prefilterdiscardedcol = prefilterDiscardedBodyCol;
+}
+
+void Debugger::addRay(const Ogre::Vector3 &startpt, const Ogre::Vector3 &endpt)
+{
+    static int i = 0;
+    std::ostringstream oss;
+    oss << "__OgreNewt__Raycast_Debugger__Lines__Raycastline__" << i++ << "__";
+    Ogre::ManualObject *line = new Ogre::ManualObject(oss.str());
+
+    line->begin("BaseWhiteNoLighting", Ogre::RenderOperation::OT_LINE_LIST );
+    line->colour(m_raycol);
+    line->position(startpt);
+    line->position(endpt);
+    line->end();
+
+    m_raycastsnode->attachObject(line);    
+}
+
+void Debugger::addConvexRay(const OgreNewt::Collision* col, const Ogre::Vector3 &startpt, const Ogre::Quaternion &colori, const Ogre::Vector3 &endpt)
+{
+    static int i = 0;
+    // lines from aab
+    std::ostringstream oss;
+    oss << "__OgreNewt__Raycast_Debugger__Lines__Convexcastlines__" << i++ << "__";
+    Ogre::ManualObject *line = new Ogre::ManualObject(oss.str());
+
+    line->begin("BaseWhiteNoLighting", Ogre::RenderOperation::OT_LINE_LIST );
+    line->colour(m_convexcol);
+
+    // aab1
+    Ogre::AxisAlignedBox aab1 = col->getAABB(colori, startpt);
+    const Ogre::Vector3* corners1 = aab1.getAllCorners();
+    Ogre::AxisAlignedBox aab2 = col->getAABB(colori, endpt);
+    const Ogre::Vector3* corners2 = aab2.getAllCorners();
+    for(int i = 0; i < 4; i++)
+    {
+        line->position(corners1[i]); line->position(corners1[(i+1)%4]);
+        line->position(corners1[i+4]); line->position(corners1[(i+1)%4+4]);
+        line->position(corners2[i]); line->position(corners2[(i+1)%4]);
+        line->position(corners2[i+4]); line->position(corners2[(i+1)%4+4]);
+        line->position(corners1[i]); line->position(corners2[i]);
+        line->position(corners1[i+4]); line->position(corners2[i+4]);
+    }
+    line->position(corners1[0]); line->position(corners1[6]);
+    line->position(corners1[1]); line->position(corners1[5]);
+    line->position(corners1[2]); line->position(corners1[4]);
+    line->position(corners1[3]); line->position(corners1[7]);
+    line->position(corners2[0]); line->position(corners2[6]);
+    line->position(corners2[1]); line->position(corners2[5]);
+    line->position(corners2[2]); line->position(corners2[4]);
+    line->position(corners2[3]); line->position(corners2[7]);
+
+    // bodies
+    float matrix[16];
+    Converters::QuatPosToMatrix(colori, startpt, &matrix[0]);
+    NewtonCollisionForEachPolygonDo( col->getNewtonCollision(), &matrix[0], newtonPerPoly, line );
+    Converters::QuatPosToMatrix(colori, endpt, &matrix[0]);
+    NewtonCollisionForEachPolygonDo( col->getNewtonCollision(), &matrix[0], newtonPerPoly, line );
+
+
+    line->end();
+    m_raycastsnode->attachObject(line);
+}
+
+void Debugger::addDiscardedBody(const OgreNewt::Body* body)
+{
+    static int i = 0;
+    float matrix[16];
+    Ogre::Vector3 pos;
+    Ogre::Quaternion ori;
+
+    std::ostringstream oss;
+    oss << "__OgreNewt__Raycast_Debugger__Lines__DiscardedBody__" << i++ << "__";
+    Ogre::ManualObject *line = new Ogre::ManualObject(oss.str());
+
+    line->begin("BaseWhiteNoLighting", Ogre::RenderOperation::OT_LINE_LIST );
+    line->colour(m_prefilterdiscardedcol);
+
+    body->getPositionOrientation(pos, ori);
+    Converters::QuatPosToMatrix(ori, pos, &matrix[0]);
+    NewtonCollisionForEachPolygonDo( body->getCollision()->getNewtonCollision() , &matrix[0], newtonPerPoly, line );
+
+    line->end();
+    m_raycastsnode->attachObject(line);
+}
+
+void Debugger::addHitBody(const OgreNewt::Body* body)
+{
+    static int i = 0;
+    float matrix[16];
+    Ogre::Vector3 pos;
+    Ogre::Quaternion ori;
+
+    std::ostringstream oss;
+    oss << "__OgreNewt__Raycast_Debugger__Lines__HitBody__" << i++ << "__";
+    Ogre::ManualObject *line = new Ogre::ManualObject(oss.str());
+
+    line->begin("BaseWhiteNoLighting", Ogre::RenderOperation::OT_LINE_LIST );
+    line->colour(m_hitbodycol);
+
+    body->getPositionOrientation(pos, ori);
+    Converters::QuatPosToMatrix(ori, pos, &matrix[0]);
+    NewtonCollisionForEachPolygonDo( body->getCollision()->getNewtonCollision() , &matrix[0], newtonPerPoly, line );
+
+    line->end();
+    m_raycastsnode->attachObject(line);
+}
+
 }	// end namespace OgreNewt
 

Added: dependencies/OgreNewt_ngt/src/OgreNewt_PlayerController.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_PlayerController.cpp	2009-01-26 18:35:47 UTC (rev 4721)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_PlayerController.cpp	2009-01-27 21:32:51 UTC (rev 4722)
@@ -0,0 +1,271 @@
+#include <OgreNewt_PlayerController.h>
+#include <OgreNewt_Tools.h>
+#include <OgreNewt_CollisionPrimitives.h>
+
+namespace OgreNewt
+{
+
+PlayerController::PlayerController(OgreNewt::Body * child) :
+    CustomJoint(6, child, NULL),
+    m_body(child)
+{
+    // initialize settable values
+    m_forwardSpeed = 0;
+    m_sideSpeed = 0;
+    m_heading = Ogre::Radian(0);
+    Ogre::Real playerHeight, playerRadius;
+    getPlayerHeightAndRadius(playerHeight, playerRadius);
+    m_maxStepHeight = playerHeight / 5;
+    m_maxSlope = Ogre::Degree(45);
+    m_restitution = 0;
+    m_upVector = Ogre::Vector3::UNIT_Y;
+    m_isInJumpState = false;
+
+    Ogre::Vector3 pos;
+    m_body->getPositionOrientation(pos, m_lastOri);
+
+
+
+    // initialize sensor-shape parameters
+    m_staticRadiusFactor = 1.125f;
+    m_dynamicRadiusFactor = 1.5f;
+    m_floorFinderRadiusFactor = 1.0f;
+    m_maxPlayerHeightPaddFactor = 0.01f;
+    m_sensorShapeSegments = 32;
+    m_verticalSensorShape = NULL;
+    m_horizontalSensorShape = NULL;
+    m_dynamicsSensorShape = NULL;
+
+
+    updateSensorShapes();
+}
+
+PlayerController::~PlayerController()
+{
+    if( m_verticalSensorShape )
+        delete m_verticalSensorShape;
+    if( m_horizontalSensorShape )
+        delete m_horizontalSensorShape;
+    if( m_dynamicsSensorShape )
+        delete m_dynamicsSensorShape
+;
+}
+
+void PlayerController::updateSensorShapes()
+{
+    Ogre::Real newPlayerRadius, newPlayerHeight, newSensorHeight;
+    // is this the first time, this function gets calles?
+    if( m_verticalSensorShape == NULL )
+    {
+        // initialize values, so they aren't arbitrary!
+        m_lastPlayerRadius = newPlayerRadius = 0;
+        m_lastPlayerHeight = newPlayerHeight = 0;
+        m_lastSensorHeight = newSensorHeight = 0;
+    }
+
+    // calculate new Values:
+    getPlayerHeightAndRadius(newPlayerHeight, newPlayerRadius);
+    newPlayerHeight += newPlayerHeight * m_maxPlayerHeightPaddFactor;
+    newSensorHeight = (newPlayerHeight - m_maxStepHeight) * 0.5f;
+
+
+    // do we need to update the shapes?
+    if( m_verticalSensorShape == NULL || 
+        abs( newPlayerHeight - m_lastPlayerHeight ) > 0.04f ||
+        abs( newSensorHeight - m_lastSensorHeight ) > 0.04f ||
+        abs( newPlayerRadius - m_lastPlayerRadius ) > 0.04f )
+    {
+        // delete old ones
+        if( m_verticalSensorShape )
+            delete m_verticalSensorShape;
+        if( m_horizontalSensorShape )
+            delete m_horizontalSensorShape;
+        if( m_dynamicsSensorShape )
+            delete m_dynamicsSensorShape;
+
+        m_lastPlayerRadius = newPlayerRadius;
+        m_lastSensorHeight = newSensorHeight;
+        m_lastPlayerHeight = newPlayerHeight;
+
+        
+        Ogre::Vector3 *dynamicsSensorPoints = new Ogre::Vector3[m_sensorShapeSegments*2];
+        Ogre::Vector3 *verticalSensorPoints = new Ogre::Vector3[m_sensorShapeSegments*2];
+        Ogre::Vector3 *horizontalSensorPoints = new Ogre::Vector3[m_sensorShapeSegments*2];
+
+        for( int i = 0; i < m_sensorShapeSegments; i++)
+        {
+            Ogre::Real x, z;
+            x = m_lastPlayerRadius * Ogre::Math::Cos( Ogre::Degree( 360.0f * i / m_sensorShapeSegments ) );
+            z = m_lastPlayerRadius * Ogre::Math::Sin( Ogre::Degree( 360.0f * i / m_sensorShapeSegments ) );
+
+            dynamicsSensorPoints[i].x = x * m_dynamicRadiusFactor;
+            dynamicsSensorPoints[i].y = m_lastPlayerHeight * 0.45f;
+            dynamicsSensorPoints[i].z = z * m_dynamicRadiusFactor;
+            dynamicsSensorPoints[i + m_sensorShapeSegments].x =  dynamicsSensorPoints[i].x;
+            dynamicsSensorPoints[i + m_sensorShapeSegments].y = -dynamicsSensorPoints[i].y;
+            dynamicsSensorPoints[i + m_sensorShapeSegments].z =  dynamicsSensorPoints[i].z;
+            verticalSensorPoints[i].x = x * m_floorFinderRadiusFactor;
+            verticalSensorPoints[i].y = m_lastSensorHeight;
+            verticalSensorPoints[i].z = z * m_floorFinderRadiusFactor;
+            verticalSensorPoints[i + m_sensorShapeSegments].x =  verticalSensorPoints[i].x;
+            verticalSensorPoints[i + m_sensorShapeSegments].y = -verticalSensorPoints[i].y;
+            verticalSensorPoints[i + m_sensorShapeSegments].z =  verticalSensorPoints[i].z;
+            horizontalSensorPoints[i].x = x * m_staticRadiusFactor;
+            horizontalSensorPoints[i].y = m_lastSensorHeight;
+            horizontalSensorPoints[i].z = z * m_staticRadiusFactor;
+            horizontalSensorPoints[i + m_sensorShapeSegments].x =  horizontalSensorPoints[i].x;
+            horizontalSensorPoints[i + m_sensorShapeSegments].y = -horizontalSensorPoints[i].y;
+            horizontalSensorPoints[i + m_sensorShapeSegments].z =  horizontalSensorPoints[i].z;
+        }
+
+        m_verticalSensorShape = new OgreNewt::CollisionPrimitives::ConvexHull(m_body->getWorld(), verticalSensorPoints, 2*m_sensorShapeSegments);
+        m_horizontalSensorShape = new OgreNewt::CollisionPrimitives::ConvexHull(m_body->getWorld(), horizontalSensorPoints, 2*m_sensorShapeSegments);
+        m_dynamicsSensorShape = new OgreNewt::CollisionPrimitives::ConvexHull(m_body->getWorld(), dynamicsSensorPoints, 2*m_sensorShapeSegments);
+
+        delete[] dynamicsSensorPoints;
+        delete[] verticalSensorPoints;
+        delete[] horizontalSensorPoints;
+    }
+
+}
+
+
+void PlayerController::getPlayerHeightAndRadius(Ogre::Real &height, Ogre::Real &radius)
+{
+    Ogre::AxisAlignedBox aab = m_body->getAABB();
+    height = aab.getMaximum().y - aab.getMinimum().y;
+
+    Ogre::Real rx = aab.getMaximum().x - aab.getMinimum().x;
+    Ogre::Real ry = aab.getMaximum().y - aab.getMinimum().y;
+    radius = std::max(rx,ry);
+}
+
+
+bool PlayerController::convexStaticCastPreFilter(OgreNewt::Body *body)
+{
+    Ogre::Real mass;
+    Ogre::Vector3 inertia;
+    body->getMassMatrix(mass, inertia);
+
+    return (mass == 0.0f && body != m_body);
+}
+
+
+bool PlayerController::convexDynamicCastPreFilter(OgreNewt::Body *body)
+{
+    Ogre::Real mass;
+    Ogre::Vector3 inertia;
+    body->getMassMatrix(mass, inertia);
+
+    return (mass > 0.0f && body != m_body);
+}
+
+
+bool PlayerController::convexAllBodyCastPreFilter(OgreNewt::Body *body)
+{
+    return (body != m_body);
+}
+
+
+bool PlayerController::findFloorCastPreFilter(OgreNewt::Body *body)
+{
+    return (body != m_body);
+}
+
+
+void PlayerController::submitConstraint( Ogre::Real timestep, int threadindex )
+{
+
+    Ogre::Vector3 pos;
+    Ogre::Quaternion ori;
+    Ogre::Real mass;
+    Ogre::Vector3 inertia;
+    Ogre::Vector3 vel;
+    Ogre::Vector3 omega;
+    Ogre::Vector3 torqueAcc;
+
+    m_body->getPositionOrientation(pos,ori);
+    m_body->getMassMatrix(mass, inertia);
+    vel = m_body->getVelocity();
+    omega = m_body->getOmega();
+    torqueAcc = m_body->getTorqueAcceleration();
+
+    // ----------- "up-vector-pin" -----------
+    // get the plane of rotation
+    Ogre::Vector3 oriChangeVec;
+    Ogre::Radian oriChangeAngle;
+    Ogre::Quaternion oriDiffFromLast = (ori * m_lastOri.Inverse());
+    oriDiffFromLast.ToAngleAxis(oriChangeAngle, oriChangeVec);
+    if( abs(oriChangeAngle.valueRadians()) > 1.0e-3 )
+    {
+        // correct angle
+        addAngularRow(oriChangeAngle, oriChangeVec);
+
+        // additional correction, see newton CustomPlayerController
+        Ogre::Vector3 frontDir = ori*oriChangeVec;
+        addAngularRow(Ogre::Radian(0.0f), oriChangeVec);
+    }
+    else
+    {
+        addAngularRow(Ogre::Radian(0.0f), ori.yAxis());
+        addAngularRow(Ogre::Radian(0.0f), ori.xAxis());
+    }
+
+    // ----------- calculate torque -----------
+    Ogre::Quaternion targetOri;
+    targetOri.FromAngleAxis(m_heading, Ogre::Vector3::UNIT_Y);
+    Ogre::Quaternion oriDiff = (targetOri * ori.Inverse());
+    Ogre::Real turnOmega  = oriDiff.getYaw().valueRadians() / timestep;
+    torqueAcc = ori.yAxis() * (torqueAcc.dotProduct(ori.yAxis()));
+    Ogre::Vector3 torque = ori.yAxis() * (turnOmega - omega.y * inertia.y/timestep - torqueAcc.y);
+    m_body->addTorque(torque);
+
+
+
+    // ----------- find floor -----------
+    Ogre::Vector3 p1 = pos - Ogre::Vector3::UNIT_Y*m_lastPlayerHeight;
+    FindFloorRaycast findFloorCast(this, pos, p1, true);
+    if( findFloorCast.getHitCount() > 0 )
+    {
+        // slope:
+        if( Ogre::Math::ACos(findFloorCast.getFirstHit().mNormal.y) > m_maxSlope )
+        
+        {
+            // desired velocity
+            Ogre::Vector3 desiredVel = ori*(Ogre::Vector3::UNIT_Z * m_forwardSpeed + Ogre::Vector3::UNIT_Y*vel.y + Ogre::Vector3::UNIT_X * m_sideSpeed);
+
+            if( m_isInJumpState )
+                desiredVel = vel;
+            // ------------------------ here should be an else!! -------------------------
+            // only apply hitVel if we are not in the air, in the original this is different!
+            else
+            {
+
+                // hit-body:
+                Ogre::Vector3 hitPoint = pos + (p1-pos) * findFloorCast.getFirstHit().mDistance;
+                Ogre::Vector3 hitOmega = findFloorCast.getFirstHit().mBody->getOmega();
+                Ogre::Vector3 hitVel = findFloorCast.getFirstHit().mBody->getVelocity();
+                Ogre::Vector3 hitPos;
+                Ogre::Quaternion hitOri;
+                findFloorCast.getFirstHit().mBody->getPositionOrientation(hitPos, hitOri);
+
+                hitVel += hitOmega * (hitPoint - hitPos).length();
+                desiredVel += hitVel;
+            }
+
+
+
+
+
+            // calculate force needed for desired velocity
+//            m_body->
+
+        }
+    }
+    
+
+}
+
+
+}	// end NAMESPACE OgreNewt
+

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp	2009-01-26 18:35:47 UTC (rev 4721)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp	2009-01-27 21:32:51 UTC (rev 4722)
@@ -1,5 +1,6 @@
 #include "OgreNewt_RayCast.h"
 #include "OgreNewt_Tools.h"
+#include "OgreNewt_Debugger.h"
 
 
 namespace OgreNewt
@@ -12,6 +13,10 @@
 
 	void Raycast::go(const OgreNewt::World* world, const Ogre::Vector3& startpt, const Ogre::Vector3& endpt )
 	{
+        if( Debugger::getSingleton().isRaycastRecording() )
+        {
+            Debugger::getSingleton().addRay(startpt, endpt);
+        }
 		// perform the raycast!
 		NewtonWorldRayCast( world->getNewtonWorld(), (float*)&startpt, (float*)&endpt, OgreNewt::Raycast::newtonRaycastFilter, this, OgreNewt::Raycast::newtonRaycastPreFilter );
 	}
@@ -24,6 +29,13 @@
 		Body* bod = (Body*)NewtonBodyGetUserData( body );
 		Ogre::Vector3 normal = Ogre::Vector3( hitNormal[0], hitNormal[1], hitNormal[2] );
 
+
+        if( Debugger::getSingleton().isRaycastRecording() && Debugger::getSingleton().isRaycastRecordingHitBodies() )
+        {
+            Debugger::getSingleton().addHitBody(bod);
+        }
+
+
 		if (me->userCallback( bod, intersectParam, normal, collisionID ))
 			return intersectParam;
 		else
@@ -41,7 +53,15 @@
 		if (me->userPreFilterCallback( bod ))
 			return 1;
 		else
+        {
+
+            if( Debugger::getSingleton().isRaycastRecording() && Debugger::getSingleton().isRaycastRecordingHitBodies() )
+            {
+                Debugger::getSingleton().addDiscardedBody(bod);
+            }
+
 			return 0;
+        }
 	}
 
 
@@ -57,7 +77,8 @@
 	BasicRaycast::BasicRaycastInfo::~BasicRaycastInfo() {}
 
 
-	BasicRaycast::BasicRaycast(const OgreNewt::World* world, const Ogre::Vector3& startpt, const Ogre::Vector3& endpt, bool sorted ) : Raycast() 
+	BasicRaycast::BasicRaycast(const OgreNewt::World* world, const Ogre::Vector3& startpt, const Ogre::Vector3& endpt, bool sorted)
+        : Raycast()
 	{
 		go( world, startpt, endpt );
                 if( sorted )
@@ -143,6 +164,11 @@
 
 	void Convexcast::go(const OgreNewt::World* world, const OgreNewt::Collision *col, const Ogre::Vector3& startpt, const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount)
 	{
+
+        if( Debugger::getSingleton().isRaycastRecording() )
+        {
+            Debugger::getSingleton().addConvexRay(col, startpt, colori, endpt);
+        }
                 // reserve memory
                 if( mReturnInfoListSize < maxcontactscount )
                 {
@@ -161,6 +187,15 @@
                         NewtonWorldConvexCast( world->getNewtonWorld(), &matrix[0], (float*)&endpt, col->getNewtonCollision(),
                                                &mFirstContactDistance, this, OgreNewt::Convexcast::newtonConvexcastPreFilter,
                                                mReturnInfoList, mReturnInfoListSize );
+
+            if( Debugger::getSingleton().isRaycastRecording() && Debugger::getSingleton().isRaycastRecordingHitBodies() )
+            {
+                for(int i = 0; i < mReturnInfoListLength; i++)
+                {
+                    Body* body = (OgreNewt::Body*) NewtonBodyGetUserData(mReturnInfoList[i].m_hitBody);
+                    Debugger::getSingleton().addHitBody(body);
+                }
+            }
 	}
 
 	unsigned _CDECL Convexcast::newtonConvexcastPreFilter(const NewtonBody *body, const NewtonCollision *collision, void* userData)
@@ -173,7 +208,15 @@
 		if (me->userPreFilterCallback( bod ))
 			return 1;
 		else
+        {
+
+            if( Debugger::getSingleton().isRaycastRecording() && Debugger::getSingleton().isRaycastRecordingHitBodies() )
+            {
+                Debugger::getSingleton().addDiscardedBody(bod);
+            }
+
 			return 0;
+        }
 	}
 
 



From melven at mail.berlios.de  Tue Jan 27 22:35:24 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Tue, 27 Jan 2009 22:35:24 +0100
Subject: [Dsa-hl-svn] r4723 - in rl/branches/newton20: .
	editors/Lockenwickler editors/Lockenwickler/_eric4project
	editors/Lockenwickler/src editors/Lockenwickler/src/media
	editors/Lockenwickler/src/plugins editors/Lockenwickler/ui
	files engine/core engine/core/include engine/core/src
	engine/rules/src engine/ui/src
Message-ID: <200901272135.n0RLZOX7022990@sheep.berlios.de>

Author: melven
Date: 2009-01-27 22:35:12 +0100 (Tue, 27 Jan 2009)
New Revision: 4723

Added:
   rl/branches/newton20/editors/Lockenwickler/_eric4project/
   rl/branches/newton20/editors/Lockenwickler/_eric4project/Lockenwickler.e4q
   rl/branches/newton20/editors/Lockenwickler/_eric4project/Lockenwickler.e4t
   rl/branches/newton20/editors/Lockenwickler/src/ModuleExplorer.py
   rl/branches/newton20/editors/Lockenwickler/ui files/NewModuleWizard.ui
Removed:
   rl/branches/newton20/editors/Lockenwickler/.eric4project/
   rl/branches/newton20/editors/Lockenwickler/_eric4project/Lockenwickler.e4q
   rl/branches/newton20/editors/Lockenwickler/_eric4project/Lockenwickler.e4t
   rl/branches/newton20/editors/Lockenwickler/src/SceneExplorer.py
Modified:
   rl/branches/newton20/CMakeLists.txt
   rl/branches/newton20/editors/Lockenwickler/Lockenwickler.e4p
   rl/branches/newton20/editors/Lockenwickler/src/
   rl/branches/newton20/editors/Lockenwickler/src/GameObjectClass.py
   rl/branches/newton20/editors/Lockenwickler/src/GameObjectClassManager.py
   rl/branches/newton20/editors/Lockenwickler/src/Lockenwickler.py
   rl/branches/newton20/editors/Lockenwickler/src/ModuleManager.py
   rl/branches/newton20/editors/Lockenwickler/src/MovePivot.py
   rl/branches/newton20/editors/Lockenwickler/src/MyRaySceneQueryListener.py
   rl/branches/newton20/editors/Lockenwickler/src/NewModuleWizard.py
   rl/branches/newton20/editors/Lockenwickler/src/OgreWidget.py
   rl/branches/newton20/editors/Lockenwickler/src/Ui_NewModuleWizard.py
   rl/branches/newton20/editors/Lockenwickler/src/ViewportGrid.py
   rl/branches/newton20/editors/Lockenwickler/src/media/
   rl/branches/newton20/editors/Lockenwickler/src/plugins/
   rl/branches/newton20/engine/core/CMakeLists.txt
   rl/branches/newton20/engine/core/include/PhysicsManager.h
   rl/branches/newton20/engine/core/src/PhysicsManager.cpp
   rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp
   rl/branches/newton20/engine/rules/src/CreatureController.cpp
   rl/branches/newton20/engine/rules/src/StepRecognitionMovement.cpp
   rl/branches/newton20/engine/ui/src/MovementControlState.cpp
Log:
-implemented raycast-debugging (press l multiple times!)
-currently debugging camera-movement...
-merged changes from trunk


Modified: rl/branches/newton20/CMakeLists.txt
===================================================================
--- rl/branches/newton20/CMakeLists.txt	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/CMakeLists.txt	2009-01-27 21:35:12 UTC (rev 4723)
@@ -68,6 +68,7 @@
 FIND_PACKAGE(OIS REQUIRED)
 FIND_PACKAGE(CEGUI REQUIRED)
 FIND_PACKAGE(CEGUIOGRE 1.6 REQUIRED)
+FIND_PACKAGE(FMODEx REQUIRED)
 FIND_PACKAGE(OgreNewt 2.0 REQUIRED)
 FIND_PACKAGE(OpenSteer REQUIRED)
 FIND_PACKAGE(MeshMagick 0.5 REQUIRED)

Modified: rl/branches/newton20/editors/Lockenwickler/Lockenwickler.e4p
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/Lockenwickler.e4p	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/Lockenwickler.e4p	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,177 +1,179 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE Project SYSTEM "Project-4.5.dtd">
-<!-- eric4 project file for project Lockenwickler -->
-<!-- Saved: 2008-11-09, 21:48:49 -->
-<!-- Copyright (C) 2008 Stefan Stammberger, sstammberger at web.de -->
-<Project version="4.5">
-  <ProgLanguage mixed="0">Python</ProgLanguage>
-  <ProjectType>Qt4</ProjectType>
-  <Description>Lockenwickler is an Editor application for the Rastulahs Lockenpracht game.</Description>
-  <Version>0.1</Version>
-  <Author>Stefan Stammberger</Author>
-  <Email>sstammberger at web.de</Email>
-  <Sources>
-    <Source>src/Lockenwickler.py</Source>
-    <Source>src/ConsoleWindow.py</Source>
-    <Source>src/ModelSelectionDialog.py</Source>
-    <Source>src/ModuleManager.py</Source>
-    <Source>src/MovePivot.py</Source>
-    <Source>src/ObjectPropertyWin.py</Source>
-    <Source>src/OgreMainWindow.py</Source>
-    <Source>src/OgreWidget.py</Source>
-    <Source>src/PreferencesDialog.py</Source>
-    <Source>src/PythonOgreConfig.py</Source>
-    <Source>src/ui_ConsoleWindow.py</Source>
-    <Source>src/SceneExplorer.py</Source>
-    <Source>src/Property.py</Source>
-    <Source>src/ViewportGrid.py</Source>
-    <Source>src/ObjectPropertyModel.py</Source>
-    <Source>src/GameObjectClass.py</Source>
-    <Source>src/GameObjectClassManager.py</Source>
-    <Source>src/setup.py</Source>
-    <Source>src/GameObjectClassView.py</Source>
-    <Source>src/MyRaySceneQueryListener.py</Source>
-    <Source>src/GOStringEditor.py</Source>
-    <Source>src/GOIntEditor.py</Source>
-    <Source>src/CodeDump.py</Source>
-    <Source>src/NewModuleWizard.py</Source>
-  </Sources>
-  <Forms>
-    <Form>ui files/GOPropertyEditorDialogINT.ui</Form>
-    <Form>ui files/GOPropertyEditorDialogSTRING.ui</Form>
-    <Form>ui files/NewModuleWizard.ui</Form>
-  </Forms>
-  <Translations>
-  </Translations>
-  <Resources>
-  </Resources>
-  <Interfaces>
-  </Interfaces>
-  <Others>
-  </Others>
-  <MainScript>src/Lockenwickler.py</MainScript>
-  <Vcs>
-    <VcsType>Subversion</VcsType>
-    <VcsOptions>
-      <dict>
-        <key>
-          <string>add</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>checkout</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>commit</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>diff</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>export</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>global</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>history</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>log</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>remove</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>status</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>tag</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-        <key>
-          <string>update</string>
-        </key>
-        <value>
-          <list>
-            <string></string>
-          </list>
-        </value>
-      </dict>
-    </VcsOptions>
-    <VcsOtherData>
-      <dict>
-        <key>
-          <string>standardLayout</string>
-        </key>
-        <value>
-          <bool>True</bool>
-        </value>
-      </dict>
-    </VcsOtherData>
-  </Vcs>
-  <FiletypeAssociations>
-    <FiletypeAssociation pattern="*.ui" type="FORMS" />
-    <FiletypeAssociation pattern="*.idl" type="INTERFACES" />
-    <FiletypeAssociation pattern="*.qm" type="TRANSLATIONS" />
-    <FiletypeAssociation pattern="*.ptl" type="SOURCES" />
-    <FiletypeAssociation pattern="*.pyw" type="SOURCES" />
-    <FiletypeAssociation pattern="*.ui.h" type="FORMS" />
-    <FiletypeAssociation pattern="*.ts" type="TRANSLATIONS" />
-    <FiletypeAssociation pattern="*.py" type="SOURCES" />
-    <FiletypeAssociation pattern="*.qrc" type="RESOURCES" />
-  </FiletypeAssociations>
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE Project SYSTEM "Project-4.6.dtd">
+<!-- eric4 project file for project Lockenwickler -->
+<!-- Saved: 2009-01-26, 17:27:44 -->
+<!-- Copyright (C) 2009 Stefan Stammberger, sstammberger at web.de -->
+<Project version="4.6">
+  <Language>en</Language>
+  <ProgLanguage mixed="0">Python</ProgLanguage>
+  <ProjectType>Qt4</ProjectType>
+  <Description>Lockenwickler is an Editor application for the Rastulahs Lockenpracht game.</Description>
+  <Version>0.1</Version>
+  <Author>Stefan Stammberger</Author>
+  <Email>sstammberger at web.de</Email>
+  <Sources>
+    <Source>src/Lockenwickler.py</Source>
+    <Source>src/ConsoleWindow.py</Source>
+    <Source>src/ModelSelectionDialog.py</Source>
+    <Source>src/ModuleManager.py</Source>
+    <Source>src/MovePivot.py</Source>
+    <Source>src/ObjectPropertyWin.py</Source>
+    <Source>src/OgreMainWindow.py</Source>
+    <Source>src/OgreWidget.py</Source>
+    <Source>src/PreferencesDialog.py</Source>
+    <Source>src/PythonOgreConfig.py</Source>
+    <Source>src/ui_ConsoleWindow.py</Source>
+    <Source>src/Property.py</Source>
+    <Source>src/ViewportGrid.py</Source>
+    <Source>src/ObjectPropertyModel.py</Source>
+    <Source>src/GameObjectClass.py</Source>
+    <Source>src/GameObjectClassManager.py</Source>
+    <Source>src/setup.py</Source>
+    <Source>src/GameObjectClassView.py</Source>
+    <Source>src/MyRaySceneQueryListener.py</Source>
+    <Source>src/GOStringEditor.py</Source>
+    <Source>src/GOIntEditor.py</Source>
+    <Source>src/CodeDump.py</Source>
+    <Source>src/NewModuleWizard.py</Source>
+    <Source>src/Ui_NewModuleWizard.py</Source>
+    <Source>src/ModuleExplorer.py</Source>
+  </Sources>
+  <Forms>
+    <Form>ui files/GOPropertyEditorDialogINT.ui</Form>
+    <Form>ui files/GOPropertyEditorDialogSTRING.ui</Form>
+    <Form>ui files/NewModuleWizard.ui</Form>
+  </Forms>
+  <Translations>
+  </Translations>
+  <Resources>
+  </Resources>
+  <Interfaces>
+  </Interfaces>
+  <Others>
+  </Others>
+  <MainScript>src/Lockenwickler.py</MainScript>
+  <Vcs>
+    <VcsType>None</VcsType>
+    <VcsOptions>
+      <dict>
+        <key>
+          <string>add</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>checkout</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>commit</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>diff</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>export</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>global</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>history</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>log</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>remove</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>status</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>tag</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+        <key>
+          <string>update</string>
+        </key>
+        <value>
+          <list>
+            <string></string>
+          </list>
+        </value>
+      </dict>
+    </VcsOptions>
+    <VcsOtherData>
+      <dict>
+        <key>
+          <string>standardLayout</string>
+        </key>
+        <value>
+          <bool>True</bool>
+        </value>
+      </dict>
+    </VcsOtherData>
+  </Vcs>
+  <FiletypeAssociations>
+    <FiletypeAssociation pattern="*.ui" type="FORMS" />
+    <FiletypeAssociation pattern="*.idl" type="INTERFACES" />
+    <FiletypeAssociation pattern="*.qm" type="TRANSLATIONS" />
+    <FiletypeAssociation pattern="*.ptl" type="SOURCES" />
+    <FiletypeAssociation pattern="*.pyw" type="SOURCES" />
+    <FiletypeAssociation pattern="*.ui.h" type="FORMS" />
+    <FiletypeAssociation pattern="*.ts" type="TRANSLATIONS" />
+    <FiletypeAssociation pattern="*.py" type="SOURCES" />
+    <FiletypeAssociation pattern="*.qrc" type="RESOURCES" />
+  </FiletypeAssociations>
 </Project>
\ No newline at end of file

Copied: rl/branches/newton20/editors/Lockenwickler/_eric4project (from rev 4722, rl/trunk/editors/Lockenwickler/_eric4project)

Deleted: rl/branches/newton20/editors/Lockenwickler/_eric4project/Lockenwickler.e4q
===================================================================
--- rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4q	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/_eric4project/Lockenwickler.e4q	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,7 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE UserProject SYSTEM "UserProject-4.0.dtd">
-<!-- eric4 user project file for project Lockenwickler -->
-<!-- Saved: 2009-01-26, 17:27:44 -->
-<!-- Copyright (C) 2009 Stefan Stammberger, sstammberger at web.de -->
-<UserProject version="4.0">
-</UserProject>
\ No newline at end of file

Copied: rl/branches/newton20/editors/Lockenwickler/_eric4project/Lockenwickler.e4q (from rev 4722, rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4q)

Deleted: rl/branches/newton20/editors/Lockenwickler/_eric4project/Lockenwickler.e4t
===================================================================
--- rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4t	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/_eric4project/Lockenwickler.e4t	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,15 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!DOCTYPE Tasks SYSTEM "Tasks-4.2.dtd">
-<!-- eric4 tasks file for project Lockenwickler -->
-<!-- Saved: 2009-01-26, 17:27:44 -->
-<Tasks version="4.2">
-  <Task priority="1" completed="False" bugfix="False">
-    <Summary>TODO: implement save here</Summary>
-    <Description></Description>
-    <Created>2009-01-26, 17:23:59</Created>
-    <Resource>
-      <Filename>src/Lockenwickler.py</Filename>
-      <Linenumber>416</Linenumber>
-    </Resource>
-  </Task>
-</Tasks>
\ No newline at end of file

Copied: rl/branches/newton20/editors/Lockenwickler/_eric4project/Lockenwickler.e4t (from rev 4722, rl/trunk/editors/Lockenwickler/_eric4project/Lockenwickler.e4t)


Property changes on: rl/branches/newton20/editors/Lockenwickler/src
___________________________________________________________________
Name: svn:ignore
   + ogre.cfg


Modified: rl/branches/newton20/editors/Lockenwickler/src/GameObjectClass.py
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/src/GameObjectClass.py	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/src/GameObjectClass.py	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,208 +1,209 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-from elementtree.ElementTree import *
-
-from PyQt4.QtCore import *
-from PyQt4.QtGui import *
-
-import ogre.renderer.OGRE as og
-
-from GOStringEditor import *
-from GOIntEditor import *
-
-class GOCStringProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "STRING"
-
-    def openEditor(self, row, parent = None):
-        dlg = GOStringEditor(parent)
-        dlg.nameEdit.setText(self.name)
-        dlg.dataEdit.setText(self.data)
-        result = dlg.exec_()
-        if result:
-            self.name = dlg.nameEdit.text()
-            self.data = dlg.dataEdit.toPlainText()
-
-        return result
-
-class GOCRealProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "REAL"
-
-    def openEditor(self, row, parent = None):
-        dlg = GOStringEditor(parent)
-        dlg.nameEdit.setText(self.name)
-        dlg.dataEdit.setText(self.data)
-        result = dlg.exec_()
-        if result:
-            self.name = dlg.nameEdit.text()
-            self.data = dlg.dataEdit.toPlainText()
-
-        return result
-
-class GOCBoolProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "BOOL"
-
-class GOCIntProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "INT"
-
-    def openEditor(self, row, parent = None):
-        dlg = GOIntEditor(parent)
-        dlg.nameEdit.setText(self.name)
-        dlg.dataEdit.setText(self.data)
-        result = dlg.exec_()
-        if result:
-            self.name = dlg.nameEdit.text()
-            self.data = dlg.dataEdit.toPlainText()
-
-        return result
-
-class GOCIntPairProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "INTPAIR"
-
-class GOCIntTripleProperty():
-    def __init__(self, name, data):
-        self.name = name
-        self.data = data
-
-    def getType(self):
-        return "INTTRIPPLE"
-
-class GOCMapProperty():
-    def __init__(self, name):
-        self.name = name
-        self.childProperties = []
-
-    def getType(self):
-        return "MAP"
-
-# gameObjectClass is the id of the class itself
-# since a game object can be ingame more than once there is also a id for those
-class GameObjectRepresentation(og.UserDefinedObject):
-    def __init__(self, inWorldId, gameObjectClass, node, meshFile = None):
-        og.UserDefinedObject.__init__(self)
-        self.inWorldId = inWorldId
-        self.gocName = gameObjectClass
-        self.node = node
-        self.meshFile = meshFile
-        self.state = "IN_SCENE"
-
-    def getType(self):
-        return "GAME_OBJECT_REPRESENTATION"
-
-    def setPosition(self, pos):
-        self.node.setPosition(pos)
-
-
-class GameObjectClass():
-    def __init__(self,  parentElement):
-        self.classid = parentElement.get("classid")
-        self.baseclass = parentElement.get("baseclass")
-
-        self.meshFile = None
-
-        self.properties = []
-
-        for property in parentElement:#.getiterator("property"):
-            if property.get("type") == "ARRAY":
-                pass
-            elif property.get("type") == "MAP":
-                self.properties.append(self.createPropertyMap(property))
-            else:
-                self.properties.append(self.createProperty(property))
-
-    def getType(self):
-        return "GAME_OBJECT"
-
-    def createPropertyMap(self, property):
-        propMap = GOCMapProperty(property.get("name"))
-        for subProperty in property:
-            if subProperty.get("type") == "MAP":
-                propMap.childProperties.append(self.createPropertyMap(property))
-            else:
-                for subProperty1 in property:
-                    propMap.childProperties.append(self.createProperty(subProperty1))
-
-        return propMap
-
-    def getMeshFileName(self):
-        if self.meshFile is None:
-            for prop in self.properties:
-                if prop.getType() == "STRING":
-                    if prop.name == "meshfile":
-                        self.meshFile = prop.data
-                        return self.meshFile
-            return None
-        else:
-            return self.meshFile
-
-
-    def createProperty(self, property):
-        if property.get("type") == "STRING":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCStringProperty(name, data)
-        elif property.get("type") == "REAL":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCRealProperty(name, data)
-        elif property.get("type") == "BOOL":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCBoolProperty(name, data)
-        elif property.get("type") == "INT":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCIntProperty(name, data)
-        elif property.get("type") == "INTPAIR":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCIntPairProperty(name, data)
-        elif property.get("type") == "INTTRIPLE":
-            name = property.get("name")
-            data = property.get("data")
-            return GOCIntTripleProperty(name, data)
-        else:
-            print property.get("type")
-
-
-
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+#from elementtree.ElementTree import *
+from xml.etree.cElementTree import *
+
+from PyQt4.QtCore import *
+from PyQt4.QtGui import *
+
+import ogre.renderer.OGRE as og
+
+from GOStringEditor import *
+from GOIntEditor import *
+
+class GOCStringProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "STRING"
+
+    def openEditor(self, row, parent = None):
+        dlg = GOStringEditor(parent)
+        dlg.nameEdit.setText(self.name)
+        dlg.dataEdit.setText(self.data)
+        result = dlg.exec_()
+        if result:
+            self.name = dlg.nameEdit.text()
+            self.data = dlg.dataEdit.toPlainText()
+
+        return result
+
+class GOCRealProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "REAL"
+
+    def openEditor(self, row, parent = None):
+        dlg = GOStringEditor(parent)
+        dlg.nameEdit.setText(self.name)
+        dlg.dataEdit.setText(self.data)
+        result = dlg.exec_()
+        if result:
+            self.name = dlg.nameEdit.text()
+            self.data = dlg.dataEdit.toPlainText()
+
+        return result
+
+class GOCBoolProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "BOOL"
+
+class GOCIntProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "INT"
+
+    def openEditor(self, row, parent = None):
+        dlg = GOIntEditor(parent)
+        dlg.nameEdit.setText(self.name)
+        dlg.dataEdit.setText(self.data)
+        result = dlg.exec_()
+        if result:
+            self.name = dlg.nameEdit.text()
+            self.data = dlg.dataEdit.toPlainText()
+
+        return result
+
+class GOCIntPairProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "INTPAIR"
+
+class GOCIntTripleProperty():
+    def __init__(self, name, data):
+        self.name = name
+        self.data = data
+
+    def getType(self):
+        return "INTTRIPPLE"
+
+class GOCMapProperty():
+    def __init__(self, name):
+        self.name = name
+        self.childProperties = []
+
+    def getType(self):
+        return "MAP"
+
+# gameObjectClass is the id of the class itself
+# since a game object can be ingame more than once there is also a id for those
+class GameObjectRepresentation(og.UserDefinedObject):
+    def __init__(self, inWorldId, gameObjectClass, node, meshFile = None):
+        og.UserDefinedObject.__init__(self)
+        self.inWorldId = inWorldId
+        self.gocName = gameObjectClass
+        self.node = node
+        self.meshFile = meshFile
+        self.state = "IN_SCENE"
+
+    def getType(self):
+        return "GAME_OBJECT_REPRESENTATION"
+
+    def setPosition(self, pos):
+        self.node.setPosition(pos)
+
+
+class GameObjectClass():
+    def __init__(self,  parentElement):
+        self.classid = parentElement.get("classid")
+        self.baseclass = parentElement.get("baseclass")
+
+        self.meshFile = None
+
+        self.properties = []
+
+        for property in parentElement:#.getiterator("property"):
+            if property.get("type") == "ARRAY":
+                pass
+            elif property.get("type") == "MAP":
+                self.properties.append(self.createPropertyMap(property))
+            else:
+                self.properties.append(self.createProperty(property))
+
+    def getType(self):
+        return "GAME_OBJECT"
+
+    def createPropertyMap(self, property):
+        propMap = GOCMapProperty(property.get("name"))
+        for subProperty in property:
+            if subProperty.get("type") == "MAP":
+                propMap.childProperties.append(self.createPropertyMap(property))
+            else:
+                for subProperty1 in property:
+                    propMap.childProperties.append(self.createProperty(subProperty1))
+
+        return propMap
+
+    def getMeshFileName(self):
+        if self.meshFile is None:
+            for prop in self.properties:
+                if prop.getType() == "STRING":
+                    if prop.name == "meshfile":
+                        self.meshFile = prop.data
+                        return self.meshFile
+            return None
+        else:
+            return self.meshFile
+
+
+    def createProperty(self, property):
+        if property.get("type") == "STRING":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCStringProperty(name, data)
+        elif property.get("type") == "REAL":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCRealProperty(name, data)
+        elif property.get("type") == "BOOL":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCBoolProperty(name, data)
+        elif property.get("type") == "INT":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCIntProperty(name, data)
+        elif property.get("type") == "INTPAIR":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCIntPairProperty(name, data)
+        elif property.get("type") == "INTTRIPLE":
+            name = property.get("name")
+            data = property.get("data")
+            return GOCIntTripleProperty(name, data)
+        else:
+            print property.get("type")
+
+
+

Modified: rl/branches/newton20/editors/Lockenwickler/src/GameObjectClassManager.py
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/src/GameObjectClassManager.py	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/src/GameObjectClassManager.py	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,52 +1,53 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-from elementtree.ElementTree import parse
-
-from GameObjectClass import *
-
-class GameObjectClassManager():
-    def __init__(self):
-        self.fileDict = {}
-        self.callback = None
-
-    def parseGOFFiles(self, filePaths):
-        for filePath in filePaths:
-            tree = parse(filePath)
-            gocList = []
-            for parent in tree.getiterator("gameobjectclass"): # return all allements with the "gameobjectclass" tag
-                go = GameObjectClass(parent)
-                gocList.append(go)
-
-            self.fileDict[filePath] = gocList
-
-        if self.callback is not None:
-            self.callback(self.fileDict)
-
-    def getGameObjectWithClassId(self, id):
-        for key in self.fileDict:
-            for go in self.fileDict[key]:
-                if go.classid == id:
-                    return go
-
-        return None
-
-        # whenever a gameobject changes outside of the view, the view has to update itself wth the new values
-    def setGameObjectsViewUpdateCallback(self, callback):
-        self.callback = callback
-
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+#from elementtree.ElementTree import parse
+from xml.etree.cElementTree import parse
+
+from GameObjectClass import *
+
+class GameObjectClassManager():
+    def __init__(self):
+        self.fileDict = {}
+        self.callback = None
+
+    def parseGOFFiles(self, filePaths):
+        for filePath in filePaths:
+            tree = parse(filePath)
+            gocList = []
+            for parent in tree.getiterator("gameobjectclass"): # return all allements with the "gameobjectclass" tag
+                go = GameObjectClass(parent)
+                gocList.append(go)
+
+            self.fileDict[filePath] = gocList
+
+        if self.callback is not None:
+            self.callback(self.fileDict)
+
+    def getGameObjectWithClassId(self, id):
+        for key in self.fileDict:
+            for go in self.fileDict[key]:
+                if go.classid == id:
+                    return go
+
+        return None
+
+        # whenever a gameobject changes outside of the view, the view has to update itself wth the new values
+    def setGameObjectsViewUpdateCallback(self, callback):
+        self.callback = callback
+

Modified: rl/branches/newton20/editors/Lockenwickler/src/Lockenwickler.py
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/src/Lockenwickler.py	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/src/Lockenwickler.py	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,445 +1,447 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-
-import os
-import sys
-import platform
-
-#sys.path.insert(0,'..')
-#import PythonOgreConfig
-
-from random import randint
-
-from PyQt4 import QtGui, QtCore
-from PreferencesDialog import *
-from ObjectPropertyWin import *
-from ModelSelectionDialog import *
-from GameObjectClassView import *
-from ConsoleWindow import *
-from ModuleManager import *
-from SceneExplorer import *
-from NewModuleWizard import *
-
-import OgreMainWindow
-import ogre.renderer.OGRE as og
-
-class Lockenwickler(QtGui.QMainWindow):
-    def __init__(self, parent=None):
-        QtGui.QWidget.__init__(self, parent)
-
-        pixmap = QPixmap("media/icons/lockenwickler_provisorium.png")
-        splash = QSplashScreen(pixmap, Qt.WindowStaysOnTopHint)
-        splash.setMask(pixmap.mask())
-        splash.showMessage("Starting...")
-        splash.show()
-
-        self.setupUi()
-
-        self.consoleWindow = ConsoleWindow(False,  self)
-
-        self.setupOgre()
-
-        self.prefDialog = PreferencesDialog(self)
-        self.objectPropertyWin = ObjectPropertyWin(self)
-        self.sceneExplorerWin = SceneExplorer(self)
-        self.modelSelectionDialog = ModelSelectionDialog(self.ogreRoot, self)
-        self.moduleManager.modelSelectionDialog = self.modelSelectionDialog
-
-        self.gameObjectClassView = GameObjectClassView(self.moduleManager.gocManager)
-
-        self.createDockWindows()
-
-        self.mainTimer = QtCore.QTimer(self)
-        self.mainTimer.connect(self.mainTimer, QtCore.SIGNAL("timeout()"), self.update)
-        self.mainTimer.start(5)
-
-        settings = QtCore.QSettings()
-        self.restoreGeometry(settings.value("MainWindow/Geometry").toByteArray())
-        self.restoreState(settings.value("MainWindow/DockWindows").toByteArray())
-        if not self.prefDialog.setCfgPath(settings.value("Preferences/moduleCfgPath").toString()):
-            self.prefDialog.show()
-
-        self.setWindowIcon(QIcon("media/icons/lockenwickler_provisorium_small.png"))
-        self.setWindowTitle("Rastullahs Lockenwickler")
-
-
-#        # Import Psyco if available
-#        try:
-#            import psyco
-#            psyco.full()
-#            #psyco.log()
-#            #psyco.profile()
-#        except ImportError:
-#            pass
-
-        splash.finish(self)
-
-    def createAction(self, text, slot=None, shortcut=None, icon=None, tip=None, checkable=False, signal="triggered()"):
-        action = QtGui.QAction(text, self)
-        if icon is not None:
-            action.setIcon(QtGui.QIcon("media/icons/%s" % icon))
-        if shortcut is not None:
-            action.setShortcut(shortcut)
-        if tip is not None:
-            action.setToolTip(tip)
-            action.setStatusTip(tip)
-        if slot is not None:
-            self.connect(action, QtCore.SIGNAL(signal), slot)
-
-        action.setCheckable(checkable)
-
-        return action
-
-    def addActions(self, target, actions):
-        for act in actions:
-            if act is None:
-               target.addSeparator()
-            else:
-                target.addAction(act)
-
-    def setupUi(self):
-        self.setObjectName("MainWindow")
-
-        self.centralwidget = QtGui.QWidget(self)
-        self.centralwidget.setObjectName("centralwidget")
-
-        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
-        self.hboxlayout.setObjectName("hboxlayout")
-
-        self.gridlayout = QtGui.QGridLayout()
-        self.gridlayout.setObjectName("gridlayout")
-
-        self.menubar = QtGui.QMenuBar(self)
-        self.menubar.setObjectName("menubar")
-
-        self.menuFile = QtGui.QMenu(self.menubar)
-        self.menuFile.setObjectName("menuFile")
-
-        self.menuEdit = QtGui.QMenu(self.menubar)
-        self.menuEdit.setObjectName("menuEdit")
-
-        self.menuView = QtGui.QMenu(self.menubar)
-        self.menuView.setObjectName("menuView")
-        self.setMenuBar(self.menubar)
-
-
-        self.statusbar = QtGui.QStatusBar(self)
-        self.statusbar.setObjectName("statusbar")
-        self.setStatusBar(self.statusbar)
-
-#####################################
-        self.actionNeu =self.createAction("&New Module",  self.actionNewSlot,  QKeySequence.New,  "filenew.png",  "New Module")
-        self.actionNeu.setObjectName("actionNeu")
-
-        self.actionOpen = self.createAction("&Open Module",  self.actionOpenSlot,  QKeySequence.Open,  "filenew.png",  "Open Module")
-        self.actionOpen.setObjectName("actionOpen")
-
-        self.actionClose = self.createAction("Quit",  self.actionQuitSlot,  "Alt + Q",  "exit.png",  "Quit")
-        self.actionClose.setObjectName("actionQuit")
-#####################################
-
-
-#####################################
-        self.actionDelete = self.createAction("Delete",  self.actionDeleteSlot,  QKeySequence.Delete,  "editdelete.png",  "Delete")
-        self.actionDelete.setObjectName("actionDelete")
-
-        self.actionCopy = self.createAction("Copy",  self.actionCopySlot,  QKeySequence.Copy,  "editcopy.png",  "Copy")
-        self.actionCopy.setObjectName("actionCopy")
-
-        self.actionCut = self.createAction("Cut",  self.actionCutSlot,  QKeySequence.Cut,  "editcut.png",  "Cut")
-        self.actionCut.setObjectName("actionCut")
-
-        self.actionPaste = self.createAction("Paste",  self.actionPasteSlot,  QKeySequence.Paste,  "editpaste.png",  "Paste")
-        self.actionPaste.setObjectName("actionPaste")
-
-        self.actionSelect = self.createAction("&Select",  self.actionSelectSlot,  "Space",  "cursor.png",  "Move selected object")
-        self.actionSelect.setObjectName("actionSelect")
-
-        self.actionMove = self.createAction("&Move",  self.actionMoveSlot,  "g",  "move.png",  "Move selected object")
-        self.actionMove.setObjectName("actionMove")
-
-        self.actionRotate = self.createAction("&Rotate",  self.actionRotateSlot,  "r",  "rotate.png",  "Rotate selected object")
-        self.actionRotate.setObjectName("actionRotate")
-
-        self.actionScale = self.createAction("&Scale",  self.actionScaleSlot,  "x",  "resizecol.png",  "Scale selected object")
-        self.actionRotate.setObjectName("actionRotate")
-
-
-#####################################
-#####################################
-        self.actionSceneExplorer = self.createAction("&Scene Exlporer",  self.toggleSceneExplorer,  "Alt + E",  "view_tree.png",  "Scene Explorer",  False)
-        self.actionSceneExplorer.setObjectName("actionSceneExplorer")
-
-        self.actionPreferences = self.createAction("&Preferences",  self.togglePreferencesWindow,  "Alt + P",  "configure.png",  "Lockenwickler Preferences",  False)
-        self.actionPreferences.setObjectName("actionPreferences")
-
-        self.actionProperty_Window = self.createAction("Pr&operty Window",  self.togglePropertyWindow,  "Alt + P",  "unsortedlist1.png",  "Property Window")
-        self.actionProperty_Window.setObjectName("actionProperty_Window")
-
-        self.actionObject_Selection = self.createAction("&Model Preview Window",  self.toggleModelPreviewWindow,  "Alt + O",  "tux.png",  "Model Preview")
-        self.actionObject_Selection.setObjectName("actionObject_Selection")
-
-        self.actionGameObjectClass_Selection = self.createAction("&Game Object Class Preview Window",  self.toggleGameObjectViewWindow,  "Alt + G",  "multirow.png",  "GameObjectClass Preview")
-        self.actionGameObjectClass_Selection.setObjectName("actionObject_Selection")
-
-        self.actionConsole_Window = self.createAction("&Console Window",  self.toggleConsoleWindow,  "Alt + C",  "console.png",  "Console Window")
-        self.actionConsole_Window.setObjectName("actionConsole_Window")
-
-#####################################
-#####################################
-
-
-        self.menuFile.addAction(self.actionNeu)
-        self.menuFile.addAction(self.actionOpen)
-        self.menuFile.addAction(self.actionClose)
-
-        self.menuEdit.addAction(self.actionSelect)
-        self.menuEdit.addAction(self.actionMove)
-        self.menuEdit.addAction(self.actionRotate)
-        self.menuEdit.addAction(self.actionScale)
-        self.menuEdit.addSeparator()
-        self.menuEdit.addAction(self.actionDelete)
-        self.menuEdit.addAction(self.actionCopy)
-        self.menuEdit.addAction(self.actionCut)
-        self.menuEdit.addAction(self.actionPaste)
-
-        self.menuView.addAction(self.actionSceneExplorer)
-        self.menuView.addAction(self.actionPreferences)
-        self.menuView.addAction(self.actionProperty_Window)
-        self.menuView.addAction(self.actionObject_Selection)
-        self.menuView.addAction(self.actionGameObjectClass_Selection)
-        self.menuView.addAction(self.actionConsole_Window)
-        self.menubar.addAction(self.menuFile.menuAction())
-        self.menubar.addAction(self.menuEdit.menuAction())
-        self.menubar.addAction(self.menuView.menuAction())
-
-        self.retranslateUi()
-        QtCore.QMetaObject.connectSlotsByName(self)
-
-    def retranslateUi(self):
-        self.setWindowTitle(QtGui.QApplication.translate("MainWindow", "MainWindow", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuFile.setTitle(QtGui.QApplication.translate("MainWindow", "File", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuEdit.setTitle(QtGui.QApplication.translate("MainWindow", "Edit", None, QtGui.QApplication.UnicodeUTF8))
-        self.menuView.setTitle(QtGui.QApplication.translate("MainWindow", "View", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionNeu.setText(QtGui.QApplication.translate("MainWindow", "New Module", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionMove.setText(QtGui.QApplication.translate("MainWindow", "Move", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionRotate.setText(QtGui.QApplication.translate("MainWindow", "Rotate", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionSceneExplorer.setText(QtGui.QApplication.translate("MainWindow", "Scene Explorer", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionPreferences.setText(QtGui.QApplication.translate("MainWindow", "Preferences", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionProperty_Window.setText(QtGui.QApplication.translate("MainWindow", "Property Window", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionObject_Selection.setText(QtGui.QApplication.translate("MainWindow", "Object Selection", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionClose.setText(QtGui.QApplication.translate("MainWindow", "Quit", None, QtGui.QApplication.UnicodeUTF8))
-        self.actionConsole_Window.setText(QtGui.QApplication.translate("MainWindow", "Console Window", None, QtGui.QApplication.UnicodeUTF8))
-
-    def setupOgre(self, pluginCfgPath="./Plugins.cfg", ogreCfgPath="./ogre.cfg", logPath="./ogre.log"):
-        if platform.system() == "Windows":
-            pluginCfgPath="./Plugins-windows.cfg"
-        else:
-            pluginCfgPath="./Plugins-linux.cfg"
-
-        root = og.Root(pluginCfgPath, ogreCfgPath, logPath)
-        self.ogreRoot = root
-
-        if  not self.ogreRoot.restoreConfig() and not self.ogreRoot.showConfigDialog():
-            sys.exit('Quit from Config Dialog')
-
-        root.initialise(False)
-
-        self.OgreMainWinSceneMgr = self.ogreRoot.createSceneManager(og.ST_GENERIC, "OgreMainWinSceneMgr")
-        self.OgreMainWinSceneMgr.ambientLight = og.ColourValue(4, 4, 4)
-
-        self.moduleName = ""
-        self.moduleManager = ModuleManager(self.ogreRoot,  self.OgreMainWinSceneMgr)
-
-        self.ogreRenderWindow = OgreMainWindow.OgreMainWindow(self.moduleManager,  root,  self.OgreMainWinSceneMgr,  self)
-        self.gridlayout.addWidget(self.ogreRenderWindow,0,0,1,1)
-        self.hboxlayout.addLayout(self.gridlayout)
-        self.setCentralWidget(self.centralwidget)
-
-        og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
-        og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
-
-        self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)
-        self.moduleManager.pivot.hide()
-
-        oglog = og.LogManager.getSingleton().getDefaultLog()
-        oglog.addListener(self.consoleWindow.lockenLog)
-
-    def update(self):
-        self.ogreRoot.renderOneFrame()
-
-    def actionOpenSlot(self):
-        self.moduleManager.openLoadModuleDialog(self.prefDialog.lineEdit.text(), self)
-
-    def actionNewSlot(self):
-        newModuleWiz = NewModuleWizard(self)
-        newModuleWiz.exec_()
-        return
-
-    def actionQuitSlot(self):
-        self.close()
-
-    def actionDeleteSlot(self):
-        self.moduleManager.deleteObjects()
-
-    def actionCopySlot(self):
-        self.moduleManager.copyObjects()
-
-    def actionCutSlot(self):
-        self.moduleManager.cutObjects()
-
-    def actionPasteSlot(self):
-        self.moduleManager.pasteObjects(self.ogreRenderWindow.getCameraToViewportRay())
-
-    def actionSelectSlot(self):
-        self.moduleManager.pivot.hide()
-
-    def actionMoveSlot(self):
-        self.moduleManager.pivot.setMoveMode()
-
-    def actionRotateSlot(self):
-        self.moduleManager.pivot.setRotateMode()
-
-    def actionScaleSlot(self):
-        self.moduleManager.pivot.setScaleMode()
-
-    def togglePreferencesWindow(self):
-        if self.prefDialog.isHidden():
-            self.prefDialog.show()
-        else:
-            self.prefDialog.hide()
-
-    def toggleModelPreviewWindow(self):
-        if self.modelSelectionDock.isHidden():
-            self.modelSelectionDock.show()
-        else:
-            self.modelSelectionDock.hide()
-
-    def toggleGameObjectViewWindow(self):
-        if self.gameObjectClassViewDock.isHidden():
-            self.gameObjectClassViewDock.show()
-        else:
-            self.gameObjectClassViewDock.hide()
-
-    def toggleSceneExplorer(self):
-        if self.sceneExplorerDock.isHidden():
-            self.sceneExplorerDock.show()
-        else:
-            self.sceneExplorerDock.hide()
-
-    def togglePropertyWindow(self):
-        if self.propertyDock.isHidden():
-            self.propertyDock.show()
-        else:
-            self.propertyDock.hide()
-
-    def toggleConsoleWindow(self):
-        if self.consoleDock.isHidden():
-            self.consoleDock.show()
-        else:
-            self.consoleDock.hide()
-
-    def createDockWindows(self):
-        self.propertyDock = QtGui.QDockWidget(self.tr("Properties"), self)
-        self.propertyDock.setObjectName("PropertyDockWindow")
-        self.propertyDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.propertyDock.setWidget(self.objectPropertyWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.propertyDock)
-
-        self.modelSelectionDock = QtGui.QDockWidget(self.tr("Models"), self)
-        self.modelSelectionDock.setObjectName("ModelSelectionDockWindow")
-        self.modelSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.modelSelectionDock.setWidget(self.modelSelectionDialog)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.modelSelectionDock)
-
-        self.gameObjectClassViewDock = QtGui.QDockWidget(self.tr("GameObjectClasses"), self)
-        self.gameObjectClassViewDock.setObjectName("GameObjectClassView")
-        self.gameObjectClassViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.gameObjectClassViewDock.setWidget(self.gameObjectClassView)
-        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.gameObjectClassViewDock)
-
-        self.sceneExplorerDock = QtGui.QDockWidget(self.tr("Scene Explorer"), self)
-        self.sceneExplorerDock.setObjectName("SceneExplorerDockWindow")
-        self.sceneExplorerDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
-        self.sceneExplorerDock.setWidget(self.sceneExplorerWin)
-        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.sceneExplorerDock)
-
-        self.consoleDock = QtGui.QDockWidget(self.tr("Console"), self)
-        self.consoleDock.setObjectName("ConsoleDockWindow")
-        self.consoleDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea | QtCore.Qt.TopDockWidgetArea)
-        self.consoleDock.setWidget(self.consoleWindow)
-        self.addDockWidget(QtCore.Qt.BottomDockWidgetArea, self.consoleDock)
-
-        self.fileToolBar = self.addToolBar("File Toolbar")
-        self.fileToolBar.setObjectName("FileToolBar")
-        self.fileToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
-        self.fileToolBar.addAction(self.actionNeu)
-        self.fileToolBar.addAction(self.actionClose)
-        self.addToolBar(QtCore.Qt.TopToolBarArea, self.fileToolBar)
-
-        self.moveToolBar = self.addToolBar("Transformation Bar")
-        self.moveToolBar.setObjectName("TransformationBar")
-        self.moveToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
-        self.moveToolBar.addAction(self.actionSelect)
-        self.moveToolBar.addAction(self.actionMove)
-        self.moveToolBar.addAction(self.actionRotate)
-        self.moveToolBar.addAction(self.actionScale)
-        self.addToolBar(QtCore.Qt.TopToolBarArea, self.moveToolBar)
-
-    def keyPressEvent(self,  event):
-        if not event.isAutoRepeat():
-            self.ogreRenderWindow.keyPressEvent(event)
-
-    def keyReleaseEvent(self,  event):
-        if not event.isAutoRepeat():
-            self.ogreRenderWindow.keyReleaseEvent(event)
-        pass
-
-    def connectActionButtons(self):
-        pass
-
-    def saveOnClose(self):
-        reply = QtGui.QMessageBox.question(self,  "Rastullahs Lockenwickler - Unsaved Chages",  "Save unsaved changes?",  QtGui.QMessageBox.Yes|QtGui.QMessageBox.No|QtGui.QMessageBox.Cancel)
-        if reply == QtGui.QMessageBox.Cancel:
-            return False
-        if reply == QtGui.QMessageBox.Yes:
-            print""
-            #TODO: implement save here
-        return True
-
-    def closeEvent(self,  event):
-        if self.saveOnClose():
-            settings = QtCore.QSettings()
-            settings.setValue("Preferences/moduleCfgPath", QtCore.QVariant(self.prefDialog.lineEdit.text()))
-            settings.setValue("MainWindow/Geometry",  QtCore.QVariant(self.saveGeometry()))
-            settings.setValue("MainWIndow/DockWindows",  QtCore.QVariant(self.saveState()))
-        else:
-            event.ignore()
-
-if __name__ == "__main__":
-    app = QtGui.QApplication(sys.argv)
-    app.setOrganizationName("Team Pantheon")
-    app.setOrganizationDomain("rastullahs-lockenpracht.de/team")
-    app.setApplicationName("Lockenwickler")
-
-    form = Lockenwickler()
-    form.show()
-
-    sys.exit(app.exec_())
-
+ #################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+
+import os
+import sys
+import platform
+
+sys.path.insert(0,'..')
+import PythonOgreConfig
+
+from random import randint
+
+from PyQt4 import QtGui, QtCore
+from PreferencesDialog import *
+from ObjectPropertyWin import *
+from ModelSelectionDialog import *
+from GameObjectClassView import *
+from ConsoleWindow import *
+from ModuleManager import *
+from ModuleExplorer import *
+from NewModuleWizard import *
+
+import OgreMainWindow
+import ogre.renderer.OGRE as og
+
+class Lockenwickler(QtGui.QMainWindow):
+    def __init__(self, parent=None):
+        QtGui.QWidget.__init__(self, parent)
+
+#        pixmap = QPixmap("media/icons/lockenwickler_provisorium.png")
+#        splash = QSplashScreen(pixmap, Qt.WindowStaysOnTopHint)
+#        splash.setMask(pixmap.mask())
+#        splash.showMessage("Starting...")
+#        splash.show()
+
+        self.setupUi()
+
+        self.consoleWindow = ConsoleWindow(False,  self)
+
+        self.setupOgre()
+
+        self.prefDialog = PreferencesDialog(self)
+        self.objectPropertyWin = ObjectPropertyWin(self)
+        self.moduleExplorerWin = ModuleExplorer(self)
+        self.modelSelectionDialog = ModelSelectionDialog(self.ogreRoot, self)
+        self.moduleManager.modelSelectionDialog = self.modelSelectionDialog
+
+        self.gameObjectClassView = GameObjectClassView(self.moduleManager.gocManager)
+
+        self.createDockWindows()
+
+        self.mainTimer = QtCore.QTimer(self)
+        self.mainTimer.connect(self.mainTimer, QtCore.SIGNAL("timeout()"), self.update)
+        self.mainTimer.start(5)
+
+        settings = QtCore.QSettings()
+        self.restoreGeometry(settings.value("MainWindow/Geometry").toByteArray())
+        self.restoreState(settings.value("MainWindow/DockWindows").toByteArray())
+        if not self.prefDialog.setCfgPath(settings.value("Preferences/moduleCfgPath").toString()):
+            self.prefDialog.show()
+
+        self.moduleManager.moduleCfgPath = self.prefDialog.moduleCfgPath
+        self.moduleManager.moduleExplorer = self.moduleExplorerWin
+        
+        self.setWindowIcon(QIcon("media/icons/lockenwickler_provisorium_small.png"))
+        self.setWindowTitle("Rastullahs Lockenwickler")
+
+#        splash.finish(self)
+
+    def createAction(self, text, slot=None, shortcut=None, icon=None, tip=None, checkable=False, signal="triggered()"):
+        action = QtGui.QAction(text, self)
+        if icon is not None:
+            action.setIcon(QtGui.QIcon("media/icons/%s" % icon))
+        if shortcut is not None:
+            action.setShortcut(shortcut)
+        if tip is not None:
+            action.setToolTip(tip)
+            action.setStatusTip(tip)
+        if slot is not None:
+            self.connect(action, QtCore.SIGNAL(signal), slot)
+
+        action.setCheckable(checkable)
+
+        return action
+
+    def addActions(self, target, actions):
+        for act in actions:
+            if act is None:
+               target.addSeparator()
+            else:
+                target.addAction(act)
+
+    def setupUi(self):
+        self.setObjectName("MainWindow")
+
+        self.centralwidget = QtGui.QWidget(self)
+        self.centralwidget.setObjectName("centralwidget")
+
+        self.hboxlayout = QtGui.QHBoxLayout(self.centralwidget)
+        self.hboxlayout.setObjectName("hboxlayout")
+
+        self.gridlayout = QtGui.QGridLayout()
+        self.gridlayout.setObjectName("gridlayout")
+
+        self.menubar = QtGui.QMenuBar(self)
+        self.menubar.setObjectName("menubar")
+
+        self.menuFile = QtGui.QMenu(self.menubar)
+        self.menuFile.setObjectName("menuFile")
+
+        self.menuEdit = QtGui.QMenu(self.menubar)
+        self.menuEdit.setObjectName("menuEdit")
+
+        self.menuView = QtGui.QMenu(self.menubar)
+        self.menuView.setObjectName("menuView")
+        self.setMenuBar(self.menubar)
+
+
+        self.statusbar = QtGui.QStatusBar(self)
+        self.statusbar.setObjectName("statusbar")
+        self.setStatusBar(self.statusbar)
+
+#####################################
+        self.actionNeu =self.createAction("&New Module",  self.actionNewSlot,  QKeySequence.New,  "filenew.png",  "New Module")
+        self.actionNeu.setObjectName("actionNeu")
+
+        self.actionOpen = self.createAction("&Open Module",  self.actionOpenSlot,  QKeySequence.Open,  "filenew.png",  "Open Module")
+        self.actionOpen.setObjectName("actionOpen")
+
+        self.actionClose = self.createAction("Quit",  self.actionQuitSlot,  "Alt + Q",  "exit.png",  "Quit")
+        self.actionClose.setObjectName("actionQuit")
+#####################################
+
+
+#####################################
+        self.actionDelete = self.createAction("Delete",  self.actionDeleteSlot,  QKeySequence.Delete,  "editdelete.png",  "Delete")
+        self.actionDelete.setObjectName("actionDelete")
+
+        self.actionCopy = self.createAction("Copy",  self.actionCopySlot,  QKeySequence.Copy,  "editcopy.png",  "Copy")
+        self.actionCopy.setObjectName("actionCopy")
+
+        self.actionCut = self.createAction("Cut",  self.actionCutSlot,  QKeySequence.Cut,  "editcut.png",  "Cut")
+        self.actionCut.setObjectName("actionCut")
+
+        self.actionPaste = self.createAction("Paste",  self.actionPasteSlot,  QKeySequence.Paste,  "editpaste.png",  "Paste")
+        self.actionPaste.setObjectName("actionPaste")
+
+        self.actionSelect = self.createAction("&Select",  self.actionSelectSlot,  "Space",  "cursor.png",  "Move selected object")
+        self.actionSelect.setObjectName("actionSelect")
+
+        self.actionMove = self.createAction("&Move",  self.actionMoveSlot,  "g",  "move.png",  "Move selected object")
+        self.actionMove.setObjectName("actionMove")
+
+        self.actionRotate = self.createAction("&Rotate",  self.actionRotateSlot,  "r",  "rotate.png",  "Rotate selected object")
+        self.actionRotate.setObjectName("actionRotate")
+
+        self.actionScale = self.createAction("&Scale",  self.actionScaleSlot,  "x",  "resizecol.png",  "Scale selected object")
+        self.actionRotate.setObjectName("actionRotate")
+
+
+#####################################
+#####################################
+        self.actionSceneExplorer = self.createAction("&Scene Exlporer",  self.toggleModuleExplorer,  "Alt + E",  "view_tree.png",  "Module Explorer",  False)
+        self.actionSceneExplorer.setObjectName("actionSceneExplorer")
+        
+        self.actionPreferences = self.createAction("&Preferences",  self.togglePreferencesWindow,  "Alt + P",  "configure.png",  "Lockenwickler Preferences",  False)
+        self.actionPreferences.setObjectName("actionPreferences")
+
+        self.actionProperty_Window = self.createAction("Pr&operty Window",  self.togglePropertyWindow,  "Alt + P",  "unsortedlist1.png",  "Property Window")
+        self.actionProperty_Window.setObjectName("actionProperty_Window")
+
+        self.actionObject_Selection = self.createAction("&Model Preview Window",  self.toggleModelPreviewWindow,  "Alt + O",  "tux.png",  "Model Preview")
+        self.actionObject_Selection.setObjectName("actionObject_Selection")
+
+        self.actionGameObjectClass_Selection = self.createAction("&Game Object Class Preview Window",  self.toggleGameObjectViewWindow,  "Alt + G",  "multirow.png",  "GameObjectClass Preview")
+        self.actionGameObjectClass_Selection.setObjectName("actionObject_Selection")
+
+        self.actionConsole_Window = self.createAction("&Console Window",  self.toggleConsoleWindow,  "Alt + C",  "console.png",  "Console Window")
+        self.actionConsole_Window.setObjectName("actionConsole_Window")
+
+#####################################
+#####################################
+
+
+        self.menuFile.addAction(self.actionNeu)
+        self.menuFile.addAction(self.actionOpen)
+        self.menuFile.addAction(self.actionClose)
+
+        self.menuEdit.addAction(self.actionSelect)
+        self.menuEdit.addAction(self.actionMove)
+        self.menuEdit.addAction(self.actionRotate)
+        self.menuEdit.addAction(self.actionScale)
+        self.menuEdit.addSeparator()
+        self.menuEdit.addAction(self.actionDelete)
+        self.menuEdit.addAction(self.actionCopy)
+        self.menuEdit.addAction(self.actionCut)
+        self.menuEdit.addAction(self.actionPaste)
+
+        self.menuView.addAction(self.actionSceneExplorer)
+        self.menuView.addAction(self.actionPreferences)
+        self.menuView.addAction(self.actionProperty_Window)
+        self.menuView.addAction(self.actionObject_Selection)
+        self.menuView.addAction(self.actionGameObjectClass_Selection)
+        self.menuView.addAction(self.actionConsole_Window)
+        self.menubar.addAction(self.menuFile.menuAction())
+        self.menubar.addAction(self.menuEdit.menuAction())
+        self.menubar.addAction(self.menuView.menuAction())
+
+        self.retranslateUi()
+        QtCore.QMetaObject.connectSlotsByName(self)
+
+    def retranslateUi(self):
+        self.setWindowTitle(QtGui.QApplication.translate("MainWindow", "MainWindow", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuFile.setTitle(QtGui.QApplication.translate("MainWindow", "File", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuEdit.setTitle(QtGui.QApplication.translate("MainWindow", "Edit", None, QtGui.QApplication.UnicodeUTF8))
+        self.menuView.setTitle(QtGui.QApplication.translate("MainWindow", "View", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionNeu.setText(QtGui.QApplication.translate("MainWindow", "New Module", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionMove.setText(QtGui.QApplication.translate("MainWindow", "Move", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionRotate.setText(QtGui.QApplication.translate("MainWindow", "Rotate", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionSceneExplorer.setText(QtGui.QApplication.translate("MainWindow", "Module Explorer", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionPreferences.setText(QtGui.QApplication.translate("MainWindow", "Preferences", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionProperty_Window.setText(QtGui.QApplication.translate("MainWindow", "Property Window", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionObject_Selection.setText(QtGui.QApplication.translate("MainWindow", "Object Selection", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionClose.setText(QtGui.QApplication.translate("MainWindow", "Quit", None, QtGui.QApplication.UnicodeUTF8))
+        self.actionConsole_Window.setText(QtGui.QApplication.translate("MainWindow", "Console Window", None, QtGui.QApplication.UnicodeUTF8))
+
+    def setupOgre(self, pluginCfgPath="./Plugins.cfg", ogreCfgPath="./ogre.cfg", logPath="./ogre.log"):
+        if platform.system() == "Windows":
+            pluginCfgPath="./Plugins-windows.cfg"
+        else:
+            pluginCfgPath="./Plugins-linux.cfg"
+
+        root = og.Root(pluginCfgPath, ogreCfgPath, logPath)
+        self.ogreRoot = root
+
+        if  not self.ogreRoot.restoreConfig() and not self.ogreRoot.showConfigDialog():
+            sys.exit('Quit from Config Dialog')
+
+        root.initialise(False)
+
+        self.OgreMainWinSceneMgr = self.ogreRoot.createSceneManager(og.ST_GENERIC, "OgreMainWinSceneMgr")
+        self.OgreMainWinSceneMgr.ambientLight = og.ColourValue(4, 4, 4)
+
+        self.moduleName = ""
+        self.moduleManager = ModuleManager(self.ogreRoot,  self.OgreMainWinSceneMgr)
+
+        self.ogreRenderWindow = OgreMainWindow.OgreMainWindow(self.moduleManager,  root,  self.OgreMainWinSceneMgr,  self)
+        self.gridlayout.addWidget(self.ogreRenderWindow,0,0,1,1)
+        self.hboxlayout.addLayout(self.gridlayout)
+        self.setCentralWidget(self.centralwidget)
+
+        og.ResourceGroupManager.getSingleton().addResourceLocation("./media", "FileSystem", "General", False)
+        og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
+
+        self.moduleManager.pivot = Pivot(self.OgreMainWinSceneMgr)
+        self.moduleManager.pivot.hide()
+
+        oglog = og.LogManager.getSingleton().getDefaultLog()
+        oglog.addListener(self.consoleWindow.lockenLog)
+
+    def update(self):
+        self.ogreRoot.renderOneFrame()
+
+    def actionOpenSlot(self):
+        self.moduleManager.openLoadModuleDialog()
+
+    def actionNewSlot(self):
+        newModuleWiz = NewModuleWizard(self.moduleManager, self)
+        newModuleWiz.exec_()
+        return
+
+    def actionQuitSlot(self):
+        self.close()
+
+    def actionDeleteSlot(self):
+        self.moduleManager.deleteObjects()
+
+    def actionCopySlot(self):
+        self.moduleManager.copyObjects()
+
+    def actionCutSlot(self):
+        self.moduleManager.cutObjects()
+
+    def actionPasteSlot(self):
+        self.moduleManager.pasteObjects(self.ogreRenderWindow.getCameraToViewportRay())
+
+    def actionSelectSlot(self):
+        self.moduleManager.pivot.hide()
+
+    def actionMoveSlot(self):
+        self.moduleManager.pivot.setMoveMode()
+
+    def actionRotateSlot(self):
+        self.moduleManager.pivot.setRotateMode()
+
+    def actionScaleSlot(self):
+        self.moduleManager.pivot.setScaleMode()
+
+    def togglePreferencesWindow(self):
+        if self.prefDialog.isHidden():
+            self.prefDialog.show()
+        else:
+            self.prefDialog.hide()
+
+    def toggleModelPreviewWindow(self):
+        if self.modelSelectionDock.isHidden():
+            self.modelSelectionDock.show()
+        else:
+            self.modelSelectionDock.hide()
+
+    def toggleGameObjectViewWindow(self):
+        if self.gameObjectClassViewDock.isHidden():
+            self.gameObjectClassViewDock.show()
+        else:
+            self.gameObjectClassViewDock.hide()
+
+    def toggleModuleExplorer(self):
+        if self.moduleExplorerDock.isHidden():
+            self.moduleExplorerDock.show()
+        else:
+            self.moduleExplorerDock.hide()
+
+    def togglePropertyWindow(self):
+        if self.propertyDock.isHidden():
+            self.propertyDock.show()
+        else:
+            self.propertyDock.hide()
+
+    def toggleConsoleWindow(self):
+        if self.consoleDock.isHidden():
+            self.consoleDock.show()
+        else:
+            self.consoleDock.hide()
+
+    def createDockWindows(self):
+        self.propertyDock = QtGui.QDockWidget(self.tr("Properties"), self)
+        self.propertyDock.setObjectName("PropertyDockWindow")
+        self.propertyDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.propertyDock.setWidget(self.objectPropertyWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.propertyDock)
+
+        self.modelSelectionDock = QtGui.QDockWidget(self.tr("Models"), self)
+        self.modelSelectionDock.setObjectName("ModelSelectionDockWindow")
+        self.modelSelectionDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.modelSelectionDock.setWidget(self.modelSelectionDialog)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.modelSelectionDock)
+
+        self.gameObjectClassViewDock = QtGui.QDockWidget(self.tr("GameObjectClasses"), self)
+        self.gameObjectClassViewDock.setObjectName("GameObjectClassView")
+        self.gameObjectClassViewDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.gameObjectClassViewDock.setWidget(self.gameObjectClassView)
+        self.addDockWidget(QtCore.Qt.RightDockWidgetArea, self.gameObjectClassViewDock)
+
+        self.moduleExplorerDock = QtGui.QDockWidget(self.tr("Module Explorer"), self)
+        self.moduleExplorerDock.setObjectName("SceneExplorerDockWindow")
+        self.moduleExplorerDock.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea | QtCore.Qt.RightDockWidgetArea)
+        self.moduleExplorerDock.setWidget(self.moduleExplorerWin)
+        self.addDockWidget(QtCore.Qt.LeftDockWidgetArea, self.moduleExplorerDock)
+
+        self.consoleDock = QtGui.QDockWidget(self.tr("Console"), self)
+        self.consoleDock.setObjectName("ConsoleDockWindow")
+        self.consoleDock.setAllowedAreas(QtCore.Qt.BottomDockWidgetArea | QtCore.Qt.TopDockWidgetArea)
+        self.consoleDock.setWidget(self.consoleWindow)
+        self.addDockWidget(QtCore.Qt.BottomDockWidgetArea, self.consoleDock)
+
+        self.fileToolBar = self.addToolBar("File Toolbar")
+        self.fileToolBar.setObjectName("FileToolBar")
+        self.fileToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
+        self.fileToolBar.addAction(self.actionNeu)
+        self.fileToolBar.addAction(self.actionClose)
+        self.addToolBar(QtCore.Qt.TopToolBarArea, self.fileToolBar)
+
+        self.moveToolBar = self.addToolBar("Transformation Bar")
+        self.moveToolBar.setObjectName("TransformationBar")
+        self.moveToolBar.setAllowedAreas(QtCore.Qt.TopToolBarArea | QtCore.Qt.BottomToolBarArea)
+        self.moveToolBar.addAction(self.actionSelect)
+        self.moveToolBar.addAction(self.actionMove)
+        self.moveToolBar.addAction(self.actionRotate)
+        self.moveToolBar.addAction(self.actionScale)
+        self.addToolBar(QtCore.Qt.TopToolBarArea, self.moveToolBar)
+
+    def keyPressEvent(self,  event):
+        if not event.isAutoRepeat():
+            self.ogreRenderWindow.keyPressEvent(event)
+
+    def keyReleaseEvent(self,  event):
+        if not event.isAutoRepeat():
+            self.ogreRenderWindow.keyReleaseEvent(event)
+        pass
+
+    def connectActionButtons(self):
+        pass
+
+    def saveOnClose(self):
+        reply = QtGui.QMessageBox.question(self,  "Rastullahs Lockenwickler - Unsaved Chages",  "Save unsaved changes?",  QtGui.QMessageBox.Yes|QtGui.QMessageBox.No|QtGui.QMessageBox.Cancel)
+        if reply == QtGui.QMessageBox.Cancel:
+            return False
+        if reply == QtGui.QMessageBox.Yes:
+            print""
+            #TODO: implement save here
+        return True
+
+    def closeEvent(self,  event):
+        if self.saveOnClose():
+            settings = QtCore.QSettings()
+            settings.setValue("Preferences/moduleCfgPath", QtCore.QVariant(self.prefDialog.lineEdit.text()))
+            settings.setValue("MainWindow/Geometry",  QtCore.QVariant(self.saveGeometry()))
+            settings.setValue("MainWIndow/DockWindows",  QtCore.QVariant(self.saveState()))
+        else:
+            event.ignore()
+
+if __name__ == "__main__":
+#    # Import Psyco if available
+#    try:
+##        import psyco
+##        psyco.full(0.02)
+#        #psyco.log()
+#        #psyco.profile()
+#    except ImportError:
+#        pass
+    
+    app = QtGui.QApplication(sys.argv)
+    app.setOrganizationName("Team Pantheon")
+    app.setOrganizationDomain("rastullahs-lockenpracht.de/team")
+    app.setApplicationName("Lockenwickler")
+
+    form = Lockenwickler()
+    form.show()
+
+    sys.exit(app.exec_())
+

Copied: rl/branches/newton20/editors/Lockenwickler/src/ModuleExplorer.py (from rev 4722, rl/trunk/editors/Lockenwickler/src/ModuleExplorer.py)

Modified: rl/branches/newton20/editors/Lockenwickler/src/ModuleManager.py
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/src/ModuleManager.py	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/src/ModuleManager.py	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,711 +1,754 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-import sys
-import codecs
-import glob
-import os
-from os.path import isfile,  join
-
-
-import elementtree.ElementTree as xml
-
-import ctypes
-import ogre.renderer.OGRE as og
-
-from PyQt4.QtCore import *
-from PyQt4.QtGui import *
-
-from MovePivot import *
-from GameObjectClassManager import *
-from MyRaySceneQueryListener import *
-
-#                <zone name="Testzone">
-#                        <area type="sphere">
-#                                <position x="-10" y="0" z="-5"/>
-#                                <scale x="6" y="6" z="6"/>
-#                                <transition_distance>0.5</transition_distance>
-#                        </area>
-#                        <area type="mesh" meshfile="arc_UnbHaus_07.mesh">
-#                                <position x="25" y="0" z="-50"/>
-#                                <transition_distance>0.5</transition_distance>
-#                        </area>
-#                        <area type="sphere" subtract="true">
-#                                <position x="-11" y="0" z="-4"/>
-#                                <scale x="2" y="2" z="2"/>
-#                        </area>
-#                        <light name="red pointlight"/>
-#                        <light name="green spotlight"/>
-#                        <sound name="ruchin001.ogg"/>
-#                        <trigger name="test" classname="TestTrigger">
-#                                <property name="message" type="STRING" data="You triggered the dooms day device!" />
-#                        </trigger>
-#                </zone>
-
-class Map():
-    def __init__(self, pathToFile, sceneManager, ogreRoot, gocManager):
-        self.pathToMapFile = pathToFile
-        self.sceneManager = sceneManager
-        self.mapNode = sceneManager.getRootSceneNode().createChildSceneNode(self.pathToMapFile)
-        self.ogreRoot = ogreRoot
-        self.gocManager = gocManager
-
-        xmlTree = xml.parse(pathToFile)
-        root = xmlTree.getroot()
-
-        if root.attrib["formatVersion"] == "0.4.0":
-            self.parseMapNodes(root.find("nodes"))
-            #self.parseMapZones(root.find("zones"))
-        else:
-            print pathToFile + " has wrong format version. It needs to be 0.4.0"
-            return
-
-    def parseMapNodes(self, nodeElement):
-        nodes = nodeElement.getiterator("entity")
-        if len(nodes) > 0:
-            self.createEntites(nodes)
-
-        nodes = nodeElement.getiterator("light")
-        if len(nodes) > 0:
-            self.createLights(nodes)
-
-        nodes = nodeElement.getiterator("sound")
-        if len(nodes) > 0:
-            self.createSound(nodes)
-
-        nodes = nodeElement.getiterator("gameobject")
-        if len(nodes) > 0:
-            self.createGameObjects(nodes)
-
-        nodes = nodeElement.getiterator("particlesystem")
-        if len(nodes) > 0:
-            self.createParticleSystems(nodes)
-
-    def createEntites(self, entityNodes):
-        for nodes in entityNodes:
-            entityName = nodes.attrib["name"]
-            print entityName
-            meshFile = nodes.attrib["meshfile"]
-            nodePosition = None
-            nodeRotation = None
-            nodeScale = None
-
-            transformations = nodes.getiterator()
-            for t in transformations:
-                if t.tag == "position":
-                    x = float(t.attrib["x"])
-                    y = float(t.attrib["y"])
-                    z = float(t.attrib["z"])
-                    nodePosition = og.Vector3(x, y, z)
-                elif t.tag == "rotation":
-                    qw = float(t.attrib["qw"])
-                    qx = float(t.attrib["qx"])
-                    qy = float(t.attrib["qy"])
-                    qz = float(t.attrib["qz"])
-                    nodeRotation = og.Quaternion(qw, qx, qy, qz)
-                elif t.tag == "scale":
-                    x = float(t.attrib["x"])
-                    y = float(t.attrib["y"])
-                    z = float(t.attrib["z"])
-                    nodeScale = og.Vector3(x, y, z)
-
-            try:
-                e = self.sceneManager.createEntity(entityName, meshFile)
-            except:
-                print "Warning: Meshfile " + meshFile + " could not be found."
-                continue
-
-            n = self.mapNode.createChild(entityName + "_node")
-            n.attachObject(e)
-            n.setPosition(nodePosition)
-            n.setOrientation(nodeRotation)
-            n.setScale(nodeScale)
-
-    def createLights(self, lightNodes):
-        for l in lightNodes:
-            lightName = l.attrib["name"]
-            lightType = l.attrib["type"]
-            lightVisible = bool(l.attrib["visible"])
-            castShadows = bool(l.attrib["castShadows"])
-            lightPosition = None
-            colourDiffuse = None
-            colourSpecular = None
-            lightAttenuationRange = None
-            lightAttenuationConstant= None
-            lightAttenuationlinear = None
-            lightAttenuationQuadratic = None
-
-            transformations = l.getiterator()
-            for t in transformations:
-                if t.tag == "position":
-                    x = float(t.attrib["x"])
-                    y = float(t.attrib["y"])
-                    z = float(t.attrib["z"])
-                    lightPosition = og.Vector3(x, y, z)
-                elif t.tag == "colourDiffuse":
-                    r = float(t.attrib["r"])
-                    g = float(t.attrib["g"])
-                    b= float(t.attrib["b"])
-                    colourDiffuse = og.ColourValue(r, g, b)
-                elif t.tag == "colourSpecular":
-                    r = float(t.attrib["r"])
-                    g = float(t.attrib["g"])
-                    b= float(t.attrib["b"])
-                    colourSpecular = og.ColourValue(r, g, b)
-                elif t.tag == "lightAttenuation":
-                    lightAttenuationRange = float(t.attrib["range"])
-                    lightAttenuationConstant= float(t.attrib["constant"])
-                    lightAttenuationlinear = float(t.attrib["linear"])
-                    lightAttenuationQuadratic = float(t.attrib["quadratic"])
-
-            e = self.sceneManager.createEntity(lightName, "lightbulp.mesh")
-            n = self.mapNode.createChild(lightName + "_node")
-            n.attachObject(e)
-            n.setPosition(lightPosition)
-
-    def createSound(self, soundNodes):
-        raise NotImplementedError
-        return
-
-    def createGameObjects(self, gameObjectNodes):
-        for g in gameObjectNodes:
-            classid = g.attrib["class"]
-            id = int(g.attrib["id"])
-            state = g.attrib["state"]
-            nodePosition = None
-            nodeRotation = None
-            nodeScale = None
-
-            transformations = g.getiterator()
-            for t in transformations:
-                if t.tag == "position":
-                    x = float(t.attrib["x"])
-                    y = float(t.attrib["y"])
-                    z = float(t.attrib["z"])
-                    nodePosition = og.Vector3(x, y, z)
-                elif t.tag == "rotation":
-                    qw = float(t.attrib["qw"])
-                    qx = float(t.attrib["qx"])
-                    qy = float(t.attrib["qy"])
-                    qz = float(t.attrib["qz"])
-                    nodeRotation = og.Quaternion(qw, qx, qy, qz)
-                elif t.tag == "scale":
-                    x = float(t.attrib["x"])
-                    y = float(t.attrib["y"])
-                    z = float(t.attrib["z"])
-                    nodeScale = og.Vector3(x, y, z)
-
-            go = self.gocManager.getGameObjectWithClassId(classid)
-            if go is not None:
-                meshFile = go.getMeshFileName()
-                ent = self.sceneManager.createEntity("dropMesh" + str(id), str(meshFile))
-                dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(id))
-                dropNode.attachObject(ent)
-
-                if nodePosition:
-                    dropNode.setPosition(nodePosition)
-                if nodeRotation:
-                    dropNode.setOrientation(nodeRotation)
-                if nodeScale:
-                    dropNode.setScale(nodeScale)
-
-
-                go = GameObjectRepresentation(id, classid, dropNode, meshFile)
-                go.inWorldId = id
-                ent.setUserObject(go)
-
-
-    def createParticleSystems(self, particleNodes):
-        raise NotImplementedError
-        return
-
-class Scene():
-    def __init__(self):
-        return
-
-class Module():
-    def __init__(self,name, modulePath, sceneManager, ogreRoot, gameObjectManager):
-        self.sceneManager = sceneManager
-        self.ogreRoot = ogreRoot
-        self.gocManager = gameObjectManager
-
-        self.name = name
-        self.moduleRoot = join(modulePath, name)
-        self.__isCommon = False
-
-        self.hasDependencies = False
-        self.moduleDependencies = []
-
-        self.mapFiles = [] # a list in case the module has more than one map file
-        self.gofFiles = [] # gof File list
-
-        self.scenes =[]
-
-        self.isLoaded = False
-
-    def isCommon(self):
-        modConfig = join(self.moduleRoot,  "scripts/moduleconfig.rb")
-        if isfile(modConfig): # is the modconfig existing?
-            f = codecs.open(modConfig, 'r', 'utf-8')
-        else:
-            print ("Error: couldn't find module config")
-            return
-        isDependencieLine = False
-        for i, line in enumerate(f):
-            lStripped = line.strip() #strip the whitespace away, not needed here
-            if lStripped.startswith("super("):
-                split = lStripped.split(",")
-                if split[2].strip() == unicode("true"):
-                    self.__isCommon = True
-                    return True
-
-
-            elif isDependencieLine:
-                if lStripped == "end":
-                    isDependencieLine = False
-                else:
-                    self.hasDependencies = True
-                    self.moduleDependencies.append(lStripped.split('"')[1])
-
-            elif lStripped == "def getDependencies()":
-                isDependencieLine = True
-
-        return False
-
-    def load(self):
-        if self.isLoaded:
-            return
-
-        self.isLoaded = True
-        modConfig = join(self.moduleRoot,  "scripts/moduleconfig.rb")
-        if isfile(modConfig): # is the modconfig existing?
-            f = codecs.open(modConfig, 'r', 'utf-8')
-        else:
-            print ("Error: couldn't find module config")
-            return
-
-        #for i, line in enumerate(f):
-            #lStripped = line.strip() #strip the whitespace away, not needed here
-
-        self.setResourcePaths()
-        og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
-
-        cmd = join(self.moduleRoot, "dsa/*.gof")
-        self.gofFiles = glob.glob(cmd)
-        self.gocManager.parseGOFFiles(self.gofFiles)
-
-        if not self.isCommon():
-            cmd = join(self.moduleRoot, "maps/*.rlmap.xml")
-            maps = glob.glob(cmd)
-            for m in maps:
-                self.mapFiles.append(Map(m, self.sceneManager, self.ogreRoot, self.gocManager))
-
-            cmd = join(self.moduleRoot, "maps/*.rlscene")
-            sceneFile = glob.glob(cmd)
-            #self.loadScenes(sceneFile)
-
-    def saveMaps(self):
-        return
-
-    def saveScenes(self):
-        return
-
-    def setResourcePaths(self, recurseFolder = ""):
-        if recurseFolder == "":
-            rootFolder = self.moduleRoot
-        else:
-            rootFolder = join(self.moduleRoot, recurseFolder)
-
-        for file in os.listdir(rootFolder):
-            curFile = join(rootFolder, file)
-
-
-            if file.startswith('.'): #ignore dot files (hidden)
-                continue
-            if os.path.isdir(curFile):
-                og.ResourceGroupManager.getSingleton().addResourceLocation(curFile, "FileSystem", self.name, False)
-                self.setResourcePaths(curFile)
-            if os.path.isfile(curFile):
-                pass
-
-class ModuleManager():
-    def __init__(self,  ogreRoot,  sceneManager):
-        self.sceneManager = sceneManager
-        self.ogreRoot = ogreRoot
-        self.modelSelectionDialog = None
-
-        self.raySceneQuery = self.sceneManager.createRayQuery(og.Ray())
-
-        self.gocManager = GameObjectClassManager()
-        # we need to hold a reference to the game object representaions ourself
-        # python does not recognize the a reference to a c++ object (Entity in our case) is passed
-        # and deletes the object
-        self.gameObjectRepresentationDict = []
-
-
-        self.mainModule = []
-        self.mainModuledependencieList =[]
-        self.moduleList = []
-        self.userSelectionList = []
-        self.cutList = [] # selection objects that has been cut out and wait to be pasted again
-        self.cutListPreviousNodes = [] # contains the nodes they where copnnected to before the cut
-
-        self.listenerDings = MyRaySceneQueryListener()
-
-        self.lastRay = None
-#        self.rayLine = None
-
-        # pivot is initialzed and set in the Lockenwickler.setUpOgre function
-        self.pivot = None
-        self.movingPivot = False
-
-        self.leftMouseDown = False
-        self.middleMouseDown = False
-        self.rightMouseDown = False
-
-        self.dropCount = 0
-        self.dropNode = None
-        self.dropEntity = None
-        self.dropCollisionPlane = og.Plane(og.Vector3.UNIT_Y, og.Vector3.ZERO)
-
-        self.numerOfCopys = 0 #everytime a copy is made this numer is increased to generate unique node and mesh names
-        self.moduleConfigIsParsed = False
-
-
-    def parseModuleConfig(self):
-        if self.moduleConfigIsParsed:
-            return
-
-        import codecs
-        f = codecs.open(self.moduleCfgPath, 'r', 'utf-8')
-
-        for line in f:
-            if line.startswith('#'):
-                continue
-
-            if line.startswith('module='):
-                splines = line.split('=')
-                str = splines[1].rstrip().rstrip()
-                self.moduleList.append(Module(str, self.moduleCfgPath.replace("/modules.cfg",  ""), self.sceneManager, self.ogreRoot, self.gocManager))
-
-        self.moduleConfigIsParsed = True
-
-    def openLoadModuleDialog(self, moduleConfigPath, lw):
-        self.moduleCfgPath = str(moduleConfigPath)
-        self.moduleFolder = str(moduleConfigPath.replace("modules.cfg", ""))
-
-        self.parseModuleConfig()
-
-        dlg = QDialog()
-        list = QListWidget()
-        btnBox = QDialogButtonBox(QDialogButtonBox.Ok | QDialogButtonBox.Cancel)
-        dlg.connect(btnBox, SIGNAL("accepted()"), dlg.accept)
-        dlg.connect(btnBox, SIGNAL("rejected()"), dlg.reject)
-
-        for m in self.moduleList:
-            if not m.isCommon():
-                list.addItem(m.name)
-
-        layout = QVBoxLayout()
-        layout.addWidget(list)
-        layout.addWidget(btnBox)
-        dlg.setLayout(layout)
-        if dlg.exec_():
-            self.loadModule(str(list.currentItem().text()))
-
-    # I'm sorry for this
-    def loadModule(self, moduleName):
-        for m in self.moduleList:
-            if m.name == moduleName:
-                if m.hasDependencies: # load modules on wich the main module depends before the main module is loaded
-                    for moduleDependencie in m.moduleDependencies:
-                        for m2 in self.moduleList:
-                            if m2.name == moduleDependencie:
-                                m2.load()
-                                self.modelSelectionDialog.scanDirForModels(m2.moduleRoot)
-                                self.mainModuledependencieList.append(m2)
-
-                m.load()
-                self.modelSelectionDialog.scanDirForModels(m.moduleRoot)
-                self.mainModule = m
-
-        n = self.sceneManager.getRootSceneNode().createChildSceneNode()
-        e = self.sceneManager.createEntity("west342wt346t",  "UniCube.mesh")
-        e.setMaterialName("Lockenwickler_Area")
-
-        e2 = self.sceneManager.createEntity("west342wt34635t",  "UniSphere.mesh")
-        e2.setMaterialName("Lockenwickler_Area")
-
-        n.attachObject(e)
-        n.attachObject(e2)
-        n.setScale(og.Vector3(10, 5, 20))
-
-    # called when a click into Main Ogre Window occurs
-    def selectionClick(self,  ray,  controlDown=False,  shiftDown=False):
-        self.listenerDings.reset()
-        self.lastRay = ray
-        self.listenerDings.currentRay = ray
-        self.raySceneQuery.Ray = ray
-        self.raySceneQuery.execute(self.listenerDings)
-
-        so = self.listenerDings.rayCastToPolygonLevel(ray)
-
-        if so is not None:
-            if not so.isPivot:
-                if not controlDown and not shiftDown:
-                    self.resetSelection()
-                    so.setSelected(True)
-                    self.userSelectionList.append(so)
-                    self.updatePivots()
-                elif controlDown and not shiftDown:
-                    so.setSelected(True)
-
-                    for soFromList in self.userSelectionList:
-                        if soFromList == so:
-                            return # object already selected
-
-                    self.userSelectionList.append(so)
-                    self.updatePivots()
-
-
-                elif not controlDown and shiftDown:
-                    for selo in self.userSelectionList:
-                        if so == selo:
-                            so.setSelected(False)
-                            self.userSelectionList.remove(selo)
-                    self.updatePivots()
-            else:
-                #so.entity is the pivot direction that was clicked
-                self.pivot.startTransforming(so.entity,  self.userSelectionList)
-        else:
-            self.resetSelection() # click in empty space, deselect everything
-            if self.pivot is not None:
-                self.pivot.hide()
-
-#        if self.rayLine == None:
-#            self.rayLine = self.sceneManager.createManualObject("rayLine")
-#            self.rayLine.setDynamic(True)
-#            self.sceneManager.getRootSceneNode().createChildSceneNode("raynode").attachObject(self.rayLine)
-#
-#            self.rayLine.begin("BaseWhiteNoLighting", og.RenderOperation.OT_LINE_STRIP)
-#
-#            self.rayLine.position(ray.getOrigin())
-#            self.rayLine.position( ray.getPoint(10000))
-#
-#            self.rayLine.end()
-#
-#        else:
-#            self.rayLine.beginUpdate(0)
-#
-#            self.rayLine.position(ray.getOrigin())
-#            self.rayLine.position( ray.getPoint(10000))
-#
-#            self.rayLine.end()
-
-    def deleteObjects(self):
-        if len(self.userSelectionList) < 1:
-            return
-
-        self.pivot.hide()
-
-        for so in self.userSelectionList:
-            self.sceneManager.destroySceneNode(so.entity.getParentNode().getName())
-            del so
-
-        self.userSelectionList = []
-
-    def incrementNameSuffixNumber(self, name):
-        newName = ""
-        split = name.split("_")
-        lastPart = len(split)-1
-        newName = name.rstrip(split[lastPart])
-        newName = newName + str(self.numerOfCopys)
-
-#        if split[lastPart].isdigit() and not split[lastPart].startswith("0"):
-#            num = int(split[lastPart])
-#            num = num + 1
-#            newName = name.rstrip(split[lastPart])
-#            newName = newName + str(num)
-#        else:
-#            newName = name + "_1"
-
-        self.numerOfCopys = self.numerOfCopys + 1
-        return newName
-
-    def copyObjects(self):
-        if len(self.userSelectionList) < 1:
-            return
-
-        newSelectionList = []
-
-        for so in self.userSelectionList:
-            if so.entity.getUserObject() is not None:
-                if so.entity.getUserObject().getType() == "GAME_OBJECT_REPRESENTATION":
-                    go = self.gocManager.getGameObjectWithClassId(so.entity.getUserObject().gocName)
-                    meshFile = go.getMeshFileName()
-
-                    if go is not None:
-                        newEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
-                        newNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
-                        newNode.attachObject(newEntity)
-                        newNode.setPosition(so.entity.getParentNode().getPosition())
-
-                        newGO = GameObjectRepresentation(self.dropCount, so.entity.getUserObject().gocName, newNode, meshFile)
-                        self.gameObjectRepresentationDict.append(newGO)
-                        newEntity.setUserObject(newGO)
-                        newGO.setPosition(og.Vector3(0, 0, 0))
-
-                        newSO = SelectionObject(newEntity, so.distance)
-                        newSO.setSelected(True)
-                        newSelectionList.append(newSO)
-                        self.dropCount += 1
-            else:
-                nodeName = self.incrementNameSuffixNumber(so.entity.getParentNode().getName())
-                newNode = self.sceneManager.getRootSceneNode().createChild(nodeName)
-
-                entityName = self.incrementNameSuffixNumber(so.entity.getName())
-                newEntity = self.sceneManager.createEntity(entityName, so.entity.getMesh().getName())
-
-                newNode.attachObject(newEntity)
-                newNode.setPosition(so.entity.getParentNode().getPosition())
-                newNode.setOrientation(so.entity.getParentNode().getOrientation())
-                newNode.setScale(so.entity.getParentNode().getScale())
-
-                newSO = SelectionObject(newEntity, so.distance)
-                newSO.setSelected(True)
-                newSelectionList.append(newSO)
-
-        self.resetSelection()
-        self.userSelectionList = newSelectionList
-
-    def cutObjects(self):
-        if len(self.userSelectionList) < 1:
-            return
-
-        self.cutList = []
-        for so in self.userSelectionList:
-            self.cutListPreviousNodes.append(so.entity.getParentNode().getParent())
-            so.entity.getParentNode().getParent().removeChild(so.entity.getParentNode())
-            # set the "point of gravity" of all the cutted nodes to world origin at 0,0,0
-            # so we only have to translate them to their new destination when they get pasted
-            # the position of the pivot point is considered as the center of gravity
-            so.entity.getParentNode().setPosition(so.entity.getParentNode().getPosition() - self.pivot.getPosition())
-            self.cutList.append(so)
-        self.resetSelection()
-
-    def pasteObjects(self,  ray):
-        if len(self.cutList) < 1:
-            return
-
-        result = og.Math.intersects(ray, self.dropCollisionPlane)
-        if result.first == True:
-            i=0
-            while i < len(self.cutList):
-                self.cutListPreviousNodes[i].addChild(self.cutList[i].entity.getParentNode())
-                self.cutList[i].entity.getParentNode().translate(ray.getPoint(result.second))
-                i = i+1
-        else:
-            i=0
-            while i < len(self.cutList):
-                self.cutListPreviousNodes[i].addChild(self.cutList[i].entity.getParentNode())
-                self.cutList[i].entity.getParentNode().translate(ray.getPoint(100.0))
-                i = i+1
-        self.cutList = []
-
-    def leftMouseUp(self):
-        if self.pivot is not None and self.pivot.isTransforming:
-            self.pivot.stopTransforming()
-
-    def resetSelection(self):
-        for so in self.userSelectionList:
-            so.setSelected(False)
-
-        self.userSelectionList = []
-
-        self.listenerDings.reset()
-        pass
-
-
-    def updatePivots(self):
-        newPivotPosition = og.Vector3(0, 0, 0)
-
-        for so in self.userSelectionList:
-            newPivotPosition += so.entity.getParentNode().getPosition()
-        if self.pivot is not None:
-            self.pivot.setPosition(newPivotPosition / len(self.userSelectionList))
-
-    def unload(self,  saveOnUnload=True):
-        pass
-
-    def save(self):
-        pass
-
-    def startDropGameObjectAction(self, classid, ray):
-        go = self.gocManager.getGameObjectWithClassId(classid)
-
-        if go is not None:
-            meshFile = go.getMeshFileName()
-            dropEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
-            dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
-            dropNode.attachObject(dropEntity)
-
-            result = og.Math.intersects(ray, self.dropCollisionPlane)
-            if result.first == True:
-                dropNode.setPosition(ray.getPoint(result.second))
-            else:
-                dropNode.setPosition(ray.getPoint(50))
-
-            self.dropGO = GameObjectRepresentation(self.dropCount, classid, dropNode, meshFile)
-            dropEntity.setUserObject(self.dropGO)
-
-        self.dropCount += 1
-
-    def moveDropGameObjectAction(self, ray):
-        result = og.Math.intersects(ray, self.dropCollisionPlane)
-        if result.first == True:
-            self.dropGO.setPosition(ray.getPoint(result.second))
-        else:
-            self.dropGO.setPosition(ray.getPoint(50))
-
-    def stopDropGameObjectAction(self, ray):
-        print "sd"
-
-    def startDropModelAction(self, meshFile, ray):
-        self.dropEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
-        self.dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
-        self.dropNode.attachObject(self.dropEntity)
-
-        result = og.Math.intersects(ray, self.dropCollisionPlane)
-        if result.first == True:
-            self.dropNode.setPosition(ray.getPoint(result.second))
-        else:
-            self.dropNode.setPosition(ray.getPoint(50))
-
-        self.dropCount += 1
-
-    def moveDropModelAction(self, ray):
-        result = og.Math.intersects(ray, self.dropCollisionPlane)
-        if result.first == True:
-            self.dropNode.setPosition(ray.getPoint(result.second))
-        else:
-            self.dropNode.setPosition(ray.getPoint(50))
-
-
-    def stopDropModelAction(self, ray):
-        pass
-
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+import sys
+import codecs
+import glob
+import os
+from os.path import isfile,  join
+
+import xml.etree.cElementTree as xml
+
+import ctypes
+import ogre.renderer.OGRE as og
+
+from PyQt4.QtCore import *
+from PyQt4.QtGui import *
+
+from MovePivot import *
+from GameObjectClassManager import *
+from MyRaySceneQueryListener import *
+
+#                <zone name="Testzone">
+#                        <area type="sphere">
+#                                <position x="-10" y="0" z="-5"/>
+#                                <scale x="6" y="6" z="6"/>
+#                                <transition_distance>0.5</transition_distance>
+#                        </area>
+#                        <area type="mesh" meshfile="arc_UnbHaus_07.mesh">
+#                                <position x="25" y="0" z="-50"/>
+#                                <transition_distance>0.5</transition_distance>
+#                        </area>
+#                        <area type="sphere" subtract="true">
+#                                <position x="-11" y="0" z="-4"/>
+#                                <scale x="2" y="2" z="2"/>
+#                        </area>
+#                        <light name="red pointlight"/>
+#                        <light name="green spotlight"/>
+#                        <sound name="ruchin001.ogg"/>
+#                        <trigger name="test" classname="TestTrigger">
+#                                <property name="message" type="STRING" data="You triggered the dooms day device!" />
+#                        </trigger>
+#                </zone>
+
+class Map():
+    def __init__(self, pathToFile, sceneManager, ogreRoot, gocManager):
+        self.pathToMapFile = pathToFile
+        
+        mapName = pathToFile.replace("\\", "/")
+        mapName = mapName.split("/")
+        mapName = mapName[len(mapName) - 1].split(".")
+        mapName = mapName[len(mapName) - 3]
+        self.mapName = mapName
+        
+        self.sceneManager = sceneManager
+        self.mapNode = sceneManager.getRootSceneNode().createChildSceneNode(self.pathToMapFile)
+        self.ogreRoot = ogreRoot
+        self.gocManager = gocManager
+
+        xmlTree = xml.parse(pathToFile)
+        root = xmlTree.getroot()
+
+        if root.attrib["formatVersion"] == "0.4.0":
+            self.parseMapNodes(root.find("nodes"))
+            #self.parseMapZones(root.find("zones"))
+        else:
+            print pathToFile + " has wrong format version. It needs to be 0.4.0"
+            return
+
+    def parseMapNodes(self, nodeElement):
+        nodes = nodeElement.getiterator("entity")
+        
+        self.createEntites(nodes)
+
+        nodes = nodeElement.getiterator("light")
+        self.createLights(nodes)
+
+        nodes = nodeElement.getiterator("sound")
+        self.createSound(nodes)
+
+        nodes = nodeElement.getiterator("gameobject")
+        self.createGameObjects(nodes)
+
+        nodes = nodeElement.getiterator("particlesystem")
+        self.createParticleSystems(nodes)
+
+    def createEntites(self, entityNodes):
+        for nodes in entityNodes:
+            entityName = nodes.attrib["name"]
+            meshFile = nodes.attrib["meshfile"]
+            nodePosition = None
+            nodeScale = None
+            qw = qx = qy = qz = None
+
+            transformations = nodes.getiterator()
+            for t in transformations:
+                if t.tag == "position":
+                    posx = float(t.attrib["x"])
+                    posy = float(t.attrib["y"])
+                    posz = float(t.attrib["z"])
+                    nodePosition = og.Vector3(posx, posy, posz)
+                elif t.tag == "rotation":
+                    qw = float(t.attrib["qw"])
+                    qx = float(t.attrib["qx"])
+                    qy = float(t.attrib["qy"])
+                    qz = float(t.attrib["qz"])
+                elif t.tag == "scale":
+                    scalex = float(t.attrib["x"])
+                    scaley = float(t.attrib["y"])
+                    scalez = float(t.attrib["z"])
+                    nodeScale = og.Vector3(scalex, scaley, scalez)
+
+            try:
+                e = self.sceneManager.createEntity(entityName, meshFile)
+            except:
+                print "Warning: Meshfile " + meshFile + " could not be found."
+                continue
+
+            n = self.mapNode.createChild(entityName + "_node")
+            n.attachObject(e)
+            n.setPosition(nodePosition)
+            n.setOrientation(qw, qx, qy, qz)
+            n.setScale(nodeScale)
+
+    def createLights(self, lightNodes):
+        for l in lightNodes:
+            lightName = l.attrib["name"]
+            lightType = l.attrib["type"]
+            lightVisible = bool(l.attrib["visible"])
+            castShadows = bool(l.attrib["castShadows"])
+            lightPosition = None
+            colourDiffuse = None
+            colourSpecular = None
+            lightAttenuationRange = None
+            lightAttenuationConstant= None
+            lightAttenuationlinear = None
+            lightAttenuationQuadratic = None
+
+            transformations = l.getiterator()
+            for t in transformations:
+                if t.tag == "position":
+                    x = float(t.attrib["x"])
+                    y = float(t.attrib["y"])
+                    z = float(t.attrib["z"])
+                    lightPosition = og.Vector3(x, y, z)
+                elif t.tag == "colourDiffuse":
+                    r = float(t.attrib["r"])
+                    g = float(t.attrib["g"])
+                    b= float(t.attrib["b"])
+                    colourDiffuse = og.ColourValue(r, g, b)
+                elif t.tag == "colourSpecular":
+                    r = float(t.attrib["r"])
+                    g = float(t.attrib["g"])
+                    b= float(t.attrib["b"])
+                    colourSpecular = og.ColourValue(r, g, b)
+                elif t.tag == "lightAttenuation":
+                    lightAttenuationRange = float(t.attrib["range"])
+                    lightAttenuationConstant= float(t.attrib["constant"])
+                    lightAttenuationlinear = float(t.attrib["linear"])
+                    lightAttenuationQuadratic = float(t.attrib["quadratic"])
+
+            e = self.sceneManager.createEntity(lightName, "lightbulp.mesh")
+            n = self.mapNode.createChild(lightName + "_node")
+            n.attachObject(e)
+            n.setPosition(lightPosition)
+
+    def createSound(self, soundNodes):
+        #raise NotImplementedError
+        return
+
+    def createGameObjects(self, gameObjectNodes):
+        for g in gameObjectNodes:
+            classid = g.attrib["class"]
+            id = int(g.attrib["id"])
+            state = g.attrib["state"]
+            nodePosition = None
+            nodeRotation = None
+            nodeScale = None
+
+            transformations = g.getiterator()
+            for t in transformations:
+                if t.tag == "position":
+                    x = float(t.attrib["x"])
+                    y = float(t.attrib["y"])
+                    z = float(t.attrib["z"])
+                    nodePosition = og.Vector3(x, y, z)
+                elif t.tag == "rotation":
+                    qw = float(t.attrib["qw"])
+                    qx = float(t.attrib["qx"])
+                    qy = float(t.attrib["qy"])
+                    qz = float(t.attrib["qz"])
+                    nodeRotation = og.Quaternion(qw, qx, qy, qz)
+                elif t.tag == "scale":
+                    x = float(t.attrib["x"])
+                    y = float(t.attrib["y"])
+                    z = float(t.attrib["z"])
+                    nodeScale = og.Vector3(x, y, z)
+
+            go = self.gocManager.getGameObjectWithClassId(classid)
+            if go is not None:
+                meshFile = go.getMeshFileName()
+                ent = self.sceneManager.createEntity("dropMesh" + str(id), str(meshFile))
+                dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(id))
+                dropNode.attachObject(ent)
+
+                if nodePosition:
+                    dropNode.setPosition(nodePosition)
+                if nodeRotation:
+                    dropNode.setOrientation(nodeRotation)
+                if nodeScale:
+                    dropNode.setScale(nodeScale)
+
+                go = GameObjectRepresentation(id, classid, dropNode, meshFile)
+                go.inWorldId = id
+                ent.setUserObject(go)
+
+
+    def createParticleSystems(self, particleNodes):
+        #raise NotImplementedError
+        return
+
+class Scene():
+    def __init__(self, moduleroot, pathToFile, sceneManager, ogreRoot, gocManager):
+        self.moduleRoot = moduleroot
+        self.sceneManager = sceneManager
+        self.ogreRoot = ogreRoot
+        self.gocManager = gocManager
+        
+        xmlTree = xml.parse(pathToFile)
+        root = xmlTree.getroot()
+        self.name = root.attrib["name"]
+        
+        self.mapFiles = [] # a list in case the module has more than one map file
+        mappaths = []
+        
+        maps = root.getiterator("map")
+        for m in maps:
+            mappaths.append(join(self.moduleRoot, join("maps", m.attrib["file"])))
+            
+        for m in mappaths:
+            self.mapFiles.append(Map(m, self.sceneManager, self.ogreRoot, self.gocManager))
+            
+        #cmd = join(self.moduleRoot, "maps/*.rlmap.xml")
+        #maps = glob.glob(cmd)
+        #for m in maps:
+            #self.mapFiles.append(Map(m, self.sceneManager, self.ogreRoot, self.gocManager))
+
+
+class Module():
+    def __init__(self,name, modulePath, sceneManager, ogreRoot, gameObjectManager):
+        self.sceneManager = sceneManager
+        self.ogreRoot = ogreRoot
+        self.gocManager = gameObjectManager
+        
+        self.name = name
+        self.moduleRoot = join(modulePath, name)
+        self.__isCommon = False
+
+        self.hasDependencies = False
+        self.moduleDependencies = []
+
+
+        self.gofFiles = [] # gof File list
+
+        self.scenes =[]
+
+        self.isLoaded = False
+
+    def isCommon(self):
+        modConfig = join(self.moduleRoot,  "scripts/moduleconfig.rb")
+        if isfile(modConfig): # is the modconfig existing?
+            f = codecs.open(modConfig, 'r', 'utf-8')
+        else:
+            print ("Error: couldn't find module config")
+            return
+        isDependencieLine = False
+        for i, line in enumerate(f):
+            lStripped = line.strip() #strip the whitespace away, not needed here
+            if lStripped.startswith("super("):
+                split = lStripped.split(",")
+                if split[2].strip() == unicode("true"):
+                    self.__isCommon = True
+                    return True
+
+
+            elif isDependencieLine:
+                if lStripped == "end":
+                    isDependencieLine = False
+                else:
+                    self.hasDependencies = True
+                    self.moduleDependencies.append(lStripped.split('"')[1])
+
+            elif lStripped == "def getDependencies()":
+                isDependencieLine = True
+
+        return False
+
+    def load(self):
+        if self.isLoaded:
+            return
+
+        self.isLoaded = True
+        modConfig = join(self.moduleRoot,  "scripts/moduleconfig.rb")
+        if isfile(modConfig): # is the modconfig existing?
+            f = codecs.open(modConfig, 'r', 'utf-8')
+        else:
+            print ("Error: couldn't find module config")
+            return
+
+        #for i, line in enumerate(f):
+            #lStripped = line.strip() #strip the whitespace away, not needed here
+
+        self.setResourcePaths()
+        
+        try:
+            og.ResourceGroupManager.getSingleton().initialiseAllResourceGroups()
+        except og.OgreException, e:
+            print e
+        
+        cmd = join(self.moduleRoot, "dsa/*.gof")
+        self.gofFiles = glob.glob(cmd)
+        self.gocManager.parseGOFFiles(self.gofFiles)
+
+        if not self.isCommon():
+            cmd = join(self.moduleRoot, "maps/*.rlscene")
+            sceneFile = glob.glob(cmd)
+            self.loadScenes(sceneFile)
+
+    def loadScenes(self, sceneFiles):
+        for f in sceneFiles:
+            self.scenes.append(Scene(self.moduleRoot, f, self.sceneManager, self.ogreRoot, self.gocManager))
+
+    def saveMaps(self):
+        return
+
+    def saveScenes(self):
+        return
+
+    def setResourcePaths(self, recurseFolder = ""):
+        if recurseFolder == "":
+            rootFolder = self.moduleRoot
+        else:
+            rootFolder = join(self.moduleRoot, recurseFolder)
+
+        for file in os.listdir(rootFolder):
+            curFile = join(rootFolder, file)
+
+
+            if file.startswith('.'): #ignore dot files (hidden)
+                continue
+            if os.path.isdir(curFile):
+                og.ResourceGroupManager.getSingleton().addResourceLocation(curFile, "FileSystem", self.name, False)
+                self.setResourcePaths(curFile)
+            if os.path.isfile(curFile):
+                pass
+
+class ModuleManager():
+    def __init__(self,  ogreRoot,  sceneManager):
+        self.sceneManager = sceneManager
+        self.ogreRoot = ogreRoot
+        self.modelSelectionDialog = None
+
+        self.moduleCfgPath = ""
+
+        self.raySceneQuery = self.sceneManager.createRayQuery(og.Ray())
+
+        self.gocManager = GameObjectClassManager()
+        # we need to hold a reference to the game object representaions ourself
+        # python does not recognize the a reference to a c++ object (Entity in our case) is passed
+        # and deletes the object
+        self.gameObjectRepresentationDict = []
+
+        self.mainModule = []
+        self.mainModuledependencieList =[]
+        self.moduleList = []
+        self.userSelectionList = []
+        self.cutList = [] # selection objects that has been cut out and wait to be pasted again
+        self.cutListPreviousNodes = [] # contains the nodes they where copnnected to before the cut
+
+        self.listenerDings = MyRaySceneQueryListener()
+
+        self.moduleExplorer = None
+
+        self.lastRay = None
+        self.rayLine = None
+
+        # pivot is initialzed and set in the Lockenwickler.setUpOgre function
+        self.pivot = None
+        self.movingPivot = False
+
+        self.leftMouseDown = False
+        self.middleMouseDown = False
+        self.rightMouseDown = False
+
+        self.dropCount = 0
+        self.dropNode = None
+        self.dropEntity = None
+        self.dropCollisionPlane = og.Plane(og.Vector3().UNIT_Y, og.Vector3().ZERO)
+
+        self.numerOfCopys = 0 #everytime a copy is made this numer is increased to generate unique node and mesh names
+        self.moduleConfigIsParsed = False
+
+    def resetParsedModuleConfig(self):
+        self.moduleConfigIsParsed = False
+        self.moduleList = []
+
+    def parseModuleConfig(self):
+        if self.moduleConfigIsParsed:
+            return
+
+        import codecs
+        f = codecs.open(self.moduleCfgPath, 'r', 'utf-8')
+
+        for line in f:
+            if line.startswith('#'):
+                continue
+
+            if line.startswith('module='):
+                splines = line.split('=')
+                str = splines[1].rstrip().rstrip()
+                self.moduleList.append(Module(str, self.moduleCfgPath.replace("/modules.cfg",  ""), self.sceneManager, self.ogreRoot, self.gocManager))
+
+        self.moduleConfigIsParsed = True
+
+
+    def moduleExists(self, name):
+        lowerA = str(name).lower()
+        
+        for m in self.moduleList:
+            lowerB = m.name.lower()
+            if lowerA == lowerB:
+                return True
+        
+        return False
+
+    def openLoadModuleDialog(self):
+        self.moduleFolder = str(self.moduleCfgPath.replace("modules.cfg", ""))
+
+        self.parseModuleConfig()
+
+        dlg = QDialog()
+        list = QListWidget()
+        btnBox = QDialogButtonBox(QDialogButtonBox.Ok | QDialogButtonBox.Cancel)
+        dlg.connect(btnBox, SIGNAL("accepted()"), dlg.accept)
+        dlg.connect(btnBox, SIGNAL("rejected()"), dlg.reject)
+
+        for m in self.moduleList:
+            if not m.isCommon():
+                list.addItem(m.name)
+
+        layout = QVBoxLayout()
+        layout.addWidget(list)
+        layout.addWidget(btnBox)
+        dlg.setLayout(layout)
+        if dlg.exec_():
+            self.loadModule(str(list.currentItem().text()))
+
+    # I'm sorry for this
+    def loadModule(self, moduleName):
+        for m in self.moduleList:
+            if m.name == moduleName:
+                if m.hasDependencies: # load modules on wich the main module depends before the main module is loaded
+                    for moduleDependencie in m.moduleDependencies:
+                        for m2 in self.moduleList:
+                            if m2.name == moduleDependencie:
+                                m2.load()
+                                self.modelSelectionDialog.scanDirForModels(m2.moduleRoot)
+                                self.mainModuledependencieList.append(m2)
+
+                m.load()
+                self.modelSelectionDialog.scanDirForModels(m.moduleRoot)
+                self.mainModule = m
+                self.moduleExplorer.setCurrentModule(m)
+                
+        self.moduleExplorer.updateView()
+#        n = self.sceneManager.getRootSceneNode().createChildSceneNode()
+#        e = self.sceneManager.createEntity("west342wt346t",  "UniCube.mesh")
+#        e.setMaterialName("Lockenwickler_Area")
+#
+#        e2 = self.sceneManager.createEntity("west342wt34635t",  "UniSphere.mesh")
+#        e2.setMaterialName("Lockenwickler_Area")
+
+#        n.attachObject(e)
+#        n.attachObject(e2)
+#        n.setScale(og.Vector3(10, 5, 20))
+
+    # called when a click into Main Ogre Window occurs
+    def selectionClick(self,  ray,  controlDown=False,  shiftDown=False):
+        self.listenerDings.reset()
+        self.lastRay = ray
+        self.listenerDings.currentRay = ray
+        self.raySceneQuery.Ray = ray
+        self.raySceneQuery.execute(self.listenerDings)
+
+        so = self.listenerDings.rayCastToPolygonLevel(ray)
+
+        if so is not None:
+            if not so.isPivot:
+                if not controlDown and not shiftDown:
+                    self.resetSelection()
+                    so.setSelected(True)
+                    self.userSelectionList.append(so)
+                    self.updatePivots()
+                elif controlDown and not shiftDown:
+                    so.setSelected(True)
+
+                    for soFromList in self.userSelectionList:
+                        if soFromList == so:
+                            return # object already selected
+
+                    self.userSelectionList.append(so)
+                    self.updatePivots()
+
+
+                elif not controlDown and shiftDown:
+                    for selo in self.userSelectionList:
+                        if so == selo:
+                            so.setSelected(False)
+                            self.userSelectionList.remove(selo)
+                    self.updatePivots()
+            else:
+                #so.entity is the pivot direction that was clicked
+                self.pivot.startTransforming(so.entity,  self.userSelectionList)
+        else:
+            self.resetSelection() # click in empty space, deselect everything
+            if self.pivot is not None:
+                self.pivot.hide()
+
+        if self.rayLine == None:
+            self.rayLine = self.sceneManager.createManualObject("rayLine")
+            self.rayLine.setDynamic(True)
+            self.sceneManager.getRootSceneNode().createChildSceneNode("raynode").attachObject(self.rayLine)
+
+            self.rayLine.begin("BaseWhiteNoLighting", og.RenderOperation.OT_LINE_STRIP)
+
+            self.rayLine.position(ray.getOrigin())
+            self.rayLine.position( ray.getPoint(10000))
+
+            self.rayLine.end()
+
+        else:
+            self.rayLine.beginUpdate(0)
+
+            self.rayLine.position(ray.getOrigin())
+            self.rayLine.position( ray.getPoint(10000))
+
+            self.rayLine.end()
+
+    def deleteObjects(self):
+        if len(self.userSelectionList) < 1:
+            return
+
+        self.pivot.hide()
+
+        for so in self.userSelectionList:
+            self.sceneManager.destroySceneNode(so.entity.getParentNode().getName())
+            del so
+
+        self.userSelectionList = []
+
+    def incrementNameSuffixNumber(self, name):
+        newName = ""
+        split = name.split("_")
+        lastPart = len(split)-1
+        newName = name.rstrip(split[lastPart])
+        newName = newName + str(self.numerOfCopys)
+
+#        if split[lastPart].isdigit() and not split[lastPart].startswith("0"):
+#            num = int(split[lastPart])
+#            num = num + 1
+#            newName = name.rstrip(split[lastPart])
+#            newName = newName + str(num)
+#        else:
+#            newName = name + "_1"
+
+        self.numerOfCopys = self.numerOfCopys + 1
+        return newName
+
+    def copyObjects(self):
+        if len(self.userSelectionList) < 1:
+            return
+
+        newSelectionList = []
+
+        for so in self.userSelectionList:
+            if so.entity.getUserObject() is not None:
+                if so.entity.getUserObject().getType() == "GAME_OBJECT_REPRESENTATION":
+                    go = self.gocManager.getGameObjectWithClassId(so.entity.getUserObject().gocName)
+                    meshFile = go.getMeshFileName()
+
+                    if go is not None:
+                        newEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
+                        newNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
+                        newNode.attachObject(newEntity)
+                        newNode.setPosition(so.entity.getParentNode().getPosition())
+
+                        newGO = GameObjectRepresentation(self.dropCount, so.entity.getUserObject().gocName, newNode, meshFile)
+                        self.gameObjectRepresentationDict.append(newGO)
+                        newEntity.setUserObject(newGO)
+                        newGO.setPosition(og.Vector3(0, 0, 0))
+
+                        newSO = SelectionObject(newEntity, so.distance)
+                        newSO.setSelected(True)
+                        newSelectionList.append(newSO)
+                        self.dropCount += 1
+            else:
+                nodeName = self.incrementNameSuffixNumber(so.entity.getParentNode().getName())
+                newNode = self.sceneManager.getRootSceneNode().createChild(nodeName)
+
+                entityName = self.incrementNameSuffixNumber(so.entity.getName())
+                newEntity = self.sceneManager.createEntity(entityName, so.entity.getMesh().getName())
+
+                newNode.attachObject(newEntity)
+                newNode.setPosition(so.entity.getParentNode().getPosition())
+                newNode.setOrientation(so.entity.getParentNode().getOrientation())
+                newNode.setScale(so.entity.getParentNode().getScale())
+
+                newSO = SelectionObject(newEntity, so.distance)
+                newSO.setSelected(True)
+                newSelectionList.append(newSO)
+
+        self.resetSelection()
+        self.userSelectionList = newSelectionList
+
+    def cutObjects(self):
+        if len(self.userSelectionList) < 1:
+            return
+
+        self.cutList = []
+        for so in self.userSelectionList:
+            self.cutListPreviousNodes.append(so.entity.getParentNode().getParent())
+            so.entity.getParentNode().getParent().removeChild(so.entity.getParentNode())
+            # set the "point of gravity" of all the cutted nodes to world origin at 0,0,0
+            # so we only have to translate them to their new destination when they get pasted
+            # the position of the pivot point is considered as the center of gravity
+            so.entity.getParentNode().setPosition(so.entity.getParentNode().getPosition() - self.pivot.getPosition())
+            self.cutList.append(so)
+        self.resetSelection()
+
+    def pasteObjects(self,  ray):
+        if len(self.cutList) < 1:
+            return
+
+        result = og.Math.intersects(ray, self.dropCollisionPlane)
+        if result.first == True:
+            i=0
+            while i < len(self.cutList):
+                self.cutListPreviousNodes[i].addChild(self.cutList[i].entity.getParentNode())
+                self.cutList[i].entity.getParentNode().translate(ray.getPoint(result.second))
+                i = i+1
+        else:
+            i=0
+            while i < len(self.cutList):
+                self.cutListPreviousNodes[i].addChild(self.cutList[i].entity.getParentNode())
+                self.cutList[i].entity.getParentNode().translate(ray.getPoint(100.0))
+                i = i+1
+        self.cutList = []
+
+    def leftMouseUp(self):
+        if self.pivot is not None and self.pivot.isTransforming:
+            self.pivot.stopTransforming()
+
+    def resetSelection(self):
+        for so in self.userSelectionList:
+            so.setSelected(False)
+
+        self.userSelectionList = []
+
+        self.listenerDings.reset()
+        pass
+
+
+    def updatePivots(self):
+        newPivotPosition = og.Vector3(0, 0, 0)
+
+        for so in self.userSelectionList:
+            newPivotPosition += so.entity.getParentNode().getPosition()
+        if self.pivot is not None:
+            self.pivot.setPosition(newPivotPosition / len(self.userSelectionList))
+
+    def unload(self,  saveOnUnload=True):
+        pass
+
+    def save(self):
+        pass
+
+    def startDropGameObjectAction(self, classid, ray):
+        go = self.gocManager.getGameObjectWithClassId(classid)
+
+        if go is not None:
+            meshFile = go.getMeshFileName()
+            dropEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
+            dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
+            dropNode.attachObject(dropEntity)
+
+            result = og.Math.intersects(ray, self.dropCollisionPlane)
+            if result.first == True:
+                dropNode.setPosition(ray.getPoint(result.second))
+            else:
+                dropNode.setPosition(ray.getPoint(50))
+
+            self.dropGO = GameObjectRepresentation(self.dropCount, classid, dropNode, meshFile)
+            dropEntity.setUserObject(self.dropGO)
+
+        self.dropCount += 1
+
+    def moveDropGameObjectAction(self, ray):
+        result = og.Math.intersects(ray, self.dropCollisionPlane)
+        if result.first == True:
+            self.dropGO.setPosition(ray.getPoint(result.second))
+        else:
+            self.dropGO.setPosition(ray.getPoint(50))
+
+    def stopDropGameObjectAction(self, ray):
+        print "sd"
+
+    def startDropModelAction(self, meshFile, ray):
+        self.dropEntity = self.sceneManager.createEntity("dropMesh" + str(self.dropCount), str(meshFile))
+        self.dropNode = self.sceneManager.getRootSceneNode().createChild("dropNode" + str(self.dropCount))
+        self.dropNode.attachObject(self.dropEntity)
+
+        result = og.Math.intersects(ray, self.dropCollisionPlane)
+        if result.first == True:
+            self.dropNode.setPosition(ray.getPoint(result.second))
+        else:
+            self.dropNode.setPosition(ray.getPoint(50))
+
+        self.dropCount += 1
+
+    def moveDropModelAction(self, ray):
+        result = og.Math.intersects(ray, self.dropCollisionPlane)
+        if result.first == True:
+            self.dropNode.setPosition(ray.getPoint(result.second))
+        else:
+            self.dropNode.setPosition(ray.getPoint(50))
+
+
+    def stopDropModelAction(self, ray):
+        pass
+

Modified: rl/branches/newton20/editors/Lockenwickler/src/MovePivot.py
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/src/MovePivot.py	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/src/MovePivot.py	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,218 +1,218 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-
-import sys
-import ogre.renderer.OGRE as og
-
-class Pivot():
-    def __init__(self,  sceneManager):
-        self.sceneManager = sceneManager
-        self.camera = self.sceneManager.getCamera("MainCam")
-
-        self.mode = None
-        self.isHidden = True
-
-        self.meshManager = og.MeshManager.getSingleton ()
-
-        self.pivotNode = sceneManager.getRootSceneNode().createChildSceneNode("pivotNode")
-        self.__createMovePivot()
-        self.__createRotatePivot()
-        self.__createScalePivot()
-        self.hide()
-        self.setMoveMode()
-
-        self.moveDirection = None
-        self.isTransforming = False
-        self.selectionList = None
-
-    def __createMovePivot(self):
-        self.xMoveEntity = self.sceneManager.createEntity("EditorXArrow",  "Pivot_Arrow.mesh")
-        self.xMoveEntity.setMaterialName("Lockenwickler_Pivot_X")
-#        self.xMoveEntity.getSubEntity(0).getMaterial().setDepthCheckEnabled(False)
-#        self.xMoveEntity.getSubEntity(0).getMaterial().setDepthWriteEnabled(False)
-        self.xMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.xMoveNode = self.pivotNode.createChildSceneNode()
-        self.xMoveNode.attachObject(self.xMoveEntity)
-        self.xMoveNode.translate(og.Vector3(2, 0, 0))
-        self.xMoveNode.rotate(og.Vector3.UNIT_Y,  og.Degree(90))
-
-#        plane = og.Plane (og.Vector3.UNIT_X, 0)
-#        self.meshManager.createPlane ('EditorXArrowSelectionPlane', 'General', plane, 5, 14, 1, 1, False, 1, 5, 5, (0, 0, 1))
-#        self.xMoveEntitySelectionPlane = self.sceneManager.createEntity ('EditorXArrowSelectionPlane', 'EditorXArrowSelectionPlane')
-#        self.xMoveNodeSelectionPlane = self.xMoveNode.createChildSceneNode()
-#        self.xMoveNodeSelectionPlane.attachObject (self.xMoveEntitySelectionPlane)
-#        self.xMoveNodeSelectionPlane.translate(og.Vector3(0, 0, 5))
-#        self.xMoveEntitySelectionPlane.setMaterialName("Lockenwickler_Pivot_X")
-
-
-
-        self.yMoveEntity = self.sceneManager.createEntity("EditorYArrow",  "Pivot_Arrow.mesh")
-        self.yMoveEntity.setMaterialName("Lockenwickler_Pivot_Y")
-        self.yMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.yMoveNode = self.pivotNode.createChildSceneNode()
-        self.yMoveNode.attachObject(self.yMoveEntity)
-        self.yMoveNode.translate(og.Vector3(0, 2, 0))
-        self.yMoveNode.rotate(og.Vector3.UNIT_X,  og.Degree(-90))
-        #self.yNode.showBoundingBox(True)
-
-#        plane = og.Plane (og.Vector3.UNIT_X, 0)
-#        self.meshManager.createPlane ('EditorYArrowSelectionPlane', 'General', plane, 14, 0, 1, 1, False, 1, 5, 5, (0, 0, 1))
-#        self.yMoveEntitySelectionPlane = self.sceneManager.createEntity ('EditorYArrowSelectionPlane', 'EditorYArrowSelectionPlane')
-#        self.yMoveNodeSelectionPlane = self.xMoveNode.createChildSceneNode()
-#        self.yMoveNodeSelectionPlane.attachObject (self.yMoveEntitySelectionPlane)
-#        self.yMoveNodeSelectionPlane.translate(og.Vector3(0, 5, 0))
-#        self.yMoveEntitySelectionPlane.setMaterialName("Lockenwickler_Pivot_Y")
-
-
-        self.zMoveEntity = self.sceneManager.createEntity("EditorZArrow",  "Pivot_Arrow.mesh")
-        self.zMoveEntity.setMaterialName("Lockenwickler_Pivot_Z")
-        self.zMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.zMoveNode = self.pivotNode.createChildSceneNode()
-        self.zMoveNode.attachObject(self.zMoveEntity)
-        self.zMoveNode.translate(og.Vector3(0, 0, 2))
-        #self.zNode.showBoundingBox(True)
-
-        self.freeMoveEntity = self.sceneManager.createEntity("EditorFreeMoveArrow",  "Pivot_FreeMover.mesh")
-        self.freeMoveEntity.setMaterialName("Lockenwickler_FreeMover")
-        self.freeMoveNode = self.pivotNode.createChildSceneNode()
-        self.freeMoveNode.attachObject(self.freeMoveEntity)
-
-
-    def __createRotatePivot(self):
-        self.xRotateEntity = self.sceneManager.createEntity("EditorXRotator",  "Rotate_Torus.mesh")
-        self.xRotateEntity.setMaterialName("Lockenwickler_Pivot_X")
-        self.xRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.xRotateNode = self.pivotNode.createChildSceneNode()
-        self.xRotateNode.attachObject(self.xRotateEntity)
-        #self.xRotateNode.translate(0, 0, -5)
-        self.xRotateNode.rotate(og.Vector3.UNIT_Y,  og.Degree(90))
-
-        self.yRotateEntity = self.sceneManager.createEntity("EditorYRotator",  "Rotate_Torus.mesh")
-        self.yRotateEntity.setMaterialName("Lockenwickler_Pivot_Y")
-        self.yRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.yRotateNode = self.pivotNode.createChildSceneNode()
-        self.yRotateNode.attachObject(self.yRotateEntity)
-        #self.yRotateNode.translate(0, 0, -10)
-        self.yRotateNode.rotate(og.Vector3.UNIT_X,  og.Degree(90))
-
-        self.zRotateEntity = self.sceneManager.createEntity("EditorZRotator",  "Rotate_Torus.mesh")
-        self.zRotateEntity.setMaterialName("Lockenwickler_Pivot_Z")
-        self.zRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
-        self.zRotateNode = self.pivotNode.createChildSceneNode()
-        self.zRotateNode.attachObject(self.zRotateEntity)
-
-
-    def __createScalePivot(self):
-        pass
-
-    def setPosition(self,  pos):
-        self.pivotNode.setPosition(pos)
-
-    def getPosition(self):
-        return self.pivotNode.getPosition()
-
-    def startTransforming(self, dirEntity, soList):
-        print "dbg: transforming....."
-        self.moveDirection = dirEntity.getName()
-        self.selectionList = soList
-        self.isTransforming = True
-        pass
-
-    def stopTransforming(self):
-        self.isTransforming = False
-        pass
-
-    def hide(self):
-        self.pivotNode.removeAllChildren()
-        self.isHidden = True
-
-    def show(self):
-        self.hide()
-        if self.mode == 1:
-            self.pivotNode.addChild(self.xMoveNode)
-            self.pivotNode.addChild(self.yMoveNode)
-            self.pivotNode.addChild(self.zMoveNode)
-        elif self.mode == 2:
-            self.pivotNode.addChild(self.xRotateNode)
-            self.pivotNode.addChild(self.yRotateNode)
-            self.pivotNode.addChild(self.zRotateNode)
-        elif self.mode == 3:
-            return
-        self.isHidden = False
-
-    def setMoveMode(self):
-        self.hide()
-        self.mode = 1
-        self.pivotNode.addChild(self.xMoveNode)
-        self.pivotNode.addChild(self.yMoveNode)
-        self.pivotNode.addChild(self.zMoveNode)
-        pass
-
-    def setRotateMode(self):
-        self.hide()
-        self.mode = 2
-        self.pivotNode.addChild(self.xRotateNode)
-        self.pivotNode.addChild(self.yRotateNode)
-        self.pivotNode.addChild(self.zRotateNode)
-        pass
-
-    def settScaleMode(self):
-        pass
-
-    def onMouseMoved(self, globalX, globalY, incX, incY):
-        # move mode
-        if self.isTransforming:
-            if self.mode == 1:
-                transFactor = 0.1
-                transVec = og.Vector3()
-                if self.moveDirection == "EditorXArrow":
-                    transVec = og.Vector3(-incX, 0.0 , 0.0)
-                elif self.moveDirection == "EditorYArrow":
-                    transVec = og.Vector3(0.0, -incY, 0.0)
-                elif self.moveDirection == "EditorZArrow":
-                    transVec = og.Vector3(0.0, 0.0, incX)
-
-                transVec = transVec * transFactor
-                for so in self.selectionList:
-                    so.entity.getParentNode().translate(transVec)
-
-                self.pivotNode.translate(transVec)
-
-            # rotate mode
-            elif self.mode == 2:
-                rotValue = (incX + incY) * 0.05
-
-                if self.moveDirection == "EditorXRotator":
-                    for so in self.selectionList:
-                        so.entity.getParentNode().pitch(rotValue)
-                if self.moveDirection == "EditorYRotator":
-                    for so in self.selectionList:
-                        so.entity.getParentNode().yaw(rotValue)
-                if self.moveDirection == "EditorZRotator":
-                    for so in self.selectionList:
-                        so.entity.getParentNode().roll(rotValue)
-
-        self.update()
-
-    def update(self):
-        if not self.isHidden:
-            dist = self.camera.getPosition().distance(self.pivotNode.getPosition())
-            self.pivotNode.setScale(og.Vector3(0.5,  0.5,  0.5) * (dist / 30))
-
-
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+
+import sys
+import ogre.renderer.OGRE as og
+
+class Pivot():
+    def __init__(self,  sceneManager):
+        self.sceneManager = sceneManager
+        self.camera = self.sceneManager.getCamera("MainCam")
+
+        self.mode = None
+        self.isHidden = True
+
+        self.meshManager = og.MeshManager.getSingleton ()
+
+        self.pivotNode = sceneManager.getRootSceneNode().createChildSceneNode("pivotNode")
+        self.__createMovePivot()
+        self.__createRotatePivot()
+        self.__createScalePivot()
+        self.hide()
+        self.setMoveMode()
+
+        self.moveDirection = None
+        self.isTransforming = False
+        self.selectionList = None
+
+    def __createMovePivot(self):
+        self.xMoveEntity = self.sceneManager.createEntity("EditorXArrow",  "Pivot_Arrow.mesh")
+        self.xMoveEntity.setMaterialName("Lockenwickler_Pivot_X")
+#        self.xMoveEntity.getSubEntity(0).getMaterial().setDepthCheckEnabled(False)
+#        self.xMoveEntity.getSubEntity(0).getMaterial().setDepthWriteEnabled(False)
+        self.xMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.xMoveNode = self.pivotNode.createChildSceneNode()
+        self.xMoveNode.attachObject(self.xMoveEntity)
+        self.xMoveNode.translate(og.Vector3(2, 0, 0))
+        self.xMoveNode.rotate(og.Vector3().UNIT_Y,  og.Degree(90))
+
+#        plane = og.Plane (og.Vector3.UNIT_X, 0)
+#        self.meshManager.createPlane ('EditorXArrowSelectionPlane', 'General', plane, 5, 14, 1, 1, False, 1, 5, 5, (0, 0, 1))
+#        self.xMoveEntitySelectionPlane = self.sceneManager.createEntity ('EditorXArrowSelectionPlane', 'EditorXArrowSelectionPlane')
+#        self.xMoveNodeSelectionPlane = self.xMoveNode.createChildSceneNode()
+#        self.xMoveNodeSelectionPlane.attachObject (self.xMoveEntitySelectionPlane)
+#        self.xMoveNodeSelectionPlane.translate(og.Vector3(0, 0, 5))
+#        self.xMoveEntitySelectionPlane.setMaterialName("Lockenwickler_Pivot_X")
+
+
+
+        self.yMoveEntity = self.sceneManager.createEntity("EditorYArrow",  "Pivot_Arrow.mesh")
+        self.yMoveEntity.setMaterialName("Lockenwickler_Pivot_Y")
+        self.yMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.yMoveNode = self.pivotNode.createChildSceneNode()
+        self.yMoveNode.attachObject(self.yMoveEntity)
+        self.yMoveNode.translate(og.Vector3(0, 2, 0))
+        self.yMoveNode.rotate(og.Vector3().UNIT_X,  og.Degree(-90))
+        #self.yNode.showBoundingBox(True)
+
+#        plane = og.Plane (og.Vector3().UNIT_X, 0)
+#        self.meshManager.createPlane ('EditorYArrowSelectionPlane', 'General', plane, 14, 0, 1, 1, False, 1, 5, 5, (0, 0, 1))
+#        self.yMoveEntitySelectionPlane = self.sceneManager.createEntity ('EditorYArrowSelectionPlane', 'EditorYArrowSelectionPlane')
+#        self.yMoveNodeSelectionPlane = self.xMoveNode.createChildSceneNode()
+#        self.yMoveNodeSelectionPlane.attachObject (self.yMoveEntitySelectionPlane)
+#        self.yMoveNodeSelectionPlane.translate(og.Vector3(0, 5, 0))
+#        self.yMoveEntitySelectionPlane.setMaterialName("Lockenwickler_Pivot_Y")
+
+
+        self.zMoveEntity = self.sceneManager.createEntity("EditorZArrow",  "Pivot_Arrow.mesh")
+        self.zMoveEntity.setMaterialName("Lockenwickler_Pivot_Z")
+        self.zMoveEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.zMoveNode = self.pivotNode.createChildSceneNode()
+        self.zMoveNode.attachObject(self.zMoveEntity)
+        self.zMoveNode.translate(og.Vector3(0, 0, 2))
+        #self.zNode.showBoundingBox(True)
+
+        self.freeMoveEntity = self.sceneManager.createEntity("EditorFreeMoveArrow",  "Pivot_FreeMover.mesh")
+        self.freeMoveEntity.setMaterialName("Lockenwickler_FreeMover")
+        self.freeMoveNode = self.pivotNode.createChildSceneNode()
+        self.freeMoveNode.attachObject(self.freeMoveEntity)
+
+
+    def __createRotatePivot(self):
+        self.xRotateEntity = self.sceneManager.createEntity("EditorXRotator",  "Rotate_Torus.mesh")
+        self.xRotateEntity.setMaterialName("Lockenwickler_Pivot_X")
+        self.xRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.xRotateNode = self.pivotNode.createChildSceneNode()
+        self.xRotateNode.attachObject(self.xRotateEntity)
+        #self.xRotateNode.translate(0, 0, -5)
+        self.xRotateNode.rotate(og.Vector3().UNIT_Y,  og.Degree(90))
+
+        self.yRotateEntity = self.sceneManager.createEntity("EditorYRotator",  "Rotate_Torus.mesh")
+        self.yRotateEntity.setMaterialName("Lockenwickler_Pivot_Y")
+        self.yRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.yRotateNode = self.pivotNode.createChildSceneNode()
+        self.yRotateNode.attachObject(self.yRotateEntity)
+        #self.yRotateNode.translate(0, 0, -10)
+        self.yRotateNode.rotate(og.Vector3().UNIT_X,  og.Degree(90))
+
+        self.zRotateEntity = self.sceneManager.createEntity("EditorZRotator",  "Rotate_Torus.mesh")
+        self.zRotateEntity.setMaterialName("Lockenwickler_Pivot_Z")
+        self.zRotateEntity.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY)
+        self.zRotateNode = self.pivotNode.createChildSceneNode()
+        self.zRotateNode.attachObject(self.zRotateEntity)
+
+
+    def __createScalePivot(self):
+        pass
+
+    def setPosition(self,  pos):
+        self.pivotNode.setPosition(pos)
+
+    def getPosition(self):
+        return self.pivotNode.getPosition()
+
+    def startTransforming(self, dirEntity, soList):
+        print "dbg: transforming....."
+        self.moveDirection = dirEntity.getName()
+        self.selectionList = soList
+        self.isTransforming = True
+        pass
+
+    def stopTransforming(self):
+        self.isTransforming = False
+        pass
+
+    def hide(self):
+        self.pivotNode.removeAllChildren()
+        self.isHidden = True
+
+    def show(self):
+        self.hide()
+        if self.mode == 1:
+            self.pivotNode.addChild(self.xMoveNode)
+            self.pivotNode.addChild(self.yMoveNode)
+            self.pivotNode.addChild(self.zMoveNode)
+        elif self.mode == 2:
+            self.pivotNode.addChild(self.xRotateNode)
+            self.pivotNode.addChild(self.yRotateNode)
+            self.pivotNode.addChild(self.zRotateNode)
+        elif self.mode == 3:
+            return
+        self.isHidden = False
+
+    def setMoveMode(self):
+        self.hide()
+        self.mode = 1
+        self.pivotNode.addChild(self.xMoveNode)
+        self.pivotNode.addChild(self.yMoveNode)
+        self.pivotNode.addChild(self.zMoveNode)
+        pass
+
+    def setRotateMode(self):
+        self.hide()
+        self.mode = 2
+        self.pivotNode.addChild(self.xRotateNode)
+        self.pivotNode.addChild(self.yRotateNode)
+        self.pivotNode.addChild(self.zRotateNode)
+        pass
+
+    def settScaleMode(self):
+        pass
+
+    def onMouseMoved(self, globalX, globalY, incX, incY):
+        # move mode
+        if self.isTransforming:
+            if self.mode == 1:
+                transFactor = 0.1
+                transVec = og.Vector3()
+                if self.moveDirection == "EditorXArrow":
+                    transVec = og.Vector3(-incX, 0.0 , 0.0)
+                elif self.moveDirection == "EditorYArrow":
+                    transVec = og.Vector3(0.0, -incY, 0.0)
+                elif self.moveDirection == "EditorZArrow":
+                    transVec = og.Vector3(0.0, 0.0, incX)
+
+                transVec = transVec * transFactor
+                for so in self.selectionList:
+                    so.entity.getParentNode().translate(transVec)
+
+                self.pivotNode.translate(transVec)
+
+            # rotate mode
+            elif self.mode == 2:
+                rotValue = (incX + incY) * 0.05
+
+                if self.moveDirection == "EditorXRotator":
+                    for so in self.selectionList:
+                        so.entity.getParentNode().pitch(rotValue)
+                if self.moveDirection == "EditorYRotator":
+                    for so in self.selectionList:
+                        so.entity.getParentNode().yaw(rotValue)
+                if self.moveDirection == "EditorZRotator":
+                    for so in self.selectionList:
+                        so.entity.getParentNode().roll(rotValue)
+
+        self.update()
+
+    def update(self):
+        if not self.isHidden:
+            dist = self.camera.getPosition().distance(self.pivotNode.getPosition())
+            self.pivotNode.setScale(og.Vector3(0.5,  0.5,  0.5) * (dist / 30))
+
+

Modified: rl/branches/newton20/editors/Lockenwickler/src/MyRaySceneQueryListener.py
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/src/MyRaySceneQueryListener.py	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/src/MyRaySceneQueryListener.py	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,306 +1,347 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-import ctypes
-import ogre.renderer.OGRE as og
-
-# a class to store information about a object that got selected
-class SelectionObject():
-    def __init__(self,  entity,  distance):
-        self.entityName = entity.getName()
-        self.entity = entity #the selected entity
-        self.distance = distance # the distance from camera at the time of selection
-        self.isPivot = False
-
-#        if self.entity.getUserObject() is not None:
-#            self.isGameObject = True
-#        else:
-#            self.isGameObject = False
-
-    #if True this instance will show its bounding box else it will hide it
-    def setSelected(self,  selected):
-        if selected == True:
-            self.entity.getParentNode().showBoundingBox(True)
-        else:
-            self.entity.getParentNode().showBoundingBox(False)
-
-    def __eq__(self, other):
-        return self.entity.getName() == other.entity.getName()
-
-    def __ne__(self, other):
-        return self.entity.getName() != other.entity.getName()
-
-class MyRaySceneQueryListener ( og.RaySceneQueryListener ):
-    def __init__( self ):
-        super ( MyRaySceneQueryListener, self ).__init__()
-        self.previouseSelection = None
-        self.selectionList = []
-        self.previousSelected = -1
-        self.currentSelected = -1
-
-        self.mNormalList = []
-        self.mVertexList = []
-        self.mIndexList = []
-
-        self.currentRay = None
-        self.lastRay = None
-
-    # sort algorithm for the selection list
-    def sortCompareImp(self,  x,  y):
-        if x.distance > y.distance:
-            return 1
-        elif x.distance == y.distance:
-            return 0
-        else: # x<y
-            return -1
-
-    def queryResult ( self, entity, distance ):
-        #print "dbg: " + entity.getName()
-        if distance == 0.0: #camera is in the bounding box, ignore this selection
-            return True
-#        elif entity.getName() == "rayLine" :
-#            return True
-        elif entity.getName() == "OgreMainWin::0::ViewportGrid":
-            return True
-        elif entity.isVisible() and entity.getName() == "EditorXArrow":
-            so = SelectionObject(entity,  distance)
-            so.isPivot = True
-            self.selectionList.append(so)
-            return False
-        elif entity.isVisible() and entity.getName() == "EditorYArrow":
-            so = SelectionObject(entity,  distance)
-            so.isPivot = True
-            self.selectionList.append(so)
-            return False
-        elif entity.isVisible() and entity.getName() == "EditorZArrow":
-            so = SelectionObject(entity,  distance)
-            so.isPivot = True
-            self.selectionList.append(so)
-            return False
-        elif entity.isVisible() and entity.getName() == "EditorFreeMover":
-            return True
-        elif entity.getName() == "EditorXRotator" or entity.getName() == "EditorYRotator" or entity.getName() == "EditorZRotator":
-            if entity.isVisible() and self.rayCastToPolygonLevelOnSingleMesh(self.currentRay,  entity):
-                so = SelectionObject(entity,  distance)
-                so.isPivot = True
-                self.selectionList.append(so)
-                return False
-            else:
-                return True
-        else:
-            so = SelectionObject(entity,  distance)
-            self.selectionList.append(so)
-
-        self.selectionList.sort(self.sortCompareImp)
-
-        return True
-
-    def reset(self):
-        self.previousSelected = -1
-        self.currentSelected = -1
-        del self.selectionList[:]
-        #self.selectionList = []
-
-#    def iterateEntityUnderMouse(self):
-#        self.previousSelected = self.currentSelected
-#        if len(self.selectionList) >= self.currentSelected: # would mean we are out of bounds
-#            self.selectionList[self.currentSelected].setSelected(False)
-#
-#        self.currentSelected += 1
-#
-#        if len(self.selectionList) == self.currentSelected: # means we are out of bounds and reached the end of the list, reset it to zero
-#            self.currentSelected = 0
-#
-#        if len(self.selectionList) >= self.currentSelected: # would mean we are out of bounds
-#            #print str(self.selectionList[self.currentSelected].distance) + " "  + self.selectionList[self.currentSelected].entity.getName()
-#            if self.rayCastToPolygonLevelOnCurrentSelection():
-#                self.selectionList[self.currentSelected].setSelected(True)
-#                return self.selectionList[self.currentSelected]
-
-
-    def getMeshInformation(self,  entity):
-        numVertices = 0
-        numIndices = 0
-        useSharedVertices = False
-
-        if not entity:
-            return False
-
-        pMesh = entity.getMesh()
-
-        pos =    entity.getParentNode().getWorldPosition()
-        orient = entity.getParentNode().getWorldOrientation()
-        scale =  entity.getParentNode().getScale()
-
-        for i in range ( pMesh.getNumSubMeshes() ):
-            pSubMesh = pMesh.getSubMesh(i)
-            if pSubMesh.useSharedVertices:
-                useSharedVertices = True
-            else:
-                numVertices += pSubMesh.vertexData.vertexCount
-            numIndices += pSubMesh.indexData.indexCount
-
-        if useSharedVertices:
-            numVertices += pMesh.sharedVertexData.vertexCount
-
-            storageclass = ctypes.c_float * 3
-            test=storageclass(0.0,  0.0,  0.0)
-#         mVertexList = new Point[numVertices];
-#         mIndexList = new unsigned int[numIndices];
-
-        self.mVertexList = []
-        self.mIndexList = []
-
-        ## Count the number of vertices and incides so we can Set them
-        indexCount = 0
-        vertListCount = 0
-
-        if useSharedVertices:
-            ## Real* pVertices (x, y, z order x numVertices)
-            elem = pMesh.sharedVertexData.vertexDeclaration.findElementBySemantic(og.VES_POSITION)
-
-            if not elem:
-                ogre.Except(Exception.ERR_ITEM_NOT_FOUND, "Can't find position elements in the "
-                    "mesh to be written!", "MeshSerializerImpl.writeGeometry")
-
-            vbuf = pMesh.sharedVertexData.vertexBufferBinding.getBuffer(elem.getSource())
-
-            ## need space for the 3 verticies
-            storageclass = ctypes.c_float * 3
-            test=storageclass(0.0,  0.0,  0.0)
-
-            for j in range ( pMesh.sharedVertexData.vertexCount ):
-                vbuf.readData(j * vbuf.getVertexSize(), 3 * ctype.sizeof(ctype.c_float), ctype.addressof(test))
-                self.mVertexList.append( og.Vector3(test[0], test[1], test[2]) )
-                vertListCount+=1
-
-        for i in range ( pMesh.getNumSubMeshes() ):
-            pSubMesh = pMesh.getSubMesh(i)
-            if not pSubMesh.useSharedVertices:
-                ## Real* pVertices (x, y, z order x numVertices)
-                elem = pSubMesh.vertexData.vertexDeclaration.findElementBySemantic(og.VES_POSITION)
-
-                if not elem:
-                    og.Except(Exception.ERR_ITEM_NOT_FOUND, "Can't find position elements in the "
-                        "mesh to be written!", "MeshSerializerImpl.writeGeometry")
-
-                vbuf = pSubMesh.vertexData.vertexBufferBinding.getBuffer(elem.getSource())
-
-                ## need space for the verticies
-                storageclass = ctypes.c_float * (pSubMesh.vertexData.vertexCount * 6)
-                test=storageclass(0.0)
-
-                vbuf.readData(0, pSubMesh.vertexData.vertexCount * 6 * ctypes.sizeof(ctypes.c_float), ctypes.addressof(test))
-
-                for j in range ( 0,  pSubMesh.vertexData.vertexCount * 6,  6):
-                    #print j
-                    p = og.Vector3(test[j], test[j+1], test[j+2])
-                    p /= scale
-                    p += pos
-                    p = orient * p
-                    self.mVertexList.append( p )
-                    vertListCount += 1
-
-            ibuf = pSubMesh.indexData.indexBuffer
-            ## need space for the verticies
-            storageclass = ctypes.c_ushort * pSubMesh.indexData.indexCount
-            test2=storageclass()
-
-
-            ibuf.readData(0, ibuf.getSizeInBytes(), ctypes.addressof(test2))
-            for j in range ( pSubMesh.indexData.indexCount ):
-                self.mIndexList.append (test2[j])   # unsigned short
-                indexCount += 1
-
-            ih = 0
-            for blah in self.mVertexList:
-                #print str(ih) + ": "  +  str(blah)
-                ih += 1
-
-#            for blah in self.mIndexList:
-#                print blah
-
-
-    # used when a new selection is made, meaning when not iterationg through the selected objects
-    def rayCastToPolygonLevel(self,  ray):
-        self.lastRay = ray
-
-        for so in self.selectionList:
-            if so.isPivot:
-                return so
-
-        if len(self.selectionList) >= 1:
-            for so in self.selectionList:
-                if self.rayCastToPolygonLevelOnSingleMesh(ray,  so.entity):
-                    return so
-
-
-    def rayCastToPolygonLevelOnSingleMesh(self,  ray,  entity):
-        return True
-        self.getMeshInformation(entity)
-        name = entity.getName()
-        print "dbg: " + name
-
-        temp = []
-        for vec in self.mVertexList:
-            temp.append(vec.x)
-            temp.append(vec.y)
-            temp.append(vec.z)
-
-        globalPosition = entity.getParentNode().getWorldPosition()
-        globalOrientation = entity.getParentNode().getWorldOrientation()
-
-
-        i = 0
-        while i <= (len(self.mIndexList) - 3):
-            verta = globalPosition + self.mVertexList[self.mIndexList[i]]
-            vertb = globalPosition + self.mVertexList[self.mIndexList[i+1]]
-            vertc = globalPosition + self.mVertexList[self.mIndexList[i+2]]
-
-            verta = globalOrientation * verta
-            vertb = globalOrientation * vertb
-            vertc = globalOrientation * vertc
-            normal = og.Math.calculateBasicFaceNormal(verta, vertb, vertc)
-
-            result = og.Math.intersects(ray, verta, vertb, vertc, True, True)
-            #result = og.Math.intersects(ray, globalPosition + self.mVertexList[self.mIndexList[i]], globalPosition + self.mVertexList[self.mIndexList[i+1]],
-            #                                                                                                                                              globalPosition + self.mVertexList[self.mIndexList[i+2]], normal,  True, True)
-
-            if result.first:
-                print "dbg: Treffer!!!!!!!!!"
-                return True
-
-            i += 3
-
-        return False
-
-    def rayCastToPolygonLevelOnCurrentSelection(self):
-        if len(self.selectionList) >= 1:
-            self.getMeshInformation(self.selectionList[self.currentSelected].entity)
-
-            i = 0
-            while i <= (len(self.mIndexList) - 3):
-                globalPosition = self.selectionList[self.currentSelected].entity.getParentNode().getPosition()
-                result = og.Math.intersects(self.lastRay, globalPosition + self.mVertexList[self.mIndexList[i]], globalPosition + self.mVertexList[self.mIndexList[i+1]],
-                                                                                                                                                          globalPosition + self.mVertexList[self.mIndexList[i+2]], True, True)
-
-                if result.first:
-                   return True
-
-                i += 3
-            return False
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+import ctypes
+import ogre.renderer.OGRE as og
+import ogre.physics.OgreNewt as on
+
+# a class to store information about a object that got selected
+class SelectionObject():
+    def __init__(self,  entity,  distance):
+        self.entityName = entity.getName()
+        self.entity = entity #the selected entity
+        self.distance = distance # the distance from camera at the time of selection
+        self.isPivot = False
+
+#        if self.entity.getUserObject() is not None:
+#            self.isGameObject = True
+#        else:
+#            self.isGameObject = False
+
+    #if True this instance will show its bounding box else it will hide it
+    def setSelected(self,  selected):
+        if selected == True:
+            self.entity.getParentNode().showBoundingBox(True)
+        else:
+            self.entity.getParentNode().showBoundingBox(False)
+
+    def __eq__(self, other):
+        return self.entity.getName() == other.entity.getName()
+
+    def __ne__(self, other):
+        return self.entity.getName() != other.entity.getName()
+
+class MyRaySceneQueryListener ( og.RaySceneQueryListener ):
+    def __init__( self ):
+        super ( MyRaySceneQueryListener, self ).__init__()
+        self.previouseSelection = None
+        self.selectionList = []
+        self.previousSelected = -1
+        self.currentSelected = -1
+
+        self.mNormalList = []
+        self.mVertexList = []
+        self.mIndexList = []
+
+        self.currentRay = None
+        self.lastRay = None
+
+        self.World = on.World()
+        self.World.setWorldSize(og.Vector3(-1000000, -1000000, -1000000), og.Vector3(1000000, 1000000, 1000000))
+
+    def __del__(self):
+        del self.World
+
+    # sort algorithm for the selection list
+    def sortCompareImp(self,  x,  y):
+        if x.distance > y.distance:
+            return 1
+        elif x.distance == y.distance:
+            return 0
+        else: # x<y
+            return -1
+
+    def queryResult ( self, entity, distance ):
+        #print "dbg: " + entity.getName()
+        if distance == 0.0: #camera is in the bounding box, ignore this selection
+            return True
+        elif entity.getName() == "OgreMainWin::0::ViewportGrid":
+            return True
+        elif entity.getName() == "rayLine":
+            return True
+        elif entity.isVisible() and entity.getName() == "EditorXArrow":
+            so = SelectionObject(entity,  distance)
+            so.isPivot = True
+            self.selectionList.append(so)
+            return False
+        elif entity.isVisible() and entity.getName() == "EditorYArrow":
+            so = SelectionObject(entity,  distance)
+            so.isPivot = True
+            self.selectionList.append(so)
+            return False
+        elif entity.isVisible() and entity.getName() == "EditorZArrow":
+            so = SelectionObject(entity,  distance)
+            so.isPivot = True
+            self.selectionList.append(so)
+            return False
+        elif entity.isVisible() and entity.getName() == "EditorFreeMover":
+            return True
+        elif entity.getName() == "EditorXRotator" or entity.getName() == "EditorYRotator" or entity.getName() == "EditorZRotator":
+            if entity.isVisible() and self.rayCastToPolygonLevelOnSingleMesh(self.currentRay,  entity):
+                so = SelectionObject(entity,  distance)
+                so.isPivot = True
+                self.selectionList.append(so)
+                return False
+            else:
+                return True
+        else:
+            so = SelectionObject(entity,  distance)
+            self.selectionList.append(so)
+
+        self.selectionList.sort(self.sortCompareImp)
+
+        return True
+
+    def reset(self):
+        self.previousSelected = -1
+        self.currentSelected = -1
+        del self.selectionList[:]
+        #self.selectionList = []
+
+    def rayCastToPolygonLevel(self,  ray):
+        self.lastRay = ray
+
+        for so in self.selectionList:
+            if so.isPivot:
+                return so
+
+        if len(self.selectionList) >= 1:
+            for so in self.selectionList:
+                if self.rayCastToPolygonLevelOnSingleMesh(ray,  so.entity):
+                    return so
+
+
+    def rayCastToPolygonLevelOnSingleMesh(self,  ray,  entity):
+        col = on.TreeCollision(self.World, entity.getParentNode(), False)
+        bod = on.Body(self.World, col)
+
+
+        start = ray.getOrigin()
+        end = ray.getPoint(10000)
+
+        retNorm = og.Vector3(0.0, 0.0, 0.0)
+
+        val = on.CollisionRayCast(col, start, end, retNorm)
+#        print val
+#
+#        print retNorm.x
+#        print retNorm.y
+#        print retNorm.z
+        del col
+        self.World.destroyAllBodies()
+        
+        if retNorm.x != 0.0 or retNorm.y != 0.0 or retNorm.z != 0.0:
+#           print "yes"
+           return True
+        else:
+#            print "no"
+            return False
+           
+        
+        
+
+#    def iterateEntityUnderMouse(self):
+#        self.previousSelected = self.currentSelected
+#        if len(self.selectionList) >= self.currentSelected: # would mean we are out of bounds
+#            self.selectionList[self.currentSelected].setSelected(False)
+#
+#        self.currentSelected += 1
+#
+#        if len(self.selectionList) == self.currentSelected: # means we are out of bounds and reached the end of the list, reset it to zero
+#            self.currentSelected = 0
+#
+#        if len(self.selectionList) >= self.currentSelected: # would mean we are out of bounds
+#            #print str(self.selectionList[self.currentSelected].distance) + " "  + self.selectionList[self.currentSelected].entity.getName()
+#            if self.rayCastToPolygonLevelOnCurrentSelection():
+#                self.selectionList[self.currentSelected].setSelected(True)
+#                return self.selectionList[self.currentSelected]
+
+
+#    def getMeshInformation(self,  entity):
+#        numVertices = 0
+#        numIndices = 0
+#        useSharedVertices = False
+#
+#        if not entity:
+#            return False
+#
+#        pMesh = entity.getMesh()
+#
+#        position =    entity.getParentNode()._getDerivedPosition()
+#        orient = entity.getParentNode()._getDerivedOrientation()
+#        scale =  entity.getParentNode().getScale()
+#
+#        for i in range ( pMesh.getNumSubMeshes() ):
+#            pSubMesh = pMesh.getSubMesh(i)
+#            if pSubMesh.useSharedVertices:
+#                useSharedVertices = True
+#            else:
+#                numVertices += pSubMesh.vertexData.vertexCount
+#            numIndices += pSubMesh.indexData.indexCount
+#
+#        if useSharedVertices:
+#            numVertices += pMesh.sharedVertexData.vertexCount
+#
+#            storageclass = ctypes.c_float * 3
+#            test=storageclass(0.0,  0.0,  0.0)
+##         mVertexList = new Point[numVertices];
+##         mIndexList = new unsigned int[numIndices];
+#
+#        self.mVertexList = []
+#        self.mIndexList = []
+#
+#        ## Count the number of vertices and incides so we can Set them
+#        indexCount = 0
+#        vertListCount = 0
+#
+#        if useSharedVertices:
+#            ## Real* pVertices (x, y, z order x numVertices)
+#            elem = pMesh.sharedVertexData.vertexDeclaration.findElementBySemantic(og.VES_POSITION)
+#
+#            if not elem:
+#                ogre.Except(Exception.ERR_ITEM_NOT_FOUND, "Can't find position elements in the "
+#                    "mesh to be written!", "MeshSerializerImpl.writeGeometry")
+#
+#            vbuf = pMesh.sharedVertexData.vertexBufferBinding.getBuffer(elem.getSource())
+#
+#            ## need space for the 3 verticies
+#            storageclass = ctypes.c_float * 3
+#            test=storageclass(0.0,  0.0,  0.0)
+#
+#            for j in range ( pMesh.sharedVertexData.vertexCount ):
+#                vbuf.readData(j * vbuf.getVertexSize(), 3 * ctype.sizeof(ctype.c_float), ctype.addressof(test))
+#                pt = og.Vector3(test[0], test[1], test[2])
+#                self.mVertexList.append( (orient * (pt * scale)) + position )
+#                vertListCount+=1
+#
+#        for i in range ( pMesh.getNumSubMeshes() ):
+#            pSubMesh = pMesh.getSubMesh(i)
+#            if not pSubMesh.useSharedVertices:
+#                ## Real* pVertices (x, y, z order x numVertices)
+#                elem = pSubMesh.vertexData.vertexDeclaration.findElementBySemantic(og.VES_POSITION)
+#
+#                if not elem:
+#                    og.Except(Exception.ERR_ITEM_NOT_FOUND, "Can't find position elements in the "
+#                        "mesh to be written!", "MeshSerializerImpl.writeGeometry")
+#
+#                vbuf = pSubMesh.vertexData.vertexBufferBinding.getBuffer(elem.getSource())
+#
+#                ## need space for the verticies
+#                storageclass = ctypes.c_float * (pSubMesh.vertexData.vertexCount * 6)
+#                test=storageclass(0.0)
+#
+#                vbuf.readData(0, pSubMesh.vertexData.vertexCount * 6 * ctypes.sizeof(ctypes.c_float), ctypes.addressof(test))
+#
+#                for j in range ( 0,  pSubMesh.vertexData.vertexCount * 6,  6):
+#                    #print j
+#                    pt = og.Vector3(test[j], test[j+1], test[j+2])
+#                    self.mVertexList.append( (orient * (pt * scale)) + position )
+#                    vertListCount += 1
+#
+#            ibuf = pSubMesh.indexData.indexBuffer
+#            ## need space for the verticies
+#            storageclass = ctypes.c_ushort * pSubMesh.indexData.indexCount
+#            test2=storageclass()
+#
+#
+#            ibuf.readData(0, ibuf.getSizeInBytes(), ctypes.addressof(test2))
+#            for j in range ( pSubMesh.indexData.indexCount ):
+#                self.mIndexList.append (test2[j])   # unsigned short
+#                indexCount += 1
+#
+#            ih = 0
+#            for blah in self.mVertexList:
+#                #print str(ih) + ": "  +  str(blah)
+#                ih += 1
+#
+#    def rayCastToPolygonLevel(self,  ray):
+#        self.lastRay = ray
+#
+#        for so in self.selectionList:
+#            if so.isPivot:
+#                return so
+#
+#        if len(self.selectionList) >= 1:
+#            for so in self.selectionList:
+#                if self.rayCastToPolygonLevelOnSingleMesh(ray,  so.entity):
+#                    return so
+#
+#
+#    def rayCastToPolygonLevelOnSingleMesh(self,  ray,  entity):
+#        self.getMeshInformation(entity)
+#        name = entity.getName()
+#        print "dbg: " + name
+#
+#        temp = []
+#        for vec in self.mVertexList:
+#            temp.append(vec.x)
+#            temp.append(vec.y)
+#            temp.append(vec.z)
+#
+#        globalPosition = entity.getParentNode()._getDerivedPosition()
+#        globalOrientation = entity.getParentNode()._getDerivedOrientation()
+#
+#
+#        i = 0
+#        while i <= (len(self.mIndexList) - 3):
+#            verta = globalPosition + self.mVertexList[self.mIndexList[i]]
+#            vertb = globalPosition + self.mVertexList[self.mIndexList[i+1]]
+#            vertc = globalPosition + self.mVertexList[self.mIndexList[i+2]]
+#
+#            verta = globalOrientation * verta
+#            vertb = globalOrientation * vertb
+#            vertc = globalOrientation * vertc
+#            normal = og.Math.calculateBasicFaceNormal(verta, vertb, vertc)
+#
+#            result = og.Math.intersects(ray, verta, vertb, vertc, True, True)
+#            #result = og.Math.intersects(ray, globalPosition + self.mVertexList[self.mIndexList[i]], globalPosition + self.mVertexList[self.mIndexList[i+1]],
+#            #                                                                                                                                              globalPosition + self.mVertexList[self.mIndexList[i+2]], normal,  True, True)
+#
+#            if result.first:
+#                #print "dbg: Treffer!!!!!!!!!"
+#                return True
+#
+#            i += 3
+#
+#        return False
+#
+#    def rayCastToPolygonLevelOnCurrentSelection(self):
+#        if len(self.selectionList) >= 1:
+#            self.getMeshInformation(self.selectionList[self.currentSelected].entity)
+#
+#            i = 0
+#            while i <= (len(self.mIndexList) - 3):
+#                globalPosition = self.selectionList[self.currentSelected].entity.getParentNode().getPosition()
+#                result = og.Math.intersects(self.lastRay, globalPosition + self.mVertexList[self.mIndexList[i]], globalPosition + self.mVertexList[self.mIndexList[i+1]],
+#                                                                                                                                                          globalPosition + self.mVertexList[self.mIndexList[i+2]], True, True)
+#
+#                if result.first:
+#                   return True
+#
+#                i += 3
+#            return False

Modified: rl/branches/newton20/editors/Lockenwickler/src/NewModuleWizard.py
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/src/NewModuleWizard.py	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/src/NewModuleWizard.py	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,48 +1,146 @@
-# -*- coding: utf-8 -*-
-
-"""
-Module implementing NewModuleWizard.
-"""
-
-from PyQt4.QtGui import QDialog
-from PyQt4.QtCore import pyqtSignature
-
-from Ui_NewModuleWizard import Ui_Dialog
-
-class NewModuleWizard(QDialog, Ui_Dialog):
-    """
-    Class documentation goes here.
-    """
-    def __init__(self, moduleManager, parent = None):
-        """
-        Constructor
-        """
-
-        self.moduleManager = moduleManager
-
-        QDialog.__init__(self, parent)
-        self.setupUi(self)
-
-    @pyqtSignature("QString")
-    def on_moduleNameLineEdit_textChanged(self, p0):
-        return
-        # TODO: not implemented yet
-        #raise NotImplementedError
-
-    @pyqtSignature("")
-    def on_moduleNameLineEdit_returnPressed(self):
-
-        # TODO: not implemented yet
-        raise NotImplementedError
-
-    @pyqtSignature("")
-    def on_okButton_clicked(self):
-
-        # TODO: not implemented yet
-        raise NotImplementedError
-
-    @pyqtSignature("")
-    def on_cancelButton_pressed(self):
-        self.close()
-
-
+# -*- coding: utf-8 -*-
+
+"""
+Module implementing NewModuleWizard.
+"""
+
+import os
+import glob
+
+from PyQt4.QtGui import QDialog
+from PyQt4.QtCore import pyqtSignature
+
+from Ui_NewModuleWizard import Ui_Dialog
+
+class NewModuleWizard(QDialog, Ui_Dialog):
+    """
+    Class documentation goes here.
+    """
+    def __init__(self, moduleManager, parent = None):
+       
+        QDialog.__init__(self, parent)
+        self.setupUi(self)
+
+        self.moduleManager = moduleManager
+        self.moduleManager.parseModuleConfig()
+        
+        for m in self.moduleManager.moduleList:
+            self.moduleDependenciesList.addItem(m.name)
+
+    @pyqtSignature("QString")
+    def on_moduleNameLineEdit_textChanged(self, p0):
+        if not self.moduleManager.moduleExists(str(self.moduleNameLineEdit.text())):
+            self.sceneNameLineEdit.setEnabled(True)
+            self.mapNameLineEdit.setEnabled(True)
+            self.moduleDependenciesList.setEnabled(True)
+            self.scriptDependenciesList.setEnabled(True)
+            self.okButton.setEnabled(True)
+        else:
+            self.sceneNameLineEdit.setEnabled(False)
+            self.mapNameLineEdit.setEnabled(False)
+            self.moduleDependenciesList.setEnabled(False)
+            self.scriptDependenciesList.setEnabled(False)
+            self.okButton.setEnabled(False)
+    
+    def scanDirForScripts(self, dir):
+        for file in os.listdir(dir):
+            curFile = dir + "/" + file
+
+            if file.startswith('.'): #ignore dot files (hidden)
+                continue
+            if os.path.isdir(curFile):
+                self.scanDirForScripts(curFile)
+                continue
+            if os.path.isfile(curFile):
+                if file.endswith(".rb"):
+                    self.scriptDependenciesList.addItem(dir + "/" + file)
+    
+    @pyqtSignature("")
+    def on_moduleDependenciesList_itemSelectionChanged(self):
+        self.scriptDependenciesList.clear()
+        modulePath = self.moduleManager.moduleCfgPath.replace("modules.cfg",  "")
+        
+        for m in self.moduleDependenciesList.selectedItems():
+            path = os.path.join(modulePath, str(m.text()))
+            cmd = os.path.join(path + "/scripts")
+            self.scanDirForScripts(cmd)
+        
+    @pyqtSignature("")
+    def on_moduleNameLineEdit_returnPressed(self):
+        return
+            
+    @pyqtSignature("")
+    def on_mapNameLineEdit_returnPressed(self):
+        return
+        
+    @pyqtSignature("")
+    def on_okButton_clicked(self):
+        f = open(self.moduleManager.moduleCfgPath, "a")
+        f.write("module=" + str(self.moduleNameLineEdit.text()) + "\n")
+        f.close()
+        
+        modulePath = self.moduleManager.moduleCfgPath.replace("modules.cfg",  "")
+        modulePath = str(modulePath + self.moduleNameLineEdit.text())
+        os.mkdir(modulePath)
+        os.mkdir(os.path.join(modulePath, "dialogs"))
+        os.mkdir(os.path.join(modulePath, "dsa"))
+        os.mkdir(os.path.join(modulePath, "gui"))
+        os.mkdir(os.path.join(modulePath, "maps"))
+        os.mkdir(os.path.join(modulePath, "materials"))
+        os.mkdir(os.path.join(modulePath, "materials/textures"))
+        os.mkdir(os.path.join(modulePath, "models"))
+        os.mkdir(os.path.join(modulePath, "quests"))
+        os.mkdir(os.path.join(modulePath, "scripts"))
+        os.mkdir(os.path.join(modulePath, "scripts/maps"))
+        os.mkdir(os.path.join(modulePath, "sound"))
+        
+        mname = str(self.moduleNameLineEdit.text())
+        mdeps = ""
+        for m in self.moduleDependenciesList.selectedItems():
+            mdeps = mdeps + str("\"" + m.text() + "\", ")
+        mdeps = mdeps.strip(", ")
+        
+        sdeps = ""
+        for s in self.scriptDependenciesList.selectedItems():
+            script = str(str(s.text()).replace("\\", "/"))
+            script = script.split("/")
+            script = script[len(script) - 1]
+            sdeps = sdeps + str("       require " + script + "\n")
+        
+        
+        f = open(os.path.join(modulePath, "scripts\\") + "moduleconfig.rb", "w")
+        f.write("include RlScript\n")
+        f.write("\n\n")
+        f.write("class " + mname.capitalize() + "Module < ContentModule\n")
+        f.write("    def initialize()\n")
+        f.write("        super(\"" + mname + "\"" + ", \"" + mname + "\"" + ", false, 200608012)\n")
+        f.write("    end\n\n")
+        f.write("    def getDependencies()\n")
+        f.write("       return [" + str(mdeps) + "];\n")
+        f.write("    end\n\n")
+        f.write("    def getTextureLocation()\n")
+        f.write("       return [\"textures\"];\n")
+        f.write("    end\n\n")
+        f.write("    def getModelLocation()\n")
+        f.write("       return [\"models\"];\n")
+        f.write("    end\n\n")
+        f.write("    def getSoundLocation()\n")
+        f.write("       return [\"sound\"];\n")
+        f.write("    end\n\n")
+        f.write("    def start()\n")
+        f.write(sdeps)
+        f.write("\n\n       SceneManager.getSingleton().loadScene(\"" + self.sceneNameLineEdit.text() + "\");\n")
+        f.write("       $World = $CORE.getWorld();\n")
+        f.write("    end\n")
+        f.write("end\n\n")
+
+        f.write("CoreSubsystem.getSingleton().registerModule(" + mname.capitalize() + "Module.new());\n")
+        
+        self.moduleManager.resetParsedModuleConfig()
+        self.moduleManager.openLoadModuleDialog()
+        
+    @pyqtSignature("")
+    def on_cancelButton_pressed(self):
+        self.close()
+
+

Modified: rl/branches/newton20/editors/Lockenwickler/src/OgreWidget.py
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/src/OgreWidget.py	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/src/OgreWidget.py	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,120 +1,120 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-
-import sys
-import platform
-import os
-
-from PyQt4 import QtGui
-import ogre.renderer.OGRE as og
-
-class OgreWidget(QtGui.QWidget):
-    def __init__(self, renderWindowName, ogreRoot, sceneManager, cameraName, parent,  camDistFromFocusNode=100):
-        QtGui.QWidget.__init__(self, parent)
-        self.renderWindowName = renderWindowName
-        self.parent = parent
-        self.ogreRoot = ogreRoot
-        self.sceneManager = sceneManager
-        self.camDistFromFocusNode = camDistFromFocusNode
-        self.initOgreWindow(renderWindowName,cameraName)
-
-    def initOgreWindow(self, renderWindowName, cameraName):
-        self.renderParameters = og.NameValuePairList()
-
-        if platform.system() == "Windows" or platform.system() == "MAC":
-            hwnd = int(self.winId())
-            self.renderParameters['externalWindowHandle'] = str(hwnd)
-        else:
-            import sip
-            info = self.x11Info()
-            disp =  str(sip.unwrapinstance(info.display()))
-            scr = str(info.screen())
-            win = str(int(self.winId()))
-            winHandle = disp + ':' + scr + ':' + win
-            self.renderParameters['parentWindowHandle'] = winHandle
-
-        renderWindow = self.ogreRoot.createRenderWindow(renderWindowName, self.width(), self.height(),
-                                                        False, self.renderParameters)
-
-        renderWindow.active = True
-        self.renderWindow = renderWindow
-
-        self.camera = self.sceneManager.createCamera(cameraName)
-        self.camera.NearClipDistance = 0.1
-
-        # Create focus node (camera always points at this)
-        self.camFocusNode = self.sceneManager.getRootSceneNode().createChildSceneNode()
-        self.camFocusNode.setFixedYawAxis(True, og.Vector3.UNIT_Y)
-        # camera node is offset a ways along the Z axis of focus node
-        self.camNode = self.camFocusNode.createChildSceneNode()
-        # fix yaw on this one too for when we manipulate it directly
-        self.camNode.setFixedYawAxis(True, og.Vector3.UNIT_Y)
-        self.camNode.setPosition(0, 0, self.camDistFromFocusNode)
-        self.camNode.attachObject(self.camera)
-
-        self.viewport = self.renderWindow.addViewport(self.camera, 0, 0.0, 0.0, 1.0, 1.0)
-        self.viewport.setClearEveryFrame(True)
-
-    def setBackgroundColor(self, colorValue):
-        self.viewport.BackgroundColour = colorValue
-
-    def resizeEvent(self, event):
-        self.renderWindow.resize(event.size().width(), event.size().height())
-        self.renderWindow.windowMovedOrResized()
-
-        if platform.system() == "Linux":
-            self.viewport._updateDimensions() # shouldn't actually be needed but it doesn't work without it on linux
-
-        self.renderWindow.update(True)
-        self.ogreRoot.renderOneFrame()
-
-        if self.camera:
-            self.camera.setAspectRatio(float(event.size().width()) / float(event.size().height()));
-
-    def addOgreResourceLocation(self, location, locType, resGroup, recursive=False):
-        og.ResourceGroupManager.getSingleton().addResourceLocation(location, locType, resGroup, recursive)
-
-    def getCamera(self):
-        assert(self.camera)
-        return self.camera
-
-    #(const Ogre::Radian& horz, const Ogre::Radian& vert)
-    def orbitCamera( self, horz, vert):
-        #orbit around focus node
-        #yaw around world Y, pitch around local
-        self.camFocusNode.yaw(horz, og.Node.TS_WORLD)
-        self.camFocusNode.pitch(-vert, og.Node.TS_LOCAL)
-
-    #void ViewOgreWindow::zoomCamera(float zoom)
-    def zoomCamera(self, zoom):
-        #in perspective mode, zoom by altering camera orbit distance from focus
-        self.camNode.translate(0, 0, -zoom * 2, og.Node.TS_LOCAL)
-        #make sure we don't go into -Z or even beyond clip distance to focus
-        pos = self.camNode.getPosition()
-        if pos.z < self.camera.getNearClipDistance():
-            self.camNode.setPosition(pos.x, pos.y, self.camera.getNearClipDistance())
-
-    #Ogre::Vector3& trans
-    def dollyCamera(self,  trans):
-        self.camFocusNode.translate(trans, og.Node.TS_LOCAL)
-
-    #(const Ogre::Radian& horz, const Ogre::Radian& vert)
-    def panCamera( self, horz, vert):
-        self.camNode.yaw(horz, og.Node.TS_WORLD)
-        self.camNode.pitch(vert, og.Node.TS_LOCAL)
+#################################################
+ # Copyright (C) 2008  Stefan Stammberger
+ #
+ # This library is free software; you can redistribute it and/or
+ # modify it under the terms of the GNU Lesser General Public
+ # License as published by the Free Software Foundation; either
+ # version 2.1 of the License, or (at your option) any later version.
+ #
+ # This library is distributed in the hope that it will be useful,
+ # but WITHOUT ANY WARRANTY; without even the implied warranty of
+ # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ # Lesser General Public License for more details.
+ #
+ # You should have received a copy of the GNU Lesser General Public
+ # License along with this library; if not, write to the Free Software
+ # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
+ #################################################
+
+
+import sys
+import platform
+import os
+
+from PyQt4 import QtGui
+import ogre.renderer.OGRE as og
+
+class OgreWidget(QtGui.QWidget):
+    def __init__(self, renderWindowName, ogreRoot, sceneManager, cameraName, parent,  camDistFromFocusNode=100):
+        QtGui.QWidget.__init__(self, parent)
+        self.renderWindowName = renderWindowName
+        self.parent = parent
+        self.ogreRoot = ogreRoot
+        self.sceneManager = sceneManager
+        self.camDistFromFocusNode = camDistFromFocusNode
+        self.initOgreWindow(renderWindowName,cameraName)
+
+    def initOgreWindow(self, renderWindowName, cameraName):
+        self.renderParameters = og.NameValuePairList()
+
+        if platform.system() == "Windows" or platform.system() == "MAC":
+            hwnd = int(self.winId())
+            self.renderParameters['externalWindowHandle'] = str(hwnd)
+        else:
+            import sip
+            info = self.x11Info()
+            disp =  str(sip.unwrapinstance(info.display()))
+            scr = str(info.screen())
+            win = str(int(self.winId()))
+            winHandle = disp + ':' + scr + ':' + win
+            self.renderParameters['parentWindowHandle'] = winHandle
+
+        renderWindow = self.ogreRoot.createRenderWindow(renderWindowName, self.width(), self.height(),
+                                                        False, self.renderParameters)
+
+        renderWindow.active = True
+        self.renderWindow = renderWindow
+
+        self.camera = self.sceneManager.createCamera(cameraName)
+        self.camera.NearClipDistance = 0.1
+
+        # Create focus node (camera always points at this)
+        self.camFocusNode = self.sceneManager.getRootSceneNode().createChildSceneNode()
+        self.camFocusNode.setFixedYawAxis(True, og.Vector3().UNIT_Y)
+        # camera node is offset a ways along the Z axis of focus node
+        self.camNode = self.camFocusNode.createChildSceneNode()
+        # fix yaw on this one too for when we manipulate it directly
+        self.camNode.setFixedYawAxis(True, og.Vector3().UNIT_Y)
+        self.camNode.setPosition(0, 0, self.camDistFromFocusNode)
+        self.camNode.attachObject(self.camera)
+
+        self.viewport = self.renderWindow.addViewport(self.camera, 0, 0.0, 0.0, 1.0, 1.0)
+        self.viewport.setClearEveryFrame(True)
+
+    def setBackgroundColor(self, colorValue):
+        self.viewport.BackgroundColour = colorValue
+
+    def resizeEvent(self, event):
+        self.renderWindow.resize(event.size().width(), event.size().height())
+        self.renderWindow.windowMovedOrResized()
+
+        if platform.system() == "Linux":
+            self.viewport._updateDimensions() # shouldn't actually be needed but it doesn't work without it on linux
+
+        self.renderWindow.update(True)
+        self.ogreRoot.renderOneFrame()
+
+        if self.camera:
+            self.camera.setAspectRatio(float(event.size().width()) / float(event.size().height()));
+
+    def addOgreResourceLocation(self, location, locType, resGroup, recursive=False):
+        og.ResourceGroupManager.getSingleton().addResourceLocation(location, locType, resGroup, recursive)
+
+    def getCamera(self):
+        assert(self.camera)
+        return self.camera
+
+    #(const Ogre::Radian& horz, const Ogre::Radian& vert)
+    def orbitCamera( self, horz, vert):
+        #orbit around focus node
+        #yaw around world Y, pitch around local
+        self.camFocusNode.yaw(horz, og.Node.TS_WORLD)
+        self.camFocusNode.pitch(-vert, og.Node.TS_LOCAL)
+
+    #void ViewOgreWindow::zoomCamera(float zoom)
+    def zoomCamera(self, zoom):
+        #in perspective mode, zoom by altering camera orbit distance from focus
+        self.camNode.translate(0, 0, -zoom * 2, og.Node.TS_LOCAL)
+        #make sure we don't go into -Z or even beyond clip distance to focus
+        pos = self.camNode.getPosition()
+        if pos.z < self.camera.getNearClipDistance():
+            self.camNode.setPosition(pos.x, pos.y, self.camera.getNearClipDistance())
+
+    #Ogre::Vector3& trans
+    def dollyCamera(self,  trans):
+        self.camFocusNode.translate(trans, og.Node.TS_LOCAL)
+
+    #(const Ogre::Radian& horz, const Ogre::Radian& vert)
+    def panCamera( self, horz, vert):
+        self.camNode.yaw(horz, og.Node.TS_WORLD)
+        self.camNode.pitch(vert, og.Node.TS_LOCAL)

Deleted: rl/branches/newton20/editors/Lockenwickler/src/SceneExplorer.py
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/src/SceneExplorer.py	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/src/SceneExplorer.py	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,34 +0,0 @@
-#################################################
- # Copyright (C) 2008  Stefan Stammberger
- #
- # This library is free software; you can redistribute it and/or
- # modify it under the terms of the GNU Lesser General Public
- # License as published by the Free Software Foundation; either
- # version 2.1 of the License, or (at your option) any later version.
- #
- # This library is distributed in the hope that it will be useful,
- # but WITHOUT ANY WARRANTY; without even the implied warranty of
- # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- # Lesser General Public License for more details.
- #
- # You should have received a copy of the GNU Lesser General Public
- # License along with this library; if not, write to the Free Software
- # Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
- #################################################
-
-
-import sys
-from PyQt4.QtCore import *
-from PyQt4.QtGui import *
-import ogre.renderer.OGRE as og
-
-class SceneExplorer(QWidget):
-    def __init__(self, parent=None):
-        QWidget.__init__(self, parent)
-        self.sceneTreeView = QTreeView()
-
-        vBoxLayout = QVBoxLayout()
-        vBoxLayout.addWidget(self.sceneTreeView)
-
-        self.setLayout(vBoxLayout)
-

Modified: rl/branches/newton20/editors/Lockenwickler/src/Ui_NewModuleWizard.py
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/src/Ui_NewModuleWizard.py	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/src/Ui_NewModuleWizard.py	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,100 +1,100 @@
-# -*- coding: utf-8 -*-
-
-# Form implementation generated from reading ui file '/home/stefan/Lockenwickler/ui files/NewModuleWizard.ui'
-#
-# Created: Sun Nov  9 14:15:16 2008
-#      by: PyQt4 UI code generator 4.4.3
-#
-# WARNING! All changes made in this file will be lost!
-
-from PyQt4 import QtCore, QtGui
-
-class Ui_Dialog(object):
-    def setupUi(self, Dialog):
-        Dialog.setObjectName("Dialog")
-        Dialog.resize(675, 703)
-        self.gridLayout_3 = QtGui.QGridLayout(Dialog)
-        self.gridLayout_3.setObjectName("gridLayout_3")
-        self.label = QtGui.QLabel(Dialog)
-        self.label.setObjectName("label")
-        self.gridLayout_3.addWidget(self.label, 0, 0, 1, 1)
-        self.moduleNameLineEdit = QtGui.QLineEdit(Dialog)
-        self.moduleNameLineEdit.setObjectName("moduleNameLineEdit")
-        self.gridLayout_3.addWidget(self.moduleNameLineEdit, 0, 1, 1, 1)
-        self.label_2 = QtGui.QLabel(Dialog)
-        self.label_2.setObjectName("label_2")
-        self.gridLayout_3.addWidget(self.label_2, 1, 0, 1, 1)
-        self.sceneNameLineEdit = QtGui.QLineEdit(Dialog)
-        self.sceneNameLineEdit.setEnabled(False)
-        self.sceneNameLineEdit.setObjectName("sceneNameLineEdit")
-        self.gridLayout_3.addWidget(self.sceneNameLineEdit, 1, 1, 1, 1)
-        self.label_3 = QtGui.QLabel(Dialog)
-        self.label_3.setObjectName("label_3")
-        self.gridLayout_3.addWidget(self.label_3, 2, 0, 1, 1)
-        self.mapNameLineEdit = QtGui.QLineEdit(Dialog)
-        self.mapNameLineEdit.setEnabled(False)
-        self.mapNameLineEdit.setObjectName("mapNameLineEdit")
-        self.gridLayout_3.addWidget(self.mapNameLineEdit, 2, 1, 1, 1)
-        self.groupBox = QtGui.QGroupBox(Dialog)
-        self.groupBox.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
-        self.groupBox.setObjectName("groupBox")
-        self.gridLayout_2 = QtGui.QGridLayout(self.groupBox)
-        self.gridLayout_2.setObjectName("gridLayout_2")
-        self.moduleDependenciesList = QtGui.QListView(self.groupBox)
-        self.moduleDependenciesList.setEnabled(False)
-        self.moduleDependenciesList.setSelectionMode(QtGui.QAbstractItemView.MultiSelection)
-        self.moduleDependenciesList.setObjectName("moduleDependenciesList")
-        self.gridLayout_2.addWidget(self.moduleDependenciesList, 1, 0, 1, 1)
-        self.gridLayout_3.addWidget(self.groupBox, 3, 0, 1, 2)
-        self.groupBox_2 = QtGui.QGroupBox(Dialog)
-        self.groupBox_2.setObjectName("groupBox_2")
-        self.gridLayout = QtGui.QGridLayout(self.groupBox_2)
-        self.gridLayout.setObjectName("gridLayout")
-        self.scriptDependenciesList = QtGui.QListView(self.groupBox_2)
-        self.scriptDependenciesList.setEnabled(False)
-        self.scriptDependenciesList.setSelectionMode(QtGui.QAbstractItemView.MultiSelection)
-        self.scriptDependenciesList.setObjectName("scriptDependenciesList")
-        self.gridLayout.addWidget(self.scriptDependenciesList, 0, 0, 1, 1)
-        self.gridLayout_3.addWidget(self.groupBox_2, 4, 0, 1, 2)
-        self.hboxlayout = QtGui.QHBoxLayout()
-        self.hboxlayout.setSpacing(6)
-        self.hboxlayout.setMargin(0)
-        self.hboxlayout.setObjectName("hboxlayout")
-        spacerItem = QtGui.QSpacerItem(131, 31, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
-        self.hboxlayout.addItem(spacerItem)
-        self.okButton = QtGui.QPushButton(Dialog)
-        self.okButton.setEnabled(False)
-        self.okButton.setObjectName("okButton")
-        self.hboxlayout.addWidget(self.okButton)
-        self.cancelButton = QtGui.QPushButton(Dialog)
-        self.cancelButton.setObjectName("cancelButton")
-        self.hboxlayout.addWidget(self.cancelButton)
-        self.gridLayout_3.addLayout(self.hboxlayout, 5, 0, 1, 2)
-
-        self.retranslateUi(Dialog)
-        QtCore.QObject.connect(self.okButton, QtCore.SIGNAL("clicked()"), Dialog.accept)
-        QtCore.QObject.connect(self.cancelButton, QtCore.SIGNAL("clicked()"), Dialog.reject)
-        QtCore.QMetaObject.connectSlotsByName(Dialog)
-
-    def retranslateUi(self, Dialog):
-        Dialog.setWindowTitle(QtGui.QApplication.translate("Dialog", "Dialog", None, QtGui.QApplication.UnicodeUTF8))
-        self.label.setText(QtGui.QApplication.translate("Dialog", "Step 1: Module Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_2.setText(QtGui.QApplication.translate("Dialog", "Step 2: Scene Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.label_3.setText(QtGui.QApplication.translate("Dialog", "Step 3: Map Name", None, QtGui.QApplication.UnicodeUTF8))
-        self.groupBox.setTitle(QtGui.QApplication.translate("Dialog", "Step 4: Module Dependencies", None, QtGui.QApplication.UnicodeUTF8))
-        self.moduleDependenciesList.setToolTip(QtGui.QApplication.translate("Dialog", "Modules the new module will depend on", None, QtGui.QApplication.UnicodeUTF8))
-        self.groupBox_2.setTitle(QtGui.QApplication.translate("Dialog", "Step 5: Script Dependencies", None, QtGui.QApplication.UnicodeUTF8))
-        self.scriptDependenciesList.setToolTip(QtGui.QApplication.translate("Dialog", "Modules the new module will depend on", None, QtGui.QApplication.UnicodeUTF8))
-        self.okButton.setText(QtGui.QApplication.translate("Dialog", "&OK", None, QtGui.QApplication.UnicodeUTF8))
-        self.cancelButton.setText(QtGui.QApplication.translate("Dialog", "&Cancel", None, QtGui.QApplication.UnicodeUTF8))
-
-
-if __name__ == "__main__":
-    import sys
-    app = QtGui.QApplication(sys.argv)
-    Dialog = QtGui.QDialog()
-    ui = Ui_Dialog()
-    ui.setupUi(Dialog)
-    Dialog.show()
-    sys.exit(app.exec_())
-
+# -*- coding: utf-8 -*-
+
+# Form implementation generated from reading ui file '/home/stefan/Lockenwickler/ui files/NewModuleWizard.ui'
+#
+# Created: Sun Nov  9 14:15:16 2008
+#      by: PyQt4 UI code generator 4.4.3
+#
+# WARNING! All changes made in this file will be lost!
+
+from PyQt4 import QtCore, QtGui
+
+class Ui_Dialog(object):
+    def setupUi(self, Dialog):
+        Dialog.setObjectName("Dialog")
+        Dialog.resize(675, 703)
+        self.gridLayout_3 = QtGui.QGridLayout(Dialog)
+        self.gridLayout_3.setObjectName("gridLayout_3")
+        self.label = QtGui.QLabel(Dialog)
+        self.label.setObjectName("label")
+        self.gridLayout_3.addWidget(self.label, 0, 0, 1, 1)
+        self.moduleNameLineEdit = QtGui.QLineEdit(Dialog)
+        self.moduleNameLineEdit.setObjectName("moduleNameLineEdit")
+        self.gridLayout_3.addWidget(self.moduleNameLineEdit, 0, 1, 1, 1)
+        self.label_2 = QtGui.QLabel(Dialog)
+        self.label_2.setObjectName("label_2")
+        self.gridLayout_3.addWidget(self.label_2, 1, 0, 1, 1)
+        self.sceneNameLineEdit = QtGui.QLineEdit(Dialog)
+        self.sceneNameLineEdit.setEnabled(False)
+        self.sceneNameLineEdit.setObjectName("sceneNameLineEdit")
+        self.gridLayout_3.addWidget(self.sceneNameLineEdit, 1, 1, 1, 1)
+        self.label_3 = QtGui.QLabel(Dialog)
+        self.label_3.setObjectName("label_3")
+        self.gridLayout_3.addWidget(self.label_3, 2, 0, 1, 1)
+        self.mapNameLineEdit = QtGui.QLineEdit(Dialog)
+        self.mapNameLineEdit.setEnabled(False)
+        self.mapNameLineEdit.setObjectName("mapNameLineEdit")
+        self.gridLayout_3.addWidget(self.mapNameLineEdit, 2, 1, 1, 1)
+        self.groupBox = QtGui.QGroupBox(Dialog)
+        self.groupBox.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
+        self.groupBox.setObjectName("groupBox")
+        self.gridLayout_2 = QtGui.QGridLayout(self.groupBox)
+        self.gridLayout_2.setObjectName("gridLayout_2")
+        self.moduleDependenciesList = QtGui.QListWidget(self.groupBox)
+        self.moduleDependenciesList.setEnabled(False)
+        self.moduleDependenciesList.setSelectionMode(QtGui.QAbstractItemView.MultiSelection)
+        self.moduleDependenciesList.setObjectName("moduleDependenciesList")
+        self.gridLayout_2.addWidget(self.moduleDependenciesList, 1, 0, 1, 1)
+        self.gridLayout_3.addWidget(self.groupBox, 3, 0, 1, 2)
+        self.groupBox_2 = QtGui.QGroupBox(Dialog)
+        self.groupBox_2.setObjectName("groupBox_2")
+        self.gridLayout = QtGui.QGridLayout(self.groupBox_2)
+        self.gridLayout.setObjectName("gridLayout")
+        self.scriptDependenciesList = QtGui.QListWidget(self.groupBox_2)
+        self.scriptDependenciesList.setEnabled(False)
+        self.scriptDependenciesList.setSelectionMode(QtGui.QAbstractItemView.MultiSelection)
+        self.scriptDependenciesList.setObjectName("scriptDependenciesList")
+        self.gridLayout.addWidget(self.scriptDependenciesList, 0, 0, 1, 1)
+        self.gridLayout_3.addWidget(self.groupBox_2, 4, 0, 1, 2)
+        self.hboxlayout = QtGui.QHBoxLayout()
+        self.hboxlayout.setSpacing(6)
+        self.hboxlayout.setMargin(0)
+        self.hboxlayout.setObjectName("hboxlayout")
+        spacerItem = QtGui.QSpacerItem(131, 31, QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Minimum)
+        self.hboxlayout.addItem(spacerItem)
+        self.okButton = QtGui.QPushButton(Dialog)
+        self.okButton.setEnabled(False)
+        self.okButton.setObjectName("okButton")
+        self.hboxlayout.addWidget(self.okButton)
+        self.cancelButton = QtGui.QPushButton(Dialog)
+        self.cancelButton.setObjectName("cancelButton")
+        self.hboxlayout.addWidget(self.cancelButton)
+        self.gridLayout_3.addLayout(self.hboxlayout, 5, 0, 1, 2)
+
+        self.retranslateUi(Dialog)
+        QtCore.QObject.connect(self.okButton, QtCore.SIGNAL("clicked()"), Dialog.accept)
+        QtCore.QObject.connect(self.cancelButton, QtCore.SIGNAL("clicked()"), Dialog.reject)
+        QtCore.QMetaObject.connectSlotsByName(Dialog)
+
+    def retranslateUi(self, Dialog):
+        Dialog.setWindowTitle(QtGui.QApplication.translate("Dialog", "Dialog", None, QtGui.QApplication.UnicodeUTF8))
+        self.label.setText(QtGui.QApplication.translate("Dialog", "Step 1: Module Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_2.setText(QtGui.QApplication.translate("Dialog", "Step 2: Scene Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.label_3.setText(QtGui.QApplication.translate("Dialog", "Step 3: Map Name", None, QtGui.QApplication.UnicodeUTF8))
+        self.groupBox.setTitle(QtGui.QApplication.translate("Dialog", "Step 4: Module Dependencies", None, QtGui.QApplication.UnicodeUTF8))
+        self.moduleDependenciesList.setToolTip(QtGui.QApplication.translate("Dialog", "Modules the new module will depend on", None, QtGui.QApplication.UnicodeUTF8))
+        self.groupBox_2.setTitle(QtGui.QApplication.translate("Dialog", "Step 5: Script Dependencies", None, QtGui.QApplication.UnicodeUTF8))
+        self.scriptDependenciesList.setToolTip(QtGui.QApplication.translate("Dialog", "Modules the new module will depend on", None, QtGui.QApplication.UnicodeUTF8))
+        self.okButton.setText(QtGui.QApplication.translate("Dialog", "&OK", None, QtGui.QApplication.UnicodeUTF8))
+        self.cancelButton.setText(QtGui.QApplication.translate("Dialog", "&Cancel", None, QtGui.QApplication.UnicodeUTF8))
+
+
+if __name__ == "__main__":
+    import sys
+    app = QtGui.QApplication(sys.argv)
+    Dialog = QtGui.QDialog()
+    ui = Ui_Dialog()
+    ui.setupUi(Dialog)
+    Dialog.show()
+    sys.exit(app.exec_())
+

Modified: rl/branches/newton20/editors/Lockenwickler/src/ViewportGrid.py
===================================================================
--- rl/branches/newton20/editors/Lockenwickler/src/ViewportGrid.py	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/editors/Lockenwickler/src/ViewportGrid.py	2009-01-27 21:35:12 UTC (rev 4723)
@@ -1,525 +1,525 @@
-#-----------------------------------------------------------------------------
-#Copyright (c) 2007 Jeroen Dierckx
-#Python Version by Stefan Stammberger
-#
-#This program is free software you can redistribute it and/or modify it under
-#the terms of the GNU Lesser General Public License as published by the Free Software
-#Foundation either version 2 of the License, or (at your option) any later
-#version.
-#
-#This program is distributed in the hope that it will be useful, but WITHOUT
-#ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS
-#FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
-#
-#You should have received a copy of the GNU Lesser General Public License along with
-#this program if not, write to the Free Software Foundation, Inc., 59 Temple
-#Place - Suite 330, Boston, MA 02111-1307, USA, or go to
-#http://www.gnu.org/copyleft/lesser.txt.
-#-----------------------------------------------------------------------------
-
-import ogre.renderer.OGRE as og
-
-RL_BEHIND = 1
-INFRONT = 2
-
-class ViewportGrid(og.RenderTargetListener):
-    def __init__(self, pSceneMgr, pViewport):
-        super(ViewportGrid, self).__init__()
-
-        self.sceneManager = pSceneMgr
-        self.viewport = pViewport
-        self.enabled = False
-        self.layer = None
-
-        self.prevCamera = None
-        self.prevOrtho = False
-        self.prevCamPos = None
-        self.prevNear = None
-        self.prevOrtho = None
-        self.prevAspectRatio = None
-        self.bForceUpdate = True
-
-        self.pGrid = None
-        self.created = False
-        self.pNode = None
-
-        self.colour1 = og.ColourValue(0.7, 0.7, 0.7)
-        self.colour2 = og.ColourValue(0.7, 0.7, 0.7)
-        self.division = 10
-        self.perspSize = 100
-        self.renderScale = True
-        self.renderMiniAxes = True
-
-        self.sMatName = "ViewportGrid"
-
-        self.__createGrid()
-        self.setRenderLayer(RL_BEHIND)
-
-        # Add this as a render target listener
-        self.viewport.getTarget().addListener(self)
-
-
-    def getColour(self):
-        return colour1
-
-    def setColour(self, colour):
-        # Force alpha = 1 for the primary colour
-        self.colour1 = colour
-        self.colour1.a = 1.0
-        self.colour2 = colour1
-        self.forceUpdate()
-
-    #Grid division (the number of new lines that are created when zooming in).
-    def getDivision(self):
-        return division
-
-    def setDivision(self, division):
-        self.division = division
-        self.forceUpdate()
-
-    #//! Grid render layer (behind of in front of the objects).
-    def getRenderLayer(self):
-        return layer
-
-    def setRenderLayer(self, layer):
-        self.layer = layer
-
-        if self.layer == RL_BEHIND:
-            # Render just before the world geometry
-            self.pGrid.setRenderQueueGroup(og.RENDER_QUEUE_WORLD_GEOMETRY_1 - 1)
-        elif self.layer == RL_INFRONT:
-            # Render just before the overlays
-            self.pGrid.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY - 1)
-
-
-    def getPerspectiveSize(self):
-        return perspSize
-
-    def setPerspectiveSize(self, size):
-        self.perspSize = size
-        self.forceUpdate()
-
-#       //! Render scaling info? Defaults to true.
-#       //! @todo Implement this
-    def getRenderScale(self):
-        return renderScale
-
-    def setRenderScale(self, enabled = True):
-        self.renderScale = enabled
-        self.forceUpdate()
-
-#       //! Render mini axes? Defaults to true.
-#       //! @todo Implement this
-    def getRenderMiniAxes(self):
-        return renderMiniAxes
-
-    def setRenderMiniAxes(self, enabled = True):
-        self.renderMiniAxes = enabled
-        self.forceUpdate()
-
-    #// Enable / disable
-    def isEnabled(self):
-        return self.enabled
-
-    def enable(self):
-        self.enabled = True
-
-        if not self.pGrid.isAttached():
-            self.pNode.attachObject(self.pGrid)
-
-        self.forceUpdate()
-
-
-    def disable(self):
-        self.enabled = False
-
-        if self.pGrid.isAttached():
-            self.pNode.detachObject(self.pGrid)
-
-
-
-    def  toggle(self):
-        self.setEnabled(not self.enabled)
-
-    def setEnabled(self, enabled):
-        if enabled:
-            self.enable()
-        else:
-            self.disable()
-
-
-    def forceUpdate(self):
-        self.bForceUpdate = True
-
-    def preViewportUpdate(self, evt):
-       #TODO find out why evt.souce and self.viewport differ in their memory address
-       # if evt.source != self.viewport:
-           # return
-
-        self.pGrid.setVisible(True)
-
-        if self.enabled:
-            self.__update()
-
-    def postViewportUpdate(self, evt):
-       # if evt.source != self.viewport:
-           # return
-        self.pGrid.setVisible(False)
-
-    def __createGrid(self):
-        name = self.viewport.getTarget().getName() + "::"
-        name += str(self.viewport.getZOrder()) + "::ViewportGrid"
-
-        #// Create the manual object
-        self.pGrid = self.sceneManager.createManualObject(name)
-        self.pGrid.setDynamic(True)
-
-        #// Create the scene node (not attached yet)
-        self.pNode = self.sceneManager.getRootSceneNode().createChildSceneNode(name)
-        self.enabled = False
-
-        #// Make sure the material is created
-        #//! @todo Should we destroy the material somewhere?
-        matMgr = og.MaterialManager.getSingleton()
-        if not matMgr.resourceExists(self.sMatName):
-            pMaterial = matMgr.create(self.sMatName, og.ResourceGroupManager.DEFAULT_RESOURCE_GROUP_NAME)
-            pMaterial.setLightingEnabled(False)
-            pMaterial.setSceneBlending(og.SBT_TRANSPARENT_ALPHA)
-
-
-
-    def __destroyGrid(self):
-        self.sceneManager.destroyManualObject(self.pGrid)
-        self.pGrid = None
-
-        self.sceneManager.destroySceneNode(self.pNode.getName())
-        self.pNode = None
-
-
-    def __update(self):
-        if not self.enabled:
-            return
-
-        pCamera = self.viewport.getCamera()
-        if not pCamera:
-            return
-
-        # Check if an update is necessary
-        if not self.__checkUpdate() and not self.bForceUpdate:
-            return
-
-        if pCamera.getProjectionType() == og.PT_ORTHOGRAPHIC:
-            self.__updateOrtho()
-        else:
-            self.__updatePersp()
-
-        self.bForceUpdate = False
-
-
-
-    def __updateOrtho(self):
-        # Screen dimensions
-        width = self.viewport.getActualWidth()
-        height = self.viewport.getActualHeight()
-
-        #Camera information
-        pCamera = pViewport.getCamera()
-        camPos = pCamera.getPosition()
-        camDir = pCamera.getDirection()
-        camUp = pCamera.getUp()
-        camRight = pCamera.getRight()
-
-        # Translation in grid space
-        dx = camPos.dotProduct(camRight)
-        dy = camPos.dotProduct(camUp)
-
-        # Frustum dimensions
-        # Note: Tan calculates the opposite side of a _right_ triangle given its angle, so we make sure it is one, and double the result
-        worldWidth = 2 * og.Math.Tan(pCamera.getFOVy() / 2) * pCamera.getAspectRatio() * pCamera.getNearClipDistance()
-        worldHeight = worldWidth / pCamera.getAspectRatio()
-        worldLeft = dx - worldWidth / 2
-        worldRight = dx + worldWidth / 2
-        worldBottom = dy - worldHeight / 2
-        worldTop = dy + worldHeight / 2
-
-        # Conversion values (note: same as working with the height values)
-        worldToScreen = width / worldWidth
-        screenToWorld = worldWidth / width
-
-        # TODO Treshold should be dependent on window width/height (min? max?) so there are no more then division full alpha-lines
-        treshold = 10 # Treshhold in pixels
-
-        # Calculate the spacing multiplier
-        mult = 0
-        exp = 0
-        temp = worldToScreen # 1 world unit
-        if worldToScreen < treshold:
-            while temp < treshold:
-                exp = exp +1
-                temp = temp * treshold # TODO maybe wrong
-
-            mult = og.Math.Pow(self.division, exp)
-        else:
-            while temp > (self.division * treshold):
-                exp = exp +1
-                temp = temp / treshold # TODO maybe wrong
-
-            mult = og.Math.Pow(1.0 / self.division, exp)
-
-        # Interpolate alpha for (multiplied) spacing between treshold and division * treshold
-        self.colour2.a = worldToScreen * mult / (division * treshold - treshold)
-        if colour2.a > 1.0:
-           self.colour2.a = 1.0
-
-        # Calculate the horizontal zero-axis color
-        camRightX = og.Math.Abs(camRight.x)
-        camRightY = og.Math.Abs(camRight.y)
-        camRightZ = og.Math.Abs(camRight.z)
-
-        if og.Math.RealEqual(camRightX, 1.0):
-            horAxisColor = og.ColourValue.Red
-        elif og.Math.RealEqual(camRightY, 1.0):
-            horAxisColor = og.ColourValue.Green
-        elif og.Math.RealEqual(camRightZ, 1.0):
-            horAxisColor = og.ColourValue.Blue
-        else:
-            horAxisColor = self.colour1
-
-        # Calculate the vertical zero-axis color
-        camUpX = og.Math.Abs(camUp.x)
-        camUpY = og.Math.Abs(camUp.y)
-        camUpZ = og.Math.Abs(camUp.z)
-
-        if og.Math.RealEqual(camUpX, 1.0):
-            horAxisColor = og.ColourValue.Red
-        elif og.Math.RealEqual(camUpY, 1.0):
-            horAxisColor = og.ColourValue.Green
-        elif og.Math.RealEqual(camUpZ, 1.0):
-            horAxisColor = og.ColourValue.Blue
-        else:
-            horAxisColor = self.colour1
-
-        # The number of lines
-        numLinesWidth = int((worldWidth / mult) + 1)
-        numLinesHeight = int((worldHeight / mult) + 1)
-
-        # Start creating or updating the grid
-        self.pGrid.estimateVertexCount(2 * numLinesWidth + 2 * numLinesHeight)
-        if created:
-            self.pGrid.beginUpdate(0)
-        else:
-            self.pGrid.begin(self.sMatName, og.RenderOperation.OT_LINE_LIST)
-            self.created = True
-
-        # Vertical lines
-        startX = mult * int(worldLeft / mult)
-        x = startX
-        while x <= worldRight:
-            # Get the right color for this line
-            if x == 0:
-                multX = x
-            elif x < 0:
-                multX = int(x / mult - 0.5)
-            else:
-                multX = int(x / mult + 0.5)
-
-
-            if multX == 0:
-                colour = vertAxisColor
-            elif multX % (int(self.division)):
-                self.colour2
-            else:
-                self.colour1
-
-
-
-
-            # Add the line
-            self.pGrid.position(x, worldBottom, 0)
-            self.pGrid.colour(colour)
-            self.pGrid.position(x, worldTop, 0)
-            self.pGrid.colour(colour)
-
-            x += mult
-
-        # Horizontal lines
-        startY = mult * int(worldBottom / mult)
-        y = startY
-        while y <= worldTop:
-            # Get the right color for this line
-            #multY = (y == 0) ? y : (y < 0) ? int(y / mult - 0.5f) : int(y / mult + 0.5f)
-            if y == 0:
-                multY = y
-            elif y < 0:
-                multY = int(y / mult - 0.5)
-            else:
-                multY = int(y / mult + 0.5)
-
-            #colour = (multY == 0) ? horAxisColor : (multY % int(division)) ? self.colour2 : self.colour1
-            if multY == 0:
-                colour = horAxisColor
-            elif multY % (int(self.division)):
-                self.colour2
-            else:
-                self.colour1
-
-            self.pGrid.position(worldLeft, y, 0)
-            self.pGrid.colour(colour)
-            self.pGrid.position(worldRight, y, 0)
-            self.pGrid.colour(colour)
-
-            y += mult
-
-        self.pGrid.end()
-
-        self.pNode.setOrientation(pCamera.getOrientation())
-
-
-    def __updatePersp(self):
-        #! @todo Calculate the spacing multiplier
-        mult = 1
-
-        #! @todo Interpolate alpha
-        self.colour2.a = 0.5
-        #if(colour2.a > 1.0f) colour2.a = 1.0f
-
-        # Calculate the horizontal zero-axis color
-        horAxisColor = og.ColourValue.Red
-
-        # Calculate the vertical zero-axis color
-        vertAxisColor = og.ColourValue.Blue
-
-        # The number of lines
-        numLines = int(self.perspSize / mult) + 1
-
-        # Start creating or updating the grid
-        self.pGrid.estimateVertexCount(4 * numLines)
-        if self.created:
-            self.pGrid.beginUpdate(0)
-        else:
-            self.pGrid.begin(self.sMatName, og.RenderOperation.OT_LINE_LIST)
-            self.created = True
-
-        # Vertical lines
-        start = mult * int(-self.perspSize / 2 / mult)
-        x = start
-        while x <= (self.perspSize / 2):
-            # Get the right color for this line
-            #multX = (x == 0) ? x : (x < 0) ? int(x / mult - 0.5f) : int(x / mult + 0.5f)
-            if x == 0:
-                multX = x
-            elif x < 0:
-                multX = int(x / mult - 0.5)
-            else:
-                multX = int(x / mult +0.5)
-
-            #colour = (multX == 0) ? vertAxisColor : (multX % (int) self.division) ? self.colour2 : self.colour1
-            if multX == 0:
-                colour = vertAxisColor
-            elif multX % int(self.division):
-                colour = self.colour2
-            else:
-                colour = self.colour1
-
-            # Add the line
-            self.pGrid.position(x, 0, -self.perspSize / 2)
-            self.pGrid.colour(colour)
-            self.pGrid.position(x, 0, self.perspSize / 2)
-            self.pGrid.colour(colour)
-
-            x += mult
-
-        # Horizontal lines
-        y = start
-        while y <= (self.perspSize / 2):
-            # Get the right color for this line
-            #multY = (y == 0) ? y : (y < 0) ? int(y / mult - 0.5f) : int(y / mult + 0.5f)
-            if y == 0:
-                multY = y
-            elif y < 0:
-                multY = int(y / mult - 0.5)
-            else:
-                multY = int(y / mult +0.5)
-
-            #colour = (multY == 0) ? horAxisColor : (multY % int(self.division)) ? self.colour2 : self.colour1
-            if multY == 0:
-                colour = horAxisColor
-            elif multY % int(self.division):
-                colour = self.colour2
-            else:
-                colour = self.colour1
-            # Add the line
-            self.pGrid.position(-self.perspSize / 2, 0, y)
-            self.pGrid.colour(colour)
-            self.pGrid.position(self.perspSize / 2, 0, y)
-            self.pGrid.colour(colour)
-
-            y += mult
-
-        self.pGrid.end()
-
-        # Normal orientation, grid in the X-Z plane
-        self.pNode.resetOrientation()
-
-
-    def __checkUpdate(self):
-        update = False
-
-        pCamera = self.viewport.getCamera()
-        if not pCamera:
-            return False
-
-        if pCamera is not self.prevCamera:
-            self.prevCamera = pCamera
-            update = True
-
-
-        ortho = (pCamera.getProjectionType() == og.PT_ORTHOGRAPHIC)
-        if ortho is not self.prevOrtho:
-            self.prevOrtho = ortho
-            update = True
-
-            # Set correct material properties
-            pMaterial = og.MaterialManager.getSingleton().getByName(self.sMatName)
-
-            pMaterial.setDepthWriteEnabled(not ortho)
-            pMaterial.setDepthCheckEnabled(not ortho)
-
-        #return update || ortho ? checkUpdateOrtho() : checkUpdatePersp()
-        if update:
-            if ortho:
-                return self.__checkUpdateOrtho()
-            else:
-                return self.__checkUpdatePersp()
-
-        return False
-
-
-    def __checkUpdateOrtho(self):
-        update = False
-
-        pCamera = self.viewport.getCamera()
-        if not pCamera:
-            return False
-
-        if pCamera.getPosition() is not self.prevCamPos:
-            self.prevCamPos = pCamera.getPosition()
-            update = True
-
-        if pCamera.getNearClipDistance() is not self.prevNear:
-            self.prevNear = pCamera.getNearClipDistance()
-            update = True
-
-        if pCamera.getFOVy() is not self.prevOrtho:
-            self.prevOrtho = pCamera.getFOVy()
-            update = True
-
-        if pCamera.getAspectRatio() is not self.prevAspectRatio:
-            self.prevAspectRatio = pCamera.getAspectRatio()
-            update = True
-
-        return update
-
-
-    def __checkUpdatePersp(self):
-        return False
+#-----------------------------------------------------------------------------
+#Copyright (c) 2007 Jeroen Dierckx
+#Python Version by Stefan Stammberger
+#
+#This program is free software you can redistribute it and/or modify it under
+#the terms of the GNU Lesser General Public License as published by the Free Software
+#Foundation either version 2 of the License, or (at your option) any later
+#version.
+#
+#This program is distributed in the hope that it will be useful, but WITHOUT
+#ANY WARRANTY without even the implied warranty of MERCHANTABILITY or FITNESS
+#FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.
+#
+#You should have received a copy of the GNU Lesser General Public License along with
+#this program if not, write to the Free Software Foundation, Inc., 59 Temple
+#Place - Suite 330, Boston, MA 02111-1307, USA, or go to
+#http://www.gnu.org/copyleft/lesser.txt.
+#-----------------------------------------------------------------------------
+
+import ogre.renderer.OGRE as og
+
+RL_BEHIND = 1
+INFRONT = 2
+
+class ViewportGrid(og.RenderTargetListener):
+    def __init__(self, pSceneMgr, pViewport):
+        super(ViewportGrid, self).__init__()
+
+        self.sceneManager = pSceneMgr
+        self.viewport = pViewport
+        self.enabled = False
+        self.layer = None
+
+        self.prevCamera = None
+        self.prevOrtho = False
+        self.prevCamPos = None
+        self.prevNear = None
+        self.prevOrtho = None
+        self.prevAspectRatio = None
+        self.bForceUpdate = True
+
+        self.pGrid = None
+        self.created = False
+        self.pNode = None
+
+        self.colour1 = og.ColourValue(0.7, 0.7, 0.7)
+        self.colour2 = og.ColourValue(0.7, 0.7, 0.7)
+        self.division = 10
+        self.perspSize = 100
+        self.renderScale = True
+        self.renderMiniAxes = True
+
+        self.sMatName = "ViewportGrid"
+
+        self.__createGrid()
+        self.setRenderLayer(RL_BEHIND)
+
+        # Add this as a render target listener
+        self.viewport.getTarget().addListener(self)
+
+
+    def getColour(self):
+        return colour1
+
+    def setColour(self, colour):
+        # Force alpha = 1 for the primary colour
+        self.colour1 = colour
+        self.colour1.a = 1.0
+        self.colour2 = colour1
+        self.forceUpdate()
+
+    #Grid division (the number of new lines that are created when zooming in).
+    def getDivision(self):
+        return division
+
+    def setDivision(self, division):
+        self.division = division
+        self.forceUpdate()
+
+    #//! Grid render layer (behind of in front of the objects).
+    def getRenderLayer(self):
+        return layer
+
+    def setRenderLayer(self, layer):
+        self.layer = layer
+
+        if self.layer == RL_BEHIND:
+            # Render just before the world geometry
+            self.pGrid.setRenderQueueGroup(og.RENDER_QUEUE_WORLD_GEOMETRY_1 - 1)
+        elif self.layer == RL_INFRONT:
+            # Render just before the overlays
+            self.pGrid.setRenderQueueGroup(og.RENDER_QUEUE_OVERLAY - 1)
+
+
+    def getPerspectiveSize(self):
+        return perspSize
+
+    def setPerspectiveSize(self, size):
+        self.perspSize = size
+        self.forceUpdate()
+
+#       //! Render scaling info? Defaults to true.
+#       //! @todo Implement this
+    def getRenderScale(self):
+        return renderScale
+
+    def setRenderScale(self, enabled = True):
+        self.renderScale = enabled
+        self.forceUpdate()
+
+#       //! Render mini axes? Defaults to true.
+#       //! @todo Implement this
+    def getRenderMiniAxes(self):
+        return renderMiniAxes
+
+    def setRenderMiniAxes(self, enabled = True):
+        self.renderMiniAxes = enabled
+        self.forceUpdate()
+
+    #// Enable / disable
+    def isEnabled(self):
+        return self.enabled
+
+    def enable(self):
+        self.enabled = True
+
+        if not self.pGrid.isAttached():
+            self.pNode.attachObject(self.pGrid)
+
+        self.forceUpdate()
+
+
+    def disable(self):
+        self.enabled = False
+
+        if self.pGrid.isAttached():
+            self.pNode.detachObject(self.pGrid)
+
+
+
+    def  toggle(self):
+        self.setEnabled(not self.enabled)
+
+    def setEnabled(self, enabled):
+        if enabled:
+            self.enable()
+        else:
+            self.disable()
+
+
+    def forceUpdate(self):
+        self.bForceUpdate = True
+
+    def preViewportUpdate(self, evt):
+       #TODO find out why evt.souce and self.viewport differ in their memory address
+       # if evt.source != self.viewport:
+           # return
+
+        self.pGrid.setVisible(True)
+
+        if self.enabled:
+            self.__update()
+
+    def postViewportUpdate(self, evt):
+       # if evt.source != self.viewport:
+           # return
+        self.pGrid.setVisible(False)
+
+    def __createGrid(self):
+        name = self.viewport.getTarget().getName() + "::"
+        name += str(self.viewport.getZOrder()) + "::ViewportGrid"
+
+        #// Create the manual object
+        self.pGrid = self.sceneManager.createManualObject(name)
+        self.pGrid.setDynamic(True)
+
+        #// Create the scene node (not attached yet)
+        self.pNode = self.sceneManager.getRootSceneNode().createChildSceneNode(name)
+        self.enabled = False
+
+        #// Make sure the material is created
+        #//! @todo Should we destroy the material somewhere?
+        matMgr = og.MaterialManager.getSingleton()
+        if not matMgr.resourceExists(self.sMatName):
+            pMaterial = matMgr.create(self.sMatName, og.ResourceGroupManager.DEFAULT_RESOURCE_GROUP_NAME)
+            pMaterial.setLightingEnabled(False)
+            pMaterial.setSceneBlending(og.SBT_TRANSPARENT_ALPHA)
+
+
+
+    def __destroyGrid(self):
+        self.sceneManager.destroyManualObject(self.pGrid)
+        self.pGrid = None
+
+        self.sceneManager.destroySceneNode(self.pNode.getName())
+        self.pNode = None
+
+
+    def __update(self):
+        if not self.enabled:
+            return
+
+        pCamera = self.viewport.getCamera()
+        if not pCamera:
+            return
+
+        # Check if an update is necessary
+        if not self.__checkUpdate() and not self.bForceUpdate:
+            return
+
+        if pCamera.getProjectionType() == og.PT_ORTHOGRAPHIC:
+            self.__updateOrtho()
+        else:
+            self.__updatePersp()
+
+        self.bForceUpdate = False
+
+
+
+    def __updateOrtho(self):
+        # Screen dimensions
+        width = self.viewport.getActualWidth()
+        height = self.viewport.getActualHeight()
+
+        #Camera information
+        pCamera = pViewport.getCamera()
+        camPos = pCamera.getPosition()
+        camDir = pCamera.getDirection()
+        camUp = pCamera.getUp()
+        camRight = pCamera.getRight()
+
+        # Translation in grid space
+        dx = camPos.dotProduct(camRight)
+        dy = camPos.dotProduct(camUp)
+
+        # Frustum dimensions
+        # Note: Tan calculates the opposite side of a _right_ triangle given its angle, so we make sure it is one, and double the result
+        worldWidth = 2 * og.Math.Tan(pCamera.getFOVy() / 2) * pCamera.getAspectRatio() * pCamera.getNearClipDistance()
+        worldHeight = worldWidth / pCamera.getAspectRatio()
+        worldLeft = dx - worldWidth / 2
+        worldRight = dx + worldWidth / 2
+        worldBottom = dy - worldHeight / 2
+        worldTop = dy + worldHeight / 2
+
+        # Conversion values (note: same as working with the height values)
+        worldToScreen = width / worldWidth
+        screenToWorld = worldWidth / width
+
+        # TODO Treshold should be dependent on window width/height (min? max?) so there are no more then division full alpha-lines
+        treshold = 10 # Treshhold in pixels
+
+        # Calculate the spacing multiplier
+        mult = 0
+        exp = 0
+        temp = worldToScreen # 1 world unit
+        if worldToScreen < treshold:
+            while temp < treshold:
+                exp = exp +1
+                temp = temp * treshold # TODO maybe wrong
+
+            mult = og.Math.Pow(self.division, exp)
+        else:
+            while temp > (self.division * treshold):
+                exp = exp +1
+                temp = temp / treshold # TODO maybe wrong
+
+            mult = og.Math.Pow(1.0 / self.division, exp)
+
+        # Interpolate alpha for (multiplied) spacing between treshold and division * treshold
+        self.colour2.a = worldToScreen * mult / (division * treshold - treshold)
+        if colour2.a > 1.0:
+           self.colour2.a = 1.0
+
+        # Calculate the horizontal zero-axis color
+        camRightX = og.Math.Abs(camRight.x)
+        camRightY = og.Math.Abs(camRight.y)
+        camRightZ = og.Math.Abs(camRight.z)
+
+        if og.Math.RealEqual(camRightX, 1.0):
+            horAxisColor = og.ColourValue().Red
+        elif og.Math.RealEqual(camRightY, 1.0):
+            horAxisColor = og.ColourValue().Green
+        elif og.Math.RealEqual(camRightZ, 1.0):
+            horAxisColor = og.ColourValue().Blue
+        else:
+            horAxisColor = self.colour1
+
+        # Calculate the vertical zero-axis color
+        camUpX = og.Math.Abs(camUp.x)
+        camUpY = og.Math.Abs(camUp.y)
+        camUpZ = og.Math.Abs(camUp.z)
+
+        if og.Math.RealEqual(camUpX, 1.0):
+            horAxisColor = og.ColourValue().Red
+        elif og.Math.RealEqual(camUpY, 1.0):
+            horAxisColor = og.ColourValue().Green
+        elif og.Math.RealEqual(camUpZ, 1.0):
+            horAxisColor = og.ColourValue().Blue
+        else:
+            horAxisColor = self.colour1
+
+        # The number of lines
+        numLinesWidth = int((worldWidth / mult) + 1)
+        numLinesHeight = int((worldHeight / mult) + 1)
+
+        # Start creating or updating the grid
+        self.pGrid.estimateVertexCount(2 * numLinesWidth + 2 * numLinesHeight)
+        if created:
+            self.pGrid.beginUpdate(0)
+        else:
+            self.pGrid.begin(self.sMatName, og.RenderOperation.OT_LINE_LIST)
+            self.created = True
+
+        # Vertical lines
+        startX = mult * int(worldLeft / mult)
+        x = startX
+        while x <= worldRight:
+            # Get the right color for this line
+            if x == 0:
+                multX = x
+            elif x < 0:
+                multX = int(x / mult - 0.5)
+            else:
+                multX = int(x / mult + 0.5)
+
+
+            if multX == 0:
+                colour = vertAxisColor
+            elif multX % (int(self.division)):
+                self.colour2
+            else:
+                self.colour1
+
+
+
+
+            # Add the line
+            self.pGrid.position(x, worldBottom, 0)
+            self.pGrid.colour(colour)
+            self.pGrid.position(x, worldTop, 0)
+            self.pGrid.colour(colour)
+
+            x += mult
+
+        # Horizontal lines
+        startY = mult * int(worldBottom / mult)
+        y = startY
+        while y <= worldTop:
+            # Get the right color for this line
+            #multY = (y == 0) ? y : (y < 0) ? int(y / mult - 0.5f) : int(y / mult + 0.5f)
+            if y == 0:
+                multY = y
+            elif y < 0:
+                multY = int(y / mult - 0.5)
+            else:
+                multY = int(y / mult + 0.5)
+
+            #colour = (multY == 0) ? horAxisColor : (multY % int(division)) ? self.colour2 : self.colour1
+            if multY == 0:
+                colour = horAxisColor
+            elif multY % (int(self.division)):
+                self.colour2
+            else:
+                self.colour1
+
+            self.pGrid.position(worldLeft, y, 0)
+            self.pGrid.colour(colour)
+            self.pGrid.position(worldRight, y, 0)
+            self.pGrid.colour(colour)
+
+            y += mult
+
+        self.pGrid.end()
+
+        self.pNode.setOrientation(pCamera.getOrientation())
+
+
+    def __updatePersp(self):
+        #! @todo Calculate the spacing multiplier
+        mult = 1
+
+        #! @todo Interpolate alpha
+        self.colour2.a = 0.5
+        #if(colour2.a > 1.0f) colour2.a = 1.0f
+
+        # Calculate the horizontal zero-axis color
+        horAxisColor = og.ColourValue().Red
+
+        # Calculate the vertical zero-axis color
+        vertAxisColor = og.ColourValue().Blue
+
+        # The number of lines
+        numLines = int(self.perspSize / mult) + 1
+
+        # Start creating or updating the grid
+        self.pGrid.estimateVertexCount(4 * numLines)
+        if self.created:
+            self.pGrid.beginUpdate(0)
+        else:
+            self.pGrid.begin(self.sMatName, og.RenderOperation.OT_LINE_LIST)
+            self.created = True
+
+        # Vertical lines
+        start = mult * int(-self.perspSize / 2 / mult)
+        x = start
+        while x <= (self.perspSize / 2):
+            # Get the right color for this line
+            #multX = (x == 0) ? x : (x < 0) ? int(x / mult - 0.5f) : int(x / mult + 0.5f)
+            if x == 0:
+                multX = x
+            elif x < 0:
+                multX = int(x / mult - 0.5)
+            else:
+                multX = int(x / mult +0.5)
+
+            #colour = (multX == 0) ? vertAxisColor : (multX % (int) self.division) ? self.colour2 : self.colour1
+            if multX == 0:
+                colour = vertAxisColor
+            elif multX % int(self.division):
+                colour = self.colour2
+            else:
+                colour = self.colour1
+
+            # Add the line
+            self.pGrid.position(x, 0, -self.perspSize / 2)
+            self.pGrid.colour(colour)
+            self.pGrid.position(x, 0, self.perspSize / 2)
+            self.pGrid.colour(colour)
+
+            x += mult
+
+        # Horizontal lines
+        y = start
+        while y <= (self.perspSize / 2):
+            # Get the right color for this line
+            #multY = (y == 0) ? y : (y < 0) ? int(y / mult - 0.5f) : int(y / mult + 0.5f)
+            if y == 0:
+                multY = y
+            elif y < 0:
+                multY = int(y / mult - 0.5)
+            else:
+                multY = int(y / mult +0.5)
+
+            #colour = (multY == 0) ? horAxisColor : (multY % int(self.division)) ? self.colour2 : self.colour1
+            if multY == 0:
+                colour = horAxisColor
+            elif multY % int(self.division):
+                colour = self.colour2
+            else:
+                colour = self.colour1
+            # Add the line
+            self.pGrid.position(-self.perspSize / 2, 0, y)
+            self.pGrid.colour(colour)
+            self.pGrid.position(self.perspSize / 2, 0, y)
+            self.pGrid.colour(colour)
+
+            y += mult
+
+        self.pGrid.end()
+
+        # Normal orientation, grid in the X-Z plane
+        self.pNode.resetOrientation()
+
+
+    def __checkUpdate(self):
+        update = False
+
+        pCamera = self.viewport.getCamera()
+        if not pCamera:
+            return False
+
+        if pCamera is not self.prevCamera:
+            self.prevCamera = pCamera
+            update = True
+
+
+        ortho = (pCamera.getProjectionType() == og.PT_ORTHOGRAPHIC)
+        if ortho is not self.prevOrtho:
+            self.prevOrtho = ortho
+            update = True
+
+            # Set correct material properties
+            pMaterial = og.MaterialManager.getSingleton().getByName(self.sMatName)
+
+            pMaterial.setDepthWriteEnabled(not ortho)
+            pMaterial.setDepthCheckEnabled(not ortho)
+
+        #return update || ortho ? checkUpdateOrtho() : checkUpdatePersp()
+        if update:
+            if ortho:
+                return self.__checkUpdateOrtho()
+            else:
+                return self.__checkUpdatePersp()
+
+        return False
+
+
+    def __checkUpdateOrtho(self):
+        update = False
+
+        pCamera = self.viewport.getCamera()
+        if not pCamera:
+            return False
+
+        if pCamera.getPosition() is not self.prevCamPos:
+            self.prevCamPos = pCamera.getPosition()
+            update = True
+
+        if pCamera.getNearClipDistance() is not self.prevNear:
+            self.prevNear = pCamera.getNearClipDistance()
+            update = True
+
+        if pCamera.getFOVy() is not self.prevOrtho:
+            self.prevOrtho = pCamera.getFOVy()
+            update = True
+
+        if pCamera.getAspectRatio() is not self.prevAspectRatio:
+            self.prevAspectRatio = pCamera.getAspectRatio()
+            update = True
+
+        return update
+
+
+    def __checkUpdatePersp(self):
+        return False


Property changes on: rl/branches/newton20/editors/Lockenwickler/src/media
___________________________________________________________________
Name: svn:ignore
   + .Bpib
skelett.blend



Property changes on: rl/branches/newton20/editors/Lockenwickler/src/plugins
___________________________________________________________________
Name: svn:ignore
   + ParticleUniverse.dll
Plugin_BSPSceneManager.dll
Plugin_CgProgramManager.dll
Plugin_OctreeSceneManager.dll
Plugin_OctreeZone.dll
Plugin_ParticleFX.dll
Plugin_PCZSceneManager.dll
Plugin_TheoraVideoSystem.dll
RenderSystem_Direct3D9.dll
RenderSystem_GL.dll


Copied: rl/branches/newton20/editors/Lockenwickler/ui files/NewModuleWizard.ui (from rev 4722, rl/trunk/editors/Lockenwickler/ui files/NewModuleWizard.ui)

Modified: rl/branches/newton20/engine/core/CMakeLists.txt
===================================================================
--- rl/branches/newton20/engine/core/CMakeLists.txt	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/engine/core/CMakeLists.txt	2009-01-27 21:35:12 UTC (rev 4723)
@@ -7,7 +7,8 @@
 ${CEGUI_INCLUDE_DIRS}
 ${OGRENEWT_INCLUDE_DIR}
 ${MESHMAGICK_INCLUDE_DIR}
-${RUBY_INCLUDE_PATH})
+${RUBY_INCLUDE_PATH}
+${FMODEX_INCLUDE_DIR})
 
 SET(RlCore_LIB_SRCS
 src/Actor.cpp
@@ -96,11 +97,11 @@
 
 ADD_LIBRARY(RlCore SHARED ${RlCore_LIB_SRCS})
 
-TARGET_LINK_LIBRARIES(RlCore ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARY} ${MESHMAGICK_LIBRARY} ${OIS_LIBRARIES} ${RUBY_LIBRARY})
+TARGET_LINK_LIBRARIES(RlCore ${OGRE_LIBRARIES} ${CEGUI_LIBRARIES} ${OGRENEWT_LIBRARY} ${MESHMAGICK_LIBRARY} ${OIS_LIBRARIES} ${RUBY_LIBRARY} ${FMODEX_LIBRARY})
 
 SET_TARGET_PROPERTIES(RlCore PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
 	SOVERSION ${RL_MAJOR_VERSION}
 	DEFINE_SYMBOL RLCORE_EXPORTS)
 
-INSTALL(TARGETS RlCore LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlCore LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Modified: rl/branches/newton20/engine/core/include/PhysicsManager.h
===================================================================
--- rl/branches/newton20/engine/core/include/PhysicsManager.h	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/engine/core/include/PhysicsManager.h	2009-01-27 21:35:12 UTC (rev 4723)
@@ -305,7 +305,7 @@
         OgreNewt::World* mWorld;
         //! the visualisation for physical behaviour (actually not the best)
         OgreNewt::Debugger* mNewtonDebugger;
-        //! debug mode: 0 no debugging, 1 show debug lines (freezed state), 2 show debug lines (update every frame)
+        //! debug mode: 0 no debugging, 1 show debug lines (freezed state), 2 show debug lines (update every frame), 3 show raycasts from one frame, 4 upda raycasts every frame
         int mDebugMode;
 
         //! factory for creating new collision primitives

Modified: rl/branches/newton20/engine/core/src/PhysicsManager.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/PhysicsManager.cpp	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/engine/core/src/PhysicsManager.cpp	2009-01-27 21:35:12 UTC (rev 4723)
@@ -72,7 +72,7 @@
         : mEnabled(false),
         mNewtonDebugger(&OgreNewt::Debugger::getSingleton()),
         mPhysicalThings(),
-        mDebugMode(false),
+        mDebugMode(0),
         mGravity(0, -9.81, 0),
         mTimeFactor(1.0f),
         mWorldAABB(Vector3(-100, -100, -100), Vector3(100, 100, 100)),
@@ -151,6 +151,12 @@
         //NewtonSetMinimumFrameRate(mWorld->getNewtonWorld(), 1./mMaxTimestep);
 
 
+        if( mDebugMode == 4 )
+        {
+            mNewtonDebugger->clearRaycastsRecorded();
+        }
+
+
         // Newton kann timesteps zwischen 1/20 und 1/600!
         mElapsed += elapsedTime * mTimeFactor;
         while( mElapsed >= mMaxTimestep)
@@ -159,6 +165,7 @@
             // know if it's really neccessary
             GameEventManager::getSingleton().notifyNewtonWorldUpdate();
 
+
             mWorld->update(mMaxTimestep);
             mElapsed-=mMaxTimestep;
 #ifdef _DEBUG
@@ -202,6 +209,10 @@
         {
             mNewtonDebugger->showDebugInformation(mWorld);
         }
+        else if( mDebugMode == 3 )
+        {
+            mNewtonDebugger->stopRaycastRecording();
+        }
     }
 
 #ifdef _DEBUG
@@ -291,18 +302,29 @@
 
     void PhysicsManager::toggleDebugMode()
     {
-        mDebugMode = (mDebugMode+1)%3;
+        mNewtonDebugger->init(CoreSubsystem::getSingleton().getWorld()->getSceneManager());
+        mDebugMode = (mDebugMode+1)%5;
         switch(mDebugMode)
         {
             case 0:
+                mNewtonDebugger->stopRaycastRecording();
+                mNewtonDebugger->clearRaycastsRecorded();
                 mNewtonDebugger->hideDebugInformation();
                 break;
             case 1:
-	        mNewtonDebugger->init(CoreSubsystem::getSingleton().getWorld()->getSceneManager());
                 mNewtonDebugger->showDebugInformation(mWorld);
                 break;
+            case 2:
+                break;
+            case 3:
+                mNewtonDebugger->startRaycastRecording(true);
+                mNewtonDebugger->hideDebugInformation();
+                break;
+            case 4:
+                mNewtonDebugger->startRaycastRecording(true);
+                mNewtonDebugger->hideDebugInformation();
+                break;
             default:
-	        mNewtonDebugger->init(CoreSubsystem::getSingleton().getWorld()->getSceneManager());
                 break;
         }
     }

Modified: rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp	2009-01-27 21:35:12 UTC (rev 4723)
@@ -109,6 +109,9 @@
 
     bool PhysicsMaterialRaycast::userCallback(Body* body, Ogre::Real distance, const Ogre::Vector3& normal, int collisionID)
     {
+        mInfo.mBody = body;
+        mInfo.mDistance = distance;
+        mInfo.mNormal = normal;
         return true;
         /*
         if( body->getMaterialGroupID() == NULL )
@@ -158,9 +161,6 @@
 
                 if( found && !mInvertMat || !found && mInvertMat )
                 {
-                    mInfo.mBody = body;
-                    mInfo.mDistance = distance;
-                    mInfo.mNormal = normal;
                     mGetNearest = true;
                 }
             }
@@ -259,3 +259,4 @@
     }
 
 }
+

Modified: rl/branches/newton20/engine/rules/src/CreatureController.cpp
===================================================================
--- rl/branches/newton20/engine/rules/src/CreatureController.cpp	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/engine/rules/src/CreatureController.cpp	2009-01-27 21:35:12 UTC (rev 4723)
@@ -321,8 +321,8 @@
 		// find the distance to the floor:
                 // raycasts
                 PhysicsMaterialRaycast::MaterialVector materialVector;
-                materialVector.push_back(PhysicsManager::getSingleton().getMaterialID("default")); // should we perhaps only use level here?
-                materialVector.push_back(PhysicsManager::getSingleton().getMaterialID("level"));
+                materialVector.push_back(PhysicsManager::getSingleton().getMaterialID("camera")); // should we perhaps only use level here?
+                materialVector.push_back(PhysicsManager::getSingleton().getMaterialID("character"));
 
                 Vector3 start = getCreature()->getPosition();
                 Vector3 end = start + Vector3::NEGATIVE_UNIT_Y*0.4;
@@ -330,7 +330,7 @@
                 RaycastInfo info = mRaycast.execute(
                             PhysicsManager::getSingleton()._getNewtonWorld(),
                             &materialVector,
-                            start, end);
+                            start, end, false);
 
 		if( info.mBody == NULL )
 		{

Modified: rl/branches/newton20/engine/rules/src/StepRecognitionMovement.cpp
===================================================================
--- rl/branches/newton20/engine/rules/src/StepRecognitionMovement.cpp	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/engine/rules/src/StepRecognitionMovement.cpp	2009-01-27 21:35:12 UTC (rev 4723)
@@ -100,8 +100,8 @@
 
         // the materials that are triggered here
         PhysicsMaterialRaycast::MaterialVector materialVector;
-        materialVector.push_back(PhysicsManager::getSingleton().getMaterialID("default")); // should we perhaps only use level here?
-        materialVector.push_back(PhysicsManager::getSingleton().getMaterialID("level"));
+        materialVector.push_back(PhysicsManager::getSingleton().getMaterialID("character")); // should we perhaps only use level here?
+        materialVector.push_back(PhysicsManager::getSingleton().getMaterialID("camera"));
 
 
 
@@ -115,7 +115,8 @@
                 PhysicsManager::getSingleton()._getNewtonWorld(),
                 &materialVector,
                 start,
-                end);
+                end,
+                true);
         if(info.mBody)
         {
             mMoveToNextTarget = false;
@@ -151,7 +152,7 @@
                     mRaycast.execute(
                             PhysicsManager::getSingleton()._getNewtonWorld(),
                             &materialVector,
-                            start, end);
+                            start, end, true);
 
                 // do we need to check bodies left and right of this ray? (step width?)
 

Modified: rl/branches/newton20/engine/ui/src/MovementControlState.cpp
===================================================================
--- rl/branches/newton20/engine/ui/src/MovementControlState.cpp	2009-01-27 21:32:51 UTC (rev 4722)
+++ rl/branches/newton20/engine/ui/src/MovementControlState.cpp	2009-01-27 21:35:12 UTC (rev 4723)
@@ -997,6 +997,8 @@
             materialVector.push_back( mCamBody->getMaterialGroupID() );
             OgreNewt::World *world = PhysicsManager::getSingleton()._getNewtonWorld();
 
+OgreNewt::Debugger::getSingleton().init(CoreSubsystem::getSingleton().getWorld()->getSceneManager());
+OgreNewt::Debugger::getSingleton().startRaycastRecording(true);
             ConvexcastInfo info = mConvexcast->execute(
                     world,
                     &materialVector,
@@ -1005,6 +1007,7 @@
                     Quaternion::IDENTITY,
                     targetCamPos,
                     true);
+OgreNewt::Debugger::getSingleton().stopRaycastRecording();
 
             bool CollisionFound = false;
             if( info.mBody )



From melven at mail.berlios.de  Wed Jan 28 01:48:04 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Wed, 28 Jan 2009 01:48:04 +0100
Subject: [Dsa-hl-svn] r4724 - in dependencies/OgreNewt_ngt: inc src
Message-ID: <200901280048.n0S0m4Tc026465@sheep.berlios.de>

Author: melven
Date: 2009-01-28 01:48:03 +0100 (Wed, 28 Jan 2009)
New Revision: 4724

Modified:
   dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionPrimitives.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_Tools.h
   dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_Tools.cpp
Log:
-adopted OgreNewt to latest newton beta
.. amazingly, there's a bug in newton: spheres don't (convex)cast correctly (I just needed to mention that :-P )


Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionPrimitives.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionPrimitives.h	2009-01-27 21:35:12 UTC (rev 4723)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionPrimitives.h	2009-01-28 00:48:03 UTC (rev 4724)
@@ -256,6 +256,9 @@
 
 			//! finish the tree collision
 			void finish( bool optimize = true );
+
+        private:
+            static float _CDECL rayHitCallback(float interception, float *normal, int faceId, void *userData);
 		};
 
 		////////////////////////////////////////////////////////

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h	2009-01-27 21:35:12 UTC (rev 4723)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h	2009-01-28 00:48:03 UTC (rev 4724)
@@ -128,8 +128,8 @@
         public:
             StaticConvexCast(PlayerController *pc, const OgreNewt::World* world,
                              const OgreNewt::Collision* col, const Ogre::Vector3& startpt,
-                             const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount) :
-                    BasicConvexcast(pc->getControlledBody()->getWorld(), col, startpt, colori, endpt, maxcontactscount),
+                             const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount, int thread) :
+                    BasicConvexcast(pc->getControlledBody()->getWorld(), col, startpt, colori, endpt, maxcontactscount, thread),
                     m_parent(pc)
                 {}
 
@@ -143,8 +143,8 @@
         public:
             DynamicConvexCast(PlayerController *pc, const OgreNewt::World* world,
                              const OgreNewt::Collision* col, const Ogre::Vector3& startpt,
-                             const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount) :
-                    BasicConvexcast(pc->getControlledBody()->getWorld(), col, startpt, colori, endpt, maxcontactscount),
+                             const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount, int thread) :
+                    BasicConvexcast(pc->getControlledBody()->getWorld(), col, startpt, colori, endpt, maxcontactscount, thread),
                     m_parent(pc)
                 {}
 
@@ -158,8 +158,8 @@
         public:
             AllBodyConvexCast(PlayerController *pc, const OgreNewt::World* world,
                              const OgreNewt::Collision* col, const Ogre::Vector3& startpt,
-                             const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount) :
-                    BasicConvexcast(pc->getControlledBody()->getWorld(), col, startpt, colori, endpt, maxcontactscount),
+                             const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount, int thread) :
+                    BasicConvexcast(pc->getControlledBody()->getWorld(), col, startpt, colori, endpt, maxcontactscount, thread),
                     m_parent(pc)
                 {}
 

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h	2009-01-27 21:35:12 UTC (rev 4723)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h	2009-01-28 00:48:03 UTC (rev 4724)
@@ -166,7 +166,7 @@
                 \param maxcontactscount maximum number of contacts that should be saved,
                        set to 0 if you only need the distance to the first intersection
 	*/
-	void go( const OgreNewt::World* world, const OgreNewt::Collision* col, const Ogre::Vector3& startpt, const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount);
+	void go( const OgreNewt::World* world, const OgreNewt::Collision* col, const Ogre::Vector3& startpt, const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount, int threadIndex);
 
 	//! user callback pre-filter function.
 	/*!
@@ -209,7 +209,7 @@
 	class _OgreNewtExport ConvexcastContactInfo
 	{
 	public:
-		Ogre::Real              mDistance;      //!< dist from point1 of the raycast, in range [0,1].
+		//Ogre::Real              mDistance;      //!< dist from point1 of the raycast, in range [0,1].
 		OgreNewt::Body*         mBody;          //!< pointer to body intersected with
 		int                     mCollisionID;   //!< collision ID of the primitive hit by the ray (for compound collision bodies)
 		Ogre::Vector3           mContactNormal; //!< normal of intersection.
@@ -235,7 +235,7 @@
                 \param maxcontactscount maximum number of contacts that should be saved
                 \param prefilter pointer to a prefilter function
 	*/
-	BasicConvexcast( const OgreNewt::World* world, const OgreNewt::Collision* col, const Ogre::Vector3& startpt, const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount);
+	BasicConvexcast( const OgreNewt::World* world, const OgreNewt::Collision* col, const Ogre::Vector3& startpt, const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount, int threadIndex);
 
 	//! destuctor.
 	~BasicConvexcast();

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Tools.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Tools.h	2009-01-27 21:35:12 UTC (rev 4723)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Tools.h	2009-01-28 00:48:03 UTC (rev 4724)
@@ -73,7 +73,7 @@
 		*/
 		_OgreNewtExport int CollisionPointDistance( const OgreNewt::World* world, const Ogre::Vector3& globalpt, 
 									const OgreNewt::Collision* col, const Ogre::Quaternion& colorient, const Ogre::Vector3& colpos, 
-									Ogre::Vector3& retpt, Ogre::Vector3& retnormal );
+									Ogre::Vector3& retpt, Ogre::Vector3& retnormal, int threadIndex );
 									
 
 
@@ -92,7 +92,7 @@
 		*/
 		_OgreNewtExport int CollisionClosestPoint( const OgreNewt::World* world, const OgreNewt::Collision* colA, const Ogre::Quaternion& colOrientA, const Ogre::Vector3& colPosA,
 															const OgreNewt::Collision* colB, const Ogre::Quaternion& colOrientB, const Ogre::Vector3& colPosB,
-															Ogre::Vector3& retPosA, Ogre::Vector3& retPosB, Ogre::Vector3& retNorm );
+															Ogre::Vector3& retPosA, Ogre::Vector3& retPosB, Ogre::Vector3& retNorm, int threadIndex );
 
 
 		//! manual collision between collision primitives.
@@ -114,7 +114,7 @@
 		_OgreNewtExport int CollisionCollide(  const OgreNewt::World* world, int maxSize, 
 			const OgreNewt::Collision* colA, const Ogre::Quaternion& colOrientA, const Ogre::Vector3& colPosA,
 			const OgreNewt::Collision* colB, const Ogre::Quaternion& colOrientB, const Ogre::Vector3& colPosB,
-			Ogre::Vector3* retContactPts, Ogre::Vector3* retNormals, Ogre::Real* retPenetrations );
+			Ogre::Vector3* retContactPts, Ogre::Vector3* retNormals, Ogre::Real* retPenetrations, int threadIndex );
 
 
 		//! manual collision between moving primitives.
@@ -141,7 +141,7 @@
 		_OgreNewtExport int CollisionCollideContinue( const OgreNewt::World* world, int maxSize, Ogre::Real timeStep,
 			const OgreNewt::Collision* colA, const Ogre::Quaternion& colOrientA, const Ogre::Vector3& colPosA, const Ogre::Vector3& colVelA, const Ogre::Vector3& colOmegaA,
 			const OgreNewt::Collision* colB, const Ogre::Quaternion& colOrientB, const Ogre::Vector3& colPosB, const Ogre::Vector3& colVelB, const Ogre::Vector3& colOmegaB,
-			Ogre::Real& retTimeOfImpact, Ogre::Vector3* retContactPts, Ogre::Vector3* retNormals, Ogre::Real* retPenetrations );
+			Ogre::Real& retTimeOfImpact, Ogre::Vector3* retContactPts, Ogre::Vector3* retNormals, Ogre::Real* retPenetrations, int threadIndex );
 
 
 		//! local raycast on a collision object.

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp	2009-01-27 21:35:12 UTC (rev 4723)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp	2009-01-28 00:48:03 UTC (rev 4724)
@@ -501,9 +501,15 @@
 			NewtonTreeCollisionEndBuild( m_col, optimize );
 
             NewtonAddCollisionReference(m_col);
+            NewtonTreeCollisionSetUserRayCastCallback( m_col, rayHitCallback );
 		}
 
+        float TreeCollision::rayHitCallback(float interception, float *normal, int faceId, void *userData)
+        {
+            return interception;
+        }
 
+
 		int TreeCollisionSceneParser::count = 0;
 		
 		

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp	2009-01-27 21:35:12 UTC (rev 4723)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp	2009-01-28 00:48:03 UTC (rev 4724)
@@ -162,7 +162,7 @@
         }
 
 
-	void Convexcast::go(const OgreNewt::World* world, const OgreNewt::Collision *col, const Ogre::Vector3& startpt, const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount)
+	void Convexcast::go(const OgreNewt::World* world, const OgreNewt::Collision *col, const Ogre::Vector3& startpt, const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount, int threadIndex)
 	{
 
         if( Debugger::getSingleton().isRaycastRecording() )
@@ -186,7 +186,7 @@
                 mReturnInfoListLength = 
                         NewtonWorldConvexCast( world->getNewtonWorld(), &matrix[0], (float*)&endpt, col->getNewtonCollision(),
                                                &mFirstContactDistance, this, OgreNewt::Convexcast::newtonConvexcastPreFilter,
-                                               mReturnInfoList, mReturnInfoListSize );
+                                               mReturnInfoList, mReturnInfoListSize, threadIndex);
 
             if( Debugger::getSingleton().isRaycastRecording() && Debugger::getSingleton().isRaycastRecordingHitBodies() )
             {
@@ -225,7 +225,6 @@
 	BasicConvexcast::ConvexcastContactInfo::ConvexcastContactInfo()
 	{
 		mBody = NULL;
-		mDistance = -1.0;
 	}
 
 	BasicConvexcast::ConvexcastContactInfo::~ConvexcastContactInfo() {}
@@ -234,9 +233,9 @@
         {
         }
 
-	BasicConvexcast::BasicConvexcast(const OgreNewt::World* world, const OgreNewt::Collision *col, const Ogre::Vector3& startpt, const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount)
+	BasicConvexcast::BasicConvexcast(const OgreNewt::World* world, const OgreNewt::Collision *col, const Ogre::Vector3& startpt, const Ogre::Quaternion &colori, const Ogre::Vector3& endpt, int maxcontactscount, int threadIndex)
 	{
-		go( world, col, startpt, colori, endpt, maxcontactscount);
+		go( world, col, startpt, colori, endpt, maxcontactscount, threadIndex);
 	}
 
 	BasicConvexcast::~BasicConvexcast()	{}
@@ -272,7 +271,6 @@
                 return info;
 
 
-            info.mDistance = mReturnInfoList[hitnum].m_intersectionParam;
             info.mBody = (OgreNewt::Body*) NewtonBodyGetUserData(mReturnInfoList[hitnum].m_hitBody);
             info.mCollisionID = mReturnInfoList[hitnum].m_contactID;
             info.mContactNormal.x = mReturnInfoList[hitnum].m_normal[0];

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_Tools.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_Tools.cpp	2009-01-27 21:35:12 UTC (rev 4723)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_Tools.cpp	2009-01-28 00:48:03 UTC (rev 4724)
@@ -101,12 +101,12 @@
 		
 		int CollisionPointDistance( const OgreNewt::World* world, const Ogre::Vector3& globalpt, 
 									const OgreNewt::Collision* col, const Ogre::Quaternion& colorient, const Ogre::Vector3& colpos, 
-									Ogre::Vector3& retpt, Ogre::Vector3& retnormal )
+									Ogre::Vector3& retpt, Ogre::Vector3& retnormal, int threadIndex )
 		{
 			float matrix[16];
 			Converters::QuatPosToMatrix( colorient, colpos, matrix );
 
-			return NewtonCollisionPointDistance( world->getNewtonWorld(), &globalpt.x, col->getNewtonCollision(), matrix, &retpt.x, &retnormal.x );
+			return NewtonCollisionPointDistance( world->getNewtonWorld(), &globalpt.x, col->getNewtonCollision(), matrix, &retpt.x, &retnormal.x, threadIndex);
 		}
 		
 
@@ -114,7 +114,7 @@
 		
 		int CollisionClosestPoint( const OgreNewt::World* world, const OgreNewt::Collision* colA, const Ogre::Quaternion& colOrientA, const Ogre::Vector3& colPosA,
 															const OgreNewt::Collision* colB, const Ogre::Quaternion& colOrientB, const Ogre::Vector3& colPosB,
-															Ogre::Vector3& retPosA, Ogre::Vector3& retPosB, Ogre::Vector3& retNorm )
+															Ogre::Vector3& retPosA, Ogre::Vector3& retPosB, Ogre::Vector3& retNorm, int threadIndex )
 		{
 			float matrixA[16];
 			float matrixB[16];
@@ -123,14 +123,14 @@
 			Converters::QuatPosToMatrix( colOrientB, colPosB, matrixB );
 
 			return NewtonCollisionClosestPoint( world->getNewtonWorld(), colA->getNewtonCollision(), matrixA, colB->getNewtonCollision(), matrixB,
-												&retPosA.x, &retPosB.x, &retNorm.x );
+												&retPosA.x, &retPosB.x, &retNorm.x, threadIndex );
 		}
 
 
 		int CollisionCollide(  const OgreNewt::World* world, int maxSize, 
 			const OgreNewt::Collision* colA, const Ogre::Quaternion& colOrientA, const Ogre::Vector3& colPosA,
 			const OgreNewt::Collision* colB, const Ogre::Quaternion& colOrientB, const Ogre::Vector3& colPosB,
-			Ogre::Vector3* retContactPts, Ogre::Vector3* retNormals, Ogre::Real* retPenetrations )
+			Ogre::Vector3* retContactPts, Ogre::Vector3* retNormals, Ogre::Real* retPenetrations, int threadIndex )
 		{
 			float matrixA[16];
 			float matrixB[16];
@@ -139,14 +139,14 @@
 			Converters::QuatPosToMatrix( colOrientB, colPosB, matrixB );
 
 			return NewtonCollisionCollide( world->getNewtonWorld(), maxSize, colA->getNewtonCollision(), matrixA,
-				colB->getNewtonCollision(), matrixB, &retContactPts[0].x, &retNormals[0].x, retPenetrations );
+				colB->getNewtonCollision(), matrixB, &retContactPts[0].x, &retNormals[0].x, retPenetrations, threadIndex );
 		}
 
 
 		int CollisionCollideContinue( const OgreNewt::World* world, int maxSize, Ogre::Real timeStep,
 			const OgreNewt::Collision* colA, const Ogre::Quaternion& colOrientA, const Ogre::Vector3& colPosA, const Ogre::Vector3& colVelA, const Ogre::Vector3& colOmegaA,
 			const OgreNewt::Collision* colB, const Ogre::Quaternion& colOrientB, const Ogre::Vector3& colPosB, const Ogre::Vector3& colVelB, const Ogre::Vector3& colOmegaB,
-			Ogre::Real& retTimeOfImpact, Ogre::Vector3* retContactPts, Ogre::Vector3* retNormals, Ogre::Real* retPenetrations )
+			Ogre::Real& retTimeOfImpact, Ogre::Vector3* retContactPts, Ogre::Vector3* retNormals, Ogre::Real* retPenetrations, int threadIndex )
 		{
 			float matrixA[16];
 			float matrixB[16];
@@ -157,7 +157,7 @@
 			return NewtonCollisionCollideContinue( world->getNewtonWorld(), maxSize, timeStep,
 				colA->getNewtonCollision(), matrixA, &colVelA.x, &colOmegaA.x, 
 				colB->getNewtonCollision(), matrixB, &colVelB.x, &colOmegaB.x,
-				&retTimeOfImpact, &retContactPts[0].x, &retNormals[0].x, retPenetrations );
+				&retTimeOfImpact, &retContactPts[0].x, &retNormals[0].x, retPenetrations, threadIndex );
 		}
 
 



From melven at mail.berlios.de  Wed Jan 28 01:49:26 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Wed, 28 Jan 2009 01:49:26 +0100
Subject: [Dsa-hl-svn] r4725 - in rl/branches/newton20/engine: core/src ui/src
Message-ID: <200901280049.n0S0nQb4026540@sheep.berlios.de>

Author: melven
Date: 2009-01-28 01:49:24 +0100 (Wed, 28 Jan 2009)
New Revision: 4725

Modified:
   rl/branches/newton20/engine/core/src/GameAreaTypes.cpp
   rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp
   rl/branches/newton20/engine/ui/src/MovementControlState.cpp
Log:
-adjustments for latest newton beta


Modified: rl/branches/newton20/engine/core/src/GameAreaTypes.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/GameAreaTypes.cpp	2009-01-28 00:48:03 UTC (rev 4724)
+++ rl/branches/newton20/engine/core/src/GameAreaTypes.cpp	2009-01-28 00:49:24 UTC (rev 4725)
@@ -207,7 +207,7 @@
                 mBody->getCollision(), orientationA, positionA,
                 actor->getPhysicalThing()->_getBody()->getCollision(),
                 actor->getOrientation(), actor->getPosition(),
-                retA, retB, retNorm);
+                retA, retB, retNorm, 0); // set threadindex to 0, I hope this is ok!
 
         if( intRet == 0 )
             return 0;

Modified: rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp	2009-01-28 00:48:03 UTC (rev 4724)
+++ rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp	2009-01-28 00:49:24 UTC (rev 4725)
@@ -192,7 +192,7 @@
         mMaterial = material;
         mInvertMat = invertmat;
 
-        BasicConvexcast::go(world, col, startpt, ori, endpt, 1);
+        BasicConvexcast::go(world, col, startpt, ori, endpt, 1, 0); // set threadindex to 0, I hope this is ok
 
         return ConvexcastInfo(BasicConvexcast::getInfoAt(0));
     }
@@ -205,7 +205,7 @@
         mMaterial = NULL;
         mInvertMat = invertmat;
 
-        BasicConvexcast::go(world, col, startpt, ori, endpt, 1);
+        BasicConvexcast::go(world, col, startpt, ori, endpt, 1, 0); // set threadindex to 0, I hope this is ok
 
         return ConvexcastInfo(BasicConvexcast::getInfoAt(0));
     }

Modified: rl/branches/newton20/engine/ui/src/MovementControlState.cpp
===================================================================
--- rl/branches/newton20/engine/ui/src/MovementControlState.cpp	2009-01-28 00:48:03 UTC (rev 4724)
+++ rl/branches/newton20/engine/ui/src/MovementControlState.cpp	2009-01-28 00:49:24 UTC (rev 4725)
@@ -648,7 +648,7 @@
                     PhysicsManager::getSingleton()._getNewtonWorld(),
                     mCamBody->getCollision(), camOri, camPos,
                     mCharBody->getCollision(), charOri, charPos,
-                    camPoint, charPoint, normal
+                    camPoint, charPoint, normal, 0 // set threadindex to 0, I hope this is ok!
                     );
             if( collisionPoints == 0 )
                 mCharacterActor->setVisible(false);
@@ -951,9 +951,15 @@
         Quaternion charOri (mController->getYaw(), Vector3::UNIT_Y);
         Quaternion virtualCamOri;
         virtualCamOri.FromAngleAxis(mCamVirtualYaw, Vector3::UNIT_Y);
+        // get camera size
+        CameraObject* ogreCam = static_cast<CameraObject*>(
+                mCameraActor->getControlledObject());
+        AxisAlignedBox camAabb = ogreCam->getDefaultSize();
+        Real camRadius = (camAabb.getMaximum().z - camAabb.getMinimum().z) / 2.0f;
 
 
 
+
         if( mViewMode == VM_THIRD_PERSON || mViewMode == VM_FREE_CAMERA || mViewMode == VM_PNYX_MODE)
         {
             charPos = charPos + charOri * mLookAtOffset;
@@ -996,26 +1002,26 @@
             materialVector.push_back( mCharBody->getMaterialGroupID() );
             materialVector.push_back( mCamBody->getMaterialGroupID() );
             OgreNewt::World *world = PhysicsManager::getSingleton()._getNewtonWorld();
+            OgreNewt::Collision* box = new OgreNewt::CollisionPrimitives::Box(mCamBody->getWorld(), Vector3::UNIT_SCALE * camRadius * Ogre::Math::Sqrt(2), charOri);
 
-OgreNewt::Debugger::getSingleton().init(CoreSubsystem::getSingleton().getWorld()->getSceneManager());
-OgreNewt::Debugger::getSingleton().startRaycastRecording(true);
             ConvexcastInfo info = mConvexcast->execute(
                     world,
                     &materialVector,
-                    mCamBody->getCollision(),
+                    box, //mCamBody->getCollision(),
                     charPos,
                     Quaternion::IDENTITY,
                     targetCamPos,
                     true);
-OgreNewt::Debugger::getSingleton().stopRaycastRecording();
 
+            delete box;
+
             bool CollisionFound = false;
             if( info.mBody )
             {
                 CollisionFound = true;
                 Real hitBodyVel = info.mBody->getVelocity().dotProduct(diff.normalisedCopy());
                 hitBodyVel = std::min(0.0f, hitBodyVel); // if the body moves, try to avoid it
-                Real dist = std::max(info.mDistance + (hitBodyVel*timestep - 0.01)/diff.length(), 0.0);
+                Real dist = std::max((info.mContactPoint-charPos).length() - camRadius  + (hitBodyVel*timestep - 0.01)/diff.length(), 0.0);
                 diff *= dist;
 
                 mLastCameraCollision = 0;



From melven at mail.berlios.de  Wed Jan 28 13:28:20 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Wed, 28 Jan 2009 13:28:20 +0100
Subject: [Dsa-hl-svn] r4726 - in rl/branches/newton20/engine: core/include
	core/src ui/include ui/src
Message-ID: <200901281228.n0SCSKK9011431@sheep.berlios.de>

Author: melven
Date: 2009-01-28 13:28:09 +0100 (Wed, 28 Jan 2009)
New Revision: 4726

Modified:
   rl/branches/newton20/engine/core/include/PhysicsMaterialRaycast.h
   rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp
   rl/branches/newton20/engine/ui/include/MovementControlState.h
   rl/branches/newton20/engine/ui/src/MovementControlState.cpp
Log:
-some improvements in camera-movement and in convexcasts
-added a simple workaround for the newton-bug "spheres don't cast"


Modified: rl/branches/newton20/engine/core/include/PhysicsMaterialRaycast.h
===================================================================
--- rl/branches/newton20/engine/core/include/PhysicsMaterialRaycast.h	2009-01-28 00:49:24 UTC (rev 4725)
+++ rl/branches/newton20/engine/core/include/PhysicsMaterialRaycast.h	2009-01-28 12:28:09 UTC (rev 4726)
@@ -90,6 +90,7 @@
     {
         public:
             ConvexcastInfo(const OgreNewt::BasicConvexcast::ConvexcastContactInfo& info);
+            Ogre::Real mDistance;
     };
 
     class _RlCoreExport PhysicsMaterialConvexcast : public OgreNewt::BasicConvexcast

Modified: rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp	2009-01-28 00:49:24 UTC (rev 4725)
+++ rl/branches/newton20/engine/core/src/PhysicsMaterialRaycast.cpp	2009-01-28 12:28:09 UTC (rev 4726)
@@ -173,7 +173,8 @@
 // -------------------------------------------------------------------------------------------------
 
     ConvexcastInfo::ConvexcastInfo(const OgreNewt::BasicConvexcast::ConvexcastContactInfo &info) :
-        ConvexcastContactInfo(info)
+        ConvexcastContactInfo(info),
+        mDistance(0)
     {
     }
 
@@ -194,7 +195,9 @@
 
         BasicConvexcast::go(world, col, startpt, ori, endpt, 1, 0); // set threadindex to 0, I hope this is ok
 
-        return ConvexcastInfo(BasicConvexcast::getInfoAt(0));
+        ConvexcastInfo info(BasicConvexcast::getInfoAt(0));
+        info.mDistance = getDistanceToFirstHit();
+        return info;
     }
 
     ConvexcastInfo PhysicsMaterialConvexcast::execute(OgreNewt::World* world, const MaterialVector* materials,
@@ -207,7 +210,9 @@
 
         BasicConvexcast::go(world, col, startpt, ori, endpt, 1, 0); // set threadindex to 0, I hope this is ok
 
-        return ConvexcastInfo(BasicConvexcast::getInfoAt(0));
+        ConvexcastInfo info(BasicConvexcast::getInfoAt(0));
+        info.mDistance = getDistanceToFirstHit();
+        return info;
     }
 
     bool PhysicsMaterialConvexcast::userPreFilterCallback( OgreNewt::Body *body )

Modified: rl/branches/newton20/engine/ui/include/MovementControlState.h
===================================================================
--- rl/branches/newton20/engine/ui/include/MovementControlState.h	2009-01-28 00:49:24 UTC (rev 4725)
+++ rl/branches/newton20/engine/ui/include/MovementControlState.h	2009-01-28 12:28:09 UTC (rev 4726)
@@ -125,6 +125,7 @@
 
         PhysicsMaterialRaycast* mRaycast;
         PhysicsMaterialConvexcast * mConvexcast;
+        OgreNewt::Collision *mCameraCastCollision;
         HalfSphereSelector mSelector;
         HalfSphereSelector mCombatSelector;
 

Modified: rl/branches/newton20/engine/ui/src/MovementControlState.cpp
===================================================================
--- rl/branches/newton20/engine/ui/src/MovementControlState.cpp	2009-01-28 00:49:24 UTC (rev 4725)
+++ rl/branches/newton20/engine/ui/src/MovementControlState.cpp	2009-01-28 12:28:09 UTC (rev 4726)
@@ -87,6 +87,7 @@
         mViewMode(VM_THIRD_PERSON),
         mRaycast(new PhysicsMaterialRaycast()),
         mConvexcast(new PhysicsMaterialConvexcast()),
+        mCameraCastCollision(NULL),
         mSelector(CoreSubsystem::getSingleton().getWorld()->getSceneManager()),
         mCombatSelector(CoreSubsystem::getSingleton().getWorld()->getSceneManager(),
             QUERYFLAG_CREATURE),
@@ -134,6 +135,31 @@
 
         mMessageType_SaveGameLoading_Handler = MessagePump::getSingleton().addMessageHandler<MessageType_SaveGameLoading>(
             boost::bind(&MovementControlState::beforeLoadingSaveGame, this));
+
+        // Kamera-Groesse beziehen
+        CameraObject* ogreCam = static_cast<CameraObject*>(
+            mCameraActor->getControlledObject());
+        AxisAlignedBox camAabb = ogreCam->getDefaultSize();
+        // Radius berechnen
+        Real camRadius = (camAabb.getMaximum().z - camAabb.getMinimum().z) / 2.0f;
+        camRadius *= 1.1f;
+        Vector3 verts[80];
+        int k = 0;
+        for(int i = 0; i < 16; i++)
+        {
+            int n;
+            n = abs(abs(i-8)-8)+1;
+            for(int j = 0; j < n; j++)
+            {
+                Real h = (i-7.5f)/7.5f;
+                Degree angle(360.0f/(n+1)*j);
+                Real rad = Math::Sqrt(1-h*h);
+                verts[k++] = camRadius*Vector3(rad*Math::Cos(angle),rad*Math::Sin(angle),h);
+            }
+        }
+        //! TODO: remove this workaround (newton-bug: "spheres don't cast"!)
+        mCameraCastCollision = new OgreNewt::CollisionPrimitives::ConvexHull(mCamBody->getWorld(), verts, 80);
+        //mCameraCastCollision = new OgreNewt::CollisionPrimitives::Ellipsoid(mCamBody->getWorld(), Vector3::UNIT_SCALE * camRadius);
     }
 
     //------------------------------------------------------------------------
@@ -145,6 +171,7 @@
         mSelector.setFilter(NULL);
         delete mRaycast;
         delete mConvexcast;
+        delete mCameraCastCollision;
 
         if (DebugWindow::getSingletonPtr())
         {
@@ -676,7 +703,7 @@
         }
 
         setContactSoftness(0.8f);
-        setContactElasticity(0.0f);
+        setContactElasticity(0.4f);
         mLastCameraCollision = 0;
 
         return 1;
@@ -1002,26 +1029,23 @@
             materialVector.push_back( mCharBody->getMaterialGroupID() );
             materialVector.push_back( mCamBody->getMaterialGroupID() );
             OgreNewt::World *world = PhysicsManager::getSingleton()._getNewtonWorld();
-            OgreNewt::Collision* box = new OgreNewt::CollisionPrimitives::Box(mCamBody->getWorld(), Vector3::UNIT_SCALE * camRadius * Ogre::Math::Sqrt(2), charOri);
 
             ConvexcastInfo info = mConvexcast->execute(
                     world,
                     &materialVector,
-                    box, //mCamBody->getCollision(),
+                    mCameraCastCollision,
                     charPos,
                     Quaternion::IDENTITY,
                     targetCamPos,
                     true);
 
-            delete box;
-
             bool CollisionFound = false;
             if( info.mBody )
             {
                 CollisionFound = true;
                 Real hitBodyVel = info.mBody->getVelocity().dotProduct(diff.normalisedCopy());
                 hitBodyVel = std::min(0.0f, hitBodyVel); // if the body moves, try to avoid it
-                Real dist = std::max((info.mContactPoint-charPos).length() - camRadius  + (hitBodyVel*timestep - 0.01)/diff.length(), 0.0);
+                Real dist = std::max(info.mDistance  + (hitBodyVel*timestep - 0.01)/diff.length(), 0.0);
                 diff *= dist;
 
                 mLastCameraCollision = 0;



From timm at mail.berlios.de  Wed Jan 28 20:19:15 2009
From: timm at mail.berlios.de (timm at mail.berlios.de)
Date: Wed, 28 Jan 2009 20:19:15 +0100
Subject: [Dsa-hl-svn] r4727 - in rl/branches/persistence: ai common
	common/include core core/include core/include/fmod4driver
	core/src core/src/fmod4driver rules script ui ui/include ui/src
Message-ID: <200901281919.n0SJJFwQ001411@sheep.berlios.de>

Author: timm
Date: 2009-01-28 20:18:55 +0100 (Wed, 28 Jan 2009)
New Revision: 4727

Added:
   rl/branches/persistence/core/include/fmod4driver/
   rl/branches/persistence/core/include/fmod4driver/Fmod4Driver.h
   rl/branches/persistence/core/include/fmod4driver/Fmod4Listener.h
   rl/branches/persistence/core/include/fmod4driver/Fmod4Sound.h
   rl/branches/persistence/core/include/fmod4driver/Fmod4SoundStitching.h
   rl/branches/persistence/core/src/fmod4driver/
   rl/branches/persistence/core/src/fmod4driver/Fmod4Driver.cpp
   rl/branches/persistence/core/src/fmod4driver/Fmod4Listener.cpp
   rl/branches/persistence/core/src/fmod4driver/Fmod4Sound.cpp
   rl/branches/persistence/core/src/fmod4driver/Fmod4SoundStitching.cpp
   rl/branches/persistence/ui/include/Fmod4ConfigComponent.h
   rl/branches/persistence/ui/src/Fmod4ConfigComponent.cpp
Removed:
   rl/branches/persistence/core/include/fmod4driver/Fmod4Driver.h
   rl/branches/persistence/core/include/fmod4driver/Fmod4Listener.h
   rl/branches/persistence/core/include/fmod4driver/Fmod4Sound.h
   rl/branches/persistence/core/include/fmod4driver/Fmod4SoundStitching.h
   rl/branches/persistence/core/src/fmod4driver/Fmod4Driver.cpp
   rl/branches/persistence/core/src/fmod4driver/Fmod4Listener.cpp
   rl/branches/persistence/core/src/fmod4driver/Fmod4Sound.cpp
   rl/branches/persistence/core/src/fmod4driver/Fmod4SoundStitching.cpp
Modified:
   rl/branches/persistence/ai/
   rl/branches/persistence/ai/CMakeLists.txt
   rl/branches/persistence/common/CMakeLists.txt
   rl/branches/persistence/common/include/Exception.h
   rl/branches/persistence/common/include/XmlProcessor.h
   rl/branches/persistence/core/CMakeLists.txt
   rl/branches/persistence/core/RlCore2005.vcproj
   rl/branches/persistence/core/include/CoreSubsystem.h
   rl/branches/persistence/core/include/MeshAnimation.h
   rl/branches/persistence/core/src/CoreSubsystem.cpp
   rl/branches/persistence/core/src/SoundManager.cpp
   rl/branches/persistence/rules/CMakeLists.txt
   rl/branches/persistence/script/CMakeLists.txt
   rl/branches/persistence/ui/CMakeLists.txt
   rl/branches/persistence/ui/include/RenderSystemConfigComponent.h
   rl/branches/persistence/ui/src/GameSettings.cpp
   rl/branches/persistence/ui/src/InputManager.cpp
Log:
merged from trunk


Property changes on: rl/branches/persistence/ai
___________________________________________________________________
Name: svn:ignore
   - 
Makefile.in
Makefile

   + Makefile.in
Makefile
obj
lib


Modified: rl/branches/persistence/ai/CMakeLists.txt
===================================================================
--- rl/branches/persistence/ai/CMakeLists.txt	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/ai/CMakeLists.txt	2009-01-28 19:18:55 UTC (rev 4727)
@@ -51,7 +51,7 @@
 
 SET_TARGET_PROPERTIES(RlAi PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLAI_EXPORTS)
 
-INSTALL(TARGETS RlAi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlAi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Modified: rl/branches/persistence/common/CMakeLists.txt
===================================================================
--- rl/branches/persistence/common/CMakeLists.txt	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/common/CMakeLists.txt	2009-01-28 19:18:55 UTC (rev 4727)
@@ -30,7 +30,7 @@
 
 SET_TARGET_PROPERTIES(RlCommon PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLCOMMON_EXPORTS)
 
-INSTALL(TARGETS RlCommon LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlCommon LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Modified: rl/branches/persistence/common/include/Exception.h
===================================================================
--- rl/branches/persistence/common/include/Exception.h	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/common/include/Exception.h	2009-01-28 19:18:55 UTC (rev 4727)
@@ -24,6 +24,7 @@
 
 #include "CommonPrerequisites.h"
 #include <string>
+#include <iostream>
 
 #if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
 #  include <Windows.h>
@@ -401,7 +402,7 @@
          MessageBox(NULL, message.c_str(), "Meldung",
             MB_OK | MB_ICONINFORMATION | MB_TOPMOST);
 #     else
-         printf(message.c_str());
+         std::cout << message << std::endl;
 #     endif
    }
 
@@ -418,7 +419,7 @@
          MessageBox(NULL, message.c_str(), "Fehler",
             MB_OK | MB_ICONERROR | MB_TOPMOST);
 #     else
-         fprintf(stderr, message.c_str());
+         std::cerr << message << std::endl;
 #     endif
    }
 }

Modified: rl/branches/persistence/common/include/XmlProcessor.h
===================================================================
--- rl/branches/persistence/common/include/XmlProcessor.h	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/common/include/XmlProcessor.h	2009-01-28 19:18:55 UTC (rev 4727)
@@ -23,7 +23,10 @@
 #include <xercesc/sax/ErrorHandler.hpp>
 #include <xercesc/sax2/Attributes.hpp>
 
-class XERCES_CPP_NAMESPACE::SAXParseException;
+namespace XERCES_CPP_NAMESPACE
+{
+    class SAXParseException;
+}
 
 #include "CommonPrerequisites.h"
 

Modified: rl/branches/persistence/core/CMakeLists.txt
===================================================================
--- rl/branches/persistence/core/CMakeLists.txt	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/CMakeLists.txt	2009-01-28 19:18:55 UTC (rev 4727)
@@ -1,5 +1,6 @@
 INCLUDE_DIRECTORIES(
 ${CMAKE_CURRENT_SOURCE_DIR}/include
+${CMAKE_CURRENT_SOURCE_DIR}/include/fmod4driver
 ${CMAKE_CURRENT_SOURCE_DIR}/include/nulldriver
 ${RL_COMMON_INCLUDE_DIR}
 ${OGRE_INCLUDE_DIRS}
@@ -82,6 +83,10 @@
 src/World.cpp
 src/Zone.cpp
 src/ZoneManager.cpp
+src/fmod4driver/Fmod4Driver.cpp
+src/fmod4driver/Fmod4Listener.cpp
+src/fmod4driver/Fmod4Sound.cpp
+src/fmod4driver/Fmod4SoundStitching.cpp
 src/nulldriver/NullDriver.cpp
 src/nulldriver/NullListener.cpp
 src/nulldriver/NullSound.cpp
@@ -95,7 +100,7 @@
 
 SET_TARGET_PROPERTIES(RlCore PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLCORE_EXPORTS)
 
-INSTALL(TARGETS RlCore LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlCore LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Modified: rl/branches/persistence/core/RlCore2005.vcproj
===================================================================
--- rl/branches/persistence/core/RlCore2005.vcproj	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/RlCore2005.vcproj	2009-01-28 19:18:55 UTC (rev 4727)
@@ -48,7 +48,7 @@
 				Name="VCCLCompilerTool"
 				AdditionalOptions="-Zm130"
 				Optimization="0"
-				AdditionalIncludeDirectories=".\include;.\include\nulldriver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include"
+				AdditionalIncludeDirectories=".\include;.\include\nulldriver;.\include\fmod4driver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include;..\..\dependencies\FMOD4\api\inc"
 				PreprocessorDefinitions="WITH_FMOD3;_WINDOWS,_DEBUG,WIN32,RLCORE_EXPORTS;_CRT_SECURE_NO_DEPRECATE;RL_USE_PCH"
 				MinimalRebuild="true"
 				BasicRuntimeChecks="3"
@@ -85,12 +85,12 @@
 				Name="VCLinkerTool"
 				IgnoreImportLibrary="true"
 				AdditionalOptions="/MACHINE:I386"
-				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt_d.lib OgreMain_d.lib xerces-c_2D.lib CEGUIBase_d.lib Newton.lib meshmagick_d.lib"
+				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt_d.lib OgreMain_d.lib xerces-c_2D.lib CEGUIBase_d.lib Newton.lib meshmagick_d.lib fmodex_vc.lib"
 				ShowProgress="0"
 				OutputFile="./lib/$(ConfigurationName)/RlCore.dll"
 				LinkIncremental="2"
 				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib"
+				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib;..\..\dependencies\FMOD4\api\lib"
 				IgnoreDefaultLibraryNames=""
 				TypeLibraryFile="$(OutDir)\RlCore.lib"
 				GenerateDebugInformation="true"
@@ -163,7 +163,7 @@
 				Optimization="3"
 				EnableIntrinsicFunctions="true"
 				FavorSizeOrSpeed="1"
-				AdditionalIncludeDirectories=".\include;.\include\nulldriver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include"
+				AdditionalIncludeDirectories=".\include;.\include\nulldriver;.\include\fmod4driver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include;..\..\dependencies\FMOD4\api\inc"
 				PreprocessorDefinitions="WITH_FMOD3;NDEBUG,_WINDOWS,WIN32,RLCORE_EXPORTS;_CRT_SECURE_NO_DEPRECATE;RL_USE_PCH"
 				StringPooling="false"
 				ExceptionHandling="1"
@@ -198,11 +198,11 @@
 				Name="VCLinkerTool"
 				IgnoreImportLibrary="true"
 				AdditionalOptions="/MACHINE:I386"
-				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib"
+				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib fmodex_vc.lib"
 				OutputFile="./lib/$(ConfigurationName)/RlCore.dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib"
+				AdditionalLibraryDirectories="&quot;..\common\lib\$(ConfigurationName)&quot;;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;&quot;..\..\dependencies\ogrenewt\lib\$(ConfigurationName)&quot;;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib;..\..\dependencies\FMOD4\api\lib"
 				TypeLibraryFile="$(OutDir)\RlCore.lib"
 				ProgramDatabaseFile=""
 				SubSystem="2"
@@ -270,7 +270,7 @@
 				Optimization="3"
 				EnableIntrinsicFunctions="true"
 				FavorSizeOrSpeed="1"
-				AdditionalIncludeDirectories=".\include;.\include\nulldriver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include"
+				AdditionalIncludeDirectories=".\include;.\include\nulldriver;.\include\fmod4driver;..\common\include;..\..\dependencies\ogrenew\OgreMain\include;..\..\dependencies\OgreNewt\include\OgreNewt;&quot;..\..\dependencies\ruby\lib\ruby\1.8\i386-mswin32&quot;;..\..\dependencies\boost\include;..\..\dependencies\xerces\include;..\..\dependencies\cegui_mk2\include;..\..\dependencies\NewtonSDK\sdk\;..\..\dependencies\ogrenew\Dependencies\include;..\..\dependencies\meshmagick\include;..\..\dependencies\FMOD4\api\inc"
 				PreprocessorDefinitions="WITH_FMOD3;NDEBUG,_WINDOWS,WIN32,RLCORE_EXPORTS;_CRT_SECURE_NO_DEPRECATE;RL_USE_PCH"
 				StringPooling="false"
 				ExceptionHandling="1"
@@ -305,11 +305,11 @@
 				Name="VCLinkerTool"
 				IgnoreImportLibrary="true"
 				AdditionalOptions="/MACHINE:I386"
-				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib"
+				AdditionalDependencies="RlCommon.lib msvcrt-ruby18.lib OgreNewt.lib xerces-c_2.lib CEGUIBase.lib OgreMain.lib Newton.lib meshmagick.lib fmodex_vc.lib"
 				OutputFile="$(OutDir)/RlCore.dll"
 				LinkIncremental="1"
 				SuppressStartupBanner="true"
-				AdditionalLibraryDirectories="..\common\lib\Release;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;..\..\dependencies\ogrenewt\lib\release;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib"
+				AdditionalLibraryDirectories="..\common\lib\Release;..\..\dependencies\ogrenew\lib;..\..\dependencies\ruby\lib;..\..\dependencies\boost\lib;..\..\dependencies\xerces\lib;..\..\dependencies\cegui_mk2\lib;..\..\dependencies\ogrenewt\lib\release;..\..\dependencies\NewtonSDK\sdk\dll;..\..\dependencies\meshmagick\lib;..\..\dependencies\FMOD4\api\lib"
 				TypeLibraryFile="$(OutDir)\RlCore.lib"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="$(TargetDir)$(TargetName).pdb"
@@ -660,6 +660,27 @@
 				</File>
 			</Filter>
 			<Filter
+				Name="fmod4driver"
+				>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4Driver.h"
+					>
+				</File>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4Listener.h"
+					>
+				</File>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4Sound.h"
+					>
+				</File>
+				<File
+					RelativePath=".\include\fmod4driver\Fmod4SoundStitching.h"
+					>
+				</File>
+			</Filter>
+
+			<Filter
 				Name="SaveGame"
 				>
 				<File
@@ -1013,6 +1034,26 @@
 				</File>
 			</Filter>
 			<Filter
+				Name="fmod4driver"
+				>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4Driver.cpp"
+					>
+				</File>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4Listener.cpp"
+					>
+				</File>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4Sound.cpp"
+					>
+				</File>
+				<File
+					RelativePath=".\src\fmod4driver\Fmod4SoundStitching.cpp"
+					>
+				</File>
+			</Filter>
+			<Filter
 				Name="SaveGame"
 				>
 				<File

Modified: rl/branches/persistence/core/include/CoreSubsystem.h
===================================================================
--- rl/branches/persistence/core/include/CoreSubsystem.h	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/include/CoreSubsystem.h	2009-01-28 19:18:55 UTC (rev 4727)
@@ -113,6 +113,7 @@
 
     void _setCurrentScene(const CeGuiString& scene);
     const CeGuiString& getCurrentScene() const;
+    void loadPlugin(const Ogre::String& plugin);
 
 private:
     World* mWorld;
@@ -158,8 +159,8 @@
     void unloadPlugins();
 
     /**
-     * Sammelt alle Default-Techniques, um sie sp?ter bei jedem aktivierten Scheme
-     * benutzen zu k?nnen
+     * Sammelt alle Default-Techniques, um sie sp?ter bei jedem aktivierten Scheme
+     * benutzen zu k?nnen
      */
     void updateDefaultScheme();
 

Modified: rl/branches/persistence/core/include/MeshAnimation.h
===================================================================
--- rl/branches/persistence/core/include/MeshAnimation.h	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/include/MeshAnimation.h	2009-01-28 19:18:55 UTC (rev 4727)
@@ -23,7 +23,10 @@
 #include <map>
 #include "BaseAnimation.h"
 
-class Ogre::Animation;
+namespace Ogre
+{
+	class Animation;
+}
 
 namespace rl {
 

Copied: rl/branches/persistence/core/include/fmod4driver (from rev 4726, rl/trunk/engine/core/include/fmod4driver)

Deleted: rl/branches/persistence/core/include/fmod4driver/Fmod4Driver.h
===================================================================
--- rl/trunk/engine/core/include/fmod4driver/Fmod4Driver.h	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/include/fmod4driver/Fmod4Driver.h	2009-01-28 19:18:55 UTC (rev 4727)
@@ -1,165 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
- * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the Clarified Artistic License.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  Clarified Artistic License for more details.
- *
- *  You should have received a copy of the Clarified Artistic License
- *  along with this program; if not you can get it here
- *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
- */
-#ifndef _FMODDRIVER_H_
-#define _FMODDRIVER_H_
-
-#include "CorePrerequisites.h"
-
-#include <fmod.hpp>
-
-#include "SoundDriver.h"
-
-namespace rl
-{
-
-    typedef std::map<Ogre::String, StringList> DriverMap;
-
-    #define CHECK_FMOD4_ERRORS(fmod4_errorcode)\
-    {\
-        if (fmod4_errorcode != FMOD_OK)\
-        {\
-            Throw(rl::RuntimeException,\
-                "FMOD error #"\
-                + StringConverter::toString(fmod4_errorcode)\
-                + " "\
-                + FMOD_ErrorString(fmod4_errorcode));\
-        }\
-    }
-
-    class Fmod4Sound;
-
-    /** Diese Klasse ist der Treiber, der OpenAL zur
-     * Ausgabe benutzt.
-     */
-    class Fmod4Driver : public rl::SoundDriver
-    {
-    public:
-        /// Der Treibername
-        static Ogre::String NAME;
-        /// Der Konstruktor
-        Fmod4Driver(Ogre::ResourceManager* soundResourceManager);
-        /// Der Destruktor
-        virtual ~Fmod4Driver();
-        /// Ist der Treiber angeschaltet?
-        virtual bool isDriverAvailable();
-        /// Initialisiere den Treiber.
-        virtual bool initialize();
-        /// Deinitialisiere den Treiber.
-        virtual void shutdown();
-        /// Der Name des Treibers
-        virtual Ogre::String getName() const;
-        /// Ist ein Ogre plugin
-        virtual bool isDriverPlugin() { return true; }
-        /// Update-Aufgaben erledigen
-        virtual void update();
-        /// Einen Soundlistener erzeugen
-        virtual ListenerMovable *createListener(const Ogre::String &name);
-
-        virtual void setMasterVolume(const Ogre::Real& vol);
-
-        /**
-         * Returns the current sound driver settings as a key-value list
-         *
-         * @return key-value list of sound options
-         */
-        virtual Ogre::NameValuePairList getSettings() const;
-
-        /**
-         * Sets certain options for the sound driver, like volume settings for
-         * sound effects and music.
-         *
-         * @param settings key-value list of settings
-         */
-        virtual void applySettings(const Ogre::NameValuePairList& settings);
-
-        /**
-         * Sets an eax preset, the preset is defined by a string
-         * @retval true if successfull
-        */
-        virtual bool setEaxPreset(const Ogre::String& name);
-
-        /// Setzt den Faktor f, mit der die Lautstaerke nach der Formel 1/(f*Entfernung) abnimmt
-        virtual void setRolloffFactor(const Ogre::Real&);
-        virtual const Ogre::Real getRolloffFactor();
-
-        /// Datensammlung zurueckgeben
-        const DriverMap& getDriverData() const;
-
-        FMOD::System* _getFmodSystem();
-        void _registerChannel(FMOD::Channel* channel, Fmod4Sound* sound);
-        
-    protected:
-        virtual Sound* createSoundImpl(SoundResourcePtr res, SoundType type);
-        virtual SoundStitching* createSoundStitchingImpl(unsigned int numSlots, const CeGuiString& name);
-
-    private:
-
-        typedef std::map<FMOD::Channel*, Fmod4Sound*> ChannelSoundMap;
-
-        static FMOD_RESULT F_CALLBACK open(
-            const char *  name,
-            int  unicode,
-            unsigned int *  filesize,
-            void **  handle,
-            void **  userdata
-        );
-
-        static FMOD_RESULT F_CALLBACK close(
-            void *  handle,
-            void *  userdata
-        );
-
-        static FMOD_RESULT F_CALLBACK read(
-            void *  handle,
-            void *  buffer,
-            unsigned int  sizebytes,
-            unsigned int *  bytesread,
-            void *  userdata
-        );
-
-        static FMOD_RESULT F_CALLBACK seek(
-            void *  handle,
-            unsigned int  pos,
-            void *  userdata
-        );
-
-        static FMOD_RESULT F_CALLBACK channelCallback(
-            FMOD_CHANNEL* channel,
-            FMOD_CHANNEL_CALLBACKTYPE type,
-            void* commanddata1,
-            void* commanddata2
-        );
-
-        typedef std::map<const Ogre::String, FMOD_REVERB_PROPERTIES> EaxPresetMap;
-        EaxPresetMap mEaxPresetMap;
-
-        void initializeEaxPresetMap();
-
-        /// Log driver config data
-        virtual void printData() const;
-        void printDriverInfo(int driver) const;
-
-        // Wir merken uns die Konfiguration von Fmod4
-        DriverMap mDriverData;
-        /// Stores sounds that are automatically destroyed after having been played.
-        ChannelSoundMap mChannelSoundMap;
-        FMOD::System* mFmod4System;
-        FMOD::ChannelGroup* mMasterChannelGroup;
-
-    };
-}
-
-#endif /*FMODDRIVER_H_*/

Copied: rl/branches/persistence/core/include/fmod4driver/Fmod4Driver.h (from rev 4726, rl/trunk/engine/core/include/fmod4driver/Fmod4Driver.h)

Deleted: rl/branches/persistence/core/include/fmod4driver/Fmod4Listener.h
===================================================================
--- rl/trunk/engine/core/include/fmod4driver/Fmod4Listener.h	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/include/fmod4driver/Fmod4Listener.h	2009-01-28 19:18:55 UTC (rev 4727)
@@ -1,61 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#ifndef __Fmod4Listener_H__
-#define __Fmod4Listener_H__
-
-#include "CorePrerequisites.h"
-
-#include <fmod.hpp>
-
-#include "ListenerMovable.h"
-
-namespace rl {
-    
-   /** Diese Klasse dient der Interkation mit Ogre3d und Fmod4
-    * und kapselt den Hoerer.
-    * @author Josch
-    * @date 06-29-2005
-    * @version 1.0
-    * @version 2.0
-    */
-    class Fmod4Listener : public ListenerMovable
-    {
-    public:
-        /// Konstruktor
-        Fmod4Listener(const Ogre::String& name, FMOD::System* fmod4system, int listenerId = 0);
-        /// Destruktor
-        virtual ~Fmod4Listener();
-        /// Moveable-Typ
-        virtual const Ogre::String& getMovableType() const;
-    
-        /// Setzt die Position der Soundquelle.
-        virtual void setPosition(const Ogre::Vector3& direction);
-        /// Setzt die Richtung der Soundquelle.
-        virtual void setOrientation(const Ogre::Quaternion &orientation);
-        /// Setzt die Geschwindigkeit der Soundquelle.
-        virtual void setVelocity(const Ogre::Vector3&);
-   
-    protected:
-         /// Shared class-level name for Movable type
-        static Ogre::String msMovableType;
-
-    private:
-        FMOD::System* mFmod4System;
-        int mListenerId;
-    };
-
-}
-#endif

Copied: rl/branches/persistence/core/include/fmod4driver/Fmod4Listener.h (from rev 4726, rl/trunk/engine/core/include/fmod4driver/Fmod4Listener.h)

Deleted: rl/branches/persistence/core/include/fmod4driver/Fmod4Sound.h
===================================================================
--- rl/trunk/engine/core/include/fmod4driver/Fmod4Sound.h	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/include/fmod4driver/Fmod4Sound.h	2009-01-28 19:18:55 UTC (rev 4727)
@@ -1,112 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#ifndef _FMOD4SOUND_H_
-#define _FMOD4SOUND_H_
-
-#include "CorePrerequisites.h"
-
-#include <fmod.hpp>
-
-#include "Sound.h"
-#include "SoundDriver.h"
-
-namespace rl {
-
-    class Fmod4Driver;
-
-    class Fmod4Sound : public Sound
-    {
-    public:
-        /// Konstruktor
-        Fmod4Sound(Fmod4Driver* driver, SoundResourcePtr soundres, SoundType type = ST_SAMPLE);
-
-        /// Laedt den Sound.
-        virtual void load() throw (RuntimeException);
-        /// Entlaedt den Sound.
-        virtual void unload() throw (RuntimeException);
-        // Running length in seconds
-	    virtual float getLength() const;
-
-		// Sind wir gueltig
-		bool isValid() const throw (RuntimeException);
-
-	    /// Moveable-Typ
-		virtual const Ogre::String& getMovableType() const;
-        /// Gibt die eingestellte Position der Soundquelle zurueck
-		virtual const Ogre::Vector3 getPosition() const;
-		/// Setzt die Position der Soundquelle.
-		virtual void setPosition(const Ogre::Vector3& direction);
-		/// Gibt die eingestellte relative Lautstaerke der Soundquelle zurueck (0..1)
-		virtual const float getVolume() const; 
-		/// Setzt die relative Lautstaerke der Soundquelle (0..1)
-		virtual void setVolume(const float gain);
-		/// Gibt die Richtung der Soundquelle zurueck.
-		virtual const Ogre::Quaternion getDirection() const;
-		/// Gibt die Geschwindigkeit der Soundquelle zurueck.
-		virtual const Ogre::Vector3 getVelocity() const;
-		/// Setzt die Richtung der Soundquelle.
-		virtual void setDirection(const Ogre::Quaternion&);
-		/// Setzt die Geschwindigkeit der Soundquelle.
-		virtual void setVelocity(const Ogre::Vector3&);
-        
-        /// Gibt den FMOD Channel zur?ck.
-        FMOD::Channel* getFmodChannel() const;
-        /// Gibt den FMOD Sound zur?ck.
-        FMOD::Sound* getFmodSound() const;
-
-        virtual void play(bool destroyWhenDone=false);
-		/// Pausiert den Sound.
-		virtual void pause(bool pausing);
-		/// Ist der Sound pausiert?
-		virtual bool isPaused();
-		/// Stoppt den Sound.
-		virtual void stop();
-		/// Laeuft der Sound noch
-		virtual const bool isPlaying() const;
-        
-        // Sets the priority of this sound
-        virtual void setPriority(const int priority);
-        // Gets the priority of this sound
-        virtual const int getPriority() const;
-        
-        
-        /// Should the sound be autodestructed when playing is done.
-        bool isAutoDestroying() const;
-
-    private:
-		/// Shared class-level name for Movable type
-		static Ogre::String msMovableType;
-        FMOD::Channel* mChannel;
-        SoundType mType;
-        FMOD::Sound *mSound;
-        Fmod4Driver* mDriver;
-        bool mAutoDestroy;
-    };
-
-    class Fmod4SoundPtr :
-        public Ogre::SharedPtr<Fmod4Sound>
-    {
-    public:
-        Fmod4SoundPtr() : Ogre::SharedPtr<Fmod4Sound>() {}
-        explicit Fmod4SoundPtr(Fmod4Sound* rep) : Ogre::SharedPtr<Fmod4Sound>(rep) {}
-        Fmod4SoundPtr(const Fmod4SoundPtr& res) : Ogre::SharedPtr<Fmod4Sound>(res) {}
-    protected:
-        void destroy();
-    };
-
-}
-
-#endif /* FMOD3SOUND_H_ */

Copied: rl/branches/persistence/core/include/fmod4driver/Fmod4Sound.h (from rev 4726, rl/trunk/engine/core/include/fmod4driver/Fmod4Sound.h)

Deleted: rl/branches/persistence/core/include/fmod4driver/Fmod4SoundStitching.h
===================================================================
--- rl/trunk/engine/core/include/fmod4driver/Fmod4SoundStitching.h	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/include/fmod4driver/Fmod4SoundStitching.h	2009-01-28 19:18:55 UTC (rev 4727)
@@ -1,116 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#ifndef _FMOD4SOUNDSTITCHING_H_
-#define _FMOD4SOUNDSTITCHING_H_
-
-#include "CorePrerequisites.h"
-
-#include <fmod.hpp>
-
-#include "SoundStitching.h"
-#include "SoundDriver.h"
-
-namespace rl {
-
-    class Fmod4Driver;
-    typedef std::vector<FMOD::Sound*> SubsoundVector;
-
-    class Fmod4SoundStitching : public SoundStitching
-    {
-    public:
-        /// Konstruktor
-        Fmod4SoundStitching(unsigned int numSlots, const CeGuiString& name, SoundDriver* creator);
-
-        /// Laedt den Sound.
-        virtual void load() throw (RuntimeException);
-        /// Entlaedt den Sound.
-        virtual void unload() throw (RuntimeException);
-
-		// Sind wir gueltig
-		bool isValid() const throw (RuntimeException);
-
-	    /// Moveable-Typ
-		virtual const Ogre::String& getMovableType() const;
-        /// Gibt die eingestellte Position der Soundquelle zurueck
-		virtual const Ogre::Vector3 getPosition() const;
-		/// Setzt die Position der Soundquelle.
-		virtual void setPosition(const Ogre::Vector3& direction);
-		/// Gibt die eingestellte relative Lautstaerke der Soundquelle zurueck (0..1)
-		virtual const float getVolume() const; 
-		/// Setzt die relative Lautstaerke der Soundquelle (0..1)
-		virtual void setVolume(const float gain);
-		/// Gibt die Richtung der Soundquelle zurueck.
-		virtual const Ogre::Quaternion getDirection() const;
-		/// Gibt die Geschwindigkeit der Soundquelle zurueck.
-		virtual const Ogre::Vector3 getVelocity() const;
-		/// Setzt die Richtung der Soundquelle.
-		virtual void setDirection(const Ogre::Quaternion&);
-		/// Setzt die Geschwindigkeit der Soundquelle.
-		virtual void setVelocity(const Ogre::Vector3&);
-        
-        /// Gibt den FMOD Channel zur?ck.
-        FMOD::Channel* getFmodChannel() const;
-        /// Gibt den FMOD Sound zur?ck.
-        FMOD::Sound* getFmodSound() const;
-
-        virtual void play(bool destroyWhenDone=false);
-		/// Pausiert den Sound.
-		virtual void pause(bool pausing);
-		/// Ist der Sound pausiert?
-		virtual bool isPaused();
-		/// Stoppt den Sound.
-		virtual void stop();
-		/// Laeuft der Sound noch
-		virtual const bool isPlaying() const;
-        
-        // Sets the priority of this sound
-        virtual void setPriority(const int priority);
-        // Gets the priority of this sound
-        virtual const int getPriority() const;
-        
-        
-        /// Should the sound be autodestructed when playing is done.
-        bool isAutoDestroying() const;
-
-        /// Assign a sound recource to a slot.
-        virtual void putSoundIntoSlot(unsigned int, CeGuiString label);
-        /// Get the slot of the plaing sound.
-        virtual unsigned int getPlayingSlot();
-
-    private:
-		/// Shared class-level name for Movable type
-		static Ogre::String msMovableType;
-        FMOD::Channel* mChannel;
-        FMOD::Sound *mSound;
-        Fmod4Driver* mDriver;
-        bool mAutoDestroy;
-        SubsoundVector mSoundSlots;
-    };
-
-    class Fmod4SoundStitchingPtr :
-        public Ogre::SharedPtr<Fmod4SoundStitching>
-    {
-    public:
-        Fmod4SoundStitchingPtr() : Ogre::SharedPtr<Fmod4SoundStitching>() {}
-        explicit Fmod4SoundStitchingPtr(Fmod4SoundStitching* rep) : Ogre::SharedPtr<Fmod4SoundStitching>(rep) {}
-        Fmod4SoundStitchingPtr(const Fmod4SoundStitchingPtr& res) : Ogre::SharedPtr<Fmod4SoundStitching>(res) {}
-    protected:
-        void destroy();
-    };
-
-}
-
-#endif /* FMOD3SOUNDSTITCHING_H_ */

Copied: rl/branches/persistence/core/include/fmod4driver/Fmod4SoundStitching.h (from rev 4726, rl/trunk/engine/core/include/fmod4driver/Fmod4SoundStitching.h)

Modified: rl/branches/persistence/core/src/CoreSubsystem.cpp
===================================================================
--- rl/branches/persistence/core/src/CoreSubsystem.cpp	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/src/CoreSubsystem.cpp	2009-01-28 19:18:55 UTC (rev 4727)
@@ -579,6 +579,19 @@
         return mModules;
     }
 
+    void CoreSubsystem::loadPlugin(const Ogre::String& plugin)
+    {
+        Ogre::String pluginFile;
+        
+#if OGRE_PLATFORM == OGRE_PLATFORM_LINUX
+        pluginFile = "lib" + plugin;
+#else
+        pluginFile = plugin;
+#endif
+        
+        Ogre::Root::getSingleton().loadPlugin(pluginFile);
+    }
+
     void CoreSubsystem::loadPlugins()
     {
         mSoundManager->applySettings(rl::ConfigurationManager::getSingleton().getSettings("Sound"));

Modified: rl/branches/persistence/core/src/SoundManager.cpp
===================================================================
--- rl/branches/persistence/core/src/SoundManager.cpp	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/src/SoundManager.cpp	2009-01-28 19:18:55 UTC (rev 4727)
@@ -1,390 +1,397 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-*
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#include "stdinc.h" //precompiled header
-
-#include "SoundManager.h"
-
-#include <set>
-
-#include "Actor.h"
-#include "ActorManager.h"
-#include "ConfigFile.h"
-#include "GameLoop.h"
-#include "ListenerMovable.h"
-#include "ListenerObject.h"
-#include "SoundDriver.h"
-#include "SoundResource.h"
-
-#include "NullDriver.h"
-
-using namespace std;
-using namespace Ogre;
-
-/** Das Singleton
- * @author JoSch
- * @date 04-26-2004
- */
-template<> rl::SoundManager* Singleton<rl::SoundManager>::ms_Singleton = 0;
-
-namespace rl
-{
-    /**
-     * Standardkonstruktor
-     * @author JoSch
-     * @date 01-27-2005
-     */
-    SoundManager::SoundManager()
-    : ResourceManager(),
-      mDriverList(),
-      mActiveDriver(NULL),
-      mListenerActor(NULL),
-      mActiveListener(NULL)
-    {
-        LOG_MESSAGE(Logger::MULTIMEDIA, "Erzeuge Soundmanager...");
-        NullDriver* nullDriver = new NullDriver(this);
-        registerDriver(nullDriver);
-        setActiveDriver(nullDriver);
-
-        mResourceType = "Sound";
-        ResourceGroupManager::getSingleton()._registerResourceManager(mResourceType, this);
-
-    }
-
-    SoundManager::~SoundManager()
-    {
-        ResourceGroupManager::getSingleton()._unregisterResourceManager(mResourceType);
-        unloadAllDrivers();
-    }
-
-/**
- * Gibt die Suchmuster fuer die Extension zurueck.
- * @return Die Liste der Suchmuster
- * @author JoSch
- * @date 06-18-2004
- */
-StringList SoundManager::getExtension()
-{
-    StringList result;
-    result.push_back("*.ogg");
-    result.push_back("*.wav");
-
-    return result;
-}
-
-/**
-* @param resName. Der Name der Soundresource, die erzeugt
-* werden soll.
-* @author JoSch
-* @date 06-18-2004
-*/
-Resource* SoundManager::createImpl(
-    const String& resName,
-    ResourceHandle handle,
-    const String& group,
-    bool isManual,
-    ManualResourceLoader* loader,
-    const NameValuePairList* loadParams)
-{
-    SoundResource *newSound = NULL;
-    newSound = new SoundResource(this, resName, handle, group, isManual, loader);
-    return newSound;
-}
-
-/**
- * @param Der neue Treiber.
- * @author JoSch
- * @date 12-23-2005
- */
-void SoundManager::setActiveDriver(SoundDriver *driver)
-{
-    if (driver == NULL)
-    {
-        driver = getDriverByName(NullDriver::NAME);
-    }
-
-    if (mActiveDriver == driver)
-    {
-        LOG_DEBUG(Logger::MULTIMEDIA,
-            "No need to change Sound Driver, "
-            + mActiveDriver->getName()
-            + " is already active.");
-        return;
-    }
-
-    LOG_MESSAGE(Logger::MULTIMEDIA,
-        "Changing Sound Driver to "
-         + driver->getName());
-
-    if (driver->initialize())
-    {
-        if (mActiveDriver != NULL)
-        {
-            mActiveDriver->shutdown();
-            mActiveDriver = NULL;
-        }
-        mActiveDriver = driver;
-    }
-    else
-    {
-        LOG_ERROR(
-            Logger::MULTIMEDIA,
-            "Sound driver "
-            + driver->getName()
-            + " had an error while initializing, keeping old driver.");
-    }
-}
-
-void SoundManager::_clearListenerActor()
-{
-    mActiveListener = NULL;
-    mListenerActor = NULL;
-}
-
-
-/**
- * @return Der aktive Treiber.
- * @author JoSch
- * @date 12-23-2005
- */
-SoundDriver* SoundManager::getActiveDriver() const
-{
-    return mActiveDriver;
-}
-
-/**
- * @return Der aktive Listener.
- * @author JoSch
- * @date 04-04-2006
- */
-ListenerObject* SoundManager::getListener() const
-{
-    return mActiveListener;
-}
-
-Actor* SoundManager::createListenerActor()
-{
-    if (mListenerActor == NULL)
-    {
-        if (mActiveListener != NULL)
-        {
-            mActiveListener->getListener()->setActive(false);
-        }
-
-        mListenerActor = ActorManager::getSingleton().createListenerActor("SoundListenerObject");
-        mActiveListener = static_cast<ListenerObject*>(mListenerActor->getControlledObject());
-        mActiveListener->getListener()->setActive(true);
-        return mListenerActor;
-    }
-    else
-    {
-        Throw(IllegalStateException, "ListenerActor already created.");
-    }
-}
-
-Actor* SoundManager::getListenerActor()
-{
-    return mListenerActor;
-}
-
-/**
- * Hole einen Treiber durch Angabe seines Namens
- * @param name Der name des gesuchten Treibers.
- * @return Der gesuchte Treiber
- * @author JoSch
- * @date 05-10-2006
- */
-SoundDriver *SoundManager::getDriverByName(const String &name)
-{
-    DriverList::const_iterator it;
-    for(it = mDriverList.begin(); it != mDriverList.end(); it++)
-    {
-        if ((*it)->getName() == name)
-        {
-            return *it;
-        }
-    }
-    return 0;
-}
-
-    const std::list<SoundDriver*>& SoundManager::getDriverList()
-    {
-        return mDriverList;
-    }
-
-    void SoundManager::registerDriver(rl::SoundDriver *driver)
-    {
-        mDriverList.push_back(driver);
-    }
-
-    void SoundManager::unregisterDriver(rl::SoundDriver *driver)
-    {
-        mDriverList.remove(driver);
-    }
-
-    void SoundManager::applySettings(const Ogre::NameValuePairList& settings)
-    {
-        // Get the sound driver
-        Ogre::NameValuePairList::const_iterator it = settings.find("Driver");
-        Ogre::String drivername;
-
-        if (it == settings.end())
-        {
-            drivername = "RlFmod4Driver";
-        }
-        else
-        {
-            drivername = it->second;
-        }
-
-        try
-        {
-            #if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
-            Ogre::Root::getSingleton().loadPlugin(drivername);
-            #else
-            Ogre::Root::getSingleton().loadPlugin("lib" + drivername);
-            #endif
-        }
-        catch(Ogre::Exception &e)
-        {
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                CeGuiString("Soundtreiber kann nicht geladen werden: ")
-                    + drivername + "\n"
-                    + e.getFullDescription());
-        }
-        catch(...)
-        {
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                 CeGuiString("Soundtreiber kann nicht geladen werden: ")
-                    + drivername);
-        }
-
-        SoundDriver *driver = getDriverByName(drivername);
-
-        if (driver == NULL)
-        {
-            driver = getDriverByName(NullDriver::NAME);
-        }
-
-        RlAssert(driver != NULL, "Beim Laden des Treibers ist ein Fehler aufgetreten");
-        setActiveDriver(driver);
-        getActiveDriver()->applySettings(settings);
-    }
-
-void SoundManager::unloadAllDrivers()
-{
-    if (mActiveDriver != NULL)
-    {
-        mActiveDriver->shutdown();
-        mActiveDriver = NULL;
-    }
-
-    for(DriverList::iterator it = mDriverList.begin(); it != mDriverList.end(); it++)
-    {
-#       if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
-        Ogre::String driverPlugin = (*it)->getName();
-#       else
-        Ogre::String driverPlugin = "lib" + (*it)->getName();
-#       endif
-
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            "Unloading sound driver DLL "
-            + driverPlugin);
-
-        bool isDriverPlugin = (*it)->isDriverPlugin();
-        if (isDriverPlugin)
-        {
-            Ogre::Root::getSingleton().unloadPlugin(driverPlugin);
-        }
-        else
-        {
-            delete *it;
-        }
-
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            "Sound driver DLL "
-            + driverPlugin
-            + " successfully unloaded.");
-    }
-
-    mDriverList.clear();
-}
-
-/**
- * @author JoSch
- * @date 07-03-2005
- */
-void SoundManager::run(Real elapsedTime)
-{
-    if (mActiveDriver != NULL)
-    {
-        mActiveDriver->update();
-    }
-
-    if (mListenerActor != NULL)
-    {
-        mListenerActor->_update();
-    }
-}
-
-const Ogre::String& SoundManager::getName() const
-{
-    static String NAME = "SoundManager";
-
-    return NAME;
-}
-
-/**
- * @author JoSch
- * @date 20-04-2007
- * Delegate sound creation to active driver
- */
-Sound* SoundManager::createSound(const Ogre::String& res, SoundType type)
-{
-    if (getActiveDriver() != NULL)
-    {
-        return getActiveDriver()->createSound(res, type);
-    }
-    return NULL;
-}
-
-/**
- * @author JoSch
- * @date 20-04-2007
- * Delegate sound creation to active driver
- */
-Sound* SoundManager::createSound(const SoundResourcePtr& res, SoundType type)
-{
-    if (getActiveDriver() != NULL)
-    {
-        return getActiveDriver()->createSound(res, type);
-    }
-    return NULL;
-}
-
-/**
- * @author JoSch
- * @date 20-04-2007
- * Delegate sound destruction to active driver
- */
-void SoundManager::destroySound(Sound* sound)
-{
-    if (getActiveDriver() != NULL)
-    {
-        getActiveDriver()->destroySound(sound);
-    }
-}
-
-}
+/* This source file is part of Rastullahs Lockenpracht.
+* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
+*
+*  This program is free software; you can redistribute it and/or modify
+*  it under the terms of the Clarified Artistic License.
+*
+*  This program is distributed in the hope that it will be useful,
+*  but WITHOUT ANY WARRANTY; without even the implied warranty of
+*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+*  Clarified Artistic License for more details.
+*
+*  You should have received a copy of the Clarified Artistic License
+*  along with this program; if not you can get it here
+*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
+*/
+#include "stdinc.h" //precompiled header
+
+#include "SoundManager.h"
+
+#include <set>
+
+#include "Actor.h"
+#include "ActorManager.h"
+#include "ConfigFile.h"
+#include "CoreSubsystem.h"
+#include "GameLoop.h"
+#include "ListenerMovable.h"
+#include "ListenerObject.h"
+#include "SoundDriver.h"
+#include "SoundResource.h"
+
+#include "Fmod4Driver.h"
+#include "NullDriver.h"
+
+using namespace std;
+using namespace Ogre;
+
+/** Das Singleton
+ * @author JoSch
+ * @date 04-26-2004
+ */
+template<> rl::SoundManager* Singleton<rl::SoundManager>::ms_Singleton = 0;
+
+namespace rl
+{
+    /**
+     * Standardkonstruktor
+     * @author JoSch
+     * @date 01-27-2005
+     */
+    SoundManager::SoundManager()
+    : ResourceManager(),
+      mDriverList(),
+      mActiveDriver(NULL),
+      mListenerActor(NULL),
+      mActiveListener(NULL)
+    {
+        LOG_MESSAGE(Logger::MULTIMEDIA, "Erzeuge Soundmanager...");
+        NullDriver* nullDriver = new NullDriver(this);
+        registerDriver(nullDriver);
+        setActiveDriver(nullDriver);
+
+		Fmod4Driver* fmod4Driver = new Fmod4Driver(this);
+		registerDriver(fmod4Driver);
+
+        mResourceType = "Sound";
+        ResourceGroupManager::getSingleton()._registerResourceManager(mResourceType, this);
+
+    }
+
+    SoundManager::~SoundManager()
+    {
+        ResourceGroupManager::getSingleton()._unregisterResourceManager(mResourceType);
+        unloadAllDrivers();
+    }
+
+/**
+ * Gibt die Suchmuster fuer die Extension zurueck.
+ * @return Die Liste der Suchmuster
+ * @author JoSch
+ * @date 06-18-2004
+ */
+StringList SoundManager::getExtension()
+{
+    StringList result;
+    result.push_back("*.ogg");
+    result.push_back("*.wav");
+
+    return result;
+}
+
+/**
+* @param resName. Der Name der Soundresource, die erzeugt
+* werden soll.
+* @author JoSch
+* @date 06-18-2004
+*/
+Resource* SoundManager::createImpl(
+    const String& resName,
+    ResourceHandle handle,
+    const String& group,
+    bool isManual,
+    ManualResourceLoader* loader,
+    const NameValuePairList* loadParams)
+{
+    SoundResource *newSound = NULL;
+    newSound = new SoundResource(this, resName, handle, group, isManual, loader);
+    return newSound;
+}
+
+/**
+ * @param Der neue Treiber.
+ * @author JoSch
+ * @date 12-23-2005
+ */
+void SoundManager::setActiveDriver(SoundDriver *driver)
+{
+    if (driver == NULL)
+    {
+        driver = getDriverByName(NullDriver::NAME);
+    }
+
+    if (mActiveDriver == driver)
+    {
+        LOG_DEBUG(Logger::MULTIMEDIA,
+            "No need to change Sound Driver, "
+            + mActiveDriver->getName()
+            + " is already active.");
+        return;
+    }
+
+    LOG_MESSAGE(Logger::MULTIMEDIA,
+        "Changing Sound Driver to "
+         + driver->getName());
+
+    if (driver->initialize())
+    {
+        if (mActiveDriver != NULL)
+        {
+            mActiveDriver->shutdown();
+            mActiveDriver = NULL;
+        }
+        mActiveDriver = driver;
+    }
+    else
+    {
+        LOG_ERROR(
+            Logger::MULTIMEDIA,
+            "Sound driver "
+            + driver->getName()
+            + " had an error while initializing, keeping old driver.");
+    }
+}
+
+void SoundManager::_clearListenerActor()
+{
+    mActiveListener = NULL;
+    mListenerActor = NULL;
+}
+
+
+/**
+ * @return Der aktive Treiber.
+ * @author JoSch
+ * @date 12-23-2005
+ */
+SoundDriver* SoundManager::getActiveDriver() const
+{
+    return mActiveDriver;
+}
+
+/**
+ * @return Der aktive Listener.
+ * @author JoSch
+ * @date 04-04-2006
+ */
+ListenerObject* SoundManager::getListener() const
+{
+    return mActiveListener;
+}
+
+Actor* SoundManager::createListenerActor()
+{
+    if (mListenerActor == NULL)
+    {
+        if (mActiveListener != NULL)
+        {
+            mActiveListener->getListener()->setActive(false);
+        }
+
+        mListenerActor = ActorManager::getSingleton().createListenerActor("SoundListenerObject");
+        mActiveListener = static_cast<ListenerObject*>(mListenerActor->getControlledObject());
+        mActiveListener->getListener()->setActive(true);
+        return mListenerActor;
+    }
+    else
+    {
+        Throw(IllegalStateException, "ListenerActor already created.");
+    }
+}
+
+Actor* SoundManager::getListenerActor()
+{
+    return mListenerActor;
+}
+
+/**
+ * Hole einen Treiber durch Angabe seines Namens
+ * @param name Der name des gesuchten Treibers.
+ * @return Der gesuchte Treiber
+ * @author JoSch
+ * @date 05-10-2006
+ */
+SoundDriver *SoundManager::getDriverByName(const String &name)
+{
+    DriverList::const_iterator it;
+    for(it = mDriverList.begin(); it != mDriverList.end(); it++)
+    {
+        if ((*it)->getName() == name)
+        {
+            return *it;
+        }
+    }
+    return 0;
+}
+
+    const std::list<SoundDriver*>& SoundManager::getDriverList()
+    {
+        return mDriverList;
+    }
+
+    void SoundManager::registerDriver(rl::SoundDriver *driver)
+    {
+        mDriverList.push_back(driver);
+    }
+
+    void SoundManager::unregisterDriver(rl::SoundDriver *driver)
+    {
+        mDriverList.remove(driver);
+    }
+
+    void SoundManager::applySettings(const Ogre::NameValuePairList& settings)
+    {
+        // Get the sound driver
+        Ogre::NameValuePairList::const_iterator it = settings.find("Driver");
+        Ogre::String drivername;
+
+        if (it == settings.end())
+        {
+            drivername = "RlFmod4Driver";
+        }
+        else
+        {
+            drivername = it->second;
+        }
+
+
+		SoundDriver *driver = getDriverByName(drivername);
+
+        if (driver == NULL)
+        {
+			try
+			{
+				CoreSubsystem::getSingleton().loadPlugin(drivername);
+			}
+			catch(Ogre::Exception &e)
+			{
+				LOG_MESSAGE(Logger::MULTIMEDIA,
+					CeGuiString("Soundtreiber kann nicht geladen werden: ")
+						+ drivername + "\n"
+						+ e.getFullDescription());
+			}
+			catch(...)
+			{
+				LOG_MESSAGE(Logger::MULTIMEDIA,
+					 CeGuiString("Soundtreiber kann nicht geladen werden: ")
+						+ drivername);
+			}
+		}
+
+        driver = getDriverByName(drivername);
+
+        if (driver == NULL)
+        {
+            driver = getDriverByName(NullDriver::NAME);
+        }
+
+        RlAssert(driver != NULL, "Beim Laden des Treibers ist ein Fehler aufgetreten");
+        setActiveDriver(driver);
+        getActiveDriver()->applySettings(settings);
+    }
+
+void SoundManager::unloadAllDrivers()
+{
+    if (mActiveDriver != NULL)
+    {
+        mActiveDriver->shutdown();
+        mActiveDriver = NULL;
+    }
+
+    for(DriverList::iterator it = mDriverList.begin(); it != mDriverList.end(); it++)
+    {
+#       if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
+        Ogre::String driverPlugin = (*it)->getName();
+#       else
+        Ogre::String driverPlugin = "lib" + (*it)->getName();
+#       endif
+
+        LOG_MESSAGE(Logger::MULTIMEDIA,
+            "Unloading sound driver DLL "
+            + driverPlugin);
+
+        bool isDriverPlugin = (*it)->isDriverPlugin();
+        if (isDriverPlugin)
+        {
+            Ogre::Root::getSingleton().unloadPlugin(driverPlugin);
+        }
+        else
+        {
+            delete *it;
+        }
+
+        LOG_MESSAGE(Logger::MULTIMEDIA,
+            "Sound driver DLL "
+            + driverPlugin
+            + " successfully unloaded.");
+    }
+
+    mDriverList.clear();
+}
+
+/**
+ * @author JoSch
+ * @date 07-03-2005
+ */
+void SoundManager::run(Real elapsedTime)
+{
+    if (mActiveDriver != NULL)
+    {
+        mActiveDriver->update();
+    }
+
+    if (mListenerActor != NULL)
+    {
+        mListenerActor->_update();
+    }
+}
+
+const Ogre::String& SoundManager::getName() const
+{
+    static String NAME = "SoundManager";
+
+    return NAME;
+}
+
+/**
+ * @author JoSch
+ * @date 20-04-2007
+ * Delegate sound creation to active driver
+ */
+Sound* SoundManager::createSound(const Ogre::String& res, SoundType type)
+{
+    if (getActiveDriver() != NULL)
+    {
+        return getActiveDriver()->createSound(res, type);
+    }
+    return NULL;
+}
+
+/**
+ * @author JoSch
+ * @date 20-04-2007
+ * Delegate sound creation to active driver
+ */
+Sound* SoundManager::createSound(const SoundResourcePtr& res, SoundType type)
+{
+    if (getActiveDriver() != NULL)
+    {
+        return getActiveDriver()->createSound(res, type);
+    }
+    return NULL;
+}
+
+/**
+ * @author JoSch
+ * @date 20-04-2007
+ * Delegate sound destruction to active driver
+ */
+void SoundManager::destroySound(Sound* sound)
+{
+    if (getActiveDriver() != NULL)
+    {
+        getActiveDriver()->destroySound(sound);
+    }
+}
+
+}

Copied: rl/branches/persistence/core/src/fmod4driver (from rev 4726, rl/trunk/engine/core/src/fmod4driver)

Deleted: rl/branches/persistence/core/src/fmod4driver/Fmod4Driver.cpp
===================================================================
--- rl/trunk/engine/core/src/fmod4driver/Fmod4Driver.cpp	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/src/fmod4driver/Fmod4Driver.cpp	2009-01-28 19:18:55 UTC (rev 4727)
@@ -1,493 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
- * Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
- *
- *  This program is free software; you can redistribute it and/or modify
- *  it under the terms of the Clarified Artistic License.
- *
- *  This program is distributed in the hope that it will be useful,
- *  but WITHOUT ANY WARRANTY; without even the implied warranty of
- *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- *  Clarified Artistic License for more details.
- *
- *  You should have received a copy of the Clarified Artistic License
- *  along with this program; if not you can get it here
- *  http://www.jpaulmorrison.com/fbp/artistic2.htm.
- */
-#include "stdinc.h"
-
-#include <fmod_errors.h>
-
-#include "Fmod4Driver.h"
-#include "Fmod4Sound.h"
-#include "Fmod4SoundStitching.h"
-#include "Fmod4Listener.h"
-#include "Logger.h"
-#include "SoundResource.h"
-
-using namespace Ogre;
-using namespace std;
-
-namespace rl
-{
-    // Used by FMOD-Callbacks, which are not C++-functions, but C-functions.
-    Ogre::ResourceManager* gSoundResourceManager = NULL;
-    Fmod4Driver* gDriver = NULL;
-
-    String Fmod4Driver::NAME = "RlFmod4Driver";
-
-    Fmod4Driver::Fmod4Driver(Ogre::ResourceManager *soundResourceManager)
-        : SoundDriver(soundResourceManager),
-        mMasterChannelGroup(NULL)
-    {
-        gSoundResourceManager = soundResourceManager;
-        gDriver = this;
-    }
-
-    Fmod4Driver::~Fmod4Driver()
-    {
-    }
-
-    String Fmod4Driver::getName() const
-    {
-        return NAME;
-    }
-
-    bool Fmod4Driver::initialize()
-    {
-        static int MAX_VIRTUAL_CHANNELS = 100;
-
-        CHECK_FMOD4_ERRORS(FMOD::System_Create(&mFmod4System));
-
-        mFmod4System->setFileSystem(
-            Fmod4Driver::open,
-            Fmod4Driver::close,
-            Fmod4Driver::read,
-            Fmod4Driver::seek,
-            -1);
-
-        printData();
-
-        mFmod4System->setDriver(-1);
-        //CHECK_FMOD4_ERRORS(mFmod4System->setOutput(FMOD_OUTPUTTYPE_ESD));
-
-        FMOD_RESULT result = mFmod4System->init(MAX_VIRTUAL_CHANNELS, FMOD_INIT_NORMAL, NULL);
-        if (result != FMOD_OK)
-        {
-            LOG_ERROR(Logger::CORE,
-                "FMOD error #"
-                + StringConverter::toString(result)
-                + " "
-                + FMOD_ErrorString(result));
-
-            return false;
-        }
-
-        mFmod4System->getMasterChannelGroup(&mMasterChannelGroup);
-
-        initializeEaxPresetMap();
-        return true;
-    }
-
-    void Fmod4Driver::shutdown()
-    {
-        CHECK_FMOD4_ERRORS(mFmod4System->close());
-        CHECK_FMOD4_ERRORS(mFmod4System->release());
-    }
-
-    bool Fmod4Driver::isDriverAvailable()
-    {
-        FMOD::System* system;
-        FMOD_RESULT result = FMOD::System_Create(&system);
-        if (result != FMOD_OK)
-        {
-            return false;
-        }
-
-        system->release();
-        return true;
-    }
-
-    void Fmod4Driver::update()
-    {
-        mFmod4System->update();
-    }
-
-    Sound* Fmod4Driver::createSoundImpl(SoundResourcePtr res, SoundType type)
-    {
-        Sound* sound = new Fmod4Sound(this, res, type);
-        return sound;
-    }
-
-
-    SoundStitching *Fmod4Driver::createSoundStitchingImpl(unsigned int numSlots, const CeGuiString& name)
-    {
-         SoundStitching* soundstitching = new Fmod4SoundStitching(numSlots, name, this);
-         return soundstitching;
-    }
-
-    ListenerMovable *Fmod4Driver::createListener(const Ogre::String &name)
-    {
-        return new Fmod4Listener(name, mFmod4System);
-    }
-
-    FMOD::System* Fmod4Driver::_getFmodSystem()
-    {
-        return mFmod4System;
-    }
-
-    void Fmod4Driver::applySettings(const Ogre::NameValuePairList& settings)
-    {
-        SoundDriver::applySettings(settings);
-        mMasterChannelGroup->setVolume(mMasterVolume);
-    }
-
-#define DEF_PRESET(NAME, DEFINITION) \
-    { \
-        FMOD_REVERB_PROPERTIES prop = DEFINITION; \
-        mEaxPresetMap.insert(make_pair(NAME, prop)); \
-    }
-
-    void Fmod4Driver::initializeEaxPresetMap()
-    {
-        DEF_PRESET("Alley", FMOD_PRESET_ALLEY);
-        DEF_PRESET("Arena", FMOD_PRESET_ARENA);
-        DEF_PRESET("Auditorium", FMOD_PRESET_AUDITORIUM);
-        DEF_PRESET("Bathroom", FMOD_PRESET_BATHROOM);
-        DEF_PRESET("Carpetted Hallway", FMOD_PRESET_CARPETTEDHALLWAY);
-        DEF_PRESET("Cave", FMOD_PRESET_CAVE);
-        DEF_PRESET("City", FMOD_PRESET_CITY);
-        DEF_PRESET("Concert Hall", FMOD_PRESET_CONCERTHALL);
-        DEF_PRESET("Dizzy", FMOD_PRESET_DIZZY);
-        DEF_PRESET("Drugged", FMOD_PRESET_DRUGGED);
-        DEF_PRESET("Forest", FMOD_PRESET_FOREST);
-        DEF_PRESET("Generic", FMOD_PRESET_GENERIC);
-        DEF_PRESET("Hallway", FMOD_PRESET_HALLWAY);
-        DEF_PRESET("Hangar", FMOD_PRESET_HANGAR);
-        DEF_PRESET("Living Room", FMOD_PRESET_LIVINGROOM);
-        DEF_PRESET("Mountains", FMOD_PRESET_MOUNTAINS);
-        DEF_PRESET("Off", FMOD_PRESET_OFF);
-        DEF_PRESET("Padded Cell", FMOD_PRESET_PADDEDCELL);
-        DEF_PRESET("Parkinglot", FMOD_PRESET_PARKINGLOT);
-        DEF_PRESET("Plain", FMOD_PRESET_PLAIN);
-        DEF_PRESET("Psychotic", FMOD_PRESET_PSYCHOTIC);
-        DEF_PRESET("Quarry", FMOD_PRESET_QUARRY);
-        DEF_PRESET("Room", FMOD_PRESET_ROOM);
-        DEF_PRESET("Sewerpipe", FMOD_PRESET_SEWERPIPE);
-        DEF_PRESET("Stone Corridor", FMOD_PRESET_STONECORRIDOR);
-        DEF_PRESET("Stone Room", FMOD_PRESET_STONEROOM);
-        DEF_PRESET("Underwater", FMOD_PRESET_UNDERWATER);
-    }
-#undef DEF_PRESET
-
-    bool Fmod4Driver::setEaxPreset(const Ogre::String& name)
-    {
-        EaxPresetMap::iterator it = mEaxPresetMap.find(name);
-
-        if( it != mEaxPresetMap.end() )
-        {
-            FMOD_RESULT result;
-            result = mFmod4System->setReverbProperties(&(it->second)); ///@todo seems not to work correctly
-            CHECK_FMOD4_ERRORS(result);
-        }
-
-        return false;
-    }
-
-    Ogre::NameValuePairList Fmod4Driver::getSettings() const
-    {
-        return SoundDriver::getSettings();
-    }
-
-    void Fmod4Driver::printData() const
-    {
-        int numDrivers;
-        mFmod4System->getNumDrivers(&numDrivers);
-
-        for (int i = 0; i < numDrivers; i++)
-        {
-            printDriverInfo(i);
-        }
-
-        int numPlugins;
-        mFmod4System->getNumPlugins(FMOD_PLUGINTYPE_CODEC, &numPlugins);
-        for (int i = 0; i < numPlugins; i++)
-        {
-            char pluginName[128];
-            unsigned int version;
-			FMOD_PLUGINTYPE type = FMOD_PLUGINTYPE_CODEC;
-			unsigned int handle;
-			FMOD_RESULT result = mFmod4System->getPluginHandle(FMOD_PLUGINTYPE_CODEC, i, &handle);
-			CHECK_FMOD4_ERRORS(result);
-
-            result = mFmod4System->getPluginInfo(
-                handle,
-                &type,
-				pluginName,
-                127,
-                &version);
-			CHECK_FMOD4_ERRORS(result);
-            LOG_MESSAGE(Logger::MULTIMEDIA,
-                String("Fmod4Driver Plugin '")
-                + pluginName
-                + "' Version "
-                + StringConverter::toString(version));
-        }
-    }
-
-    void Fmod4Driver::printDriverInfo(int driver) const
-    {
-        int curdriver;
-        mFmod4System->getDriver(&curdriver);
-
-        char name[128];
-        mFmod4System->getDriverInfo(driver, name, 127, NULL);
-
-        FMOD_CAPS caps;
-        int minfreq, maxfreq;
-        FMOD_SPEAKERMODE speakermode;
-        mFmod4System->getDriverCaps(driver, &caps, &minfreq, &maxfreq, &speakermode);
-
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            String("Fmod4Driver '")
-            + name
-            + "'"
-            + (driver == curdriver ? "(cur)" : "")
-            + ": \n"
-            + "Freq " + StringConverter::toString(minfreq)
-            + " - " + StringConverter::toString(maxfreq));
-
-        int hard2d, hard3d, hardtotal;
-        mFmod4System->getHardwareChannels(&hard2d, &hard3d, &hardtotal);
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            String("Fmod4Driver '")
-            + name + "' Hardware Channels: "
-            + "2D #" + StringConverter::toString(hard2d)
-            + ", 3D #" + StringConverter::toString(hard3d)
-            + ", Total #" + StringConverter::toString(hardtotal));
-
-        int softchannels;
-        mFmod4System->getSoftwareChannels(&softchannels);
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            String("Fmod4Driver '")
-            + name + "' Software Channels: "
-            + "#" + StringConverter::toString(softchannels));
-
-        FMOD_OUTPUTTYPE output;
-        mFmod4System->getOutput(&output);
-        String outputName;
-
-        if(output == FMOD_OUTPUTTYPE_AUTODETECT)
-            outputName = "Autodetect";
-        else if(output == FMOD_OUTPUTTYPE_UNKNOWN)
-            outputName = "Unknown";
-        else if(output == FMOD_OUTPUTTYPE_NOSOUND)
-            outputName = "No Sound";
-        else if(output == FMOD_OUTPUTTYPE_WAVWRITER)
-            outputName = "Wave Writer";
-        else if(output == FMOD_OUTPUTTYPE_NOSOUND_NRT)
-            outputName = "No Sound non realtime";
-        else if(output == FMOD_OUTPUTTYPE_WAVWRITER_NRT)
-            outputName = "Wave Writer non realtime";
-        else if(output == FMOD_OUTPUTTYPE_DSOUND)
-            outputName = "DirectSound";
-        else if(output == FMOD_OUTPUTTYPE_WINMM)
-            outputName = "Windows Multimedia";
-        else if(output == FMOD_OUTPUTTYPE_ASIO)
-            outputName = "Low Latency ASIO driver";
-        else if(output == FMOD_OUTPUTTYPE_OSS)
-            outputName = "Open Sound System (OSS)";
-        else if(output == FMOD_OUTPUTTYPE_ALSA)
-            outputName = "Advanced Linux Sound Architecture (ALSA)";
-        else if(output == FMOD_OUTPUTTYPE_ESD)
-            outputName = "Enlightment Sound Daemon (ESD)";
-        else if(output == FMOD_OUTPUTTYPE_SOUNDMANAGER)
-            outputName = "Macintosh SoundManager";
-        else if(output == FMOD_OUTPUTTYPE_COREAUDIO)
-            outputName = "Macintosh CoreAudio";
-
-        LOG_MESSAGE(Logger::MULTIMEDIA,
-            String("Fmod4Driver '")
-            + name + "' Output: " + outputName);
-    }
-
-    FMOD_RESULT F_CALLBACK Fmod4Driver::open(
-        const char *  name,
-        int  unicode,
-        unsigned int *  filesize,
-        void **  handle,
-        void **  userdata)
-    {
-        SoundResourcePtr* res = new SoundResourcePtr(gSoundResourceManager->getByName(name));
-        LOG_DEBUG(Logger::MULTIMEDIA,
-            "Opened stream " + (*res)->getName());
-        (*res)->load();
-        *filesize = (*res)->getSize();
-        *handle = res;
-        return FMOD_OK;
-    }
-
-    FMOD_RESULT F_CALLBACK Fmod4Driver::close(
-        void *  handle,
-        void *  userdata)
-    {
-           SoundResourcePtr *res = static_cast<SoundResourcePtr*>(handle);
-        LOG_DEBUG(Logger::MULTIMEDIA,
-            "Closing stream " + (*res)->getName());
-        (*res)->unload();
-        delete res;
-        return FMOD_OK;
-    }
-
-    FMOD_RESULT F_CALLBACK Fmod4Driver::read(
-        void*  handle,
-        void*  buffer,
-        unsigned int  sizebytes,
-        unsigned int* bytesread,
-        void*  userdata)
-    {
-        if (handle == NULL)
-        {
-            return FMOD_ERR_INVALID_PARAM;
-        }
-
-        SoundResourcePtr *sound = static_cast<SoundResourcePtr*>(handle);
-        if (!sound->isNull())
-        {
-            if (!(*sound)->isLoaded())
-            {
-                (*sound)->load();
-            }
-
-            DataStreamPtr ds = (*sound)->getDataStream();
-            if (!ds.isNull())
-            {
-                *bytesread = ds->read(buffer, sizebytes);
-                if (*bytesread < sizebytes)
-                {
-                    return FMOD_ERR_FILE_EOF;
-                }
-                return FMOD_OK;
-            }
-        }
-
-        return FMOD_ERR_FILE_EOF;
-    }
-
-    FMOD_RESULT F_CALLBACK Fmod4Driver::seek(
-        void *  handle,
-        unsigned int  pos,
-        void *  userdata)
-    {
-        if (handle == NULL)
-        {
-            return FMOD_ERR_INVALID_PARAM;
-        }
-
-        SoundResourcePtr *sound = static_cast<SoundResourcePtr*>(handle);
-        if (!sound->isNull())
-        {
-            DataStreamPtr ds = (*sound)->getDataStream();
-            if (!ds.isNull())
-            {
-                ds->seek(pos);
-                return FMOD_OK;
-            }
-        }
-        return FMOD_ERR_INVALID_PARAM;
-    }
-
-/**
- * This static method is as channel callback, so that we get callbacks
- * from FMOD
- * @author Blakharaz
- * @version 1.0
- * @author JoSch
- * @version 1.1
- * @date 07-03-2007
- * @param _channel The channel for which the callback is registered.
- * @param type Type of the event.
- * @param command A commando
- * @param commanddata1 Data
- * @param commanddata2 Data
- */
-FMOD_RESULT F_CALLBACK Fmod4Driver::channelCallback(
-    FMOD_CHANNEL *_channel,
-    FMOD_CHANNEL_CALLBACKTYPE type,
-    void* commanddata1, 
-    void* commanddata2)
-{
-    /// Extract the Fmod channel and then our Sound object.
-    FMOD::Channel* channel = (FMOD::Channel*)_channel;
-    RlAssert1(channel != NULL);
-    ChannelSoundMap::iterator it = gDriver->mChannelSoundMap.find((FMOD::Channel*)channel);
-    if (it != gDriver->mChannelSoundMap.end())
-    {
-        Fmod4Sound* sound = it->second;
-        RlAssert1(sound != NULL);
-        switch(type)
-        {
-            case FMOD_CHANNEL_CALLBACKTYPE_END:
-                {
-                    // We dispatch a stop event
-                    SoundPlayEvent event(NULL, SoundPlayEvent::STOPEVENT);
-                    sound->dispatchEvent(&event);
-                    // If the sound is set for autodestruction,
-                    // we destroy it now.
-                    if (sound->isAutoDestroying())
-                    {
-                        gDriver->destroySound(sound);
-                        gDriver->mChannelSoundMap.erase(it);
-                    }
-                }
-                break;
-                
-            case FMOD_CHANNEL_CALLBACKTYPE_SYNCPOINT:
-                {
-                    FMOD::Sound *fmodsound = NULL;
-                    FMOD_SYNCPOINT* syncpoint = NULL;
-                    SoundTimingEvent event(NULL, SoundTimingEvent::TIMEEVENT);
-        
-                    // We get the time point of the sync point and put it in a timing event.
-                    sound->getFmodChannel()->getCurrentSound(&fmodsound);
-                    fmodsound->getSyncPoint(*static_cast<int*>(commanddata1), &syncpoint);
-                    fmodsound->getSyncPointInfo(syncpoint, NULL, 0, &event.mTime, FMOD_TIMEUNIT_MS);
-                    sound->dispatchEvent(&event);
-                }
-                break;
-             case FMOD_CHANNEL_CALLBACKTYPE_VIRTUALVOICE:
-                {
-                }
-                break;
-        }
-    }  
-    return FMOD_OK;
-}
-
-
-    void Fmod4Driver::setMasterVolume(const Ogre::Real& vol)
-    {
-        SoundDriver::setMasterVolume(vol);
-    }
-
-    void Fmod4Driver::setRolloffFactor(const Ogre::Real& factor)
-    {
-        float dopplerScale;
-        mFmod4System->get3DSettings(&dopplerScale, NULL, NULL);
-        mFmod4System->set3DSettings(dopplerScale, 1.0, factor);
-    }
-
-    const Ogre::Real Fmod4Driver::getRolloffFactor()
-    {
-        float factor;
-        mFmod4System->get3DSettings(NULL, NULL, &factor);
-        return factor;
-    }
-
-    void Fmod4Driver::_registerChannel(FMOD::Channel* channel, Fmod4Sound* sound)
-    {
-        FMOD_RESULT res = channel->setCallback(channelCallback);
-        CHECK_FMOD4_ERRORS(res);
-        mChannelSoundMap.insert(std::make_pair(channel, sound));
-    }
-
-}

Copied: rl/branches/persistence/core/src/fmod4driver/Fmod4Driver.cpp (from rev 4726, rl/trunk/engine/core/src/fmod4driver/Fmod4Driver.cpp)

Deleted: rl/branches/persistence/core/src/fmod4driver/Fmod4Listener.cpp
===================================================================
--- rl/trunk/engine/core/src/fmod4driver/Fmod4Listener.cpp	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/src/fmod4driver/Fmod4Listener.cpp	2009-01-28 19:18:55 UTC (rev 4727)
@@ -1,77 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#include "stdinc.h"
-
-#include "Fmod4Listener.h"
-
-using namespace Ogre;
-
-namespace rl {
-
-String rl::Fmod4Listener::msMovableType = "Fmod4Listener"; 
-
-Fmod4Listener::Fmod4Listener(const Ogre::String &name, FMOD::System *fmod4system, int listenerId)
-: ListenerMovable(name),
-  mFmod4System(fmod4system),
-  mListenerId(listenerId)
-{
-}
-
-Fmod4Listener::~Fmod4Listener()
-{
-}
-
-const String& Fmod4Listener::getMovableType() const
-{
-    return msMovableType;
-}
-
-void Fmod4Listener::setPosition(const Vector3& position)
-{
-    FMOD_VECTOR pos;
-    pos.x = position.x;
-    pos.y = position.y;
-    pos.z = -position.z;
-    mFmod4System->set3DListenerAttributes(mListenerId, &pos, NULL, NULL, NULL);
-}
-
-void Fmod4Listener::setOrientation(const Ogre::Quaternion &orientation)
-{
-    FMOD_VECTOR up, to;
-
-    Vector3 upVec = orientation * Vector3::UNIT_Y;
-    up.x = upVec.x;
-    up.y = upVec.y;
-    up.z = -upVec.z;
-
-    Vector3 toVec = orientation * Vector3::NEGATIVE_UNIT_Z;
-    to.x = toVec.x;
-    to.y = toVec.y;
-    to.z = -toVec.z;
-
-    mFmod4System->set3DListenerAttributes(mListenerId, NULL, NULL, &to, &up);
-}
-
-void Fmod4Listener::setVelocity(const Ogre::Vector3& velocity)
-{
-    FMOD_VECTOR vel;
-    vel.x = velocity.x;
-    vel.y = velocity.y;
-    vel.z = -velocity.z;
-    mFmod4System->set3DListenerAttributes(mListenerId, NULL, &vel, NULL, NULL);
-}
-
-}

Copied: rl/branches/persistence/core/src/fmod4driver/Fmod4Listener.cpp (from rev 4726, rl/trunk/engine/core/src/fmod4driver/Fmod4Listener.cpp)

Deleted: rl/branches/persistence/core/src/fmod4driver/Fmod4Sound.cpp
===================================================================
--- rl/trunk/engine/core/src/fmod4driver/Fmod4Sound.cpp	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/src/fmod4driver/Fmod4Sound.cpp	2009-01-28 19:18:55 UTC (rev 4727)
@@ -1,377 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#include "stdinc.h"
-
-#include "Fmod4Sound.h"
-
-#include <fmod_errors.h>
-
-#include "Fmod4Driver.h"
-#include "SoundManager.h"
-#include "SoundResource.h"
-
-using namespace Ogre;
-
-namespace rl {
-
-String Fmod4Sound::msMovableType = "Fmod4Sound";
- 
-Fmod4Sound::Fmod4Sound(Fmod4Driver* driver, SoundResourcePtr soundres, SoundType type)
-  : Sound(soundres, driver),
-    mType(type),
-    mSound(NULL),
-    mDriver(driver),
-    mChannel(NULL)	
-{
-    setPriority(128);
-}
-
-float Fmod4Sound::getLength() const
-{
-    if (!isValid())
-    {
-        return 0.0;
-    }
-
-    unsigned int length;
-    mSound->getLength(&length, FMOD_TIMEUNIT_MS);
-    return (float)length/1000.0;
-}
-
-void Fmod4Sound::load() throw (RuntimeException)
-{
-    FMOD_MODE mode = FMOD_DEFAULT;
-
-    if (is3d())
-    {
-        mode |= FMOD_3D;
-    }
-    else
-    {
-        mode |= FMOD_2D;
-    }
-
-    if (isLooping())
-    {
-        mode |= FMOD_LOOP_NORMAL;
-    }
-    else
-    {
-        mode |= FMOD_LOOP_OFF;
-    }
-
-    if (mType == ST_SAMPLE)
-    {
-        FMOD_RESULT res = mDriver->_getFmodSystem()->createSound(
-            getSoundResource()->getName().c_str(), 
-            mode, 
-            NULL, 
-            &mSound);
-
-        CHECK_FMOD4_ERRORS(res);
-    }
-    else if (mType == ST_STREAM)
-    {
-        FMOD_RESULT res = mDriver->_getFmodSystem()->createStream(
-            getSoundResource()->getName().c_str(), 
-            mode, 
-            NULL, 
-            &mSound);
-
-        CHECK_FMOD4_ERRORS(res);
-    }
-    else
-    {
-        RlFail("Unsupported SoundType.");
-    }
-}
-
-void Fmod4Sound::unload() throw (RuntimeException)
-{
-    mSound->release();
-}
-
-bool Fmod4Sound::isValid() const throw (RuntimeException)
-{
-    return mSound != NULL && mChannel != NULL;
-}
-
-void Fmod4SoundPtr::destroy()
-{
-    SharedPtr<Fmod4Sound>::destroy();
-}
-
-const String& Fmod4Sound::getMovableType() const
-{
-    return msMovableType;
-}
-
-void Fmod4Sound::play(bool destroyWhenDone)
-{
-    if (!isValid())
-    {
-        load();
-    }
-
-    FMOD_RESULT res = mDriver->_getFmodSystem()->playSound(
-        FMOD_CHANNEL_FREE, 
-        mSound, 
-        true,
-        &mChannel);
-
-    CHECK_FMOD4_ERRORS(res);
-
-    RlAssert1(mChannel != NULL);
-    mAutoDestroy = destroyWhenDone;
-    mDriver->_registerChannel(mChannel, this);
-
-    float vol;
-	if (is3d())
-	{
-		vol = mDriver->getDefaultSoundVolume();
-	}
-	else
-	{
-		vol = mDriver->getDefaultMusicVolume();
-	}
-	setVolume(vol);
-
-    setPriority(mPriority);
-    setPosition(mPosition);
-    setDirection(mDirection);
-	setVelocity(mVelocity); 
-    pause(false);
-    SoundPlayEvent event = SoundPlayEvent(this, SoundPlayEvent::STARTEVENT);
-    dispatchEvent(&event);
-}
-
-void Fmod4Sound::stop()
-{
-    mChannel->stop();
-}
-
-void Fmod4Sound::setPosition(const Ogre::Vector3& position)
-{
-	mPosition = position;
-
-	if (isValid())
-	{
-		FMOD_VECTOR pos;
-		pos.x = position.x;
-		pos.y = position.y;
-		pos.z = -position.z;
-		mChannel->set3DAttributes(&pos, NULL);
-	}
-}
-
-const Ogre::Vector3 Fmod4Sound::getPosition() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR pos;
-		mChannel->get3DAttributes(&pos, NULL);
-
-		Vector3 rval;
-		rval.x = pos.x;
-		rval.y = pos.y;
-		rval.z = -pos.z;
-
-		return rval;
-	}
-
-	return mPosition;
-}
-
-const Ogre::Vector3 Fmod4Sound::getVelocity() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR vel;
-		mChannel->get3DAttributes(NULL, &vel);
-
-		Vector3 rval;
-		rval.x = vel.x;
-		rval.y = vel.y;
-		rval.z = -vel.z;
-
-		return rval;
-	}
-
-	return mVelocity;
-}
-
-void Fmod4Sound::setVelocity(const Ogre::Vector3& velocity)
-{
-	mVelocity = velocity;
-
-	if (isValid())
-	{
-		FMOD_VECTOR vel;
-		vel.x = velocity.x;
-		vel.y = velocity.y;
-		vel.z = -velocity.z;
-		mChannel->set3DAttributes(NULL, &vel);
-	}
-}
-
-void Fmod4Sound::setDirection(const Ogre::Quaternion &orientation)
-{
-	mDirection = orientation;
-
-	if (isValid())
-	{
-		FMOD_VECTOR to;
-
-		Vector3 toVec = orientation * Vector3::NEGATIVE_UNIT_Z;
-		to.x = toVec.x;
-		to.y = toVec.y;
-		to.z = -toVec.z;
-
-		mChannel->set3DConeOrientation(&to);
-	}
-}
-
-const Ogre::Quaternion Fmod4Sound::getDirection() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR to;
-		mChannel->get3DConeOrientation(&to);
-
-		Vector3 toVec;
-		toVec.x = to.x;
-		toVec.y = to.y;
-		toVec.z = -to.z;
-
-		return Vector3::NEGATIVE_UNIT_Z.getRotationTo(toVec);
-	}
-
-	return mDirection;
-}
-
-bool Fmod4Sound::isPaused()
-{
-    bool paused;
-    FMOD_RESULT error = mChannel->getPaused(&paused);
-    return !paused;
-}
-
-const bool Fmod4Sound::isPlaying() const
-{
-    bool playing;
-    FMOD_RESULT error = mChannel->isPlaying(&playing);
-    return playing;
-}
-
-void Fmod4Sound::pause(bool pause)
-{
-    mChannel->setPaused(pause);
-}
-
-void Fmod4Sound::setVolume(float vol)
-{
-	mVolume = vol;
-	if (isValid())
-	{
-	    mChannel->setVolume(vol);
-	}
-}
-
-const float Fmod4Sound::getVolume() const
-{
-	if (isValid())
-	{
-		float vol;
-		mChannel->getVolume(&vol);
-		return vol;
-	}
-	return mVolume;
-}
-
-/**
- * @author JoSch
- * @date 14-03-2007
- * @version 1.0
- * @param priority The new priority of this sound
- */ 
-void Fmod4Sound::setPriority(const int priority)
-{
-    mPriority = priority;
-    if (mPriority < 0)
-    {
-        mPriority = 0;
-    }
-    if (mPriority > 256)
-    {
-        mPriority = 256;
-    }
-    if (isValid())
-    {
-        mChannel->setPriority(mPriority);
-    }
-}
-
-/**
- * @author JoSch
- * @date 14-03-2007
- * @version 1.0
- * @return The new priority of this sound
- */ 
-const int Fmod4Sound::getPriority() const
-{
-    int priority = mPriority;
-    if (isValid())
-    {
-        mChannel->getPriority(&priority);
-    }
-    return priority;
-}
-
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return The Fmod4 Channel object
- */ 
-FMOD::Channel *Fmod4Sound::getFmodChannel() const
-{
-    return mChannel;
-}
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return The Fmod4 Sound object
- */ 
-FMOD::Sound *Fmod4Sound::getFmodSound() const
-{
-    return mSound;
-}
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return TRUE, if the sound should autodestroy when playing ended.
- */ 
-bool Fmod4Sound::isAutoDestroying() const
-{
-    return mAutoDestroy;
-}
-
-} // Namespace

Copied: rl/branches/persistence/core/src/fmod4driver/Fmod4Sound.cpp (from rev 4726, rl/trunk/engine/core/src/fmod4driver/Fmod4Sound.cpp)

Deleted: rl/branches/persistence/core/src/fmod4driver/Fmod4SoundStitching.cpp
===================================================================
--- rl/trunk/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/core/src/fmod4driver/Fmod4SoundStitching.cpp	2009-01-28 19:18:55 UTC (rev 4727)
@@ -1,427 +0,0 @@
-/* This source file is part of Rastullahs Lockenpracht.
-* Copyright (C) 2003-2008 Team Pantheon. http://www.team-pantheon.de
-* 
-*  This program is free software; you can redistribute it and/or modify
-*  it under the terms of the Clarified Artistic License.
-*
-*  This program is distributed in the hope that it will be useful,
-*  but WITHOUT ANY WARRANTY; without even the implied warranty of
-*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-*  Clarified Artistic License for more details.
-*
-*  You should have received a copy of the Clarified Artistic License
-*  along with this program; if not you can get it here
-*  http://www.jpaulmorrison.com/fbp/artistic2.htm.
-*/
-#include "stdinc.h"
-
-#include "Fmod4SoundStitching.h"
-
-#include <fmod_errors.h>
-
-#include "Fmod4Driver.h"
-#include "SoundManager.h"
-#include "SoundResource.h"
-
-using namespace Ogre;
-
-namespace rl {
-
-String Fmod4SoundStitching::msMovableType = "Fmod4SoundStitching";
- 
-Fmod4SoundStitching::Fmod4SoundStitching(unsigned int numSlots, const CeGuiString& name, SoundDriver* creator)
-  : SoundStitching(numSlots, name, creator),
-    mSound(NULL),
-    mChannel(NULL)	
-{
-    setPriority(128);
-}
-
-void Fmod4SoundStitching::load() throw (RuntimeException)
-{
-    FMOD_CREATESOUNDEXINFO exinfo;
-    FMOD_MODE mode = FMOD_OPENUSER;
-
-    if (is3d())
-    {
-        mode |= FMOD_3D;
-    }
-    else
-    {
-        mode |= FMOD_2D;
-    }
-
-    if (isLooping())
-    {
-        mode |= FMOD_LOOP_NORMAL;
-    }
-    else
-    {
-        mode |= FMOD_LOOP_OFF;
-    }
-
-    memset(&exinfo, 0, sizeof(FMOD_CREATESOUNDEXINFO));
-    
-    exinfo.cbsize = sizeof(FMOD_CREATESOUNDEXINFO);
-    exinfo.defaultfrequency = 44100;
-    exinfo.numsubsounds = getNumSlots();
-    exinfo.numchannels = is3d() ? 1 : 2;
-    exinfo.format = FMOD_SOUND_FORMAT_PCM16;
-
-    FMOD_RESULT res = mDriver->_getFmodSystem()->createStream(
-        getSoundResource()->getName().c_str(), 
-        mode, 
-        &exinfo, 
-        &mSound);
-
-    CHECK_FMOD4_ERRORS(res);
-
-    int *sentence = new int[getNumSlots()];
-    for(unsigned int i = 0; i < getNumSlots(); i++)
-    {
-        sentence[i] = i;
-    }
-    res = mSound->setSubSoundSentence(sentence, getNumSlots());
-    CHECK_FMOD4_ERRORS(res);
-}
-
-void Fmod4SoundStitching::unload() throw (RuntimeException)
-{
-    mSound->release();
-}
-
-bool Fmod4SoundStitching::isValid() const throw (RuntimeException)
-{
-    return mSound != NULL && mChannel != NULL;
-}
-
-void Fmod4SoundStitchingPtr::destroy()
-{
-    SharedPtr<Fmod4SoundStitching>::destroy();
-}
-
-const String& Fmod4SoundStitching::getMovableType() const
-{
-    return msMovableType;
-}
-
-void Fmod4SoundStitching::play(bool destroyWhenDone)
-{
-    if (!isValid())
-    {
-        load();
-    }
-
-    FMOD_RESULT res = mDriver->_getFmodSystem()->playSound(
-        FMOD_CHANNEL_FREE, 
-        mSound, 
-        true,
-        &mChannel);
-
-    CHECK_FMOD4_ERRORS(res);
-
-    RlAssert1(mChannel != NULL);
-    mAutoDestroy = destroyWhenDone;
-//    mDriver->_registerChannel(mChannel, this);
-
-    float vol;
-	if (is3d())
-	{
-		vol = mDriver->getDefaultSoundVolume();
-	}
-	else
-	{
-		vol = mDriver->getDefaultMusicVolume();
-	}
-	setVolume(vol);
-
-    setPriority(mPriority);
-    setPosition(mPosition);
-    setDirection(mDirection);
-	setVelocity(mVelocity); 
-    pause(false);
-    SoundPlayEvent event = SoundPlayEvent(this, SoundPlayEvent::STARTEVENT);
-    dispatchEvent(&event);
-}
-
-void Fmod4SoundStitching::stop()
-{
-    mChannel->stop();
-}
-
-void Fmod4SoundStitching::setPosition(const Ogre::Vector3& position)
-{
-	mPosition = position;
-
-	if (isValid())
-	{
-		FMOD_VECTOR pos;
-		pos.x = position.x;
-		pos.y = position.y;
-		pos.z = -position.z;
-		mChannel->set3DAttributes(&pos, NULL);
-	}
-}
-
-const Ogre::Vector3 Fmod4SoundStitching::getPosition() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR pos;
-		mChannel->get3DAttributes(&pos, NULL);
-
-		Vector3 rval;
-		rval.x = pos.x;
-		rval.y = pos.y;
-		rval.z = -pos.z;
-
-		return rval;
-	}
-
-	return mPosition;
-}
-
-const Ogre::Vector3 Fmod4SoundStitching::getVelocity() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR vel;
-		mChannel->get3DAttributes(NULL, &vel);
-
-		Vector3 rval;
-		rval.x = vel.x;
-		rval.y = vel.y;
-		rval.z = -vel.z;
-
-		return rval;
-	}
-
-	return mVelocity;
-}
-
-void Fmod4SoundStitching::setVelocity(const Ogre::Vector3& velocity)
-{
-	mVelocity = velocity;
-
-	if (isValid())
-	{
-		FMOD_VECTOR vel;
-		vel.x = velocity.x;
-		vel.y = velocity.y;
-		vel.z = -velocity.z;
-		mChannel->set3DAttributes(NULL, &vel);
-	}
-}
-
-void Fmod4SoundStitching::setDirection(const Ogre::Quaternion &orientation)
-{
-	mDirection = orientation;
-
-	if (isValid())
-	{
-		FMOD_VECTOR to;
-
-		Vector3 toVec = orientation * Vector3::NEGATIVE_UNIT_Z;
-		to.x = toVec.x;
-		to.y = toVec.y;
-		to.z = -toVec.z;
-
-		mChannel->set3DConeOrientation(&to);
-	}
-}
-
-const Ogre::Quaternion Fmod4SoundStitching::getDirection() const
-{
-	if (isValid())
-	{
-		FMOD_VECTOR to;
-		mChannel->get3DConeOrientation(&to);
-
-		Vector3 toVec;
-		toVec.x = to.x;
-		toVec.y = to.y;
-		toVec.z = -to.z;
-
-		return Vector3::NEGATIVE_UNIT_Z.getRotationTo(toVec);
-	}
-
-	return mDirection;
-}
-
-bool Fmod4SoundStitching::isPaused()
-{
-    bool paused;
-    FMOD_RESULT error = mChannel->getPaused(&paused);
-    return !paused;
-}
-
-const bool Fmod4SoundStitching::isPlaying() const
-{
-    bool playing;
-    FMOD_RESULT error = mChannel->isPlaying(&playing);
-    return playing;
-}
-
-void Fmod4SoundStitching::pause(bool pause)
-{
-    mChannel->setPaused(pause);
-}
-
-void Fmod4SoundStitching::setVolume(float vol)
-{
-	mVolume = vol;
-	if (isValid())
-	{
-	    mChannel->setVolume(vol);
-	}
-}
-
-const float Fmod4SoundStitching::getVolume() const
-{
-	if (isValid())
-	{
-		float vol;
-		mChannel->getVolume(&vol);
-		return vol;
-	}
-	return mVolume;
-}
-
-/**
- * @author JoSch
- * @date 14-03-2007
- * @version 1.0
- * @param priority The new priority of this sound
- */ 
-void Fmod4SoundStitching::setPriority(const int priority)
-{
-    mPriority = priority;
-    if (mPriority < 0)
-    {
-        mPriority = 0;
-    }
-    if (mPriority > 256)
-    {
-        mPriority = 256;
-    }
-    if (isValid())
-    {
-        mChannel->setPriority(mPriority);
-    }
-}
-
-/**
- * @author JoSch
- * @date 14-03-2007
- * @version 1.0
- * @return The new priority of this sound
- */ 
-const int Fmod4SoundStitching::getPriority() const
-{
-    int priority = mPriority;
-    if (isValid())
-    {
-        mChannel->getPriority(&priority);
-    }
-    return priority;
-}
-
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return The Fmod4 Channel object
- */ 
-FMOD::Channel *Fmod4SoundStitching::getFmodChannel() const
-{
-    return mChannel;
-}
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return The Fmod4 Sound object
- */ 
-FMOD::Sound *Fmod4SoundStitching::getFmodSound() const
-{
-    return mSound;
-}
-
-/**
- * @author JoSch
- * @date 15-03-2007
- * @version 1.0
- * @return TRUE, if the sound should autodestroy when playing ended.
- */ 
-bool Fmod4SoundStitching::isAutoDestroying() const
-{
-    return mAutoDestroy;
-}
-
-/**
- * @author JoSch
- * @date 08-03-2008
- * @version 1.0
- */ 
-void Fmod4SoundStitching::putSoundIntoSlot(unsigned int slot, CeGuiString label)
-{
-    if (isValid())
-    {
-        FMOD_MODE mode = FMOD_DEFAULT;
-
-        if (is3d())
-        {
-            mode |= FMOD_3D;
-        }
-        else
-        {
-            mode |= FMOD_2D;
-        }
-
-        if (isLooping())
-        {
-            mode |= FMOD_LOOP_NORMAL;
-        }
-        else
-        {
-            mode |= FMOD_LOOP_OFF;
-        }
-        FMOD::Sound *sound;
-        FMOD_RESULT result = mDriver->_getFmodSystem()->createStream(
-            mSoundCache[label]->getName().c_str(), 
-            mode, 
-            NULL, 
-            &sound);
-        CHECK_FMOD4_ERRORS(result);
-        if (mSoundSlots[slot] != NULL)
-        {
-            mSoundSlots[slot]->release();
-        }
-        mSoundSlots[slot] = sound;
-
-        result = sound->setSubSound(slot, sound);
-        CHECK_FMOD4_ERRORS(result);
-    }
-}
-
-/**
- * @author JoSch
- * @date 08-03-2008
- * @version 1.0
- * @return TRUE, if the sound should autodestroy when playing ended.
- */ 
-unsigned int Fmod4SoundStitching::getPlayingSlot()
-{
-    if (isValid())
-    {
-        unsigned int currentslot = -1;
-        FMOD_RESULT result = mChannel->getPosition(&currentslot, (FMOD_TIMEUNIT)(FMOD_TIMEUNIT_SENTENCE_SUBSOUND | FMOD_TIMEUNIT_BUFFERED));
-        CHECK_FMOD4_ERRORS(result);
-        return currentslot;
-    }
-    return -1;
-}
-
-} // Namespace

Copied: rl/branches/persistence/core/src/fmod4driver/Fmod4SoundStitching.cpp (from rev 4726, rl/trunk/engine/core/src/fmod4driver/Fmod4SoundStitching.cpp)

Modified: rl/branches/persistence/rules/CMakeLists.txt
===================================================================
--- rl/branches/persistence/rules/CMakeLists.txt	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/rules/CMakeLists.txt	2009-01-28 19:18:55 UTC (rev 4727)
@@ -80,7 +80,7 @@
 
 SET_TARGET_PROPERTIES(RlRules PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLRULES_EXPORTS)
 
-INSTALL(TARGETS RlRules LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlRules LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Modified: rl/branches/persistence/script/CMakeLists.txt
===================================================================
--- rl/branches/persistence/script/CMakeLists.txt	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/script/CMakeLists.txt	2009-01-28 19:18:55 UTC (rev 4727)
@@ -40,7 +40,7 @@
 
 SET_TARGET_PROPERTIES(RlScript PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLSCRIPT_EXPORTS)
 
 IF(NOT WIN32)
@@ -48,4 +48,4 @@
 		LINK_FLAGS "-Wl,--defsym -Wl,Init_libRlScript=Init_RlScript")
 ENDIF(NOT WIN32)
 
-INSTALL(TARGETS RlScript LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlScript LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Modified: rl/branches/persistence/ui/CMakeLists.txt
===================================================================
--- rl/branches/persistence/ui/CMakeLists.txt	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/ui/CMakeLists.txt	2009-01-28 19:18:55 UTC (rev 4727)
@@ -71,7 +71,7 @@
 
 SET_TARGET_PROPERTIES(RlUi PROPERTIES
 	VERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}.${RL_PATCH_VERSION}
-	SOVERSION ${RL_MAJOR_VERSION}
+	SOVERSION ${RL_MAJOR_VERSION}.${RL_MINOR_VERSION}
 	DEFINE_SYMBOL RLUI_EXPORTS)
 
-INSTALL(TARGETS RlUi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
\ No newline at end of file
+INSTALL(TARGETS RlUi LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

Copied: rl/branches/persistence/ui/include/Fmod4ConfigComponent.h (from rev 4726, rl/trunk/engine/ui/include/Fmod4ConfigComponent.h)

Modified: rl/branches/persistence/ui/include/RenderSystemConfigComponent.h
===================================================================
--- rl/branches/persistence/ui/include/RenderSystemConfigComponent.h	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/ui/include/RenderSystemConfigComponent.h	2009-01-28 19:18:55 UTC (rev 4727)
@@ -20,10 +20,13 @@
 #include "UiPrerequisites.h"
 #include "ConfigComponent.h"
 
+namespace Ogre
+{
+    class RenderSystem;
+}
+
 namespace rl
 {
-    class Ogre::RenderSystem;
-
     class _RlUiExport RenderSystemConfigComponent : public ConfigComponent
     {
     public:

Copied: rl/branches/persistence/ui/src/Fmod4ConfigComponent.cpp (from rev 4726, rl/trunk/engine/ui/src/Fmod4ConfigComponent.cpp)

Modified: rl/branches/persistence/ui/src/GameSettings.cpp
===================================================================
--- rl/branches/persistence/ui/src/GameSettings.cpp	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/ui/src/GameSettings.cpp	2009-01-28 19:18:55 UTC (rev 4727)
@@ -48,7 +48,7 @@
         {
             if ((*it)->isDriverPlugin())
             {
-                registerSoundDriverConfig((*it)->getConfigComponent());
+                //registerSoundDriverConfig((*it)->getConfigComponent());
             }
         }
 

Modified: rl/branches/persistence/ui/src/InputManager.cpp
===================================================================
--- rl/branches/persistence/ui/src/InputManager.cpp	2009-01-28 12:28:09 UTC (rev 4726)
+++ rl/branches/persistence/ui/src/InputManager.cpp	2009-01-28 19:18:55 UTC (rev 4727)
@@ -122,8 +122,8 @@
             pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL_EXCLUSIVE")));
             pl.insert(std::make_pair(std::string("w32_keyboard"), std::string("DISCL_FOREGROUND")));
         #elif OGRE_PLATFORM == OGRE_PLATFORM_LINUX & defined DEBUG
-//            pl.insert(std::make_pair(std::string("x11_mouse_grab"), std::string("false")));
-//            pl.insert(std::make_pair(std::string("x11_keyboard_grab"), std::string("false")));
+            pl.insert(std::make_pair(std::string("x11_mouse_grab"), std::string("false")));
+            pl.insert(std::make_pair(std::string("x11_keyboard_grab"), std::string("false")));
         #endif
 
         std::ostringstream windowHndStr;



From melven at mail.berlios.de  Fri Jan 30 23:13:38 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Fri, 30 Jan 2009 23:13:38 +0100
Subject: [Dsa-hl-svn] r4728 - in dependencies/OgreNewt_ngt: . inc src
Message-ID: <200901302213.n0UMDciL029937@sheep.berlios.de>

Author: melven
Date: 2009-01-30 23:13:30 +0100 (Fri, 30 Jan 2009)
New Revision: 4728

Added:
   dependencies/OgreNewt_ngt/inc/OgreNewt_BodyInAABBIterator.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_ContactJoint.h
   dependencies/OgreNewt_ngt/src/OgreNewt_ContactJoint.cpp
Removed:
   dependencies/OgreNewt_ngt/inc/OgreNewt_BodyIterator.h
   dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp
Modified:
   dependencies/OgreNewt_ngt/CMakeLists.txt
   dependencies/OgreNewt_ngt/inc/OgreNewt.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_BasicFrameListener.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_BasicJoints.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_Body.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionPrimitives.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionSerializer.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_ContactCallback.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_Debugger.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_Joint.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_MaterialID.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_MaterialPair.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_Prerequisites.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_Tools.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_Vehicle.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_World.h
   dependencies/OgreNewt_ngt/src/OgreNewt_BasicJoints.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_Body.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_Collision.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_CollisionSerializer.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_Debugger.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_Joint.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_MaterialID.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_MaterialPair.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_PlayerController.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_Tools.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_Vehicle.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_World.cpp
Log:
implemented lots of new features of newton 2.0, e.g. contacts can be processed more precisely etc
USE THE PREVIOUS REVISION OF OgreNewt, I still need to implement the changes in rastullah!
I didn't test the changes (but it should compile)


Modified: dependencies/OgreNewt_ngt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-30 22:13:30 UTC (rev 4728)
@@ -74,7 +74,7 @@
 src/OgreNewt_Collision.cpp
 src/OgreNewt_CollisionPrimitives.cpp
 src/OgreNewt_CollisionSerializer.cpp
-src/OgreNewt_ContactCallback.cpp
+src/OgreNewt_ContactJoint.cpp
 src/OgreNewt_Debugger.cpp
 src/OgreNewt_Joint.cpp
 src/OgreNewt_MaterialID.cpp
@@ -102,12 +102,13 @@
         ARCHIVE DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
 
 INSTALL(FILES inc/OgreNewt_BasicJoints.h
-inc/OgreNewt_Body.h inc/OgreNewt_BodyIterator.h inc/OgreNewt_Collision.h
+inc/OgreNewt_Body.h inc/OgreNewt_Collision.h
 inc/OgreNewt_CollisionPrimitives.h inc/OgreNewt_CollisionSerializer.h
 inc/OgreNewt_ContactCallback.h inc/OgreNewt_Debugger.h inc/OgreNewt.h
 inc/OgreNewt_Joint.h inc/OgreNewt_MaterialID.h inc/OgreNewt_MaterialPair.h
 inc/OgreNewt_Prerequisites.h inc/OgreNewt_RayCast.h inc/OgreNewt_Tools.h
 inc/OgreNewt_Vehicle.h inc/OgreNewt_World.h inc/OgreNewt_PlayerController.h
+inc/OgreNewt_ContactJoint.h inc/OgreNewt_BodyInAABBIterator.h
 DESTINATION ${CMAKE_INSTALL_PREFIX}/include/OgreNewt)
 
 IF(NOT WIN32)

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -24,17 +24,20 @@
 #include "OgreNewt_Collision.h"
 #include "OgreNewt_Body.h"
 #include "OgreNewt_CollisionPrimitives.h"
+#include "OgreNewt_CollisionSerializer.h"
 #include "OgreNewt_MaterialID.h"
 #include "OgreNewt_MaterialPair.h"
 #include "OgreNewt_ContactCallback.h"
+#include "OgreNewt_ContactJoint.h"
 #include "OgreNewt_Vehicle.h"
+#include "OgreNewt_PlayerController.h"
 #include "OgreNewt_RayCast.h"
 
 #include "OgreNewt_Joint.h"
 #include "OgreNewt_BasicJoints.h"
 
 #include "OgreNewt_Tools.h"
-#include "OgreNewt_BodyIterator.h"
+#include "OgreNewt_BodyInAABBIterator.h"
 #include "OgreNewt_Debugger.h"
 
 #include "OgreNewt_BasicFrameListener.h"

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_BasicFrameListener.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_BasicFrameListener.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_BasicFrameListener.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -20,10 +20,11 @@
 		NOTE: update_framerate must be a value between [60,600]
 */
 
-#pragma once
-#include <Ogre.h>
-#include <OgreNewt_World.h>
+#ifndef _INCLUDE_OGRENEWT_BASICFRAMELISTENER
+#define _INCLUDE_OGRENEWT_BASICFRAMELISTENER
 
+#include "OgreNewt_Prerequisites.h"
+
 // using OIS (an Ogre 1.4.x dependency) for input.
 #define OIS_DYNAMIC_LIB
 #include <OIS/OIS.h>
@@ -31,7 +32,9 @@
 namespace OgreNewt
 {
 
+class World;
 
+
 //! simple frame listener to update the physics.
 /*!
 	updates the Newton World at the specified rate, with time-slicing, and
@@ -62,3 +65,6 @@
 
 
 }	// end NAMESPACE OgreNewt
+
+#endif /* _INCLUDE_OGRENEWT_BASICFRAMELISTENER */
+

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_BasicJoints.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_BasicJoints.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_BasicJoints.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -11,9 +11,7 @@
 #ifndef _INCLUDE_OGRENEWT_BASICJOINTS
 #define _INCLUDE_OGRENEWT_BASICJOINTS
 
-#include <Newton.h>
-#include "OgreNewt_World.h"
-#include "OgreNewt_Body.h"
+#include "OgreNewt_Prerequisites.h"
 #include "OgreNewt_Joint.h"
 
 // OgreNewt namespace.  all functions and classes use this namespace.
@@ -33,6 +31,11 @@
 {
  
 public:
+	//! custom ballandsocket callback function.
+	/*!
+		 use the setCallback() function to assign your custom function to the joint.
+	 */
+	typedef void(*BallAndSocketCallback)( BallAndSocket* me, Ogre::Real timestep );
 
 	//! constructor
 	/*!
@@ -66,7 +69,16 @@
 	*/
 	void setLimits( const Ogre::Vector3& pin, Ogre::Radian maxCone, Ogre::Radian maxTwist ) const { NewtonBallSetConeLimits( m_joint, &pin.x, (float)maxCone.valueRadians(), (float)maxTwist.valueRadians() ); }
 
+    //! set callback function
+    void setCallback(BallAndSocketCallback *callback) {m_callback = callback;}
 
+
+protected:
+    BallAndSocketCallback *m_callback;
+
+private:
+    static void _CDECL newtonBallCallback(const NewtonJoint* ball, float timestep);
+    
 };
 
 

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Body.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Body.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Body.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -16,11 +16,7 @@
 #ifndef _INCLUDE_OGRENEWT_BODY
 #define _INCLUDE_OGRENEWT_BODY
 
-
-#include <Ogre.h>
-#include <Newton.h>
-#include "OgreNewt_World.h"
-#include "OgreNewt_Collision.h"
+#include "OgreNewt_Prerequisites.h"
 #include "OgreNewt_MaterialID.h"
 #include <boost/function.hpp>
 #include <boost/bind.hpp>
@@ -30,6 +26,10 @@
 namespace OgreNewt
 {
 
+class World;
+class MaterialID;
+class Collision;
+
 /*
 	CLASS DEFINITION:
 
@@ -372,7 +372,11 @@
 	}
 
 
+    //! use this function to iterate through all bodies
+    Body* getNext() const;
 
+
+
 	//! helper function that adds a force (and resulting torque) to an object in global cordinates.
 	/*!
 		this function is only valid inside a ForceCallback function!

Added: dependencies/OgreNewt_ngt/inc/OgreNewt_BodyInAABBIterator.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_BodyInAABBIterator.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_BodyInAABBIterator.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -0,0 +1,103 @@
+/* 
+	OgreNewt Library
+
+	Ogre implementation of Newton Game Dynamics SDK
+
+	OgreNewt basically has no license, you may use any or all of the library however you desire... I hope it can help you in any way.
+
+		by Walaber
+
+*/
+
+#ifndef _INCLUDE_OGRENEWT_BODYINAABBITERATOR
+#define _INCLUDE_OGRENEWT_BODYINAABBITERATOR
+
+
+#include "OgreNewt_Prerequisites.h"
+#include <boost/function.hpp>
+#include <boost/bind.hpp>
+
+// OgreNewt namespace.  all functions and classes use this namespace.
+namespace OgreNewt
+{
+
+class World;
+class Body;
+
+
+//! Iterate through all bodies in a specific AABB in the world.
+/*!
+	this class is an easy way to loop through all bodies in an AABB in the world, performing some kind of action.
+    if you want to iterate through all bodies, use the world->getFirstBody and body->getNext functions
+    warning: this class is not thread safe
+*/
+class _OgreNewtExport BodyInAABBIterator
+{
+public:
+	//! function to be called for all bodies
+	/*!
+		This function will be called for every body iterated.  you can put any functionality you might want inside this function.
+	*/
+	typedef boost::function<void(Body*)> IteratorCallback;
+
+	//! init the singleton class.
+	/*!
+		This function must be called before any iterator functions are called!
+		\param world pointer to the OgreNewt::World.  
+	*/
+	void Init( const OgreNewt::World* world ) { m_world = world; }
+
+	//! perform an iteration
+	/*!
+		will call the provided function for all bodies in the world.
+		\param callback pointer to a function to be used
+	*/
+	void go( const Ogre::AxisAlignedBox &aabb, IteratorCallback callback )
+	{
+		m_callback = callback;
+        NewtonWorldForEachBodyInAABBDo(m_world, &aabb.getMinimum().x, &aabb.getMaximum().x, newtonIterator);
+        
+	}
+	template <class c> void go( const Ogre::AxisAlignedBox &aabb, boost::function<void(c*, Body*)> callback, c* instancedClassPointer )
+	{
+		go ( aabb, boost::bind(callback, instancedClassPointer, _1) );
+	}
+
+	//! get the singleton.
+	/*!
+		The body iterator is a singleton class, only one instance should exist per application.  you can perform many different
+		kinds of iterations by using different callback functions.
+	*/
+	static BodyInAABBIterator& getSingleton()
+	{
+		static BodyInAABBIterator instance;
+		return instance;
+	}
+
+	//! destructor
+	~BodyInAABBIterator() {}
+
+protected:
+
+	BodyIterator()
+	{
+		m_world = NULL;
+		m_callback = NULL;
+	}
+
+	static void _CDECL newtonIterator( const NewtonBody* body )
+	{
+		OgreNewt::Body* bod = (OgreNewt::Body*)NewtonBodyGetUserData( body );
+		getSingleton().m_callback( bod );
+	}
+
+	const OgreNewt::World*			m_world;
+	IteratorCallback				m_callback;
+    
+};
+
+
+}	// end NAMESPACE OgreNewt
+
+#endif	// _INCLUDE_OGRENEWT_BODYINAABBITERATOR
+

Deleted: dependencies/OgreNewt_ngt/inc/OgreNewt_BodyIterator.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_BodyIterator.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_BodyIterator.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,102 +0,0 @@
-/* 
-	OgreNewt Library
-
-	Ogre implementation of Newton Game Dynamics SDK
-
-	OgreNewt basically has no license, you may use any or all of the library however you desire... I hope it can help you in any way.
-
-		by Walaber
-
-*/
-
-#ifndef _INCLUDE_OGRENEWT_BODYITERATOR
-#define _INCLUDE_OGRENEWT_BODYITERATOR
-
-#include <Newton.h>
-
-#include "OgreNewt_World.h"
-#include "OgreNewt_Body.h"
-
-#include <boost/function.hpp>
-#include <boost/bind.hpp>
-
-// OgreNewt namespace.  all functions and classes use this namespace.
-namespace OgreNewt
-{
-
-
-//! Iterate through all bodies in the world.
-/*!
-	this class is an easy way to loop through all bodies in the world, performing some kind of action.
-*/
-class _OgreNewtExport BodyIterator
-{
-public:
-	//! function to be called for all bodies
-	/*!
-		This function will be called for every body iterated.  you can put any functionality you might want inside this function.
-	*/
-	typedef boost::function<void(Body*)> IteratorCallback;
-
-	//! init the singleton class.
-	/*!
-		This function must be called before any iterator functions are called!
-		\param world pointer to the OgreNewt::World.  
-	*/
-	void Init( const OgreNewt::World* world ) { m_world = world; }
-
-	//! perform an iteration
-	/*!
-		will call the provided function for all bodies in the world.
-		\param callback pointer to a function to be used
-	*/
-	void go( IteratorCallback callback )
-	{
-		m_callback = callback;
-                for( const NewtonBody* body = NewtonWorldGetFirstBody(m_world->getNewtonWorld()); body; NewtonWorldGetNextBody(m_world->getNewtonWorld(), body) )
-                    newtonIterator(body);
-	}
-	template <class c> void go( boost::function<void(c*, Body*)> callback, c* instancedClassPointer )
-	{
-		go ( boost::bind(callback, instancedClassPointer, _1) );
-	}
-
-	//! get the singleton.
-	/*!
-		The body iterator is a singleton class, only one instance should exist per application.  you can perform many different
-		kinds of iterations by using different callback functions.
-	*/
-	static BodyIterator& getSingleton()
-	{
-		static BodyIterator instance;
-		return instance;
-	}
-
-	//! destructor
-	~BodyIterator() {}
-
-protected:
-
-	BodyIterator()
-	{
-		m_world = NULL;
-		m_callback = NULL;
-	}
-
-	static void newtonIterator( const NewtonBody* body )
-	{
-		OgreNewt::Body* bod = (OgreNewt::Body*)NewtonBodyGetUserData( body );
-
-		getSingleton().m_callback( bod );
-	}
-
-	const OgreNewt::World*			m_world;
-	IteratorCallback				m_callback;
-    
-};
-
-
-}	// end NAMESPACE OgreNewt
-
-#endif	// _INCLUDE_OGRENEWT_BODYITERATOR
-

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -11,13 +11,16 @@
 #ifndef _INCLUDE_OGRENEWT_COLLISION
 #define _INCLUDE_OGRENEWT_COLLISION
 
-#include <Newton.h>
+
+#include "OgreNewt_Prerequisites.h"
 #include "OgreNewt_World.h"
 
 // OgreNewt namespace.  all functions and classes use this namespace.
 namespace OgreNewt
 {
 
+class World;
+
 /*
 	CLASS DEFINITION:
 

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionPrimitives.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionPrimitives.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionPrimitives.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -11,8 +11,8 @@
 #ifndef _INCLUDE_OGRENEWT_COLLISIONPRIMITIVES
 #define _INCLUDE_OGRENEWT_COLLISIONPRIMITIVES
 
-#include <Newton.h>
-#include "OgreNewt_World.h"
+
+#include "OgreNewt_Prerequisites.h"
 #include "OgreNewt_Collision.h"
 
 

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionSerializer.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionSerializer.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_CollisionSerializer.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -11,8 +11,8 @@
 #ifndef _INCLUDE_OGRENEWT_COLLISIONSERIALIZER
 #define _INCLUDE_OGRENEWT_COLLISIONSERIALIZER
 
-#include <Newton.h>
-#include "OgreNewt_World.h"
+
+#include "OgreNewt_Prerequisites.h"
 #include "OgreSerializer.h"
 #include "OgreString.h"
 
@@ -46,6 +46,7 @@
     */
     void importCollision(Ogre::DataStreamPtr& stream, Collision* pDest);
 
+  private:
     /*!
     Callback function for Newton. It should never be called directly, but will be called by Newton to save the Collision to a stream.
     (Newton calls this function several times for each serialization, once for each chunk of its file format apparently)

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_ContactCallback.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_ContactCallback.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_ContactCallback.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -11,13 +11,15 @@
 #ifndef _INCLUDE_OGRENEWT_CONTACTCALLBACK
 #define _INCLUDE_OGRENEWT_CONTACTCALLBACK
 
-#include <Newton.h>
-#include "OgreNewt_Body.h"
 
+#include "OgreNewt_Prerequisites.h"
+#include "OgreNewt_ContactJoint.h"
+
 // OgreNewt namespace.  all functions and classes use this namespace.
 namespace OgreNewt
 {
 
+class Body;
 
 //! custom contact behavior
 /*!
@@ -35,105 +37,21 @@
 	//! destructor
 	virtual ~ContactCallback();
 
-	// basic contact control commands...
-
-	//! disable the current contact.
-	//void disableContact() const { NewtonMaterialDisableContact( m_material ); }
-
-
-	//! get the face ID of a TreeCollision object
-	unsigned getContactFaceAttribute() const { return NewtonMaterialGetContactFaceAttribute( m_material ); }
-
-	//! get the Collision ID of a body currently colliding
-	unsigned getBodyCollisionID( OgreNewt::Body* body ) const { return NewtonMaterialGetBodyCollisionID( m_material, body->getNewtonBody() ); }
-
-	//! speed of the collision
-	Ogre::Real getContactNormalSpeed() const { return (Ogre::Real)NewtonMaterialGetContactNormalSpeed( m_material ); }
-
-	//! force of the collision
+	//! user-defined AABB-overlap function
 	/*!
-		only valid for objects in a stable state (sitting on top of each other, etc)
-	*/
-	Ogre::Vector3 getContactForce() const;
-
-	//! get positoin and normal of the collision
-	void getContactPositionAndNormal( Ogre::Vector3& pos, Ogre::Vector3& norm ) const;
-
-	//! get the tangent vectors of the collision
-	void getContactTangentDirections( Ogre::Vector3& dir0, Ogre::Vector3& dir1 ) const;
-
-	//! get tangent speed of the collision
-	Ogre::Real getContactTangentSpeed( int index ) const { return (Ogre::Real)NewtonMaterialGetContactTangentSpeed( m_material, index ); }
-
-	//! set softness of the current contact
-	void setContactSoftness( Ogre::Real softness ) const { NewtonMaterialSetContactSoftness( m_material, (float)softness ); }
-
-	//! set elasticity of the current contact
-	void setContactElasticity( Ogre::Real elasticity ) const { NewtonMaterialSetContactElasticity( m_material, (float)elasticity ); }
-
-	//! set friction state of current contact
-	void setContactFrictionState( int state, int index ) const { NewtonMaterialSetContactFrictionState( m_material, state, index ); }
-
-	//! set static friction for current contact
-	void setContactFrictionCoef( Ogre::Real stat, Ogre::Real kinetic, int index ) const { NewtonMaterialSetContactFrictionCoef( m_material, (float)stat, (float)kinetic, index ); }
-
-	//! set tangent acceleration for contact
-	void setContactTangentAcceleration( Ogre::Real accel, int index ) const { NewtonMaterialSetContactTangentAcceleration( m_material, (float)accel, index ); }
-
-	//! align tangent vectors with a user supplied direction
-	void rotateTangentDirections( const Ogre::Vector3& dir ) const { NewtonMaterialContactRotateTangentDirections( m_material, &dir.x ); }
-
-	//! manually set the normal for the collision.
-	void setContactNormalDirection( const Ogre::Vector3& dir ) const { NewtonMaterialSetContactNormalDirection( m_material, &dir.x ); }
-
-	//! manually set the acceleration along the collision normal.
-	void setContactNormalAcceleration( Ogre::Real accel ) const { NewtonMaterialSetContactNormalAcceleration( m_material, accel ); }
-
-
-
-	// user-defined callback function.
-	
-	//! user defined Begin function
-	/*!
 		this function is called when 2 bodies AABB overlap.  they have not yet collided, but *may* do so this loop.
 		at this point, m_body0 and m_body1 are defined, but the contact isn't yet valid, so none of the member functions
-		can be called yet.  they must be called from the userProcess() function.
+		can be called yet.  they must be called from the contacsProcess() function.
 		return 0 to ignore the collision, 1 to allow it.
 	*/
-	virtual int onAABBOverlap( int threadIndex ) { return 1; }
+	virtual int onAABBOverlap( OgreNewt::Body* body0, OgreNewt::Body* body1, int threadIndex ) { return 1; }
 
 	//! user-defined Process function
 	/*!
-		user process function.  is called for each contact between the 2 bodies.  all member functions are valid from
-		within this function, and will affect the current contact.  return 0 to ignore the collision, 1 to allow it.
+		user process function.  it is called for each colliding pair of bodies. you can use
+        the ContactJoint to iterate through all contact-points and change the "material" of each contact-point!
 	 */
-	virtual int contactProcess( Ogre::Real timeStep, int threadIndex ) { return 1; }
-
-	//! user-defined End function
-	/*!
-		called after all contacts between the 2 bodies have been processed. no member functions should be called from within this
-		function either, as all contacts have been processed at this point.
-	*/
-	//virtual void userEnd( int threadIndex ) {  } // doesn't exist any more!
-
-	//! get the NewtonMaterial from this callback.
-	NewtonMaterial* _getNewtonMaterial() { return m_material; }
-
-
-	//! internal function.
-	static int _CDECL onAABBOverlap( const NewtonMaterial* material, const NewtonBody* body0, const NewtonBody* body1, int threadIndex );
-	//! internal function.
-	static void _CDECL contactProcess(const NewtonJoint* contact, float timeStep, int threadIndex );
-	//! internal function.
-	//static void _CDECL contactEnd( const NewtonMaterial* material, const NewtonBody* body0, const NewtonBody* body1, int threadIndex );
-
-
-protected:
-
-	NewtonMaterial* m_material;
-
-	OgreNewt::Body* m_body0;
-	OgreNewt::Body* m_body1;
+	virtual void contactsProcess( OgreNewt::ContactJoint contactJoint, Ogre::Real timeStep, int threadIndex ) { }
 };
 
 

Added: dependencies/OgreNewt_ngt/inc/OgreNewt_ContactJoint.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_ContactJoint.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_ContactJoint.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -0,0 +1,170 @@
+/* 
+	OgreNewt Library
+
+	Ogre implementation of Newton Game Dynamics SDK
+
+	OgreNewt basically has no license, you may use any or all of the library however you desire... I hope it can help you in any way.
+
+		by melven
+
+*/
+#ifndef _INCLUDE_OGRENEWT_CONTACTJOINT
+#define _INCLUDE_OGRENEWT_CONTACTJOINT
+
+
+#include "OgreNewt_Prerequisites.h"
+#include "OgreNewt_Body.h"
+
+// OgreNewt namespace.  all functions and classes use this namespace.
+namespace OgreNewt
+{
+
+class ContactJoint;
+class Contact;
+class MaterialPair;
+
+//! with this class you can iterate through all contacts
+/*!
+    this class must not be inherited or instantiated directly in any way, 
+    it is passed as argument in the contacsProcess-function of the ContactCallback!
+    for iterating through all contacts you can do something like this:
+    for(Contact contact = contactJoint.getFirstContact(); contact; contact.getNext())
+        ...
+*/
+class _OgreNewtExport ContactJoint
+{
+public:
+
+    //! constructor
+    ContactJoint(const NewtonJoint* contactJoint);
+
+    //! destructor
+    ~ContactJoint();
+
+    //! return the number of contacts
+    int getContactCount() const { return NewtonContactJointGetContactCount( m_contactjoint ); }
+
+    //! get the first contact
+    Contact getFirstContact();
+
+    //! get the first body
+    OgreNewt::Body* getBody0() { return (OgreNewt::Body*) NewtonBodyGetUserData(NewtonJointGetBody0(m_contactjoint)); }
+
+    //! get the second body
+    OgreNewt::Body* getBody1() { return (OgreNewt::Body*) NewtonBodyGetUserData(NewtonJointGetBody1(m_contactjoint)); }
+
+    //! get the newton ContactJoint
+    const NewtonJoint* _getNewtonContactJoint() { return m_contactjoint; }
+
+    //! get the MaterialPair with the basis material of this contact-joint
+    /*!
+        you shouldn't need to call this function, it's only used internally
+    */
+    MaterialPair* getMaterialPair();
+
+protected:
+    const NewtonJoint* m_contactjoint;
+};
+
+
+
+//! with the methods from this class you can set the behavior of each contac-point
+/*!
+	this class is for creating custom behavior between material GroupIDs.
+    this class must not be inherited or instantiated directly in any way,
+    you can obtain an object of this class in the contact-callback
+    from the contactJoint and iterate through all contacts using the 
+    getNext-function
+*/
+class _OgreNewtExport Contact
+{
+public:
+
+	//! constructor
+	Contact(void *contact, ContactJoint* parent);
+
+	//! destructor
+	~Contact();
+
+    //! return true, if this is not a valid contact (end of the contact-list!)
+    bool operator! () const { return m_contact != NULL; }
+
+    //! get the next contact from the parent contact-joint
+    Contact getNext() const;
+
+	// basic contact control commands... they can only be used, if this is a valid contact ( !contact == false )
+
+    //! get the first body
+    OgreNewt::Body* getBody0() const { return (OgreNewt::Body*) NewtonBodyGetUserData( NewtonJointGetBody0( m_parent->_getNewtonContactJoint() ) ); }
+    OgreNewt::Body* getBody1() const { return (OgreNewt::Body*) NewtonBodyGetUserData( NewtonJointGetBody1( m_parent->_getNewtonContactJoint() ) ); }
+
+	//! get the face ID of a TreeCollision object
+	unsigned getContactFaceAttribute() const { return NewtonMaterialGetContactFaceAttribute( m_material ); }
+
+	//! get the Collision ID of a body currently colliding
+	unsigned getBodyCollisionID( OgreNewt::Body* body ) const { return NewtonMaterialGetBodyCollisionID( m_material, body->getNewtonBody() ); }
+
+	//! speed of the collision
+	Ogre::Real getContactNormalSpeed() const { return (Ogre::Real)NewtonMaterialGetContactNormalSpeed( m_material ); }
+
+	//! force of the collision
+	/*!
+		only valid for objects in a stable state (sitting on top of each other, etc)
+	*/
+	Ogre::Vector3 getContactForce() const;
+
+	//! get positoin and normal of the collision
+	void getContactPositionAndNormal( Ogre::Vector3& pos, Ogre::Vector3& norm ) const { NewtonMaterialGetContactPositionAndNormal(m_material, &pos.x, &norm.x); }
+
+	//! get the tangent vectors of the collision
+	void getContactTangentDirections( Ogre::Vector3& dir0, Ogre::Vector3& dir1 ) const { NewtonMaterialGetContactTangentDirections(m_material, &dir0.x, &dir1.x); }
+
+	//! get tangent speed of the collision
+	Ogre::Real getContactTangentSpeed( int index ) const { return (Ogre::Real)NewtonMaterialGetContactTangentSpeed( m_material, index ); }
+
+	//! set softness of the current contact
+	void setContactSoftness( Ogre::Real softness ) { NewtonMaterialSetContactSoftness( m_material, (float)softness ); }
+
+	//! set elasticity of the current contact
+	void setContactElasticity( Ogre::Real elasticity ) { NewtonMaterialSetContactElasticity( m_material, (float)elasticity ); }
+
+	//! set friction state of current contact
+	void setContactFrictionState( int state, int index ) { NewtonMaterialSetContactFrictionState( m_material, state, index ); }
+
+	//! set static friction for current contact
+	void setContactFrictionCoef( Ogre::Real stat, Ogre::Real kinetic, int index ) { NewtonMaterialSetContactFrictionCoef( m_material, (float)stat, (float)kinetic, index ); }
+
+	//! set tangent acceleration for contact
+	void setContactTangentAcceleration( Ogre::Real accel, int index ) { NewtonMaterialSetContactTangentAcceleration( m_material, (float)accel, index ); }
+
+	//! align tangent vectors with a user supplied direction
+	void rotateTangentDirections( const Ogre::Vector3& dir ) { NewtonMaterialContactRotateTangentDirections( m_material, &dir.x ); }
+
+	//! manually set the normal for the collision.
+	void setContactNormalDirection( const Ogre::Vector3& dir ) { NewtonMaterialSetContactNormalDirection( m_material, &dir.x ); }
+
+	//! manually set the acceleration along the collision normal.
+	void setContactNormalAcceleration( Ogre::Real accel ) { NewtonMaterialSetContactNormalAcceleration( m_material, accel ); }
+
+    //! removes the contact from the parent contact-joint, this means newton doesn't process this contact
+    /*!
+        use this function, when you want to ignore this specific contact, but you need to get the next contact before,
+        because this will invalidate this class (set all pointers to zero!)
+    */
+    void remove();
+
+	//! get the NewtonMaterial from this callback.
+	NewtonMaterial* _getNewtonMaterial() { return m_material; }
+
+protected:
+    NewtonMaterial* m_material;
+    void* m_contact;
+    OgreNewt::ContactJoint* m_parent;
+};
+
+
+}	// end NAMESPACE OgreNewt
+
+#endif
+// _INCLUDE_OGRENEWT_CONTACTJOINT
+

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Debugger.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Debugger.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Debugger.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -12,15 +12,17 @@
 #define _INCLUDE_OGRENEWT_DEBUGGER
 
 
-#include <Ogre.h>
-#include <Newton.h>
-#include "OgreNewt_World.h"
-#include "OgreNewt_Body.h"
+#include "OgreNewt_Prerequisites.h"
 #include "OgreNewt_Tools.h"
 
 namespace OgreNewt
 {
 
+    class World;
+    class Body;
+    class MaterialID;
+    class Collision;
+
 	//! For viewing the Newton rigid bodies visually.
 	/*!
 		This class implements a debug view of the Newton world.  it is a Singleton!
@@ -91,7 +93,7 @@
 	protected:
 		Debugger();
 	
-	private:
+	protected:
 		Ogre::SceneNode*		m_debugnode;
         typedef std::map<int, Ogre::ColourValue> MaterialIdColorMap;
         MaterialIdColorMap      m_materialcolors;
@@ -115,8 +117,11 @@
         typedef std::map<OgreNewt::Body*, BodyDebugData> BodyDebugDataMap;
         BodyDebugDataMap m_cachemap;
 
+        // create debug information for one body
+        void processBody(Body* body);
 
-		static void newtonPerBody( const NewtonBody* body );
+
+    private:
 		static void _CDECL newtonPerPoly( void* userData, int vertexCount, const float* faceVertec, int id );
 	};
 

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Joint.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Joint.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Joint.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -11,14 +11,17 @@
 #ifndef _INCLUDE_OGRENEWT_JOINT
 #define _INCLUDE_OGRENEWT_JOINT
 
-#include <Newton.h>
-#include "OgreNewt_World.h"
-#include "OgreNewt_Body.h"
 
+#include "OgreNewt_Prerequisites.h"
+
+
 // OgreNewt namespace.  all functions and classes use this namespace.
 namespace OgreNewt
 {
 
+class World;
+class Body;
+
 //! base class for all joints.
 /*!
 	this class is inherited by all other specific joint types.
@@ -158,6 +161,7 @@
 	const OgreNewt::Body* m_body0;
 	const OgreNewt::Body* m_body1;
 
+private:
 	//! newton callback.  used internally.
 	static void _CDECL newtonSubmitConstraint( const NewtonJoint* me, float timeStep, int threadIndex );
 	static void _CDECL newtonGetInfo( const NewtonJoint* me, NewtonJointRecord* info );

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_MaterialID.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_MaterialID.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_MaterialID.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -11,14 +11,14 @@
 #ifndef _INCLUDE_OGRENEWT_MATERIALID
 #define _INCLUDE_OGRENEWT_MATERIALID
 
-#include <Newton.h>
-#include "OgreNewt_World.h"
 
+#include "OgreNewt_Prerequisites.h"
+
 // OgreNewt namespace.  all functions and classes use this namespace.
 namespace OgreNewt
 {
 
-	class World;
+class World;
 
 //! represents a material
 class _OgreNewtExport MaterialID

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_MaterialPair.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_MaterialPair.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_MaterialPair.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -11,7 +11,8 @@
 #ifndef _INCLUDE_OGRENEWT_MATERIALPAIR
 #define _INCLUDE_OGRENEWT_MATERIALPAIR
 
-#include <Newton.h>
+
+#include "OgreNewt_Prerequisites.h"
 #include "OgreNewt_World.h"
 #include "OgreNewt_ContactCallback.h"
 #include "OgreNewt_MaterialID.h"
@@ -76,13 +77,19 @@
 	void setContactCallback( OgreNewt::ContactCallback* callback );
 
 
-
 protected:
-
 	const MaterialID*	id0;
 	const MaterialID*	id1;
 	const World*		m_world;
+    OgreNewt::ContactCallback *m_contactcallback;
 
+private:
+	//! internal function.
+	static int _CDECL collisionCallback_onAABBOverlap( const NewtonMaterial* material, const NewtonBody* body0, const NewtonBody* body1, int threadIndex );
+	//! internal function.
+	static void _CDECL collisionCallback_contactsProcess(const NewtonJoint* contact, float timeStep, int threadIndex );
+
+
 };
 
 

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_PlayerController.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -11,15 +11,19 @@
 #ifndef _INCLUDE_OGRENEWT_PLAYERCONTROLLER
 #define _INCLUDE_OGRENEWT_PLAYERCONTROLLER
 
-#include <Newton.h>
+
+#include "OgreNewt_Prerequisites.h"
 #include "OgreNewt_Joint.h"
-#include "OgreNewt_Collision.h"
 #include "OgreNewt_RayCast.h"
+#include "OgreNewt_Body.h"
 
 
 namespace OgreNewt
 {
 
+class Collision;
+class ConvexCollision;
+
 //! PlayerController
 /*!
     this class implements a player-controller based on the code of the CustomPlayerController-class in the Newton-CustomJoints library
@@ -35,7 +39,7 @@
     OgreNewt::Body* getControlledBody() const {return m_body;}
 
     //! set the characters velocity, the -Speed-values can be negative, sideSpeed positiv means move to the right, heading is in absolute space
-    void setVelocity(Ogre::Real forwardSpeed, Ogre::Real sideSpeed, Ogre::Radian heading);
+    void setVelocity(Ogre::Real forwardSpeed, Ogre::Real sideSpeed, Ogre::Degree heading);
 
     //! get currently set velocity
     void getVelocity(Ogre::Real &forwardSpeed, Ogre::Real& sideSpeed, Ogre::Radian& heading) const;
@@ -58,12 +62,12 @@
     //! get currently set restitution
     Ogre::Real getRestitution() const;
 
-    //! set up-vector pin
-    void setPinVector(Ogre::Vector3 upVector);
+    // not supported yet
+    // set up-vector pin
+    //void setPinVector(Ogre::Vector3 upVector);
+    // get currently set up-vector pin
+    //Ogre::Vector3 getPinVector() const;
 
-    //! get currently set up-vector pin
-    Ogre::Vector3 getPinVector() const;
-
     //! is the body currently in the air (jumpin?)
     bool isInJumpState() const;
 

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Prerequisites.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Prerequisites.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Prerequisites.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -14,6 +14,7 @@
 #define __INCLUDE_OGRENEWT_PREREQ__
 
 #include <Ogre.h>
+#include <Newton.h>
 
 #if OGRE_PLATFORM == OGRE_PLATFORM_WIN32
 #   define _CDECL _cdecl

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_RayCast.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -13,16 +13,16 @@
 #define _INCLUDE_OGRENEWT_RAYCAST
 
 
-#include <Ogre.h>
-#include <Newton.h>
-#include "OgreNewt_World.h"
-#include "OgreNewt_Body.h"
+#include "OgreNewt_Prerequisites.h"
 
-
 // OgreNewt namespace.  all functions and classes use this namespace.
 namespace OgreNewt
 {
 
+class World;
+class Body;
+class Collision;
+
 //! general raycast
 /*!
 	General class representing a raycast query in the Newton world.  this class should be inherited to create specific raycast behavior.

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Tools.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Tools.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Tools.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -12,15 +12,14 @@
 #define _INCLUDE_OGRENEWT_TOOLS
 
 
-#include <Ogre.h>
+#include "OgreNewt_Prerequisites.h"
 #include <OgreMovableObject.h>
 #include <OgreRenderable.h>
-#include <Newton.h>
-#include "OgreNewt_World.h"
-#include "OgreNewt_Collision.h"
 
 namespace OgreNewt
 {
+    class World;
+    class Collision;
 
 	//! set of handy convertors.
 	namespace Converters

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Vehicle.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Vehicle.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Vehicle.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -11,13 +11,14 @@
 #ifndef _INCLUDE_OGRENEWT_VEHICLE
 #define _INCLUDE_OGRENEWT_VEHICLE
 
-#include <Newton.h>
-#include "OgreNewt_Body.h"
+
+#include "OgreNewt_Prerequisites.h"
 #include "OgreNewt_Joint.h"
-#include "OgreNewt_World.h"
 
 namespace OgreNewt
 {
+    class Body;
+    class World;
 #ifdef INCLUDE_VEHICLE
 //! Represents a wheeled vehicle
 /*!

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_World.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_World.h	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_World.h	2009-01-30 22:13:30 UTC (rev 4728)
@@ -10,10 +10,8 @@
 #ifndef _INCLUDE_OGRENEWT_WORLD
 #define _INCLUDE_OGRENEWT_WORLD
 
-#include <Newton.h>
-#include <Ogre.h>
+
 #include "OgreNewt_Prerequisites.h"
-#include "OgreNewt_MaterialID.h"
 #include <boost/function.hpp>
 #include <boost/bind.hpp>
 
@@ -25,9 +23,10 @@
 {
 
 
+class Body;
 class MaterialID;
-class Body;
 
+
 //! represents a physics world.
 /*!
 	this class represents a NewtonWorld, which is the basic space in which physics elements can exist.  It can have various Rigid Bodies, connected by joints, and other constraints.
@@ -137,6 +136,9 @@
 	*/
 	int getBodyCount() const { return NewtonWorldGetBodyCount( m_world ); }
 
+    //! get the number of constaints in the simulation
+    int getConstraintCount() const {return NewtonWorldGetConstraintCount( m_world ); }
+
 	//! multithread settings
 	void setMultithreadSolverOnSingleIsland( int mode ) { NewtonSetMultiThreadSolverOnSingleIsland( m_world, mode ); }
 
@@ -181,7 +183,16 @@
 		setLeaveWorldCallback( boost::bind(callback, instancedClassPointer, _1, _2) );
 	}
 
+    //! to iterate through all bodies call this function and then use body->getNext()
+    Body* getFirstBody();
 
+    /*
+    //! to iterate through all material-pairs use this function and then call matPair->getNext()
+    MaterialGroupID* getFirstMaterialGroupID();
+    */
+
+
+
 protected:
 	
 	NewtonWorld* m_world;

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_BasicJoints.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_BasicJoints.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_BasicJoints.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,7 +1,6 @@
-#include <Newton.h>
-#include <OgreNewt_BasicJoints.h>
-#include <OgreNewt_World.h>
-#include <OgreNewt_Body.h>
+#include "OgreNewt_BasicJoints.h"
+#include "OgreNewt_World.h"
+#include "OgreNewt_Body.h"
 
 namespace OgreNewt
 {
@@ -22,7 +21,8 @@
 	// all constructors inherited from Joint MUST call these 2 functions to make the joint function properly.
 	NewtonJointSetUserData( m_joint, this );
 	NewtonJointSetDestructor( m_joint, destructor );
-										
+
+    m_callback = NULL;
 }
 
 BallAndSocket::~BallAndSocket()
@@ -60,7 +60,14 @@
 }
 
 
+void _CDECL BallAndSocket::newtonBallCallback(const NewtonJoint* ball, float timestep)
+{
+    BallAndSocket* me = (BallAndSocket*)NewtonJointGetUserData(ball);
+    if( me->m_callback != NULL )
+        ( *me->m_callback )(me, timestep);
+}
 
+
 ///////////////////////////////////////////////////////////////////////////////////////////////
 ///////////////////////////////////////////////////////////////////////////////////////////////
 

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_Body.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_Body.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_Body.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,4 +1,6 @@
 #include "OgreNewt_Body.h"
+#include "OgreNewt_World.h"
+#include "OgreNewt_Collision.h"
 #include "OgreNewt_Tools.h"
 
 
@@ -359,7 +361,16 @@
 	addGlobalForce( globalforce, globalpoint );
 }
 
+Body* Body::getNext() const
+{
+    NewtonBody* body = NewtonWorldGetNextBody( m_world->getNewtonWorld(), m_body );
+    if( body )
+        return (Body*) NewtonBodyGetUserData(body);
 
+    return NULL;
+}
+
+
 // --------------------------------------------------------------------------------------
 
 

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_Collision.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_Collision.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_Collision.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,7 +1,5 @@
-#include <Ogre.h>
-#include <OgreNewt_Collision.h>
-#include <OgreNewt_World.h>
-#include <OgreNewt_Tools.h>
+#include "OgreNewt_Collision.h"
+#include "OgreNewt_Tools.h"
 
 
 namespace OgreNewt

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_CollisionPrimitives.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,5 +1,5 @@
-#include <OgreNewt_CollisionPrimitives.h>
-#include <OgreNewt_Tools.h>
+#include "OgreNewt_CollisionPrimitives.h"
+#include "OgreNewt_Tools.h"
 
 #include "Ogre.h"
 

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_CollisionSerializer.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_CollisionSerializer.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_CollisionSerializer.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,5 +1,5 @@
-#include <OgreNewt_CollisionSerializer.h>
-#include <OgreNewt_Collision.h>
+#include "OgreNewt_CollisionSerializer.h"
+#include "OgreNewt_Collision.h"
 
 #include "Ogre.h"
 

Deleted: dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,109 +0,0 @@
-#include <OgreNewt_ContactCallback.h>
-#include <OgreNewt_Body.h>
-
-
-namespace OgreNewt
-{
-
-	
-ContactCallback::ContactCallback()
-{
-
-}
-
-ContactCallback::~ContactCallback()
-{
-}
-
-int _CDECL ContactCallback::onAABBOverlap( const NewtonMaterial* material, const NewtonBody* body0, const NewtonBody* body1, int threadIndex )
-{
-	ContactCallback* me;
-
-	me = (ContactCallback*)NewtonMaterialGetMaterialPairUserData( material );
-
-	me->m_material = (NewtonMaterial*)material;
-
-	//save the bodies...
-	me->m_body0 = (OgreNewt::Body*)NewtonBodyGetUserData( body0 );
-	me->m_body1 = (OgreNewt::Body*)NewtonBodyGetUserData( body1 );
-
-	return me->onAABBOverlap( threadIndex );
-}
-
-void _CDECL ContactCallback::contactProcess(const NewtonJoint *contactJoint, float timeStep, int threadIndex )
-{
-/*    // pruefe ob nur TriggerVolume - funktioniert mit aktuellem newton noch nicht
-    if( NewtonCollisionIsTriggerVolume(NewtonBodyGetCollision(NewtonJointGetBody1(contactJoint))) ||
-        NewtonCollisionIsTriggerVolume(NewtonBodyGetCollision(NewtonJointGetBody1(contactJoint))) )
-    {
-	    ContactCallback *me = (ContactCallback*)NewtonJointGetUserData(contactJoint);
-        me->m_material = NULL;
-        me->m_body0 = (OgreNewt::Body*)NewtonBodyGetUserData( NewtonJointGetBody0(contactJoint) );
-    	me->m_body1 = (OgreNewt::Body*)NewtonBodyGetUserData( NewtonJointGetBody1(contactJoint) );
-        me->contactProcess( (Ogre::Real)timeStep, threadIndex );
-
-        return;
-    }
-*/
-bool test = false;
-        for (void* contact = NewtonContactJointGetFirstContact (contactJoint); contact; contact = NewtonContactJointGetNextContact (contactJoint, contact))
-        {
-	        ContactCallback *me;
-                NewtonMaterial* material = NewtonContactGetMaterial(contact);
-
-                me = (ContactCallback*)NewtonMaterialGetMaterialPairUserData( material );
-
-                me->m_material = material;
-                me->m_body0 = (OgreNewt::Body*)NewtonBodyGetUserData( NewtonJointGetBody0(contactJoint) );
-	        me->m_body1 = (OgreNewt::Body*)NewtonBodyGetUserData( NewtonJointGetBody1(contactJoint) );
-
-	        // call the user-defined callback function!
-	        if( !me->contactProcess( (Ogre::Real)timeStep, threadIndex ) )
-                {
-                    NewtonContactJointRemoveContact(contactJoint, contact);
-                }
-        }
-}
-
-/*
-void _CDECL ContactCallback::contactEnd( const NewtonMaterial* material, const NewtonBody* body0, const NewtonBody* body1, int threadIndex )
-{
-	ContactCallback* me;
-
-	me = (ContactCallback*)NewtonMaterialGetMaterialPairUserData( material );
-
-	me->m_material = (NewtonMaterial*)material;
-	me->m_body0 = (OgreNewt::Body*)NewtonBodyGetUserData( body0 );
-	me->m_body1 = (OgreNewt::Body*)NewtonBodyGetUserData( body1 );
-
-	me->userEnd( threadIndex );
-}
-*/
-
-
-
-
-Ogre::Vector3 ContactCallback::getContactForce() const 
-{
-	Ogre::Vector3 force;
-	NewtonMaterialGetContactForce( m_material, &force.x );
-	return force;
-}
-
-
-void ContactCallback::getContactPositionAndNormal( Ogre::Vector3& pos, Ogre::Vector3& norm ) const 
-{
-	NewtonMaterialGetContactPositionAndNormal( m_material, &pos.x, &norm.x );
-}
-
-
-void ContactCallback::getContactTangentDirections( Ogre::Vector3& dir0, Ogre::Vector3& dir1 ) const 
-{
-	NewtonMaterialGetContactTangentDirections( m_material, &dir0.x, &dir1.x );
-}
-
-
-
-
-
-}

Added: dependencies/OgreNewt_ngt/src/OgreNewt_ContactJoint.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_ContactJoint.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_ContactJoint.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -0,0 +1,71 @@
+#include "OgreNewt_ContactJoint.h"
+#include "OgreNewt_World.h"
+
+
+namespace OgreNewt
+{
+
+
+ContactJoint::ContactJoint(const NewtonJoint* contactJoint)
+{
+    m_contactjoint = contactJoint;
+}
+
+
+ContactJoint::~ContactJoint()
+{
+}
+
+
+Contact ContactJoint::getFirstContact()
+{
+    Contact contact(NewtonContactJointGetFirstContact(m_contactjoint), this);
+    return contact;
+}
+
+
+MaterialPair* ContactJoint::getMaterialPair()
+{
+    Body* body0 = getBody0();
+    Body* body1 = getBody1();
+    const World* world = body0->getWorld();
+
+    return (MaterialPair*) NewtonMaterialGetUserData(world->getNewtonWorld(), body0->getMaterialGroupID()->getID(), body1->getMaterialGroupID()->getID());
+}
+
+
+
+Contact::Contact(void* contact, ContactJoint* parent)
+{
+    m_parent = parent;
+    m_contact = contact;
+    m_material = NULL;
+    if( contact )
+    {
+        m_material = NewtonContactGetMaterial(contact);
+    }
+}
+
+Contact Contact::getNext() const
+{
+    Contact contact( NewtonContactJointGetNextContact(m_parent->_getNewtonContactJoint(), m_contact), m_parent);
+    return contact;
+}
+
+Ogre::Vector3 Contact::getContactForce() const 
+{
+	Ogre::Vector3 force;
+	NewtonMaterialGetContactForce( m_material, &force.x );
+	return force;
+}
+
+void Contact::remove()
+{
+    NewtonContactJointRemoveContact(m_parent->_getNewtonContactJoint(), m_contact);
+    m_parent = NULL;
+    m_material = NULL;
+    m_contact = NULL;
+}
+
+
+}

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_Debugger.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_Debugger.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_Debugger.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,4 +1,7 @@
 #include "OgreNewt_Debugger.h"
+#include "OgreNewt_World.h"
+#include "OgreNewt_Body.h"
+#include "OgreNewt_Collision.h"
 #include <sstream>
 
 namespace OgreNewt
@@ -36,7 +39,6 @@
     if( !m_debugnode )
     {
         m_debugnode = smgr->getRootSceneNode()->createChildSceneNode("__OgreNewt__Debugger__Node__");
-        //m_debuglines = new Ogre::ManualObject("__OgreNewt__Debugger__Lines__");
     }
 
     if( !m_raycastsnode )
@@ -78,8 +80,11 @@
     m_debugnode->removeAllChildren();
 
     // make the new lines.
-    for( const NewtonBody* body = NewtonWorldGetFirstBody(world->getNewtonWorld()); body; body = NewtonWorldGetNextBody(world->getNewtonWorld(), body) )
-        newtonPerBody(body);
+    for( Body* body = world->getFirstBody(); body; body = body->getNext() )
+    {
+        processBody(body);
+    }
+        
 
 
     // delete old entries
@@ -115,14 +120,12 @@
     m_defaultcolor = col;
 }
 
-void _CDECL Debugger::newtonPerBody( const NewtonBody* body )
+void Debugger::processBody( OgreNewt::Body* bod )
 {
-    Debugger& debugger (Debugger::getSingleton());
-    MaterialIdColorMap::iterator it = 
-        debugger.m_materialcolors.find( NewtonBodyGetMaterialGroupID(body) );
+    NewtonBody* newtonBody = bod->getNewtonBody();
+    MaterialIdColorMap::iterator it = m_materialcolors.find( NewtonBodyGetMaterialGroupID(newtonBody) );
 
 
-    Body *bod = (OgreNewt::Body*)NewtonBodyGetUserData(body);
     Ogre::Vector3 pos;
     Ogre::Quaternion ori;
     bod->getPositionOrientation(pos, ori);
@@ -175,7 +178,7 @@
         else
         {
             std::ostringstream oss;
-            oss << "__OgreNewt__Debugger__Lines__" << body << "__";
+            oss << "__OgreNewt__Debugger__Lines__" << bod << "__";
             data->m_lines = new Ogre::ManualObject(oss.str());
         }
 
@@ -197,15 +200,15 @@
         data->m_lines->begin("BaseWhiteNoLighting", Ogre::RenderOperation::OT_LINE_LIST );
 
         // set color
-        if( it != debugger.m_materialcolors.end() )
+        if( it != m_materialcolors.end() )
             data->m_lines->colour(it->second);
         else
-            data->m_lines->colour(debugger.m_defaultcolor);
+            data->m_lines->colour(m_defaultcolor);
 
         float matrix[16];
         Converters::QuatPosToMatrix(Ogre::Quaternion::IDENTITY, Ogre::Vector3::ZERO, &matrix[0]);
         
-        NewtonCollisionForEachPolygonDo( NewtonBodyGetCollision(body), &matrix[0], newtonPerPoly, data->m_lines );
+        NewtonCollisionForEachPolygonDo( NewtonBodyGetCollision(newtonBody), &matrix[0], newtonPerPoly, data->m_lines );
         
         data->m_lines->end();
         data->m_node->attachObject(data->m_lines);

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_Joint.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_Joint.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_Joint.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,5 +1,7 @@
-#include <assert.h>
-#include <OgreNewt_Joint.h>
+/*  #include <assert.h>  why do we need this here? */
+#include "OgreNewt_Joint.h"
+#include "OgreNewt_Body.h"
+#include "OgreNewt_World.h"
 
 
 namespace OgreNewt

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_MaterialID.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_MaterialID.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_MaterialID.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,5 +1,5 @@
-#include <OgreNewt_MaterialID.h>
-#include <OgreNewt_World.h>
+#include "OgreNewt_MaterialID.h"
+#include "OgreNewt_World.h"
 
 namespace OgreNewt
 {

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_MaterialPair.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_MaterialPair.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_MaterialPair.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,6 +1,5 @@
-#include <OgreNewt_MaterialPair.h>
-#include <OgreNewt_World.h>
-#include <OgreNewt_MaterialID.h>
+#include "OgreNewt_MaterialPair.h"
+#include "OgreNewt_ContactJoint.h"
 
 namespace OgreNewt
 {
@@ -11,6 +10,7 @@
 	m_world = world;
 	id0 = mat1;
 	id1 = mat2;
+    m_contactcallback = NULL;
 }
 
 MaterialPair::~MaterialPair()
@@ -20,13 +20,67 @@
 
 void MaterialPair::setContactCallback( OgreNewt::ContactCallback* callback )
 {
-	// set the material callbacks to the functions inside the ContactCallback class.
-	NewtonMaterialSetCollisionCallback( m_world->getNewtonWorld(), id0->getID(), id1->getID(), callback,
-		callback->onAABBOverlap,
-		callback->contactProcess);
+    m_contactcallback = callback;
+    if( callback )
+    {
+	    NewtonMaterialSetCollisionCallback( m_world->getNewtonWorld(), id0->getID(), id1->getID(), this,
+		    collisionCallback_onAABBOverlap,
+    		collisionCallback_contactsProcess);
+    }
+    else
+    {
+	    NewtonMaterialSetCollisionCallback( m_world->getNewtonWorld(), id0->getID(), id1->getID(), NULL,
+		    NULL,
+    		NULL);
+    }
 }
 
 
+int _CDECL MaterialPair::collisionCallback_onAABBOverlap( const NewtonMaterial* material, const NewtonBody* newtonBody0, const NewtonBody* newtonBody1, int threadIndex )
+{
+    MaterialPair* me;
+	me = (MaterialPair*)NewtonMaterialGetMaterialPairUserData( material );
 
+	Body* body0 = (OgreNewt::Body*)NewtonBodyGetUserData( newtonBody0 );
+	Body* body1 = (OgreNewt::Body*)NewtonBodyGetUserData( newtonBody1 );
+
+	return me->m_contactcallback->onAABBOverlap( body0, body1, threadIndex );
 }
 
+void _CDECL MaterialPair::collisionCallback_contactsProcess(const NewtonJoint *newtonContactJoint, float timestep, int threadIndex )
+{
+    ContactJoint contactJoint(newtonContactJoint);
+
+    MaterialPair* me = contactJoint.getMaterialPair();
+    
+    if( me != NULL )
+    {
+        ( me->m_contactcallback->contactsProcess )(contactJoint, timestep, threadIndex);
+    }
+
+    /*
+     // OLD CODE!
+        for (void* contact = NewtonContactJointGetFirstContact (contactJoint); contact; contact = NewtonContactJointGetNextContact (contactJoint, contact))
+        {
+	        ContactCallback *me;
+                NewtonMaterial* material = NewtonContactGetMaterial(contact);
+
+                me = (ContactCallback*)NewtonMaterialGetMaterialPairUserData( material );
+
+                me->m_material = material;
+                me->m_body0 = (OgreNewt::Body*)NewtonBodyGetUserData( NewtonJointGetBody0(contactJoint) );
+	        me->m_body1 = (OgreNewt::Body*)NewtonBodyGetUserData( NewtonJointGetBody1(contactJoint) );
+
+	        // call the user-defined callback function!
+	        if( !me->contactProcess( (Ogre::Real)timeStep, threadIndex ) )
+                {
+                    NewtonContactJointRemoveContact(contactJoint, contact);
+                }
+        }
+    */
+
+}
+
+
+}
+

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_PlayerController.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_PlayerController.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_PlayerController.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,6 +1,8 @@
-#include <OgreNewt_PlayerController.h>
-#include <OgreNewt_Tools.h>
-#include <OgreNewt_CollisionPrimitives.h>
+#include "OgreNewt_PlayerController.h"
+#include "OgreNewt_Tools.h"
+#include "OgreNewt_Collision.h"
+#include "OgreNewt_CollisionPrimitives.h"
+#include "OgreNewt_World.h"
 
 namespace OgreNewt
 {
@@ -15,7 +17,7 @@
     m_heading = Ogre::Radian(0);
     Ogre::Real playerHeight, playerRadius;
     getPlayerHeightAndRadius(playerHeight, playerRadius);
-    m_maxStepHeight = playerHeight / 5;
+    m_maxStepHeight = playerHeight / 4;
     m_maxSlope = Ogre::Degree(45);
     m_restitution = 0;
     m_upVector = Ogre::Vector3::UNIT_Y;
@@ -173,6 +175,15 @@
 }
 
 
+void PlayerController::setVelocity(Ogre::Real forwardSpeed, Ogre::Real sideSpeed, Ogre::Degree heading)
+{
+    m_forwardSpeed = forwardSpeed;
+    m_sideSpeed = sideSpeed;
+    m_heading = heading;
+    m_body->unFreeze();
+}
+
+
 void PlayerController::submitConstraint( Ogre::Real timestep, int threadindex )
 {
 
@@ -190,46 +201,80 @@
     omega = m_body->getOmega();
     torqueAcc = m_body->getTorqueAcceleration();
 
-    // ----------- "up-vector-pin" -----------
-    // get the plane of rotation
-    Ogre::Vector3 oriChangeVec;
-    Ogre::Radian oriChangeAngle;
-    Ogre::Quaternion oriDiffFromLast = (ori * m_lastOri.Inverse());
-    oriDiffFromLast.ToAngleAxis(oriChangeAngle, oriChangeVec);
-    if( abs(oriChangeAngle.valueRadians()) > 1.0e-3 )
-    {
-        // correct angle
-        addAngularRow(oriChangeAngle, oriChangeVec);
 
-        // additional correction, see newton CustomPlayerController
-        Ogre::Vector3 frontDir = ori*oriChangeVec;
-        addAngularRow(Ogre::Radian(0.0f), oriChangeVec);
-    }
+    // ----- "up vector joint" -----
+    Ogre::Quaternion yawOri;
+    yawOri.FromAngleAxis(ori.getYaw(), Ogre::Vector3::UNIT_Y);
+    Ogre::Vector3 yawX = yawOri * Ogre::Vector3::UNIT_X;
+    Ogre::Vector3 yawZ = yawOri * Ogre::Vector3::UNIT_Z;
+    Ogre::Radian relAngleErrorX, relAngleErrorZ;
+    Ogre::Vector3 dirErrorX, dirErrorZ;
+    ori.xAxis().getRotationTo(yawX, yawZ).ToAngleAxis(relAngleErrorX, dirErrorX);
+    ori.zAxis().getRotationTo(yawZ, yawX).ToAngleAxis(relAngleErrorZ, dirErrorZ);
+    if( abs(relAngleErrorX.valueRadians()) < 0.001f )
+        addAngularRow(Ogre::Radian(0.0f), yawZ);
     else
-    {
-        addAngularRow(Ogre::Radian(0.0f), ori.yAxis());
-        addAngularRow(Ogre::Radian(0.0f), ori.xAxis());
-    }
+        addAngularRow(relAngleErrorX, dirErrorX);
+    if( abs(relAngleErrorZ.valueRadians()) < 0.001f )
+        addAngularRow(Ogre::Radian(0.0f), yawX);
+    else
+        addAngularRow(relAngleErrorZ, dirErrorZ);
 
+
     // ----------- calculate torque -----------
     Ogre::Quaternion targetOri;
     targetOri.FromAngleAxis(m_heading, Ogre::Vector3::UNIT_Y);
-    Ogre::Quaternion oriDiff = (targetOri * ori.Inverse());
-    Ogre::Real turnOmega  = oriDiff.getYaw().valueRadians() / timestep;
-    torqueAcc = ori.yAxis() * (torqueAcc.dotProduct(ori.yAxis()));
-    Ogre::Vector3 torque = ori.yAxis() * (turnOmega - omega.y * inertia.y/timestep - torqueAcc.y);
+    Ogre::Radian yawDiff = ((ori*Ogre::Vector3::UNIT_Z).getRotationTo(targetOri*Ogre::Vector3::UNIT_Z)).getYaw();
+    Ogre::Real turnOmega = yawDiff.valueRadians() / timestep;
+    Ogre::Vector3 torque = Ogre::Vector3::UNIT_Y * ((turnOmega - omega.y) * inertia.y/timestep - torqueAcc.y);
     m_body->addTorque(torque);
 
 
 
     // ----------- find floor -----------
-    Ogre::Vector3 p1 = pos - Ogre::Vector3::UNIT_Y*m_lastPlayerHeight;
-    FindFloorRaycast findFloorCast(this, pos, p1, true);
+    //! perhaps calculate SLOPE differently, a convexcast with a rotated box should do it, but we'll see if it is needed!
+    Ogre::Vector3 findFloorCastP1 = pos - Ogre::Vector3::UNIT_Y*m_maxStepHeight;
+    // go a bit up from current position
+    Ogre::Vector3 findFloorCastP0 = pos + Ogre::Vector3::UNIT_Y*m_maxStepHeight;
+    FindFloorRaycast findFloorCast(this, findFloorCastP0, findFloorCastP1, true);
     if( findFloorCast.getHitCount() > 0 )
     {
         // slope:
-        if( Ogre::Math::ACos(findFloorCast.getFirstHit().mNormal.y) > m_maxSlope )
+        if( Ogre::Math::ASin(findFloorCast.getFirstHit().mNormal.y) < m_maxSlope )
+        {
+            // try some more raycasts...
+            FindFloorRaycast findFloorCast_0(this, findFloorCastP0+0.1*Ogre::Vector3::UNIT_X, findFloorCastP1+0.1*Ogre::Vector3::UNIT_X, true);
+            FindFloorRaycast findFloorCast_1(this, findFloorCastP0-0.1*Ogre::Vector3::UNIT_X, findFloorCastP1-0.1*Ogre::Vector3::UNIT_X, true);
+            FindFloorRaycast findFloorCast_2(this, findFloorCastP0+0.1*Ogre::Vector3::UNIT_Z, findFloorCastP1+0.1*Ogre::Vector3::UNIT_Z, true);
+            FindFloorRaycast findFloorCast_3(this, findFloorCastP0-0.1*Ogre::Vector3::UNIT_Z, findFloorCastP1-0.1*Ogre::Vector3::UNIT_Z, true);
+            if( findFloorCast_0.getHitCount() > 0 && Ogre::Math::ASin(findFloorCast_0.getFirstHit().mNormal.y) < m_maxSlope )
+            {
+                findFloorCastP0 += 0.1*Ogre::Vector3::UNIT_X;
+                findFloorCastP1 += 0.1*Ogre::Vector3::UNIT_X;
+                findFloorCast = findFloorCast_0;
+            }
+            else if( findFloorCast_1.getHitCount() > 0 && Ogre::Math::ASin(findFloorCast_1.getFirstHit().mNormal.y) < m_maxSlope )
+            {
+                findFloorCastP0 -= 0.1*Ogre::Vector3::UNIT_X;
+                findFloorCastP1 -= 0.1*Ogre::Vector3::UNIT_X;
+                findFloorCast = findFloorCast_1;
+            }
+            else if( findFloorCast_2.getHitCount() > 0 && Ogre::Math::ASin(findFloorCast_2.getFirstHit().mNormal.y) < m_maxSlope )
+            {
+                findFloorCastP0 += 0.1*Ogre::Vector3::UNIT_Z;
+                findFloorCastP1 += 0.1*Ogre::Vector3::UNIT_Z;
+                findFloorCast = findFloorCast_2;
+            }
+            else if( findFloorCast_3.getHitCount() > 0 && Ogre::Math::ASin(findFloorCast_3.getFirstHit().mNormal.y) < m_maxSlope )
+            {
+                findFloorCastP0 -= 0.1*Ogre::Vector3::UNIT_Z;
+                findFloorCastP1 -= 0.1*Ogre::Vector3::UNIT_Z;
+                findFloorCast = findFloorCast_3;
+            }
+        }
         
+        if( Ogre::Math::ASin(findFloorCast.getFirstHit().mNormal.y) > m_maxSlope )
+        
         {
             // desired velocity
             Ogre::Vector3 desiredVel = ori*(Ogre::Vector3::UNIT_Z * m_forwardSpeed + Ogre::Vector3::UNIT_Y*vel.y + Ogre::Vector3::UNIT_X * m_sideSpeed);
@@ -242,7 +287,7 @@
             {
 
                 // hit-body:
-                Ogre::Vector3 hitPoint = pos + (p1-pos) * findFloorCast.getFirstHit().mDistance;
+                Ogre::Vector3 hitPoint = findFloorCastP0 + (findFloorCastP1-findFloorCastP0) * findFloorCast.getFirstHit().mDistance;
                 Ogre::Vector3 hitOmega = findFloorCast.getFirstHit().mBody->getOmega();
                 Ogre::Vector3 hitVel = findFloorCast.getFirstHit().mBody->getVelocity();
                 Ogre::Vector3 hitPos;
@@ -255,10 +300,20 @@
 
 
 
+            // look ahead for obstacles in along the horizontal of the desired velocity
+            Ogre::Vector3 horizontalDesiredVel = desiredVel;
+            horizontalDesiredVel.y = 0;
 
 
+
+
+
             // calculate force needed for desired velocity
-//            m_body->
+            Ogre::Vector3 force = m_body->calculateInverseDynamicsForce(timestep, horizontalDesiredVel);
+            Ogre::Vector3 forceAcc = m_body->getForceAcceleration();
+            force -= forceAcc;
+            force.y = 0;
+            m_body->addForce(force);
 
         }
     }

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_RayCast.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,6 +1,8 @@
 #include "OgreNewt_RayCast.h"
 #include "OgreNewt_Tools.h"
 #include "OgreNewt_Debugger.h"
+#include "OgreNewt_World.h"
+#include "OgreNewt_Collision.h"
 
 
 namespace OgreNewt

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_Tools.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_Tools.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_Tools.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,4 +1,7 @@
 #include "OgreNewt_Tools.h"
+#include "OgreNewt_World.h"
+#include "OgreNewt_Body.h"
+#include "OgreNewt_Collision.h"
 #include <iostream>
 #include <OgreFontManager.h>
 

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_Vehicle.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_Vehicle.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_Vehicle.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,5 +1,5 @@
-#include <OgreNewt_Vehicle.h>
-#include <OgreNewt_Tools.h>
+#include "OgreNewt_Vehicle.h"
+#include "OgreNewt_Tools.h"
 
 namespace OgreNewt
 {

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_World.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_World.cpp	2009-01-28 19:18:55 UTC (rev 4727)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_World.cpp	2009-01-30 22:13:30 UTC (rev 4728)
@@ -1,7 +1,5 @@
-#include <OgreNewt_World.h>
-#include <OgreNewt_Body.h>
-#include <OgreNewt_MaterialID.h>
-#include <OgreNewt_Tools.h>
+#include "OgreNewt_World.h"
+#include "OgreNewt_MaterialID.h"
 
 namespace OgreNewt
 {
@@ -80,6 +78,16 @@
 	}
 }
 
+Body* World::getFirstBody()
+{
+    NewtonBody* body = NewtonWorldGetFirstBody( m_world );
+    if( body )
+        return (Body*) NewtonBodyGetUserData(body);
+
+    return NULL;
+}
+
+
 // -------------------------------------------------------------------------------------------------------------
 // -------------------------------------------------------------------------------------------------------------
 // -------------------------------------------------------------------------------------------------------------



From melven at mail.berlios.de  Sat Jan 31 02:08:06 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Sat, 31 Jan 2009 02:08:06 +0100
Subject: [Dsa-hl-svn] r4729 - in dependencies/OgreNewt_ngt: . inc src
Message-ID: <200901310108.n0V186dr005187@sheep.berlios.de>

Author: melven
Date: 2009-01-31 02:08:04 +0100 (Sat, 31 Jan 2009)
New Revision: 4729

Added:
   dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp
Modified:
   dependencies/OgreNewt_ngt/CMakeLists.txt
   dependencies/OgreNewt_ngt/inc/OgreNewt_BodyInAABBIterator.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_ContactCallback.h
   dependencies/OgreNewt_ngt/inc/OgreNewt_ContactJoint.h
   dependencies/OgreNewt_ngt/src/OgreNewt_ContactJoint.cpp
   dependencies/OgreNewt_ngt/src/OgreNewt_World.cpp
Log:
fixed some errors...


Modified: dependencies/OgreNewt_ngt/CMakeLists.txt
===================================================================
--- dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-30 22:13:30 UTC (rev 4728)
+++ dependencies/OgreNewt_ngt/CMakeLists.txt	2009-01-31 01:08:04 UTC (rev 4729)
@@ -74,6 +74,7 @@
 src/OgreNewt_Collision.cpp
 src/OgreNewt_CollisionPrimitives.cpp
 src/OgreNewt_CollisionSerializer.cpp
+src/OgreNewt_ContactCallback.cpp
 src/OgreNewt_ContactJoint.cpp
 src/OgreNewt_Debugger.cpp
 src/OgreNewt_Joint.cpp
@@ -109,6 +110,7 @@
 inc/OgreNewt_Prerequisites.h inc/OgreNewt_RayCast.h inc/OgreNewt_Tools.h
 inc/OgreNewt_Vehicle.h inc/OgreNewt_World.h inc/OgreNewt_PlayerController.h
 inc/OgreNewt_ContactJoint.h inc/OgreNewt_BodyInAABBIterator.h
+inc/OgreNewt_BasicFrameListener.h
 DESTINATION ${CMAKE_INSTALL_PREFIX}/include/OgreNewt)
 
 IF(NOT WIN32)

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_BodyInAABBIterator.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_BodyInAABBIterator.h	2009-01-30 22:13:30 UTC (rev 4728)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_BodyInAABBIterator.h	2009-01-31 01:08:04 UTC (rev 4729)
@@ -55,7 +55,7 @@
 	void go( const Ogre::AxisAlignedBox &aabb, IteratorCallback callback )
 	{
 		m_callback = callback;
-        NewtonWorldForEachBodyInAABBDo(m_world, &aabb.getMinimum().x, &aabb.getMaximum().x, newtonIterator);
+        NewtonWorldForEachBodyInAABBDo(m_world->getNewtonWorld(), &aabb.getMinimum().x, &aabb.getMaximum().x, newtonIterator);
         
 	}
 	template <class c> void go( const Ogre::AxisAlignedBox &aabb, boost::function<void(c*, Body*)> callback, c* instancedClassPointer )
@@ -79,7 +79,7 @@
 
 protected:
 
-	BodyIterator()
+	BodyInAABBIterator()
 	{
 		m_world = NULL;
 		m_callback = NULL;

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h	2009-01-30 22:13:30 UTC (rev 4728)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_Collision.h	2009-01-31 01:08:04 UTC (rev 4729)
@@ -101,10 +101,7 @@
                 if a collision is marked as a trigger-volume, there's no calculation of contacts, so
                 this acts like an accurate aabb test
         */
-        //! TODO:
-        // this doesn't work correctly yet, because the userdata pointer in the collision callback can't be accessed with a trigger
-        // volume in the current beta!
-        void setAsTriggerVolume(bool trigger) { /*NewtonCollisionSetAsTriggerVolume(m_col, (int)trigger);*/ }
+        void setAsTriggerVolume(bool trigger) { NewtonCollisionSetAsTriggerVolume(m_col, (int)trigger); }
 };
 
 //typedef Ogre::SharedPtr<Collision> CollisionPtr;

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_ContactCallback.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_ContactCallback.h	2009-01-30 22:13:30 UTC (rev 4728)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_ContactCallback.h	2009-01-31 01:08:04 UTC (rev 4729)
@@ -51,7 +51,7 @@
 		user process function.  it is called for each colliding pair of bodies. you can use
         the ContactJoint to iterate through all contact-points and change the "material" of each contact-point!
 	 */
-	virtual void contactsProcess( OgreNewt::ContactJoint contactJoint, Ogre::Real timeStep, int threadIndex ) { }
+	virtual void contactsProcess( OgreNewt::ContactJoint &contactJoint, Ogre::Real timeStep, int threadIndex ) { }
 };
 
 

Modified: dependencies/OgreNewt_ngt/inc/OgreNewt_ContactJoint.h
===================================================================
--- dependencies/OgreNewt_ngt/inc/OgreNewt_ContactJoint.h	2009-01-30 22:13:30 UTC (rev 4728)
+++ dependencies/OgreNewt_ngt/inc/OgreNewt_ContactJoint.h	2009-01-31 01:08:04 UTC (rev 4729)
@@ -19,7 +19,6 @@
 namespace OgreNewt
 {
 
-class ContactJoint;
 class Contact;
 class MaterialPair;
 
@@ -87,7 +86,7 @@
 	~Contact();
 
     //! return true, if this is not a valid contact (end of the contact-list!)
-    bool operator! () const { return m_contact != NULL; }
+    operator bool() const { return m_contact != NULL; }
 
     //! get the next contact from the parent contact-joint
     Contact getNext() const;
@@ -99,52 +98,52 @@
     OgreNewt::Body* getBody1() const { return (OgreNewt::Body*) NewtonBodyGetUserData( NewtonJointGetBody1( m_parent->_getNewtonContactJoint() ) ); }
 
 	//! get the face ID of a TreeCollision object
-	unsigned getContactFaceAttribute() const { return NewtonMaterialGetContactFaceAttribute( m_material ); }
+	unsigned getFaceAttribute() const { return NewtonMaterialGetContactFaceAttribute( m_material ); }
 
 	//! get the Collision ID of a body currently colliding
 	unsigned getBodyCollisionID( OgreNewt::Body* body ) const { return NewtonMaterialGetBodyCollisionID( m_material, body->getNewtonBody() ); }
 
 	//! speed of the collision
-	Ogre::Real getContactNormalSpeed() const { return (Ogre::Real)NewtonMaterialGetContactNormalSpeed( m_material ); }
+	Ogre::Real getNormalSpeed() const { return (Ogre::Real)NewtonMaterialGetContactNormalSpeed( m_material ); }
 
 	//! force of the collision
 	/*!
 		only valid for objects in a stable state (sitting on top of each other, etc)
 	*/
-	Ogre::Vector3 getContactForce() const;
+	Ogre::Vector3 getForce() const;
 
 	//! get positoin and normal of the collision
-	void getContactPositionAndNormal( Ogre::Vector3& pos, Ogre::Vector3& norm ) const { NewtonMaterialGetContactPositionAndNormal(m_material, &pos.x, &norm.x); }
+	void getPositionAndNormal( Ogre::Vector3& pos, Ogre::Vector3& norm ) const { NewtonMaterialGetContactPositionAndNormal(m_material, &pos.x, &norm.x); }
 
 	//! get the tangent vectors of the collision
-	void getContactTangentDirections( Ogre::Vector3& dir0, Ogre::Vector3& dir1 ) const { NewtonMaterialGetContactTangentDirections(m_material, &dir0.x, &dir1.x); }
+	void getTangentDirections( Ogre::Vector3& dir0, Ogre::Vector3& dir1 ) const { NewtonMaterialGetContactTangentDirections(m_material, &dir0.x, &dir1.x); }
 
 	//! get tangent speed of the collision
-	Ogre::Real getContactTangentSpeed( int index ) const { return (Ogre::Real)NewtonMaterialGetContactTangentSpeed( m_material, index ); }
+	Ogre::Real getTangentSpeed( int index ) const { return (Ogre::Real)NewtonMaterialGetContactTangentSpeed( m_material, index ); }
 
 	//! set softness of the current contact
-	void setContactSoftness( Ogre::Real softness ) { NewtonMaterialSetContactSoftness( m_material, (float)softness ); }
+	void setSoftness( Ogre::Real softness ) { NewtonMaterialSetContactSoftness( m_material, (float)softness ); }
 
 	//! set elasticity of the current contact
-	void setContactElasticity( Ogre::Real elasticity ) { NewtonMaterialSetContactElasticity( m_material, (float)elasticity ); }
+	void setElasticity( Ogre::Real elasticity ) { NewtonMaterialSetContactElasticity( m_material, (float)elasticity ); }
 
 	//! set friction state of current contact
-	void setContactFrictionState( int state, int index ) { NewtonMaterialSetContactFrictionState( m_material, state, index ); }
+	void setFrictionState( int state, int index ) { NewtonMaterialSetContactFrictionState( m_material, state, index ); }
 
 	//! set static friction for current contact
-	void setContactFrictionCoef( Ogre::Real stat, Ogre::Real kinetic, int index ) { NewtonMaterialSetContactFrictionCoef( m_material, (float)stat, (float)kinetic, index ); }
+	void setFrictionCoef( Ogre::Real stat, Ogre::Real kinetic, int index ) { NewtonMaterialSetContactFrictionCoef( m_material, (float)stat, (float)kinetic, index ); }
 
 	//! set tangent acceleration for contact
-	void setContactTangentAcceleration( Ogre::Real accel, int index ) { NewtonMaterialSetContactTangentAcceleration( m_material, (float)accel, index ); }
+	void setTangentAcceleration( Ogre::Real accel, int index ) { NewtonMaterialSetContactTangentAcceleration( m_material, (float)accel, index ); }
 
 	//! align tangent vectors with a user supplied direction
 	void rotateTangentDirections( const Ogre::Vector3& dir ) { NewtonMaterialContactRotateTangentDirections( m_material, &dir.x ); }
 
 	//! manually set the normal for the collision.
-	void setContactNormalDirection( const Ogre::Vector3& dir ) { NewtonMaterialSetContactNormalDirection( m_material, &dir.x ); }
+	void setNormalDirection( const Ogre::Vector3& dir ) { NewtonMaterialSetContactNormalDirection( m_material, &dir.x ); }
 
 	//! manually set the acceleration along the collision normal.
-	void setContactNormalAcceleration( Ogre::Real accel ) { NewtonMaterialSetContactNormalAcceleration( m_material, accel ); }
+	void setNormalAcceleration( Ogre::Real accel ) { NewtonMaterialSetContactNormalAcceleration( m_material, accel ); }
 
     //! removes the contact from the parent contact-joint, this means newton doesn't process this contact
     /*!

Added: dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp	2009-01-30 22:13:30 UTC (rev 4728)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_ContactCallback.cpp	2009-01-31 01:08:04 UTC (rev 4729)
@@ -0,0 +1,18 @@
+#include "OgreNewt_ContactCallback.h"
+
+
+namespace OgreNewt
+{
+
+
+ContactCallback::ContactCallback()
+{
+}
+
+ContactCallback::~ContactCallback()
+{
+}
+
+
+}
+

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_ContactJoint.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_ContactJoint.cpp	2009-01-30 22:13:30 UTC (rev 4728)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_ContactJoint.cpp	2009-01-31 01:08:04 UTC (rev 4729)
@@ -46,13 +46,17 @@
     }
 }
 
+Contact::~Contact()
+{
+}
+
 Contact Contact::getNext() const
 {
     Contact contact( NewtonContactJointGetNextContact(m_parent->_getNewtonContactJoint(), m_contact), m_parent);
     return contact;
 }
 
-Ogre::Vector3 Contact::getContactForce() const 
+Ogre::Vector3 Contact::getForce() const 
 {
 	Ogre::Vector3 force;
 	NewtonMaterialGetContactForce( m_material, &force.x );
@@ -69,3 +73,4 @@
 
 
 }
+

Modified: dependencies/OgreNewt_ngt/src/OgreNewt_World.cpp
===================================================================
--- dependencies/OgreNewt_ngt/src/OgreNewt_World.cpp	2009-01-30 22:13:30 UTC (rev 4728)
+++ dependencies/OgreNewt_ngt/src/OgreNewt_World.cpp	2009-01-31 01:08:04 UTC (rev 4729)
@@ -1,5 +1,6 @@
 #include "OgreNewt_World.h"
 #include "OgreNewt_MaterialID.h"
+#include "OgreNewt_BodyInAABBIterator.h"
 
 namespace OgreNewt
 {



From melven at mail.berlios.de  Sat Jan 31 02:10:22 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Sat, 31 Jan 2009 02:10:22 +0100
Subject: [Dsa-hl-svn] r4730 - in rl/branches/newton20/engine: core/include
	core/src rules/include rules/src ui/include ui/src
Message-ID: <200901310110.n0V1AMLk005496@sheep.berlios.de>

Author: melven
Date: 2009-01-31 02:10:13 +0100 (Sat, 31 Jan 2009)
New Revision: 4730

Modified:
   rl/branches/newton20/engine/core/include/GameEventManager.h
   rl/branches/newton20/engine/core/include/PhysicsGenericContactCallback.h
   rl/branches/newton20/engine/core/src/GameEventManager.cpp
   rl/branches/newton20/engine/core/src/PhysicsGenericContactCallback.cpp
   rl/branches/newton20/engine/core/src/PhysicsManager.cpp
   rl/branches/newton20/engine/rules/include/AbstractMovement.h
   rl/branches/newton20/engine/rules/include/CreatureController.h
   rl/branches/newton20/engine/rules/include/CreatureControllerManager.h
   rl/branches/newton20/engine/rules/src/CreatureController.cpp
   rl/branches/newton20/engine/rules/src/CreatureControllerManager.cpp
   rl/branches/newton20/engine/ui/include/CombatControlState.h
   rl/branches/newton20/engine/ui/include/FreeflightControlState.h
   rl/branches/newton20/engine/ui/include/MovementControlState.h
   rl/branches/newton20/engine/ui/src/CombatControlState.cpp
   rl/branches/newton20/engine/ui/src/FreeflightControlState.cpp
   rl/branches/newton20/engine/ui/src/MovementControlState.cpp
Log:
-implemented changes from OgreNewt in rastullah...
(you can use the latest revision from OgreNewt again,
..this was easier than I thought...)


Modified: rl/branches/newton20/engine/core/include/GameEventManager.h
===================================================================
--- rl/branches/newton20/engine/core/include/GameEventManager.h	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/core/include/GameEventManager.h	2009-01-31 01:10:13 UTC (rev 4730)
@@ -131,8 +131,7 @@
 
 
     /// newton collision callback functions
-    //int onAABBOverlap(int threadid);
-    int userProcess(Ogre::Real timestep, int threadid);
+    void userProcess(OgreNewt::ContactJoint &contactJoint, Ogre::Real timestep, int threadid);
 
     /// notify about newton world update
     void notifyNewtonWorldUpdate();

Modified: rl/branches/newton20/engine/core/include/PhysicsGenericContactCallback.h
===================================================================
--- rl/branches/newton20/engine/core/include/PhysicsGenericContactCallback.h	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/core/include/PhysicsGenericContactCallback.h	2009-01-31 01:10:13 UTC (rev 4730)
@@ -31,21 +31,20 @@
     class _RlCoreExport PhysicsGenericContactCallback : public OgreNewt::ContactCallback
     {
     public:
-        //! this function must not be overwritten!
-        int contactProcess( Ogre::Real timeStep, int threadid );
-
         /*!
          * this function is called, when the aabbs of two bodies overlap, return 0 to indicate, that no contact calculation
          * should be initiated.
          * ATTENTION: if 0 is returned, the contact-listeners cannot be called!
         */
-        int onAABBOverlap(int threadindex);
+        int onAABBOverlap(int threadindex) { return 1; }
 
         /*!
          * process user defined contact forces (etc) here
         */
-        virtual int userProcess( Ogre::Real timeStep, int threadid);
-    private:
+        virtual void userProcess( OgreNewt::ContactJoint &contactJoint, Ogre::Real timeStep, int threadid) {}
+
+        //! this function must not be overwritten!
+        void contactsProcess( OgreNewt::ContactJoint &contactJoint, Ogre::Real timeStep, int threadid );
     };
 }
 

Modified: rl/branches/newton20/engine/core/src/GameEventManager.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/GameEventManager.cpp	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/core/src/GameEventManager.cpp	2009-01-31 01:10:13 UTC (rev 4730)
@@ -274,46 +274,29 @@
 
         return NAME;
     }
-/*
-    int GameEventManager::onAABBOverlap(int)
+
+    void GameEventManager::userProcess(OgreNewt::ContactJoint &contactJoint, Real timestep, int)
     {
-        NewtonBodyGameAreaMap::iterator it = mBodyGameAreaMap.find(m_body0);
-        if( it != mBodyGameAreaMap.end() )
-        {
-            it->second->foundCollision(bodyToActor(m_body1));
-            return 0;
-        }
+        OgreNewt::Body* body0 = contactJoint.getBody0();
+        OgreNewt::Body* body1 = contactJoint.getBody1();
 
-        it = mBodyGameAreaMap.find(m_body1);
+        NewtonBodyGameAreaMap::iterator it = mBodyGameAreaMap.find(body0);
         if( it != mBodyGameAreaMap.end() )
         {
-            it->second->foundCollision(bodyToActor(m_body0));
-            return 0;
+            it->second->foundCollision(bodyToActor(body1));
+            return;
         }
 
-        LOG_WARNING(Logger::CORE, "Der Kollisionsk?rper konnte keiner GameArea zugeordnet werden!");
-        return 0;
-    }
-*/
-    int GameEventManager::userProcess(Real timestep, int)
-    {
-        NewtonBodyGameAreaMap::iterator it = mBodyGameAreaMap.find(m_body0);
+        it = mBodyGameAreaMap.find(body1);
         if( it != mBodyGameAreaMap.end() )
         {
-            it->second->foundCollision(bodyToActor(m_body1));
-            return 0;
+            it->second->foundCollision(bodyToActor(body0));
+            return;
         }
 
-        it = mBodyGameAreaMap.find(m_body1);
-        if( it != mBodyGameAreaMap.end() )
-        {
-            it->second->foundCollision(bodyToActor(m_body0));
-            return 0;
-        }
-
         LOG_WARNING(Logger::CORE, "Der Kollisionsk?rper konnte keiner GameArea zugeordnet werden!");
 
-        return 0;
+        // there should be no contacts (trigger-volume!), so we don't need to do anything here!
     }
 
     void GameEventManager::notifyNewtonWorldUpdate()

Modified: rl/branches/newton20/engine/core/src/PhysicsGenericContactCallback.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/PhysicsGenericContactCallback.cpp	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/core/src/PhysicsGenericContactCallback.cpp	2009-01-31 01:10:13 UTC (rev 4730)
@@ -25,22 +25,12 @@
 
 namespace rl
 {
-    int PhysicsGenericContactCallback::onAABBOverlap(int threadindex)
+    void PhysicsGenericContactCallback::contactsProcess(OgreNewt::ContactJoint &contactJoint, Real timestep, int threadid)
     {
-        return 1;
-    }
+        userProcess(contactJoint, timestep, threadid);
 
-    int PhysicsGenericContactCallback::userProcess(Real timeStep, int)
-    {
-        return 1;
-    }
-
-    int PhysicsGenericContactCallback::contactProcess(Real timestep, int threadid)
-    {
-        int retval = userProcess(timestep, threadid);
-
-        Actor* a1 = static_cast<Actor*>(m_body0->getUserData());
-        Actor* a2 = static_cast<Actor*>(m_body1->getUserData());
+        Actor* a1 = static_cast<Actor*>(contactJoint.getBody0()->getUserData());
+        Actor* a2 = static_cast<Actor*>(contactJoint.getBody1()->getUserData());
         if (a1 && a1->getPhysicalThing()->getContactListener())
         {
             a1->getPhysicalThing()->getContactListener()->
@@ -51,7 +41,5 @@
             a2->getPhysicalThing()->getContactListener()->
                 contactOccured(a2->getPhysicalThing(), a1->getPhysicalThing());
         }
-
-        return retval;
     }
 }

Modified: rl/branches/newton20/engine/core/src/PhysicsManager.cpp
===================================================================
--- rl/branches/newton20/engine/core/src/PhysicsManager.cpp	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/core/src/PhysicsManager.cpp	2009-01-31 01:10:13 UTC (rev 4730)
@@ -500,7 +500,15 @@
     void PhysicsManager::resetMaterialPair(const OgreNewt::MaterialID* M1,
             const OgreNewt::MaterialID* M2)
     {
-        getMaterialPair(M1,M2)->setContactCallback(mGenericCallback);
+        OgreNewt::MaterialPair *mat_pair = getMaterialPair(M1,M2);
+        mat_pair->setContactCallback(mGenericCallback);
+        mat_pair->setContinuousCollisionMode(0);
+        mat_pair->setDefaultCollidable(1);
+        mat_pair->setDefaultElasticity(0.4f);
+        mat_pair->setDefaultSoftness(0.1f);
+        mat_pair->setDefaultFriction(0.9f, 0.5f);
+        //! TODO find a good value here, until now I hope nobody is changing the default from newton :-P
+        //mat_pair->setDefaultSurfaceThickness(); 
     }
 
     OgreNewt::CollisionPtr PhysicsManager::createCollision(

Modified: rl/branches/newton20/engine/rules/include/AbstractMovement.h
===================================================================
--- rl/branches/newton20/engine/rules/include/AbstractMovement.h	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/rules/include/AbstractMovement.h	2009-01-31 01:10:13 UTC (rev 4730)
@@ -26,8 +26,7 @@
 namespace rl
 {
     /// this is the base class of all movements and provides a general interface for movements
-    class AbstractMovement : 
-        public PhysicsGenericContactCallback
+    class AbstractMovement // : public PhysicsGenericContactCallback
     {
     public:
         AbstractMovement(CreatureController *movingCreature) : mMovingCreature(movingCreature), mActive(false) {}
@@ -55,7 +54,7 @@
          * this method is called, when this movement is currently used to enable 
          * an individual procession of collisions contacts for each movement
          */
-        virtual int userProcess(OgreNewt::Body *body0, OgreNewt::Body *body1) {return 1;}
+        virtual void userProcess(OgreNewt::ContactJoint &contactJoint, Ogre::Real timestep, int threadid) {}
 
         /**
          * this method is called by OnApplyTorqueAndForceCallback of the CreatureController

Modified: rl/branches/newton20/engine/rules/include/CreatureController.h
===================================================================
--- rl/branches/newton20/engine/rules/include/CreatureController.h	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/rules/include/CreatureController.h	2009-01-31 01:10:13 UTC (rev 4730)
@@ -20,7 +20,6 @@
 
 #include "RulesPrerequisites.h"
 #include "PhysicsController.h"
-#include "PhysicsGenericContactCallback.h"
 #include "PhysicsMaterialRaycast.h"
 #include "Creature.h"
 #include "Actor.h"
@@ -40,8 +39,7 @@
      * It handles all nessessary things like animations and calculates the movement speed.
      */
     class _RlRulesExport CreatureController :
-        public PhysicsController,
-        public PhysicsGenericContactCallback
+        public PhysicsController
     {
     public:
         static const Ogre::String PROPERTY_CREATUREID;
@@ -55,7 +53,7 @@
         void OnApplyForceAndTorque(PhysicalThing* thing, float timestep);
 
         /// Newton contact callback called by the movingCreatureManager
-        int userProcess(Ogre::Real timestep, int threadid);
+        void userProcess(OgreNewt::ContactJoint &contactJoint, Ogre::Real timestep, int threadid);
 
         Creature* getCreature() {return mCreature;}
         bool refetchCreature();

Modified: rl/branches/newton20/engine/rules/include/CreatureControllerManager.h
===================================================================
--- rl/branches/newton20/engine/rules/include/CreatureControllerManager.h	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/rules/include/CreatureControllerManager.h	2009-01-31 01:10:13 UTC (rev 4730)
@@ -60,7 +60,7 @@
         const Ogre::String& getName() const;
 
         // Newton Contact Callback
-        int userProcess(Ogre::Real timestep, int threadid);
+        void userProcess(OgreNewt::ContactJoint &contactJoint, Ogre::Real timestep, int threadid);
     protected:
         typedef std::map<Creature*, CreatureController*> ControllerMap;
         ControllerMap mControllers;

Modified: rl/branches/newton20/engine/rules/src/CreatureController.cpp
===================================================================
--- rl/branches/newton20/engine/rules/src/CreatureController.cpp	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/rules/src/CreatureController.cpp	2009-01-31 01:10:13 UTC (rev 4730)
@@ -391,13 +391,15 @@
         body->setTorque(torque);
     }
 
-    int CreatureController::userProcess(Real timestep, int threadid)
+    void CreatureController::userProcess(OgreNewt::ContactJoint &contactJoint, Real timestep, int threadid)
     {
+for(OgreNewt::Contact contact = contactJoint.getFirstContact(); contact; contact = contact.getNext() )
+{
 
         // own collision handling (floor, in order to get information for mAbstractLocation)
         Vector3 point;
         Vector3 normal;
-        getContactPositionAndNormal(point, normal);
+        contact.getPositionAndNormal(point, normal);
 
         // determine if this contact is with the floor.
         // Meaning the contact normal has an angle to UNIT_Y of 20 or less.
@@ -446,9 +448,9 @@
 //oss << "  \t Tangent-Directions: " << vec1 << " " << vec2;
 //LOG_MESSAGE(Logger::RULES, oss.str());
 
-        rotateTangentDirections(/*charOri*mDirection + */Vector3::UNIT_Y);
-        setContactFrictionState(1,0);
-        setContactFrictionState(0,1);
+        contact.rotateTangentDirections(/*charOri*mDirection + */Vector3::UNIT_Y);
+        contact.setFrictionState(1,0);
+        contact.setFrictionState(0,1);
 
         if( stepHeight < 0.4 )
         {
@@ -457,7 +459,7 @@
                                    // too high means the creature stops if moving slowly onto a step because of the friction
             {
                 //setContactNormalAcceleration(5);
-                setContactTangentAcceleration(5,0);
+                contact.setTangentAcceleration(5,0);
                 //setContactFrictionState(1,0);
                 //setContactFrictionState(1,1);
             }
@@ -483,20 +485,13 @@
                 //setContactFrictionState(0,1);
             }
         }
+}
 
         if(mMovement != NULL)
         {
-            // @XXX Evil code!
-            // Protected members from type OgreNewt::ContactCallback have to be overridden in order
-            // for the movements to work. This is because these members are used by OgreNewt functions
-            // for processing this contact. Should probably be solved in OgreNewt directly.
-            PhysicsGenericContactCallback *movement = mMovement;
-            *movement = (PhysicsGenericContactCallback)(*this);
-            return movement->userProcess(timestep, threadid);
+            // give the movement a chance to modify the contact
+            mMovement->userProcess(contactJoint, timestep, threadid);
         }
-
-        // return one to tell Newton we want to accept this contact
-        return 1;
     }
 
     AbstractMovement *CreatureController::getMovementFromId(CreatureController::MovementType id)

Modified: rl/branches/newton20/engine/rules/src/CreatureControllerManager.cpp
===================================================================
--- rl/branches/newton20/engine/rules/src/CreatureControllerManager.cpp	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/rules/src/CreatureControllerManager.cpp	2009-01-31 01:10:13 UTC (rev 4730)
@@ -164,27 +164,34 @@
         }
     }
 
-    int CreatureControllerManager::userProcess(Real timestep, int threadid)
+    void CreatureControllerManager::userProcess(OgreNewt::ContactJoint &contactJoint, Real timestep, int threadid)
     {
-        Actor *actor = static_cast<Actor*>(m_body0->getUserData());
+        Actor *actor = static_cast<Actor*>(contactJoint.getBody0()->getUserData());
         if( actor != NULL )
         {
             ControllerMap::const_iterator it = mControllers.find(static_cast<Creature*>(actor->getGameObject()));
             if (it != mControllers.end())
             {
-                // @XXX Evil code!
-                // Protected members from type OgreNewt::ContactCallback have to be overridden in order
-                // for the controllers to work. This is because these members are used by OgreNewt functions
-                // for processing this contact. Should probably be solved in OgreNewt directly.
-                PhysicsGenericContactCallback* controller = it->second;
-               *controller = (PhysicsGenericContactCallback)(*this);
-                return controller->userProcess(timestep, threadid);
+                it->second->userProcess(contactJoint, timestep, threadid);
+                return;
             }
         }
 
+        // if the controlled body is the second body...
+        actor = static_cast<Actor*>(contactJoint.getBody1()->getUserData());
+        if( actor != NULL )
+        {
+            ControllerMap::const_iterator it = mControllers.find(static_cast<Creature*>(actor->getGameObject()));
+            if (it != mControllers.end())
+            {
+                it->second->userProcess(contactJoint, timestep, threadid);
+                return;
+            }
+        }
+
+
         LOG_ERROR(Logger::RULES,
             "Der Kollisionsk?rper konnte keinem CreatureController zugeordnet werden.");
-        return 1;
     }
 
     const Ogre::String& CreatureControllerManager::getName() const

Modified: rl/branches/newton20/engine/ui/include/CombatControlState.h
===================================================================
--- rl/branches/newton20/engine/ui/include/CombatControlState.h	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/ui/include/CombatControlState.h	2009-01-31 01:10:13 UTC (rev 4730)
@@ -73,7 +73,7 @@
 
         // camera collision: OgreNewt::ContactCallback overides
         int onAABBOverlap(int threadIndex);
-        int userProcess(Ogre::Real timestep, int threadIndex);
+        void userProcess(OgreNewt::ContactJoint &contactJoint, Ogre::Real timestep, int threadIndex);
 
         // camera movement: Newton force and torque callback
         void OnApplyForceAndTorque(PhysicalThing *pt, float timstep);

Modified: rl/branches/newton20/engine/ui/include/FreeflightControlState.h
===================================================================
--- rl/branches/newton20/engine/ui/include/FreeflightControlState.h	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/ui/include/FreeflightControlState.h	2009-01-31 01:10:13 UTC (rev 4730)
@@ -20,12 +20,12 @@
 #include "UiPrerequisites.h"
 #include "ControlState.h"
 #include "PhysicsController.h"
-#include "PhysicsGenericContactCallback.h"
 
 #ifdef __APPLE__
 #   include <OgreNewt/OgreNewt.h>
 #else
 #   include <OgreNewt.h>
+#   include <OgreNewt_PlayerController.h>
 #endif
 
 namespace rl {
@@ -35,8 +35,7 @@
 	*/
 	class _RlUiExport FreeflightControlState : 
         public ControlState,
-        public PhysicsController,
-        public PhysicsGenericContactCallback
+        public PhysicsController
 	{
 	public:
 		/**
@@ -57,10 +56,6 @@
 	    void toggleCameraCollision();
 	    void resetCamera();
 
-        /// This is the OgreNewt contact process callback for the combination
-        /// Character <-> Level
-        int userProcess(Ogre::Real timestep, int threadid);
-
         /// Newton force and torque callback
         void OnApplyForceAndTorque(PhysicalThing* thing, float timestep);
 
@@ -78,6 +73,8 @@
         Ogre::Real mMouseSensitivity;
         bool mInvertedMouse;
         std::pair<Ogre::Degree, Ogre::Degree> mPitchRange;
+
+        OgreNewt::PlayerController *mOgreNewtPlayerController;
 	};
 }
 #endif

Modified: rl/branches/newton20/engine/ui/include/MovementControlState.h
===================================================================
--- rl/branches/newton20/engine/ui/include/MovementControlState.h	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/ui/include/MovementControlState.h	2009-01-31 01:10:13 UTC (rev 4730)
@@ -60,7 +60,8 @@
 
         /// This is the OgreNewt contact process callback for the combination
         /// Character <-> Level
-        int userProcess(Ogre::Real timestep, int threadid);
+        int onAABBOverlap( OgreNewt::Body* body0, OgreNewt::Body* body1, int threadIndex );
+        void userProcess(OgreNewt::ContactJoint &contactJoint, Ogre::Real timestep, int threadid);
 
         /// Newton force and torque callback
         void OnApplyForceAndTorque(PhysicalThing* thing, float timestep);

Modified: rl/branches/newton20/engine/ui/src/CombatControlState.cpp
===================================================================
--- rl/branches/newton20/engine/ui/src/CombatControlState.cpp	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/ui/src/CombatControlState.cpp	2009-01-31 01:10:13 UTC (rev 4730)
@@ -520,10 +520,9 @@
         return 0;
     }
    
-    int CombatControlState::userProcess(Ogre::Real timestep, int threadIndex)
+    void CombatControlState::userProcess(OgreNewt::ContactJoint &contactJoint, Ogre::Real timestep, int threadIndex)
     {
         // TODO handle camera collisions here
-        return 0;
     }
 
     Ogre::String CombatControlState::getCombatantTypeName() const

Modified: rl/branches/newton20/engine/ui/src/FreeflightControlState.cpp
===================================================================
--- rl/branches/newton20/engine/ui/src/FreeflightControlState.cpp	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/ui/src/FreeflightControlState.cpp	2009-01-31 01:10:13 UTC (rev 4730)
@@ -46,7 +46,8 @@
         mCollisionsEnabled(false),
         mPitchRange(Degree(-89), Degree(89)),
         mYaw(Degree(0)),
-        mPitch(Degree(0))
+        mPitch(Degree(0)),
+        mOgreNewtPlayerController(NULL)
 	{
         mMouseSensitivity = ConfigurationManager::getSingleton().getIntSetting("Input", "Mouse Sensitivity");
         mInvertedMouse = ConfigurationManager::getSingleton().getBoolSetting("Input", "Mouse Invert");
@@ -59,7 +60,10 @@
     void FreeflightControlState::pause()
     {
 		mCameraActor->getPhysicalThing()->freeze();
-		mCharacterActor->getPhysicalThing()->unfreeze();
+		//mCharacterActor->getPhysicalThing()->unfreeze();
+        delete mOgreNewtPlayerController;
+        mOgreNewtPlayerController = NULL;
+        mCharacterActor->getPhysicalThing()->setUpConstraint();
         mCameraActor->getPhysicalThing()->setPhysicsController(NULL);
 
         // Char<->Level collision back to default
@@ -78,7 +82,9 @@
     void FreeflightControlState::resume()
     {
         mCameraActor->getPhysicalThing()->unfreeze();
-		mCharacterActor->getPhysicalThing()->freeze();
+		//mCharacterActor->getPhysicalThing()->freeze();
+        mCharacterActor->getPhysicalThing()->clearUpConstraint();
+        mOgreNewtPlayerController = new OgreNewt::PlayerController(mCharBody);
 
         resetCamera();
 
@@ -92,20 +98,23 @@
         mat_pair = PhysicsManager::getSingleton().createMaterialPair(
                     PhysicsManager::getSingleton().getMaterialID("camera"),
                     PhysicsManager::getSingleton().getMaterialID("default"));
-        mat_pair->setContactCallback(this);
+        mat_pair->setContactCallback(NULL);
         mat_pair->setContinuousCollisionMode(1);
+        mat_pair->setDefaultSoftness(1.0f);
         mat_pair->setDefaultCollidable(1);
         mat_pair = PhysicsManager::getSingleton().createMaterialPair(
                     PhysicsManager::getSingleton().getMaterialID("camera"),
                     PhysicsManager::getSingleton().getMaterialID("level"));
-        mat_pair->setContactCallback(this);
+        mat_pair->setContactCallback(NULL);
         mat_pair->setContinuousCollisionMode(1);
+        mat_pair->setDefaultSoftness(1.0f);
         mat_pair->setDefaultCollidable(1);
         mat_pair = PhysicsManager::getSingleton().createMaterialPair(
                     PhysicsManager::getSingleton().getMaterialID("camera"),
                     PhysicsManager::getSingleton().getMaterialID("character"));
-        mat_pair->setContactCallback(this);
+        mat_pair->setContactCallback(NULL);
         mat_pair->setContinuousCollisionMode(1);
+        mat_pair->setDefaultSoftness(1.0f);
         mat_pair->setDefaultCollidable(1);
     }
 
@@ -198,9 +207,14 @@
         if (mPitch < mPitchRange.first) mPitch = mPitchRange.first;
         if (mPitch > mPitchRange.second) mPitch = mPitchRange.second;
 
+if( mCollisionsEnabled )
+    mOgreNewtPlayerController->setVelocity(mDesiredVelocity.z, mDesiredVelocity.x, mYaw);
+else
+{
         mCameraActor->setOrientation(Quaternion::IDENTITY);
         mCameraActor->yaw(mYaw.valueDegrees());
         mCameraActor->pitch(mPitch.valueDegrees());
+}
     }
 
 	void FreeflightControlState::toggleCameraCollision()
@@ -208,6 +222,11 @@
 		// with or without collision?
         // be careful to enable collision if beeing in another collision
         mCollisionsEnabled = !mCollisionsEnabled;
+
+        const OgreNewt::ConvexCollision *camCol = dynamic_cast<const OgreNewt::ConvexCollision *>( mCamBody->getCollision() );
+
+        // simple way to ignore camera-collision!
+        const_cast<OgreNewt::ConvexCollision*>(camCol)->setAsTriggerVolume( !mCollisionsEnabled );
 	}
 
 	void FreeflightControlState::resetCamera()
@@ -286,27 +305,7 @@
         return retval;
 	}
 
-    int FreeflightControlState::userProcess(Real timestep, int)
-    {
-        if (m_body0 == mCamBody || m_body1 == mCamBody)
-        {
-            // this is camera collision
 
-            if( !mCollisionsEnabled )
-                return 0;
-
-            setContactSoftness(1.0f);  // "weiche" Collision
-            setContactElasticity(0.0f);
-
-            return 1;
-        }
-
-        // return one to tell Newton we want to accept this contact
-        return 1;
-    }
-
-
-
     void FreeflightControlState::OnApplyForceAndTorque(PhysicalThing* thing, float timestep)
     {
         OgreNewt::World* world = PhysicsManager::getSingleton()._getNewtonWorld();
@@ -329,7 +328,7 @@
             Vector3 currentVel = body->getVelocity();
             Real delay = 2 * PhysicsManager::getSingleton().getMaxTimestep();
             Vector3 force = mass*(orientation * mDesiredVelocity - currentVel) / delay;
-
+if( !mCollisionsEnabled )
             body->setForce(force);
         }
     }

Modified: rl/branches/newton20/engine/ui/src/MovementControlState.cpp
===================================================================
--- rl/branches/newton20/engine/ui/src/MovementControlState.cpp	2009-01-31 01:08:04 UTC (rev 4729)
+++ rl/branches/newton20/engine/ui/src/MovementControlState.cpp	2009-01-31 01:10:13 UTC (rev 4730)
@@ -249,21 +249,24 @@
         mat_pair->setContactCallback(this);
         mat_pair->setDefaultCollidable(1);
         mat_pair->setDefaultFriction(0,0);
-        mat_pair->setDefaultFriction(0,1);
+        mat_pair->setDefaultSoftness(0.8f);
+        mat_pair->setDefaultElasticity(0.4f);
         mat_pair = PhysicsManager::getSingleton().createMaterialPair(
             PhysicsManager::getSingleton().getMaterialID("camera"),
             PhysicsManager::getSingleton().getMaterialID("level"));
         mat_pair->setContactCallback(this);
         mat_pair->setDefaultCollidable(1);
         mat_pair->setDefaultFriction(0,0);
-        mat_pair->setDefaultFriction(0,1);
+        mat_pair->setDefaultSoftness(0.8f);
+        mat_pair->setDefaultElasticity(0.4f);
         mat_pair = PhysicsManager::getSingleton().createMaterialPair(
             PhysicsManager::getSingleton().getMaterialID("camera"),
             PhysicsManager::getSingleton().getMaterialID("character"));
         mat_pair->setContactCallback(this);
         mat_pair->setDefaultCollidable(1);
         mat_pair->setDefaultFriction(0,0);
-        mat_pair->setDefaultFriction(0,1);
+        mat_pair->setDefaultSoftness(0.8f);
+        mat_pair->setDefaultElasticity(0.4f);
 
         mCharacterState.mCurrentMovementState = MOVE_NONE;
 
@@ -688,27 +691,27 @@
         mCameraActor->setOrientation(cameraNode->getOrientation());
     }
 
-    // -------------------------------------------------------------
-    // character collision moved to CreatureController(Manager)
-    int MovementControlState::userProcess(Real timestep, int)
+
+    int MovementControlState::onAABBOverlap( OgreNewt::Body* body0, OgreNewt::Body* body1, int threadIndex )
     {
         if( mViewMode == VM_FIRST_PERSON )
             return 0;
 
         // test if this is cam-player-collide
-        if( ( m_body0 == mCamBody && m_body1 == mCharacterActor->getPhysicalThing()->_getBody() ) ||
-            ( m_body1 == mCamBody && m_body0 == mCharacterActor->getPhysicalThing()->_getBody() ) )
+        if( ( body0 == mCamBody && body1 == mCharacterActor->getPhysicalThing()->_getBody() ) ||
+            ( body1 == mCamBody && body0 == mCharacterActor->getPhysicalThing()->_getBody() ) )
         {
             return 0;
         }
 
-        setContactSoftness(0.8f);
-        setContactElasticity(0.4f);
-        mLastCameraCollision = 0;
-
         return 1;
     }
 
+    void MovementControlState::userProcess(OgreNewt::ContactJoint &contactJoint, Real timestep, int)
+    {
+        mLastCameraCollision = 0;
+    }
+
     //------------------------------------------------------------------------
     // character callback moved to CreatureController
     void MovementControlState::OnApplyForceAndTorque(PhysicalThing* thing, float timestep)



From melven at mail.berlios.de  Sat Jan 31 03:01:13 2009
From: melven at mail.berlios.de (melven at mail.berlios.de)
Date: Sat, 31 Jan 2009 03:01:13 +0100
Subject: [Dsa-hl-svn] r4731 - in rl/branches/newton20/engine: core/include
	ui/include ui/src
Message-ID: <200901310201.n0V21DO0015198@sheep.berlios.de>

Author: melven
Date: 2009-01-31 03:01:11 +0100 (Sat, 31 Jan 2009)
New Revision: 4731

Modified:
   rl/branches/newton20/engine/core/include/PhysicsGenericContactCallback.h
   rl/branches/newton20/engine/ui/include/CombatControlState.h
   rl/branches/newton20/engine/ui/include/FreeflightControlState.h
   rl/branches/newton20/engine/ui/src/CombatControlState.cpp
   rl/branches/newton20/engine/ui/src/FreeflightControlState.cpp
Log:
fixed some bugs...


Modified: rl/branches/newton20/engine/core/include/PhysicsGenericContactCallback.h
===================================================================
--- rl/branches/newton20/engine/core/include/PhysicsGenericContactCallback.h	2009-01-31 01:10:13 UTC (rev 4730)
+++ rl/branches/newton20/engine/core/include/PhysicsGenericContactCallback.h	2009-01-31 02:01:11 UTC (rev 4731)
@@ -36,7 +36,7 @@
          * should be initiated.
          * ATTENTION: if 0 is returned, the contact-listeners cannot be called!
         */
-        int onAABBOverlap(int threadindex) { return 1; }
+        virtual int onAABBOverlap( OgreNewt::Body* body0, OgreNewt::Body* body1,  int threadindex) { return 1; }
 
         /*!
          * process user defined contact forces (etc) here

Modified: rl/branches/newton20/engine/ui/include/CombatControlState.h
===================================================================
--- rl/branches/newton20/engine/ui/include/CombatControlState.h	2009-01-31 01:10:13 UTC (rev 4730)
+++ rl/branches/newton20/engine/ui/include/CombatControlState.h	2009-01-31 02:01:11 UTC (rev 4731)
@@ -72,7 +72,7 @@
 
 
         // camera collision: OgreNewt::ContactCallback overides
-        int onAABBOverlap(int threadIndex);
+        int onAABBOverlap(OgreNewt::Body* body0, OgreNewt::Body* body1, int threadIndex);
         void userProcess(OgreNewt::ContactJoint &contactJoint, Ogre::Real timestep, int threadIndex);
 
         // camera movement: Newton force and torque callback

Modified: rl/branches/newton20/engine/ui/include/FreeflightControlState.h
===================================================================
--- rl/branches/newton20/engine/ui/include/FreeflightControlState.h	2009-01-31 01:10:13 UTC (rev 4730)
+++ rl/branches/newton20/engine/ui/include/FreeflightControlState.h	2009-01-31 02:01:11 UTC (rev 4731)
@@ -20,6 +20,7 @@
 #include "UiPrerequisites.h"
 #include "ControlState.h"
 #include "PhysicsController.h"
+#include "PhysicsGenericContactCallback.h"
 
 #ifdef __APPLE__
 #   include <OgreNewt/OgreNewt.h>
@@ -35,7 +36,8 @@
 	*/
 	class _RlUiExport FreeflightControlState : 
         public ControlState,
-        public PhysicsController
+        public PhysicsController,
+        public PhysicsGenericContactCallback
 	{
 	public:
 		/**
@@ -56,6 +58,8 @@
 	    void toggleCameraCollision();
 	    void resetCamera();
 
+        /// Newton contacts callback
+        int onAABBOverlap( OgreNewt::Body* body0, OgreNewt::Body* body1, int threadIndex );
         /// Newton force and torque callback
         void OnApplyForceAndTorque(PhysicalThing* thing, float timestep);
 

Modified: rl/branches/newton20/engine/ui/src/CombatControlState.cpp
===================================================================
--- rl/branches/newton20/engine/ui/src/CombatControlState.cpp	2009-01-31 01:10:13 UTC (rev 4730)
+++ rl/branches/newton20/engine/ui/src/CombatControlState.cpp	2009-01-31 02:01:11 UTC (rev 4731)
@@ -514,7 +514,7 @@
         mCameraFocusedCombatant = combatant;
     }
 
-    int CombatControlState::onAABBOverlap(int threadIndex)
+    int CombatControlState::onAABBOverlap(OgreNewt::Body* body0, OgreNewt::Body* body1, int threadIndex)
     {
         // TODO handle camera collisions here
         return 0;

Modified: rl/branches/newton20/engine/ui/src/FreeflightControlState.cpp
===================================================================
--- rl/branches/newton20/engine/ui/src/FreeflightControlState.cpp	2009-01-31 01:10:13 UTC (rev 4730)
+++ rl/branches/newton20/engine/ui/src/FreeflightControlState.cpp	2009-01-31 02:01:11 UTC (rev 4731)
@@ -102,6 +102,8 @@
         mat_pair->setContinuousCollisionMode(1);
         mat_pair->setDefaultSoftness(1.0f);
         mat_pair->setDefaultCollidable(1);
+        mat_pair->setDefaultFriction(0,0);
+        mat_pair->setContactCallback(this);
         mat_pair = PhysicsManager::getSingleton().createMaterialPair(
                     PhysicsManager::getSingleton().getMaterialID("camera"),
                     PhysicsManager::getSingleton().getMaterialID("level"));
@@ -109,6 +111,8 @@
         mat_pair->setContinuousCollisionMode(1);
         mat_pair->setDefaultSoftness(1.0f);
         mat_pair->setDefaultCollidable(1);
+        mat_pair->setDefaultFriction(0,0);
+        mat_pair->setContactCallback(this);
         mat_pair = PhysicsManager::getSingleton().createMaterialPair(
                     PhysicsManager::getSingleton().getMaterialID("camera"),
                     PhysicsManager::getSingleton().getMaterialID("character"));
@@ -116,6 +120,8 @@
         mat_pair->setContinuousCollisionMode(1);
         mat_pair->setDefaultSoftness(1.0f);
         mat_pair->setDefaultCollidable(1);
+        mat_pair->setDefaultFriction(0,0);
+        mat_pair->setContactCallback(this);
     }
 
 	void FreeflightControlState::run(Real elapsedTime)
@@ -209,24 +215,23 @@
 
 if( mCollisionsEnabled )
     mOgreNewtPlayerController->setVelocity(mDesiredVelocity.z, mDesiredVelocity.x, mYaw);
-else
-{
+
         mCameraActor->setOrientation(Quaternion::IDENTITY);
         mCameraActor->yaw(mYaw.valueDegrees());
         mCameraActor->pitch(mPitch.valueDegrees());
-}
     }
 
+    
+    int FreeflightControlState::onAABBOverlap( OgreNewt::Body* body0, OgreNewt::Body* body1, int threadIndex )
+    {
+        return mCollisionsEnabled;
+    }
+
 	void FreeflightControlState::toggleCameraCollision()
 	{
 		// with or without collision?
         // be careful to enable collision if beeing in another collision
         mCollisionsEnabled = !mCollisionsEnabled;
-
-        const OgreNewt::ConvexCollision *camCol = dynamic_cast<const OgreNewt::ConvexCollision *>( mCamBody->getCollision() );
-
-        // simple way to ignore camera-collision!
-        const_cast<OgreNewt::ConvexCollision*>(camCol)->setAsTriggerVolume( !mCollisionsEnabled );
 	}
 
 	void FreeflightControlState::resetCamera()
@@ -328,7 +333,8 @@
             Vector3 currentVel = body->getVelocity();
             Real delay = 2 * PhysicsManager::getSingleton().getMaxTimestep();
             Vector3 force = mass*(orientation * mDesiredVelocity - currentVel) / delay;
-if( !mCollisionsEnabled )
+if( mCollisionsEnabled )
+    force = mass*(- currentVel) / delay;
             body->setForce(force);
         }
     }



